{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "gas",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "nonce",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "internalType": "struct MinimalForwarder.ForwardRequest",
          "name": "req",
          "type": "tuple"
        },
        {
          "internalType": "bytes",
          "name": "signature",
          "type": "bytes"
        }
      ],
      "name": "execute",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        }
      ],
      "name": "getNonce",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "gas",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "nonce",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "internalType": "struct MinimalForwarder.ForwardRequest",
          "name": "req",
          "type": "tuple"
        },
        {
          "internalType": "bytes",
          "name": "signature",
          "type": "bytes"
        }
      ],
      "name": "verify",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "12": "contracts/openzeppelin/contracts/metatx/MinimalForwarder.sol",
    "152": "contracts/openzeppelin/contracts/utils/cryptography/ECDSA.sol",
    "155": "contracts/openzeppelin/contracts/utils/cryptography/draft-EIP712.sol"
  },
  "ast": {
    "absolutePath": "contracts/openzeppelin/contracts/metatx/MinimalForwarder.sol",
    "exportedSymbols": {
      "ECDSA": [
        18674
      ],
      "EIP712": [
        18942
      ],
      "MinimalForwarder": [
        2459
      ]
    },
    "id": 2460,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2291,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:12"
      },
      {
        "absolutePath": "contracts/openzeppelin/contracts/utils/cryptography/ECDSA.sol",
        "file": "../utils/cryptography/ECDSA.sol",
        "id": 2292,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2460,
        "sourceUnit": 18675,
        "src": "58:41:12",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/openzeppelin/contracts/utils/cryptography/draft-EIP712.sol",
        "file": "../utils/cryptography/draft-EIP712.sol",
        "id": 2293,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2460,
        "sourceUnit": 18943,
        "src": "100:48:12",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 2294,
              "name": "EIP712",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 18942,
              "src": "298:6:12"
            },
            "id": 2295,
            "nodeType": "InheritanceSpecifier",
            "src": "298:6:12"
          }
        ],
        "canonicalName": "MinimalForwarder",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 2459,
        "linearizedBaseContracts": [
          2459,
          18942
        ],
        "name": "MinimalForwarder",
        "nameLocation": "278:16:12",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 2298,
            "libraryName": {
              "id": 2296,
              "name": "ECDSA",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 18674,
              "src": "317:5:12"
            },
            "nodeType": "UsingForDirective",
            "src": "311:24:12",
            "typeName": {
              "id": 2297,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "327:7:12",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            }
          },
          {
            "canonicalName": "MinimalForwarder.ForwardRequest",
            "id": 2311,
            "members": [
              {
                "constant": false,
                "id": 2300,
                "mutability": "mutable",
                "name": "from",
                "nameLocation": "381:4:12",
                "nodeType": "VariableDeclaration",
                "scope": 2311,
                "src": "373:12:12",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 2299,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "373:7:12",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 2302,
                "mutability": "mutable",
                "name": "to",
                "nameLocation": "403:2:12",
                "nodeType": "VariableDeclaration",
                "scope": 2311,
                "src": "395:10:12",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 2301,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "395:7:12",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 2304,
                "mutability": "mutable",
                "name": "value",
                "nameLocation": "423:5:12",
                "nodeType": "VariableDeclaration",
                "scope": 2311,
                "src": "415:13:12",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 2303,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "415:7:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 2306,
                "mutability": "mutable",
                "name": "gas",
                "nameLocation": "446:3:12",
                "nodeType": "VariableDeclaration",
                "scope": 2311,
                "src": "438:11:12",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 2305,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "438:7:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 2308,
                "mutability": "mutable",
                "name": "nonce",
                "nameLocation": "467:5:12",
                "nodeType": "VariableDeclaration",
                "scope": 2311,
                "src": "459:13:12",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 2307,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "459:7:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 2310,
                "mutability": "mutable",
                "name": "data",
                "nameLocation": "488:4:12",
                "nodeType": "VariableDeclaration",
                "scope": 2311,
                "src": "482:10:12",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes_storage_ptr",
                  "typeString": "bytes"
                },
                "typeName": {
                  "id": 2309,
                  "name": "bytes",
                  "nodeType": "ElementaryTypeName",
                  "src": "482:5:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_storage_ptr",
                    "typeString": "bytes"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "ForwardRequest",
            "nameLocation": "348:14:12",
            "nodeType": "StructDefinition",
            "scope": 2459,
            "src": "341:158:12",
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 2316,
            "mutability": "constant",
            "name": "_TYPEHASH",
            "nameLocation": "530:9:12",
            "nodeType": "VariableDeclaration",
            "scope": 2459,
            "src": "505:148:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 2312,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "505:7:12",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "466f72776172645265717565737428616464726573732066726f6d2c6164647265737320746f2c75696e743235362076616c75652c75696e74323536206761732c75696e74323536206e6f6e63652c6279746573206461746129",
                  "id": 2314,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "560:92:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_dd8f4b70b0f4393e889bd39128a30628a78b61816a9eb8199759e7a349657e48",
                    "typeString": "literal_string \"ForwardRequest(address from,address to,uint256 value,uint256 gas,uint256 nonce,bytes data)\""
                  },
                  "value": "ForwardRequest(address from,address to,uint256 value,uint256 gas,uint256 nonce,bytes data)"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_dd8f4b70b0f4393e889bd39128a30628a78b61816a9eb8199759e7a349657e48",
                    "typeString": "literal_string \"ForwardRequest(address from,address to,uint256 value,uint256 gas,uint256 nonce,bytes data)\""
                  }
                ],
                "id": 2313,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": -8,
                "src": "550:9:12",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 2315,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "550:103:12",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 2320,
            "mutability": "mutable",
            "name": "_nonces",
            "nameLocation": "696:7:12",
            "nodeType": "VariableDeclaration",
            "scope": 2459,
            "src": "660:43:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 2319,
              "keyType": {
                "id": 2317,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "668:7:12",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "660:27:12",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 2318,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "679:7:12",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 2327,
              "nodeType": "Block",
              "src": "760:2:12",
              "statements": []
            },
            "id": 2328,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "4d696e696d616c466f72776172646572",
                    "id": 2323,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "731:18:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_9e0923a39f515e9a8cebc9fb694b9abf7e4b8c3f7ab6f81b56eabdac504b08dc",
                      "typeString": "literal_string \"MinimalForwarder\""
                    },
                    "value": "MinimalForwarder"
                  },
                  {
                    "hexValue": "302e302e31",
                    "id": 2324,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "751:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_ae209a0b48f21c054280f2455d32cf309387644879d9acbd8ffc199163811885",
                      "typeString": "literal_string \"0.0.1\""
                    },
                    "value": "0.0.1"
                  }
                ],
                "id": 2325,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 2322,
                  "name": "EIP712",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 18942,
                  "src": "724:6:12"
                },
                "nodeType": "ModifierInvocation",
                "src": "724:35:12"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2321,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "721:2:12"
            },
            "returnParameters": {
              "id": 2326,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "760:0:12"
            },
            "scope": 2459,
            "src": "710:52:12",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2339,
              "nodeType": "Block",
              "src": "830:37:12",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 2335,
                      "name": "_nonces",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2320,
                      "src": "847:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 2337,
                    "indexExpression": {
                      "id": 2336,
                      "name": "from",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2330,
                      "src": "855:4:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "847:13:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2334,
                  "id": 2338,
                  "nodeType": "Return",
                  "src": "840:20:12"
                }
              ]
            },
            "functionSelector": "2d0335ab",
            "id": 2340,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getNonce",
            "nameLocation": "777:8:12",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2331,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2330,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "794:4:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2340,
                  "src": "786:12:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2329,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "786:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "785:14:12"
            },
            "returnParameters": {
              "id": 2334,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2333,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2340,
                  "src": "821:7:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2332,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "821:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "820:9:12"
            },
            "scope": 2459,
            "src": "768:99:12",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2391,
              "nodeType": "Block",
              "src": "971:264:12",
              "statements": [
                {
                  "assignments": [
                    2351
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2351,
                      "mutability": "mutable",
                      "name": "signer",
                      "nameLocation": "989:6:12",
                      "nodeType": "VariableDeclaration",
                      "scope": 2391,
                      "src": "981:14:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 2350,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "981:7:12",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2377,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 2375,
                        "name": "signature",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2345,
                        "src": "1149:9:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 2356,
                                    "name": "_TYPEHASH",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2316,
                                    "src": "1049:9:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "id": 2357,
                                      "name": "req",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2343,
                                      "src": "1060:3:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_ForwardRequest_$2311_calldata_ptr",
                                        "typeString": "struct MinimalForwarder.ForwardRequest calldata"
                                      }
                                    },
                                    "id": 2358,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "from",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 2300,
                                    "src": "1060:8:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "id": 2359,
                                      "name": "req",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2343,
                                      "src": "1070:3:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_ForwardRequest_$2311_calldata_ptr",
                                        "typeString": "struct MinimalForwarder.ForwardRequest calldata"
                                      }
                                    },
                                    "id": 2360,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "to",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 2302,
                                    "src": "1070:6:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "id": 2361,
                                      "name": "req",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2343,
                                      "src": "1078:3:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_ForwardRequest_$2311_calldata_ptr",
                                        "typeString": "struct MinimalForwarder.ForwardRequest calldata"
                                      }
                                    },
                                    "id": 2362,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "value",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 2304,
                                    "src": "1078:9:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "id": 2363,
                                      "name": "req",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2343,
                                      "src": "1089:3:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_ForwardRequest_$2311_calldata_ptr",
                                        "typeString": "struct MinimalForwarder.ForwardRequest calldata"
                                      }
                                    },
                                    "id": 2364,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "gas",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 2306,
                                    "src": "1089:7:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "id": 2365,
                                      "name": "req",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2343,
                                      "src": "1098:3:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_ForwardRequest_$2311_calldata_ptr",
                                        "typeString": "struct MinimalForwarder.ForwardRequest calldata"
                                      }
                                    },
                                    "id": 2366,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "nonce",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 2308,
                                    "src": "1098:9:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "expression": {
                                          "id": 2368,
                                          "name": "req",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2343,
                                          "src": "1119:3:12",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_ForwardRequest_$2311_calldata_ptr",
                                            "typeString": "struct MinimalForwarder.ForwardRequest calldata"
                                          }
                                        },
                                        "id": 2369,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "data",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 2310,
                                        "src": "1119:8:12",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes_calldata_ptr",
                                          "typeString": "bytes calldata"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_bytes_calldata_ptr",
                                          "typeString": "bytes calldata"
                                        }
                                      ],
                                      "id": 2367,
                                      "name": "keccak256",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -8,
                                      "src": "1109:9:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                        "typeString": "function (bytes memory) pure returns (bytes32)"
                                      }
                                    },
                                    "id": 2370,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "1109:19:12",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  ],
                                  "expression": {
                                    "id": 2354,
                                    "name": "abi",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -1,
                                    "src": "1038:3:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_abi",
                                      "typeString": "abi"
                                    }
                                  },
                                  "id": 2355,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "encode",
                                  "nodeType": "MemberAccess",
                                  "src": "1038:10:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                                    "typeString": "function () pure returns (bytes memory)"
                                  }
                                },
                                "id": 2371,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1038:91:12",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "id": 2353,
                              "name": "keccak256",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -8,
                              "src": "1028:9:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (bytes memory) pure returns (bytes32)"
                              }
                            },
                            "id": 2372,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1028:102:12",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "id": 2352,
                          "name": "_hashTypedDataV4",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 18941,
                          "src": "998:16:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
                            "typeString": "function (bytes32) view returns (bytes32)"
                          }
                        },
                        "id": 2373,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "998:142:12",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "id": 2374,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "recover",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 18552,
                      "src": "998:150:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$bound_to$_t_bytes32_$",
                        "typeString": "function (bytes32,bytes memory) pure returns (address)"
                      }
                    },
                    "id": 2376,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "998:161:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "981:178:12"
                },
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 2389,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 2384,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "baseExpression": {
                          "id": 2378,
                          "name": "_nonces",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2320,
                          "src": "1176:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          }
                        },
                        "id": 2381,
                        "indexExpression": {
                          "expression": {
                            "id": 2379,
                            "name": "req",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2343,
                            "src": "1184:3:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ForwardRequest_$2311_calldata_ptr",
                              "typeString": "struct MinimalForwarder.ForwardRequest calldata"
                            }
                          },
                          "id": 2380,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "from",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2300,
                          "src": "1184:8:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1176:17:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "expression": {
                          "id": 2382,
                          "name": "req",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2343,
                          "src": "1197:3:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ForwardRequest_$2311_calldata_ptr",
                            "typeString": "struct MinimalForwarder.ForwardRequest calldata"
                          }
                        },
                        "id": 2383,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "nonce",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2308,
                        "src": "1197:9:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "1176:30:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 2388,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 2385,
                        "name": "signer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2351,
                        "src": "1210:6:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "expression": {
                          "id": 2386,
                          "name": "req",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2343,
                          "src": "1220:3:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ForwardRequest_$2311_calldata_ptr",
                            "typeString": "struct MinimalForwarder.ForwardRequest calldata"
                          }
                        },
                        "id": 2387,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "from",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2300,
                        "src": "1220:8:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "1210:18:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "1176:52:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 2349,
                  "id": 2390,
                  "nodeType": "Return",
                  "src": "1169:59:12"
                }
              ]
            },
            "functionSelector": "bf5d3bdb",
            "id": 2392,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "verify",
            "nameLocation": "882:6:12",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2346,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2343,
                  "mutability": "mutable",
                  "name": "req",
                  "nameLocation": "913:3:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2392,
                  "src": "889:27:12",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_ForwardRequest_$2311_calldata_ptr",
                    "typeString": "struct MinimalForwarder.ForwardRequest"
                  },
                  "typeName": {
                    "id": 2342,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2341,
                      "name": "ForwardRequest",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 2311,
                      "src": "889:14:12"
                    },
                    "referencedDeclaration": 2311,
                    "src": "889:14:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ForwardRequest_$2311_storage_ptr",
                      "typeString": "struct MinimalForwarder.ForwardRequest"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2345,
                  "mutability": "mutable",
                  "name": "signature",
                  "nameLocation": "933:9:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2392,
                  "src": "918:24:12",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 2344,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "918:5:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "888:55:12"
            },
            "returnParameters": {
              "id": 2349,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2348,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2392,
                  "src": "965:4:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2347,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "965:4:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "964:6:12"
            },
            "scope": 2459,
            "src": "873:362:12",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2457,
              "nodeType": "Block",
              "src": "1385:518:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2406,
                            "name": "req",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2395,
                            "src": "1410:3:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ForwardRequest_$2311_calldata_ptr",
                              "typeString": "struct MinimalForwarder.ForwardRequest calldata"
                            }
                          },
                          {
                            "id": 2407,
                            "name": "signature",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2397,
                            "src": "1415:9:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_calldata_ptr",
                              "typeString": "bytes calldata"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_struct$_ForwardRequest_$2311_calldata_ptr",
                              "typeString": "struct MinimalForwarder.ForwardRequest calldata"
                            },
                            {
                              "typeIdentifier": "t_bytes_calldata_ptr",
                              "typeString": "bytes calldata"
                            }
                          ],
                          "id": 2405,
                          "name": "verify",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2392,
                          "src": "1403:6:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_struct$_ForwardRequest_$2311_calldata_ptr_$_t_bytes_calldata_ptr_$returns$_t_bool_$",
                            "typeString": "function (struct MinimalForwarder.ForwardRequest calldata,bytes calldata) view returns (bool)"
                          }
                        },
                        "id": 2408,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1403:22:12",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d696e696d616c466f727761726465723a207369676e617475726520646f6573206e6f74206d617463682072657175657374",
                        "id": 2409,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1427:52:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0a1000a56588b05caffad06969cd7617cd0867f6c7d159cd7e5aa9b3c93b18ae",
                          "typeString": "literal_string \"MinimalForwarder: signature does not match request\""
                        },
                        "value": "MinimalForwarder: signature does not match request"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0a1000a56588b05caffad06969cd7617cd0867f6c7d159cd7e5aa9b3c93b18ae",
                          "typeString": "literal_string \"MinimalForwarder: signature does not match request\""
                        }
                      ],
                      "id": 2404,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1395:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2410,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1395:85:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2411,
                  "nodeType": "ExpressionStatement",
                  "src": "1395:85:12"
                },
                {
                  "expression": {
                    "id": 2420,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 2412,
                        "name": "_nonces",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2320,
                        "src": "1490:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 2415,
                      "indexExpression": {
                        "expression": {
                          "id": 2413,
                          "name": "req",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2395,
                          "src": "1498:3:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ForwardRequest_$2311_calldata_ptr",
                            "typeString": "struct MinimalForwarder.ForwardRequest calldata"
                          }
                        },
                        "id": 2414,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "from",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2300,
                        "src": "1498:8:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1490:17:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 2419,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 2416,
                          "name": "req",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2395,
                          "src": "1510:3:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ForwardRequest_$2311_calldata_ptr",
                            "typeString": "struct MinimalForwarder.ForwardRequest calldata"
                          }
                        },
                        "id": 2417,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "nonce",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2308,
                        "src": "1510:9:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "hexValue": "31",
                        "id": 2418,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1522:1:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "src": "1510:13:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1490:33:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2421,
                  "nodeType": "ExpressionStatement",
                  "src": "1490:33:12"
                },
                {
                  "assignments": [
                    2423,
                    2425
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2423,
                      "mutability": "mutable",
                      "name": "success",
                      "nameLocation": "1540:7:12",
                      "nodeType": "VariableDeclaration",
                      "scope": 2457,
                      "src": "1535:12:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 2422,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "1535:4:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2425,
                      "mutability": "mutable",
                      "name": "returndata",
                      "nameLocation": "1562:10:12",
                      "nodeType": "VariableDeclaration",
                      "scope": 2457,
                      "src": "1549:23:12",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 2424,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "1549:5:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2442,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 2436,
                              "name": "req",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2395,
                              "src": "1650:3:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ForwardRequest_$2311_calldata_ptr",
                                "typeString": "struct MinimalForwarder.ForwardRequest calldata"
                              }
                            },
                            "id": 2437,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "data",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2310,
                            "src": "1650:8:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_calldata_ptr",
                              "typeString": "bytes calldata"
                            }
                          },
                          {
                            "expression": {
                              "id": 2438,
                              "name": "req",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2395,
                              "src": "1660:3:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ForwardRequest_$2311_calldata_ptr",
                                "typeString": "struct MinimalForwarder.ForwardRequest calldata"
                              }
                            },
                            "id": 2439,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "from",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2300,
                            "src": "1660:8:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_calldata_ptr",
                              "typeString": "bytes calldata"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 2434,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "1633:3:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 2435,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "1633:16:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 2440,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1633:36:12",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "expression": {
                          "expression": {
                            "id": 2426,
                            "name": "req",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2395,
                            "src": "1576:3:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ForwardRequest_$2311_calldata_ptr",
                              "typeString": "struct MinimalForwarder.ForwardRequest calldata"
                            }
                          },
                          "id": 2427,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "to",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2302,
                          "src": "1576:6:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 2428,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "call",
                        "nodeType": "MemberAccess",
                        "src": "1576:11:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                          "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                        }
                      },
                      "id": 2433,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "gas",
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "expression": {
                            "id": 2429,
                            "name": "req",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2395,
                            "src": "1593:3:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ForwardRequest_$2311_calldata_ptr",
                              "typeString": "struct MinimalForwarder.ForwardRequest calldata"
                            }
                          },
                          "id": 2430,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "gas",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2306,
                          "src": "1593:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "expression": {
                            "id": 2431,
                            "name": "req",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2395,
                            "src": "1609:3:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ForwardRequest_$2311_calldata_ptr",
                              "typeString": "struct MinimalForwarder.ForwardRequest calldata"
                            }
                          },
                          "id": 2432,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2304,
                          "src": "1609:9:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "1576:43:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$gasvalue",
                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                      }
                    },
                    "id": 2441,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1576:103:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1534:145:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2450,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 2444,
                            "name": "gasleft",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -7,
                            "src": "1832:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_gasleft_view$__$returns$_t_uint256_$",
                              "typeString": "function () view returns (uint256)"
                            }
                          },
                          "id": 2445,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1832:9:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2449,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 2446,
                              "name": "req",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2395,
                              "src": "1844:3:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ForwardRequest_$2311_calldata_ptr",
                                "typeString": "struct MinimalForwarder.ForwardRequest calldata"
                              }
                            },
                            "id": 2447,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "gas",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2306,
                            "src": "1844:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "hexValue": "3633",
                            "id": 2448,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1854:2:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_63_by_1",
                              "typeString": "int_const 63"
                            },
                            "value": "63"
                          },
                          "src": "1844:12:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1832:24:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2443,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -3,
                      "src": "1825:6:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2451,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1825:32:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2452,
                  "nodeType": "ExpressionStatement",
                  "src": "1825:32:12"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "id": 2453,
                        "name": "success",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2423,
                        "src": "1876:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "id": 2454,
                        "name": "returndata",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2425,
                        "src": "1885:10:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "id": 2455,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "1875:21:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "functionReturnParameters": 2403,
                  "id": 2456,
                  "nodeType": "Return",
                  "src": "1868:28:12"
                }
              ]
            },
            "functionSelector": "47153f82",
            "id": 2458,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "execute",
            "nameLocation": "1250:7:12",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2398,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2395,
                  "mutability": "mutable",
                  "name": "req",
                  "nameLocation": "1282:3:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2458,
                  "src": "1258:27:12",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_ForwardRequest_$2311_calldata_ptr",
                    "typeString": "struct MinimalForwarder.ForwardRequest"
                  },
                  "typeName": {
                    "id": 2394,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2393,
                      "name": "ForwardRequest",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 2311,
                      "src": "1258:14:12"
                    },
                    "referencedDeclaration": 2311,
                    "src": "1258:14:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ForwardRequest_$2311_storage_ptr",
                      "typeString": "struct MinimalForwarder.ForwardRequest"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2397,
                  "mutability": "mutable",
                  "name": "signature",
                  "nameLocation": "1302:9:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2458,
                  "src": "1287:24:12",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 2396,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1287:5:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1257:55:12"
            },
            "returnParameters": {
              "id": 2403,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2400,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2458,
                  "src": "1361:4:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2399,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1361:4:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2402,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2458,
                  "src": "1367:12:12",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 2401,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1367:5:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1360:20:12"
            },
            "scope": 2459,
            "src": "1241:662:12",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 2460,
        "src": "269:1636:12",
        "usedErrors": []
      }
    ],
    "src": "33:1873:12"
  },
  "bytecode": "61012060405234801561001157600080fd5b50604080518082018252601081526f26b4b734b6b0b62337b93bb0b93232b960811b6020808301918252835180850185526005815264302e302e3160d81b908201529151902060c08181527fae209a0b48f21c054280f2455d32cf309387644879d9acbd8ffc19916381188560e08190524660a081815286517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f818801819052818901969096526060810193909352608080840192909252308382015286518084039091018152919092019094528351939092019290922090526101005260805160a05160c05160e05161010051610a14610133600039600061053e0152600061058d01526000610568015260006104ec015260006105150152610a146000f3fe6080604052600436106100345760003560e01c80632d0335ab1461003957806347153f8214610082578063bf5d3bdb146100a3575b600080fd5b34801561004557600080fd5b5061006f6100543660046107a5565b6001600160a01b031660009081526020819052604090205490565b6040519081526020015b60405180910390f35b6100956100903660046107d5565b6100d3565b6040516100799291906108a4565b3480156100af57600080fd5b506100c36100be3660046107d5565b610272565b6040519015158152602001610079565b600060606100e2858585610272565b61014e5760405162461bcd60e51b815260206004820152603260248201527f4d696e696d616c466f727761726465723a207369676e617475726520646f6573604482015271081b9bdd081b585d18da081c995c5d595cdd60721b60648201526084015b60405180910390fd5b61015d608086013560016108e0565b60008061016d60208901896107a5565b6001600160a01b03166001600160a01b03168152602001908152602001600020819055506000808660200160208101906101a791906107a5565b6001600160a01b0316606088013560408901356101c760a08b018b610906565b6101d460208d018d6107a5565b6040516020016101e693929190610954565b60408051601f19818403018152908290526102009161097a565b600060405180830381858888f193505050503d806000811461023e576040519150601f19603f3d011682016040523d82523d6000602084013e610243565b606091505b509092509050610258603f6060890135610996565b5a11610266576102666109b8565b90969095509350505050565b60008061038584848080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061037f92507fdd8f4b70b0f4393e889bd39128a30628a78b61816a9eb8199759e7a349657e4891506102e2905060208a018a6107a5565b6102f260408b0160208c016107a5565b60408b013560608c013560808d013561030e60a08f018f610906565b60405161031c9291906109ce565b6040805191829003822060208301989098526001600160a01b0396871690820152949093166060850152608084019190915260a083015260c082015260e081019190915261010001604051602081830303815290604052805190602001206103f0565b90610444565b9050608085013560008061039c60208901896107a5565b6001600160a01b03166001600160a01b03168152602001908152602001600020541480156103e757506103d260208601866107a5565b6001600160a01b0316816001600160a01b0316145b95945050505050565b600061043e6103fd6104e8565b8360405161190160f01b6020820152602281018390526042810182905260009060620160405160208183030381529060405280519060200120905092915050565b92915050565b60008151604114156104785760208201516040830151606084015160001a61046e868285856105db565b935050505061043e565b8151604014156104a0576020820151604083015161049785838361077b565b9250505061043e565b60405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606401610145565b60007f000000000000000000000000000000000000000000000000000000000000000046141561053757507f000000000000000000000000000000000000000000000000000000000000000090565b50604080517f00000000000000000000000000000000000000000000000000000000000000006020808301919091527f0000000000000000000000000000000000000000000000000000000000000000828401527f000000000000000000000000000000000000000000000000000000000000000060608301524660808301523060a0808401919091528351808403909101815260c0909201909252805191012090565b60007f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08211156106585760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b6064820152608401610145565b8360ff16601b148061066d57508360ff16601c145b6106c45760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b6064820152608401610145565b6040805160008082526020820180845288905260ff871692820192909252606081018590526080810184905260019060a0016020604051602081039080840390855afa158015610718573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166103e75760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e617475726500000000000000006044820152606401610145565b60006001600160ff1b03821660ff83901c601b0161079b868287856105db565b9695505050505050565b6000602082840312156107b757600080fd5b81356001600160a01b03811681146107ce57600080fd5b9392505050565b6000806000604084860312156107ea57600080fd5b833567ffffffffffffffff8082111561080257600080fd5b9085019060c0828803121561081657600080fd5b9093506020850135908082111561082c57600080fd5b818601915086601f83011261084057600080fd5b81358181111561084f57600080fd5b87602082850101111561086157600080fd5b6020830194508093505050509250925092565b60005b8381101561088f578181015183820152602001610877565b8381111561089e576000848401525b50505050565b821515815260406020820152600082518060408401526108cb816060850160208701610874565b601f01601f1916919091016060019392505050565b6000821982111561090157634e487b7160e01b600052601160045260246000fd5b500190565b6000808335601e1984360301811261091d57600080fd5b83018035915067ffffffffffffffff82111561093857600080fd5b60200191503681900382131561094d57600080fd5b9250929050565b8284823760609190911b6bffffffffffffffffffffffff19169101908152601401919050565b6000825161098c818460208701610874565b9190910192915050565b6000826109b357634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052600160045260246000fd5b818382376000910190815291905056fea2646970667358221220c0f1145ccaceef1b09589aee49eb56748aa98c3a1ee28f75775011e473b45f1664736f6c634300080c0033",
  "bytecodeSha1": "cb5958603ff460e212110fce26b183dc22e8cd1d",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.12+commit.f00d7308"
  },
  "contractName": "MinimalForwarder",
  "coverageMap": {
    "branches": {
      "12": {
        "MinimalForwarder.execute": {
          "18": [
            1403,
            1425,
            true
          ]
        }
      },
      "152": {
        "ECDSA.recover": {
          "19": [
            1582,
            1604,
            false
          ],
          "20": [
            2061,
            2083,
            false
          ],
          "21": [
            4302,
            4382,
            true
          ],
          "22": [
            4460,
            4467,
            true
          ],
          "23": [
            4471,
            4478,
            true
          ],
          "24": [
            4671,
            4691,
            true
          ]
        }
      },
      "155": {
        "EIP712._domainSeparatorV4": {
          "25": [
            3066,
            3099,
            false
          ]
        }
      }
    },
    "statements": {
      "12": {
        "MinimalForwarder.execute": {
          "1": [
            1395,
            1480
          ],
          "2": [
            1490,
            1523
          ],
          "3": [
            1825,
            1857
          ],
          "4": [
            1868,
            1896
          ]
        },
        "MinimalForwarder.getNonce": {
          "0": [
            840,
            860
          ]
        },
        "MinimalForwarder.verify": {
          "5": [
            1169,
            1228
          ]
        }
      },
      "152": {
        "ECDSA.recover": {
          "8": [
            2011,
            2040
          ],
          "9": [
            2413,
            2440
          ],
          "10": [
            2471,
            2512
          ],
          "14": [
            4281,
            4442
          ],
          "15": [
            4452,
            4517
          ],
          "16": [
            4663,
            4720
          ],
          "17": [
            3103,
            3132
          ]
        },
        "ECDSA.toTypedDataHash": {
          "7": [
            5757,
            5832
          ]
        }
      },
      "155": {
        "EIP712._buildDomainSeparator": {
          "12": [
            3430,
            3521
          ]
        },
        "EIP712._domainSeparatorV4": {
          "11": [
            3115,
            3146
          ],
          "13": [
            3177,
            3248
          ]
        },
        "EIP712._hashTypedDataV4": {
          "6": [
            4249,
            4311
          ]
        }
      }
    }
  },
  "dependencies": [
    "ECDSA",
    "EIP712"
  ],
  "deployedBytecode": "6080604052600436106100345760003560e01c80632d0335ab1461003957806347153f8214610082578063bf5d3bdb146100a3575b600080fd5b34801561004557600080fd5b5061006f6100543660046107a5565b6001600160a01b031660009081526020819052604090205490565b6040519081526020015b60405180910390f35b6100956100903660046107d5565b6100d3565b6040516100799291906108a4565b3480156100af57600080fd5b506100c36100be3660046107d5565b610272565b6040519015158152602001610079565b600060606100e2858585610272565b61014e5760405162461bcd60e51b815260206004820152603260248201527f4d696e696d616c466f727761726465723a207369676e617475726520646f6573604482015271081b9bdd081b585d18da081c995c5d595cdd60721b60648201526084015b60405180910390fd5b61015d608086013560016108e0565b60008061016d60208901896107a5565b6001600160a01b03166001600160a01b03168152602001908152602001600020819055506000808660200160208101906101a791906107a5565b6001600160a01b0316606088013560408901356101c760a08b018b610906565b6101d460208d018d6107a5565b6040516020016101e693929190610954565b60408051601f19818403018152908290526102009161097a565b600060405180830381858888f193505050503d806000811461023e576040519150601f19603f3d011682016040523d82523d6000602084013e610243565b606091505b509092509050610258603f6060890135610996565b5a11610266576102666109b8565b90969095509350505050565b60008061038584848080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061037f92507fdd8f4b70b0f4393e889bd39128a30628a78b61816a9eb8199759e7a349657e4891506102e2905060208a018a6107a5565b6102f260408b0160208c016107a5565b60408b013560608c013560808d013561030e60a08f018f610906565b60405161031c9291906109ce565b6040805191829003822060208301989098526001600160a01b0396871690820152949093166060850152608084019190915260a083015260c082015260e081019190915261010001604051602081830303815290604052805190602001206103f0565b90610444565b9050608085013560008061039c60208901896107a5565b6001600160a01b03166001600160a01b03168152602001908152602001600020541480156103e757506103d260208601866107a5565b6001600160a01b0316816001600160a01b0316145b95945050505050565b600061043e6103fd6104e8565b8360405161190160f01b6020820152602281018390526042810182905260009060620160405160208183030381529060405280519060200120905092915050565b92915050565b60008151604114156104785760208201516040830151606084015160001a61046e868285856105db565b935050505061043e565b8151604014156104a0576020820151604083015161049785838361077b565b9250505061043e565b60405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606401610145565b60007f000000000000000000000000000000000000000000000000000000000000000046141561053757507f000000000000000000000000000000000000000000000000000000000000000090565b50604080517f00000000000000000000000000000000000000000000000000000000000000006020808301919091527f0000000000000000000000000000000000000000000000000000000000000000828401527f000000000000000000000000000000000000000000000000000000000000000060608301524660808301523060a0808401919091528351808403909101815260c0909201909252805191012090565b60007f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08211156106585760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b6064820152608401610145565b8360ff16601b148061066d57508360ff16601c145b6106c45760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b6064820152608401610145565b6040805160008082526020820180845288905260ff871692820192909252606081018590526080810184905260019060a0016020604051602081039080840390855afa158015610718573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166103e75760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e617475726500000000000000006044820152606401610145565b60006001600160ff1b03821660ff83901c601b0161079b868287856105db565b9695505050505050565b6000602082840312156107b757600080fd5b81356001600160a01b03811681146107ce57600080fd5b9392505050565b6000806000604084860312156107ea57600080fd5b833567ffffffffffffffff8082111561080257600080fd5b9085019060c0828803121561081657600080fd5b9093506020850135908082111561082c57600080fd5b818601915086601f83011261084057600080fd5b81358181111561084f57600080fd5b87602082850101111561086157600080fd5b6020830194508093505050509250925092565b60005b8381101561088f578181015183820152602001610877565b8381111561089e576000848401525b50505050565b821515815260406020820152600082518060408401526108cb816060850160208701610874565b601f01601f1916919091016060019392505050565b6000821982111561090157634e487b7160e01b600052601160045260246000fd5b500190565b6000808335601e1984360301811261091d57600080fd5b83018035915067ffffffffffffffff82111561093857600080fd5b60200191503681900382131561094d57600080fd5b9250929050565b8284823760609190911b6bffffffffffffffffffffffff19169101908152601401919050565b6000825161098c818460208701610874565b9190910192915050565b6000826109b357634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052600160045260246000fd5b818382376000910190815291905056fea2646970667358221220c0f1145ccaceef1b09589aee49eb56748aa98c3a1ee28f75775011e473b45f1664736f6c634300080c0033",
  "deployedSourceMap": "269:1636:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;768:99;;;;;;;;;;-1:-1:-1;768:99:12;;;;;:::i;:::-;-1:-1:-1;;;;;847:13:12;821:7;847:13;;;;;;;;;;;;768:99;;;;451:25:174;;;439:2;424:18;768:99:12;;;;;;;;1241:662;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;873:362::-;;;;;;;;;;-1:-1:-1;873:362:12;;;;;:::i;:::-;;:::i;:::-;;;2250:14:174;;2243:22;2225:41;;2213:2;2198:18;873:362:12;2085:187:174;1241:662:12;1361:4;1367:12;1403:22;1410:3;1415:9;;1403:6;:22::i;:::-;1395:85;;;;-1:-1:-1;;;1395:85:12;;2479:2:174;1395:85:12;;;2461:21:174;2518:2;2498:18;;;2491:30;2557:34;2537:18;;;2530:62;-1:-1:-1;;;2608:18:174;;;2601:48;2666:19;;1395:85:12;;;;;;;;;1510:13;:9;;;;1522:1;1510:13;:::i;:::-;1490:7;;1498:8;;;;:3;:8;:::i;:::-;-1:-1:-1;;;;;1490:17:12;-1:-1:-1;;;;;1490:17:12;;;;;;;;;;;;:33;;;;1535:12;1549:23;1576:3;:6;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1576:11:12;1593:7;;;;1609:9;;;;1650:8;;;;1593:3;1650:8;:::i;:::-;1660;;;;:3;:8;:::i;:::-;1633:36;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;1633:36:12;;;;;;;;;;1576:103;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1534:145:12;;-1:-1:-1;1534:145:12;-1:-1:-1;1844:12:12;1854:2;1844:7;;;;:12;:::i;:::-;1832:9;:24;1825:32;;;;:::i;:::-;1876:7;;;;-1:-1:-1;1241:662:12;-1:-1:-1;;;;1241:662:12:o;873:362::-;965:4;981:14;998:161;1149:9;;998:161;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;998:142:12;;-1:-1:-1;550:103:12;;-1:-1:-1;1060:8:12;;-1:-1:-1;1060:8:12;;;:3;:8;:::i;:::-;1070:6;;;;;;;;:::i;:::-;1078:9;;;;1089:7;;;;1098:9;;;;1119:8;;;;1078:3;1119:8;:::i;:::-;1109:19;;;;;;;:::i;:::-;;;;;;;;;;1038:91;;;5063:25:174;;;;-1:-1:-1;;;;;5162:15:174;;;5142:18;;;5135:43;5214:15;;;;5194:18;;;5187:43;5246:18;;;5239:34;;;;5289:19;;;5282:35;5333:19;;;5326:35;5377:19;;;5370:35;;;;5035:19;;1038:91:12;;;;;;;;;;;;1028:102;;;;;;998:16;:142::i;:::-;:150;;:161::i;:::-;981:178;-1:-1:-1;1197:9:12;;;;1176:7;;1184:8;;;;1197:3;1184:8;:::i;:::-;-1:-1:-1;;;;;1176:17:12;-1:-1:-1;;;;;1176:17:12;;;;;;;;;;;;;:30;:52;;;;-1:-1:-1;1220:8:12;;;;:3;:8;:::i;:::-;-1:-1:-1;;;;;1210:18:12;:6;-1:-1:-1;;;;;1210:18:12;;1176:52;1169:59;873:362;-1:-1:-1;;;;;873:362:12:o;4153:165:155:-;4230:7;4256:55;4278:20;:18;:20::i;:::-;4300:10;5774:57:152;;-1:-1:-1;;;5774:57:152;;;6034:27:174;6077:11;;;6070:27;;;6113:12;;;6106:28;;;5738:7:152;;6150:12:174;;5774:57:152;;;;;;;;;;;;5764:68;;;;;;5757:75;;5645:194;;;;;4256:55:155;4249:62;4153:165;-1:-1:-1;;4153:165:155:o;1288:1241:152:-;1366:7;1582:9;:16;1602:2;1582:22;1578:945;;;1871:4;1856:20;;1850:27;1920:4;1905:20;;1899:27;1977:4;1962:20;;1956:27;1620:9;1948:36;2018:22;2026:4;1948:36;1850:27;1899;2018:7;:22::i;:::-;2011:29;;;;;;;1578:945;2061:9;:16;2081:2;2061:22;2057:466;;;2330:4;2315:20;;2309:27;2380:4;2365:20;;2359:27;2420:20;2428:4;2309:27;2359;2420:7;:20::i;:::-;2413:27;;;;;;2057:466;2471:41;;-1:-1:-1;;;2471:41:152;;5618:2:174;2471:41:152;;;5600:21:174;5657:2;5637:18;;;5630:30;5696:33;5676:18;;;5669:61;5747:18;;2471:41:152;5416:355:174;2990:275:155;3043:7;3083:16;3066:13;:33;3062:197;;;-1:-1:-1;3122:24:155;;2990:275::o;3062:197::-;-1:-1:-1;3447:73:155;;;3206:10;3447:73;;;;7994:25:174;;;;3218:12:155;8035:18:174;;;8028:34;3232:15:155;8078:18:174;;;8071:34;3491:13:155;8121:18:174;;;8114:34;3514:4:155;8164:19:174;;;;8157:61;;;;3447:73:155;;;;;;;;;;7966:19:174;;;;3447:73:155;;;3437:84;;;;;;2990:275::o;3265:1486:152:-;3388:7;4316:66;4302:80;;;4281:161;;;;-1:-1:-1;;;4281:161:152;;6375:2:174;4281:161:152;;;6357:21:174;6414:2;6394:18;;;6387:30;6453:34;6433:18;;;6426:62;-1:-1:-1;;;6504:18:174;;;6497:32;6546:19;;4281:161:152;6173:398:174;4281:161:152;4460:1;:7;;4465:2;4460:7;:18;;;;4471:1;:7;;4476:2;4471:7;4460:18;4452:65;;;;-1:-1:-1;;;4452:65:152;;6778:2:174;4452:65:152;;;6760:21:174;6817:2;6797:18;;;6790:30;6856:34;6836:18;;;6829:62;-1:-1:-1;;;6907:18:174;;;6900:32;6949:19;;4452:65:152;6576:398:174;4452:65:152;4629:24;;;4612:14;4629:24;;;;;;;;;7206:25:174;;;7279:4;7267:17;;7247:18;;;7240:45;;;;7301:18;;;7294:34;;;7344:18;;;7337:34;;;4629:24:152;;7178:19:174;;4629:24:152;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4629:24:152;;-1:-1:-1;;4629:24:152;;;-1:-1:-1;;;;;;;4671:20:152;;4663:57;;;;-1:-1:-1;;;4663:57:152;;7584:2:174;4663:57:152;;;7566:21:174;7623:2;7603:18;;;7596:30;7662:26;7642:18;;;7635:54;7706:18;;4663:57:152;7382:348:174;2780:359:152;2887:7;-1:-1:-1;;;;;2970:75:152;;3071:3;3067:12;;;3081:2;3063:21;3110:22;3118:4;3063:21;3127:1;2970:75;3110:7;:22::i;:::-;3103:29;2780:359;-1:-1:-1;;;;;;2780:359:152:o;14:286:174:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;168:23;;-1:-1:-1;;;;;220:31:174;;210:42;;200:70;;266:1;263;256:12;200:70;289:5;14:286;-1:-1:-1;;;14:286:174:o;487:863::-;600:6;608;616;669:2;657:9;648:7;644:23;640:32;637:52;;;685:1;682;675:12;637:52;725:9;712:23;754:18;795:2;787:6;784:14;781:34;;;811:1;808;801:12;781:34;834:22;;;;890:3;872:16;;;868:26;865:46;;;907:1;904;897:12;865:46;930:2;;-1:-1:-1;985:2:174;970:18;;957:32;;1001:16;;;998:36;;;1030:1;1027;1020:12;998:36;1068:8;1057:9;1053:24;1043:34;;1115:7;1108:4;1104:2;1100:13;1096:27;1086:55;;1137:1;1134;1127:12;1086:55;1177:2;1164:16;1203:2;1195:6;1192:14;1189:34;;;1219:1;1216;1209:12;1189:34;1264:7;1259:2;1250:6;1246:2;1242:15;1238:24;1235:37;1232:57;;;1285:1;1282;1275:12;1232:57;1316:2;1312;1308:11;1298:21;;1338:6;1328:16;;;;;487:863;;;;;:::o;1355:258::-;1427:1;1437:113;1451:6;1448:1;1445:13;1437:113;;;1527:11;;;1521:18;1508:11;;;1501:39;1473:2;1466:10;1437:113;;;1568:6;1565:1;1562:13;1559:48;;;1603:1;1594:6;1589:3;1585:16;1578:27;1559:48;;1355:258;;;:::o;1618:462::-;1801:6;1794:14;1787:22;1776:9;1769:41;1846:2;1841;1830:9;1826:18;1819:30;1750:4;1878:6;1872:13;1921:6;1916:2;1905:9;1901:18;1894:34;1937:66;1996:6;1991:2;1980:9;1976:18;1971:2;1963:6;1959:15;1937:66;:::i;:::-;2064:2;2043:15;-1:-1:-1;;2039:29:174;2024:45;;;;2071:2;2020:54;;1618:462;-1:-1:-1;;;1618:462:174:o;2696:225::-;2736:3;2767:1;2763:6;2760:1;2757:13;2754:136;;;2812:10;2807:3;2803:20;2800:1;2793:31;2847:4;2844:1;2837:15;2875:4;2872:1;2865:15;2754:136;-1:-1:-1;2906:9:174;;2696:225::o;2926:521::-;3003:4;3009:6;3069:11;3056:25;3163:2;3159:7;3148:8;3132:14;3128:29;3124:43;3104:18;3100:68;3090:96;;3182:1;3179;3172:12;3090:96;3209:33;;3261:20;;;-1:-1:-1;3304:18:174;3293:30;;3290:50;;;3336:1;3333;3326:12;3290:50;3369:4;3357:17;;-1:-1:-1;3400:14:174;3396:27;;;3386:38;;3383:58;;;3437:1;3434;3427:12;3383:58;2926:521;;;;;:::o;3452:382::-;3663:6;3655;3650:3;3637:33;3755:2;3751:15;;;;-1:-1:-1;;3747:53:174;3689:16;;3736:65;;;3825:2;3817:11;;3452:382;-1:-1:-1;3452:382:174:o;3839:274::-;3968:3;4006:6;4000:13;4022:53;4068:6;4063:3;4056:4;4048:6;4044:17;4022:53;:::i;:::-;4091:16;;;;;3839:274;-1:-1:-1;;3839:274:174:o;4118:217::-;4158:1;4184;4174:132;;4228:10;4223:3;4219:20;4216:1;4209:31;4263:4;4260:1;4253:15;4291:4;4288:1;4281:15;4174:132;-1:-1:-1;4320:9:174;;4118:217::o;4340:127::-;4401:10;4396:3;4392:20;4389:1;4382:31;4432:4;4429:1;4422:15;4456:4;4453:1;4446:15;4472:271;4655:6;4647;4642:3;4629:33;4611:3;4681:16;;4706:13;;;4681:16;4472:271;-1:-1:-1;4472:271:174:o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "offset": [
    269,
    1905
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x34 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x2D0335AB EQ PUSH2 0x39 JUMPI DUP1 PUSH4 0x47153F82 EQ PUSH2 0x82 JUMPI DUP1 PUSH4 0xBF5D3BDB EQ PUSH2 0xA3 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x45 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6F PUSH2 0x54 CALLDATASIZE PUSH1 0x4 PUSH2 0x7A5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x95 PUSH2 0x90 CALLDATASIZE PUSH1 0x4 PUSH2 0x7D5 JUMP JUMPDEST PUSH2 0xD3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x79 SWAP3 SWAP2 SWAP1 PUSH2 0x8A4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xAF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xC3 PUSH2 0xBE CALLDATASIZE PUSH1 0x4 PUSH2 0x7D5 JUMP JUMPDEST PUSH2 0x272 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x79 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH2 0xE2 DUP6 DUP6 DUP6 PUSH2 0x272 JUMP JUMPDEST PUSH2 0x14E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x32 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D696E696D616C466F727761726465723A207369676E617475726520646F6573 PUSH1 0x44 DUP3 ADD MSTORE PUSH18 0x81B9BDD081B585D18DA081C995C5D595CDD PUSH1 0x72 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x15D PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH1 0x1 PUSH2 0x8E0 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x16D PUSH1 0x20 DUP10 ADD DUP10 PUSH2 0x7A5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP1 DUP7 PUSH1 0x20 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x1A7 SWAP2 SWAP1 PUSH2 0x7A5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x60 DUP9 ADD CALLDATALOAD PUSH1 0x40 DUP10 ADD CALLDATALOAD PUSH2 0x1C7 PUSH1 0xA0 DUP12 ADD DUP12 PUSH2 0x906 JUMP JUMPDEST PUSH2 0x1D4 PUSH1 0x20 DUP14 ADD DUP14 PUSH2 0x7A5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1E6 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x954 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE PUSH2 0x200 SWAP2 PUSH2 0x97A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x23E JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x243 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x258 PUSH1 0x3F PUSH1 0x60 DUP10 ADD CALLDATALOAD PUSH2 0x996 JUMP JUMPDEST GAS GT PUSH2 0x266 JUMPI PUSH2 0x266 PUSH2 0x9B8 JUMP JUMPDEST SWAP1 SWAP7 SWAP1 SWAP6 POP SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x385 DUP5 DUP5 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH2 0x37F SWAP3 POP PUSH32 0xDD8F4B70B0F4393E889BD39128A30628A78B61816A9EB8199759E7A349657E48 SWAP2 POP PUSH2 0x2E2 SWAP1 POP PUSH1 0x20 DUP11 ADD DUP11 PUSH2 0x7A5 JUMP JUMPDEST PUSH2 0x2F2 PUSH1 0x40 DUP12 ADD PUSH1 0x20 DUP13 ADD PUSH2 0x7A5 JUMP JUMPDEST PUSH1 0x40 DUP12 ADD CALLDATALOAD PUSH1 0x60 DUP13 ADD CALLDATALOAD PUSH1 0x80 DUP14 ADD CALLDATALOAD PUSH2 0x30E PUSH1 0xA0 DUP16 ADD DUP16 PUSH2 0x906 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x31C SWAP3 SWAP2 SWAP1 PUSH2 0x9CE JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB DUP3 KECCAK256 PUSH1 0x20 DUP4 ADD SWAP9 SWAP1 SWAP9 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP7 DUP8 AND SWAP1 DUP3 ADD MSTORE SWAP5 SWAP1 SWAP4 AND PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x80 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0xE0 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH2 0x100 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH2 0x3F0 JUMP JUMPDEST SWAP1 PUSH2 0x444 JUMP JUMPDEST SWAP1 POP PUSH1 0x80 DUP6 ADD CALLDATALOAD PUSH1 0x0 DUP1 PUSH2 0x39C PUSH1 0x20 DUP10 ADD DUP10 PUSH2 0x7A5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ DUP1 ISZERO PUSH2 0x3E7 JUMPI POP PUSH2 0x3D2 PUSH1 0x20 DUP7 ADD DUP7 PUSH2 0x7A5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x43E PUSH2 0x3FD PUSH2 0x4E8 JUMP JUMPDEST DUP4 PUSH1 0x40 MLOAD PUSH2 0x1901 PUSH1 0xF0 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x22 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x42 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x62 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD PUSH1 0x41 EQ ISZERO PUSH2 0x478 JUMPI PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x40 DUP4 ADD MLOAD PUSH1 0x60 DUP5 ADD MLOAD PUSH1 0x0 BYTE PUSH2 0x46E DUP7 DUP3 DUP6 DUP6 PUSH2 0x5DB JUMP JUMPDEST SWAP4 POP POP POP POP PUSH2 0x43E JUMP JUMPDEST DUP2 MLOAD PUSH1 0x40 EQ ISZERO PUSH2 0x4A0 JUMPI PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x40 DUP4 ADD MLOAD PUSH2 0x497 DUP6 DUP4 DUP4 PUSH2 0x77B JUMP JUMPDEST SWAP3 POP POP POP PUSH2 0x43E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45434453413A20696E76616C6964207369676E6174757265206C656E67746800 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x145 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 CHAINID EQ ISZERO PUSH2 0x537 JUMPI POP PUSH32 0x0 SWAP1 JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD PUSH32 0x0 PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0x0 DUP3 DUP5 ADD MSTORE PUSH32 0x0 PUSH1 0x60 DUP4 ADD MSTORE CHAINID PUSH1 0x80 DUP4 ADD MSTORE ADDRESS PUSH1 0xA0 DUP1 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP4 MLOAD DUP1 DUP5 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0xC0 SWAP1 SWAP3 ADD SWAP1 SWAP3 MSTORE DUP1 MLOAD SWAP2 ADD KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP3 GT ISZERO PUSH2 0x658 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45434453413A20696E76616C6964207369676E6174757265202773272076616C PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7565 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x145 JUMP JUMPDEST DUP4 PUSH1 0xFF AND PUSH1 0x1B EQ DUP1 PUSH2 0x66D JUMPI POP DUP4 PUSH1 0xFF AND PUSH1 0x1C EQ JUMPDEST PUSH2 0x6C4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45434453413A20696E76616C6964207369676E6174757265202776272076616C PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7565 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x145 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP1 DUP5 MSTORE DUP9 SWAP1 MSTORE PUSH1 0xFF DUP8 AND SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x1 SWAP1 PUSH1 0xA0 ADD PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x718 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x3E7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45434453413A20696E76616C6964207369676E61747572650000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x145 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xFF SHL SUB DUP3 AND PUSH1 0xFF DUP4 SWAP1 SHR PUSH1 0x1B ADD PUSH2 0x79B DUP7 DUP3 DUP8 DUP6 PUSH2 0x5DB JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x7B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x7CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x7EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x802 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 DUP6 ADD SWAP1 PUSH1 0xC0 DUP3 DUP9 SUB SLT ISZERO PUSH2 0x816 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP1 DUP1 DUP3 GT ISZERO PUSH2 0x82C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP7 ADD SWAP2 POP DUP7 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x840 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x84F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP8 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x861 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP5 POP DUP1 SWAP4 POP POP POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x88F JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x877 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x89E JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x40 DUP5 ADD MSTORE PUSH2 0x8CB DUP2 PUSH1 0x60 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x874 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x60 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x901 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 CALLDATALOAD PUSH1 0x1E NOT DUP5 CALLDATASIZE SUB ADD DUP2 SLT PUSH2 0x91D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 ADD DUP1 CALLDATALOAD SWAP2 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x938 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 ADD SWAP2 POP CALLDATASIZE DUP2 SWAP1 SUB DUP3 SGT ISZERO PUSH2 0x94D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST DUP3 DUP5 DUP3 CALLDATACOPY PUSH1 0x60 SWAP2 SWAP1 SWAP2 SHL PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP2 ADD SWAP1 DUP2 MSTORE PUSH1 0x14 ADD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x98C DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x874 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x9B3 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP4 DUP3 CALLDATACOPY PUSH1 0x0 SWAP2 ADD SWAP1 DUP2 MSTORE SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC0 CALL EQ 0x5C 0xCA 0xCE 0xEF SHL MULMOD PC SWAP11 0xEE 0x49 0xEB JUMP PUSH21 0x8AA98C3A1EE28F75775011E473B45F1664736F6C63 NUMBER STOP ADDMOD 0xC STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        269,
        1905
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        269,
        1905
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        269,
        1905
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "5": {
      "fn": null,
      "offset": [
        269,
        1905
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "7": {
      "fn": null,
      "offset": [
        269,
        1905
      ],
      "op": "CALLDATASIZE",
      "path": "12"
    },
    "8": {
      "fn": null,
      "offset": [
        269,
        1905
      ],
      "op": "LT",
      "path": "12"
    },
    "9": {
      "fn": null,
      "offset": [
        269,
        1905
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x34"
    },
    "12": {
      "fn": null,
      "offset": [
        269,
        1905
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "13": {
      "fn": null,
      "offset": [
        269,
        1905
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "15": {
      "fn": null,
      "offset": [
        269,
        1905
      ],
      "op": "CALLDATALOAD",
      "path": "12"
    },
    "16": {
      "fn": null,
      "offset": [
        269,
        1905
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xE0"
    },
    "18": {
      "fn": null,
      "offset": [
        269,
        1905
      ],
      "op": "SHR",
      "path": "12"
    },
    "19": {
      "fn": null,
      "offset": [
        269,
        1905
      ],
      "op": "DUP1",
      "path": "12"
    },
    "20": {
      "fn": null,
      "offset": [
        269,
        1905
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x2D0335AB"
    },
    "25": {
      "fn": null,
      "offset": [
        269,
        1905
      ],
      "op": "EQ",
      "path": "12"
    },
    "26": {
      "fn": null,
      "offset": [
        269,
        1905
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x39"
    },
    "29": {
      "fn": null,
      "offset": [
        269,
        1905
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "30": {
      "fn": null,
      "offset": [
        269,
        1905
      ],
      "op": "DUP1",
      "path": "12"
    },
    "31": {
      "fn": null,
      "offset": [
        269,
        1905
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x47153F82"
    },
    "36": {
      "fn": null,
      "offset": [
        269,
        1905
      ],
      "op": "EQ",
      "path": "12"
    },
    "37": {
      "fn": null,
      "offset": [
        269,
        1905
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x82"
    },
    "40": {
      "fn": null,
      "offset": [
        269,
        1905
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "41": {
      "fn": null,
      "offset": [
        269,
        1905
      ],
      "op": "DUP1",
      "path": "12"
    },
    "42": {
      "fn": null,
      "offset": [
        269,
        1905
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0xBF5D3BDB"
    },
    "47": {
      "fn": null,
      "offset": [
        269,
        1905
      ],
      "op": "EQ",
      "path": "12"
    },
    "48": {
      "fn": null,
      "offset": [
        269,
        1905
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xA3"
    },
    "51": {
      "fn": null,
      "offset": [
        269,
        1905
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "52": {
      "fn": null,
      "offset": [
        269,
        1905
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "53": {
      "fn": null,
      "offset": [
        269,
        1905
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "55": {
      "fn": null,
      "offset": [
        269,
        1905
      ],
      "op": "DUP1",
      "path": "12"
    },
    "56": {
      "first_revert": true,
      "fn": null,
      "offset": [
        269,
        1905
      ],
      "op": "REVERT",
      "path": "12"
    },
    "57": {
      "fn": "MinimalForwarder.getNonce",
      "offset": [
        768,
        867
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "58": {
      "fn": "MinimalForwarder.getNonce",
      "offset": [
        768,
        867
      ],
      "op": "CALLVALUE",
      "path": "12"
    },
    "59": {
      "fn": "MinimalForwarder.getNonce",
      "offset": [
        768,
        867
      ],
      "op": "DUP1",
      "path": "12"
    },
    "60": {
      "fn": "MinimalForwarder.getNonce",
      "offset": [
        768,
        867
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "61": {
      "fn": "MinimalForwarder.getNonce",
      "offset": [
        768,
        867
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x45"
    },
    "64": {
      "fn": "MinimalForwarder.getNonce",
      "offset": [
        768,
        867
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "65": {
      "fn": "MinimalForwarder.getNonce",
      "offset": [
        768,
        867
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "67": {
      "fn": "MinimalForwarder.getNonce",
      "offset": [
        768,
        867
      ],
      "op": "DUP1",
      "path": "12"
    },
    "68": {
      "fn": "MinimalForwarder.getNonce",
      "offset": [
        768,
        867
      ],
      "op": "REVERT",
      "path": "12"
    },
    "69": {
      "fn": "MinimalForwarder.getNonce",
      "offset": [
        768,
        867
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "70": {
      "op": "POP"
    },
    "71": {
      "fn": "MinimalForwarder.getNonce",
      "offset": [
        768,
        867
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x6F"
    },
    "74": {
      "fn": "MinimalForwarder.getNonce",
      "offset": [
        768,
        867
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x54"
    },
    "77": {
      "fn": "MinimalForwarder.getNonce",
      "offset": [
        768,
        867
      ],
      "op": "CALLDATASIZE",
      "path": "12"
    },
    "78": {
      "fn": "MinimalForwarder.getNonce",
      "offset": [
        768,
        867
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "80": {
      "fn": "MinimalForwarder.getNonce",
      "offset": [
        768,
        867
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x7A5"
    },
    "83": {
      "fn": "MinimalForwarder.getNonce",
      "jump": "i",
      "offset": [
        768,
        867
      ],
      "op": "JUMP",
      "path": "12"
    },
    "84": {
      "fn": "MinimalForwarder.getNonce",
      "offset": [
        768,
        867
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "85": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "87": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "89": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "91": {
      "op": "SHL"
    },
    "92": {
      "op": "SUB"
    },
    "93": {
      "fn": "MinimalForwarder.getNonce",
      "offset": [
        847,
        860
      ],
      "op": "AND",
      "path": "12",
      "statement": 0
    },
    "94": {
      "fn": "MinimalForwarder.getNonce",
      "offset": [
        821,
        828
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "96": {
      "fn": "MinimalForwarder.getNonce",
      "offset": [
        847,
        860
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "97": {
      "fn": "MinimalForwarder.getNonce",
      "offset": [
        847,
        860
      ],
      "op": "DUP2",
      "path": "12"
    },
    "98": {
      "fn": "MinimalForwarder.getNonce",
      "offset": [
        847,
        860
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "99": {
      "fn": "MinimalForwarder.getNonce",
      "offset": [
        847,
        860
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "101": {
      "fn": "MinimalForwarder.getNonce",
      "offset": [
        847,
        860
      ],
      "op": "DUP2",
      "path": "12"
    },
    "102": {
      "fn": "MinimalForwarder.getNonce",
      "offset": [
        847,
        860
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "103": {
      "fn": "MinimalForwarder.getNonce",
      "offset": [
        847,
        860
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "104": {
      "fn": "MinimalForwarder.getNonce",
      "offset": [
        847,
        860
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "106": {
      "fn": "MinimalForwarder.getNonce",
      "offset": [
        847,
        860
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "107": {
      "fn": "MinimalForwarder.getNonce",
      "offset": [
        847,
        860
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "108": {
      "fn": "MinimalForwarder.getNonce",
      "offset": [
        847,
        860
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "109": {
      "fn": "MinimalForwarder.getNonce",
      "offset": [
        847,
        860
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "110": {
      "fn": "MinimalForwarder.getNonce",
      "offset": [
        768,
        867
      ],
      "op": "JUMP",
      "path": "12"
    },
    "111": {
      "fn": "MinimalForwarder.getNonce",
      "offset": [
        768,
        867
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "112": {
      "fn": "MinimalForwarder.getNonce",
      "offset": [
        768,
        867
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "114": {
      "fn": "MinimalForwarder.getNonce",
      "offset": [
        768,
        867
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "115": {
      "op": "SWAP1"
    },
    "116": {
      "op": "DUP2"
    },
    "117": {
      "op": "MSTORE"
    },
    "118": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "120": {
      "op": "ADD"
    },
    "121": {
      "fn": "MinimalForwarder.getNonce",
      "offset": [
        768,
        867
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "122": {
      "fn": "MinimalForwarder.getNonce",
      "offset": [
        768,
        867
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "124": {
      "fn": "MinimalForwarder.getNonce",
      "offset": [
        768,
        867
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "125": {
      "fn": "MinimalForwarder.getNonce",
      "offset": [
        768,
        867
      ],
      "op": "DUP1",
      "path": "12"
    },
    "126": {
      "fn": "MinimalForwarder.getNonce",
      "offset": [
        768,
        867
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "127": {
      "fn": "MinimalForwarder.getNonce",
      "offset": [
        768,
        867
      ],
      "op": "SUB",
      "path": "12"
    },
    "128": {
      "fn": "MinimalForwarder.getNonce",
      "offset": [
        768,
        867
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "129": {
      "fn": "MinimalForwarder.getNonce",
      "offset": [
        768,
        867
      ],
      "op": "RETURN",
      "path": "12"
    },
    "130": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1241,
        1903
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "131": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1241,
        1903
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x95"
    },
    "134": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1241,
        1903
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x90"
    },
    "137": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1241,
        1903
      ],
      "op": "CALLDATASIZE",
      "path": "12"
    },
    "138": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1241,
        1903
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "140": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1241,
        1903
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x7D5"
    },
    "143": {
      "fn": "MinimalForwarder.execute",
      "jump": "i",
      "offset": [
        1241,
        1903
      ],
      "op": "JUMP",
      "path": "12"
    },
    "144": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1241,
        1903
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "145": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1241,
        1903
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xD3"
    },
    "148": {
      "fn": "MinimalForwarder.execute",
      "jump": "i",
      "offset": [
        1241,
        1903
      ],
      "op": "JUMP",
      "path": "12"
    },
    "149": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1241,
        1903
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "150": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1241,
        1903
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "152": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1241,
        1903
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "153": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1241,
        1903
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x79"
    },
    "156": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1241,
        1903
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "157": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1241,
        1903
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "158": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1241,
        1903
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "159": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1241,
        1903
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x8A4"
    },
    "162": {
      "fn": "MinimalForwarder.execute",
      "jump": "i",
      "offset": [
        1241,
        1903
      ],
      "op": "JUMP",
      "path": "12"
    },
    "163": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        873,
        1235
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "164": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        873,
        1235
      ],
      "op": "CALLVALUE",
      "path": "12"
    },
    "165": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        873,
        1235
      ],
      "op": "DUP1",
      "path": "12"
    },
    "166": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        873,
        1235
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "167": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        873,
        1235
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xAF"
    },
    "170": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        873,
        1235
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "171": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        873,
        1235
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "173": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        873,
        1235
      ],
      "op": "DUP1",
      "path": "12"
    },
    "174": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        873,
        1235
      ],
      "op": "REVERT",
      "path": "12"
    },
    "175": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        873,
        1235
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "176": {
      "op": "POP"
    },
    "177": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        873,
        1235
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xC3"
    },
    "180": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        873,
        1235
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xBE"
    },
    "183": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        873,
        1235
      ],
      "op": "CALLDATASIZE",
      "path": "12"
    },
    "184": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        873,
        1235
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "186": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        873,
        1235
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x7D5"
    },
    "189": {
      "fn": "MinimalForwarder.verify",
      "jump": "i",
      "offset": [
        873,
        1235
      ],
      "op": "JUMP",
      "path": "12"
    },
    "190": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        873,
        1235
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "191": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        873,
        1235
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x272"
    },
    "194": {
      "fn": "MinimalForwarder.verify",
      "jump": "i",
      "offset": [
        873,
        1235
      ],
      "op": "JUMP",
      "path": "12"
    },
    "195": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        873,
        1235
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "196": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        873,
        1235
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "198": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        873,
        1235
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "199": {
      "op": "SWAP1"
    },
    "200": {
      "op": "ISZERO"
    },
    "201": {
      "op": "ISZERO"
    },
    "202": {
      "op": "DUP2"
    },
    "203": {
      "op": "MSTORE"
    },
    "204": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "206": {
      "op": "ADD"
    },
    "207": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        873,
        1235
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x79"
    },
    "210": {
      "op": "JUMP"
    },
    "211": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1241,
        1903
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "212": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1361,
        1365
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "214": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1367,
        1379
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x60"
    },
    "216": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1403,
        1425
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 1,
      "value": "0xE2"
    },
    "219": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1410,
        1413
      ],
      "op": "DUP6",
      "path": "12"
    },
    "220": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1415,
        1424
      ],
      "op": "DUP6",
      "path": "12"
    },
    "221": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1415,
        1424
      ],
      "op": "DUP6",
      "path": "12"
    },
    "222": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1403,
        1409
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x272"
    },
    "225": {
      "fn": "MinimalForwarder.execute",
      "jump": "i",
      "offset": [
        1403,
        1425
      ],
      "op": "JUMP",
      "path": "12"
    },
    "226": {
      "branch": 18,
      "fn": "MinimalForwarder.execute",
      "offset": [
        1403,
        1425
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "227": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1395,
        1480
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x14E"
    },
    "230": {
      "branch": 18,
      "fn": "MinimalForwarder.execute",
      "offset": [
        1395,
        1480
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "231": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1395,
        1480
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "233": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1395,
        1480
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "234": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "238": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "240": {
      "op": "SHL"
    },
    "241": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1395,
        1480
      ],
      "op": "DUP2",
      "path": "12"
    },
    "242": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1395,
        1480
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "243": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "245": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1395,
        1480
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "247": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1395,
        1480
      ],
      "op": "DUP3",
      "path": "12"
    },
    "248": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1395,
        1480
      ],
      "op": "ADD",
      "path": "12"
    },
    "249": {
      "op": "MSTORE"
    },
    "250": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "252": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "254": {
      "op": "DUP3"
    },
    "255": {
      "op": "ADD"
    },
    "256": {
      "op": "MSTORE"
    },
    "257": {
      "op": "PUSH32",
      "value": "0x4D696E696D616C466F727761726465723A207369676E617475726520646F6573"
    },
    "290": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "292": {
      "op": "DUP3"
    },
    "293": {
      "op": "ADD"
    },
    "294": {
      "op": "MSTORE"
    },
    "295": {
      "op": "PUSH18",
      "value": "0x81B9BDD081B585D18DA081C995C5D595CDD"
    },
    "314": {
      "op": "PUSH1",
      "value": "0x72"
    },
    "316": {
      "op": "SHL"
    },
    "317": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "319": {
      "op": "DUP3"
    },
    "320": {
      "op": "ADD"
    },
    "321": {
      "op": "MSTORE"
    },
    "322": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "324": {
      "op": "ADD"
    },
    "325": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1395,
        1480
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "326": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1395,
        1480
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "328": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1395,
        1480
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "329": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1395,
        1480
      ],
      "op": "DUP1",
      "path": "12"
    },
    "330": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1395,
        1480
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "331": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1395,
        1480
      ],
      "op": "SUB",
      "path": "12"
    },
    "332": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1395,
        1480
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "333": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1395,
        1480
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "12"
    },
    "334": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1395,
        1480
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "335": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1510,
        1523
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 2,
      "value": "0x15D"
    },
    "338": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1510,
        1519
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x80"
    },
    "340": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1510,
        1519
      ],
      "op": "DUP7",
      "path": "12"
    },
    "341": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1510,
        1519
      ],
      "op": "ADD",
      "path": "12"
    },
    "342": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1510,
        1519
      ],
      "op": "CALLDATALOAD",
      "path": "12"
    },
    "343": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1522,
        1523
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "345": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1510,
        1523
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x8E0"
    },
    "348": {
      "fn": "MinimalForwarder.execute",
      "jump": "i",
      "offset": [
        1510,
        1523
      ],
      "op": "JUMP",
      "path": "12"
    },
    "349": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1510,
        1523
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "350": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1490,
        1497
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "352": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1490,
        1497
      ],
      "op": "DUP1",
      "path": "12"
    },
    "353": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1498,
        1506
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x16D"
    },
    "356": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1498,
        1506
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "358": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1498,
        1506
      ],
      "op": "DUP10",
      "path": "12"
    },
    "359": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1498,
        1506
      ],
      "op": "ADD",
      "path": "12"
    },
    "360": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1498,
        1501
      ],
      "op": "DUP10",
      "path": "12"
    },
    "361": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1498,
        1506
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x7A5"
    },
    "364": {
      "fn": "MinimalForwarder.execute",
      "jump": "i",
      "offset": [
        1498,
        1506
      ],
      "op": "JUMP",
      "path": "12"
    },
    "365": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1498,
        1506
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "366": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "368": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "370": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "372": {
      "op": "SHL"
    },
    "373": {
      "op": "SUB"
    },
    "374": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1490,
        1507
      ],
      "op": "AND",
      "path": "12"
    },
    "375": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "377": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "379": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "381": {
      "op": "SHL"
    },
    "382": {
      "op": "SUB"
    },
    "383": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1490,
        1507
      ],
      "op": "AND",
      "path": "12"
    },
    "384": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1490,
        1507
      ],
      "op": "DUP2",
      "path": "12"
    },
    "385": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1490,
        1507
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "386": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1490,
        1507
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "388": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1490,
        1507
      ],
      "op": "ADD",
      "path": "12"
    },
    "389": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1490,
        1507
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "390": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1490,
        1507
      ],
      "op": "DUP2",
      "path": "12"
    },
    "391": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1490,
        1507
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "392": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1490,
        1507
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "394": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1490,
        1507
      ],
      "op": "ADD",
      "path": "12"
    },
    "395": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1490,
        1507
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "397": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1490,
        1507
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "398": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1490,
        1523
      ],
      "op": "DUP2",
      "path": "12"
    },
    "399": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1490,
        1523
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "400": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1490,
        1523
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "401": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1490,
        1523
      ],
      "op": "POP",
      "path": "12"
    },
    "402": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1535,
        1547
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "404": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1549,
        1572
      ],
      "op": "DUP1",
      "path": "12"
    },
    "405": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1576,
        1579
      ],
      "op": "DUP7",
      "path": "12"
    },
    "406": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1576,
        1582
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "408": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1576,
        1582
      ],
      "op": "ADD",
      "path": "12"
    },
    "409": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1576,
        1582
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "411": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1576,
        1582
      ],
      "op": "DUP2",
      "path": "12"
    },
    "412": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1576,
        1582
      ],
      "op": "ADD",
      "path": "12"
    },
    "413": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1576,
        1582
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "414": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1576,
        1582
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1A7"
    },
    "417": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1576,
        1582
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "418": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1576,
        1582
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "419": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1576,
        1582
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x7A5"
    },
    "422": {
      "fn": "MinimalForwarder.execute",
      "jump": "i",
      "offset": [
        1576,
        1582
      ],
      "op": "JUMP",
      "path": "12"
    },
    "423": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1576,
        1582
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "424": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "426": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "428": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "430": {
      "op": "SHL"
    },
    "431": {
      "op": "SUB"
    },
    "432": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1576,
        1587
      ],
      "op": "AND",
      "path": "12"
    },
    "433": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1593,
        1600
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x60"
    },
    "435": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1593,
        1600
      ],
      "op": "DUP9",
      "path": "12"
    },
    "436": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1593,
        1600
      ],
      "op": "ADD",
      "path": "12"
    },
    "437": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1593,
        1600
      ],
      "op": "CALLDATALOAD",
      "path": "12"
    },
    "438": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1609,
        1618
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "440": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1609,
        1618
      ],
      "op": "DUP10",
      "path": "12"
    },
    "441": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1609,
        1618
      ],
      "op": "ADD",
      "path": "12"
    },
    "442": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1609,
        1618
      ],
      "op": "CALLDATALOAD",
      "path": "12"
    },
    "443": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1650,
        1658
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1C7"
    },
    "446": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1650,
        1658
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xA0"
    },
    "448": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1650,
        1658
      ],
      "op": "DUP12",
      "path": "12"
    },
    "449": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1650,
        1658
      ],
      "op": "ADD",
      "path": "12"
    },
    "450": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1593,
        1596
      ],
      "op": "DUP12",
      "path": "12"
    },
    "451": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1650,
        1658
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x906"
    },
    "454": {
      "fn": "MinimalForwarder.execute",
      "jump": "i",
      "offset": [
        1650,
        1658
      ],
      "op": "JUMP",
      "path": "12"
    },
    "455": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1650,
        1658
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "456": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1660,
        1668
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1D4"
    },
    "459": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1660,
        1668
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "461": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1660,
        1668
      ],
      "op": "DUP14",
      "path": "12"
    },
    "462": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1660,
        1668
      ],
      "op": "ADD",
      "path": "12"
    },
    "463": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1660,
        1663
      ],
      "op": "DUP14",
      "path": "12"
    },
    "464": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1660,
        1668
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x7A5"
    },
    "467": {
      "fn": "MinimalForwarder.execute",
      "jump": "i",
      "offset": [
        1660,
        1668
      ],
      "op": "JUMP",
      "path": "12"
    },
    "468": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1660,
        1668
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "469": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1633,
        1669
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "471": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1633,
        1669
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "472": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1633,
        1669
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "474": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1633,
        1669
      ],
      "op": "ADD",
      "path": "12"
    },
    "475": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1633,
        1669
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1E6"
    },
    "478": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1633,
        1669
      ],
      "op": "SWAP4",
      "path": "12"
    },
    "479": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1633,
        1669
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "480": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1633,
        1669
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "481": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1633,
        1669
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "482": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1633,
        1669
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x954"
    },
    "485": {
      "fn": "MinimalForwarder.execute",
      "jump": "i",
      "offset": [
        1633,
        1669
      ],
      "op": "JUMP",
      "path": "12"
    },
    "486": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1633,
        1669
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "487": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1633,
        1669
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "489": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1633,
        1669
      ],
      "op": "DUP1",
      "path": "12"
    },
    "490": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1633,
        1669
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "491": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "493": {
      "op": "NOT"
    },
    "494": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1633,
        1669
      ],
      "op": "DUP2",
      "path": "12"
    },
    "495": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1633,
        1669
      ],
      "op": "DUP5",
      "path": "12"
    },
    "496": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1633,
        1669
      ],
      "op": "SUB",
      "path": "12"
    },
    "497": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1633,
        1669
      ],
      "op": "ADD",
      "path": "12"
    },
    "498": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1633,
        1669
      ],
      "op": "DUP2",
      "path": "12"
    },
    "499": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1633,
        1669
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "500": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1633,
        1669
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "501": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1633,
        1669
      ],
      "op": "DUP3",
      "path": "12"
    },
    "502": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1633,
        1669
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "503": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1633,
        1669
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "504": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1576,
        1679
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x200"
    },
    "507": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1576,
        1679
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "508": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1576,
        1679
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x97A"
    },
    "511": {
      "fn": "MinimalForwarder.execute",
      "jump": "i",
      "offset": [
        1576,
        1679
      ],
      "op": "JUMP",
      "path": "12"
    },
    "512": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1576,
        1679
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "513": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1576,
        1679
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "515": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1576,
        1679
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "517": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1576,
        1679
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "518": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1576,
        1679
      ],
      "op": "DUP1",
      "path": "12"
    },
    "519": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1576,
        1679
      ],
      "op": "DUP4",
      "path": "12"
    },
    "520": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1576,
        1679
      ],
      "op": "SUB",
      "path": "12"
    },
    "521": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1576,
        1679
      ],
      "op": "DUP2",
      "path": "12"
    },
    "522": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1576,
        1679
      ],
      "op": "DUP6",
      "path": "12"
    },
    "523": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1576,
        1679
      ],
      "op": "DUP9",
      "path": "12"
    },
    "524": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1576,
        1679
      ],
      "op": "DUP9",
      "path": "12"
    },
    "525": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1576,
        1679
      ],
      "op": "CALL",
      "path": "12"
    },
    "526": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1576,
        1679
      ],
      "op": "SWAP4",
      "path": "12"
    },
    "527": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1576,
        1679
      ],
      "op": "POP",
      "path": "12"
    },
    "528": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1576,
        1679
      ],
      "op": "POP",
      "path": "12"
    },
    "529": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1576,
        1679
      ],
      "op": "POP",
      "path": "12"
    },
    "530": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1576,
        1679
      ],
      "op": "POP",
      "path": "12"
    },
    "531": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1576,
        1679
      ],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "532": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1576,
        1679
      ],
      "op": "DUP1",
      "path": "12"
    },
    "533": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1576,
        1679
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "535": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1576,
        1679
      ],
      "op": "DUP2",
      "path": "12"
    },
    "536": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1576,
        1679
      ],
      "op": "EQ",
      "path": "12"
    },
    "537": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1576,
        1679
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x23E"
    },
    "540": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1576,
        1679
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "541": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1576,
        1679
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "543": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1576,
        1679
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "544": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1576,
        1679
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "545": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1576,
        1679
      ],
      "op": "POP",
      "path": "12"
    },
    "546": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1576,
        1679
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1F"
    },
    "548": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1576,
        1679
      ],
      "op": "NOT",
      "path": "12"
    },
    "549": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1576,
        1679
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x3F"
    },
    "551": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1576,
        1679
      ],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "552": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1576,
        1679
      ],
      "op": "ADD",
      "path": "12"
    },
    "553": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1576,
        1679
      ],
      "op": "AND",
      "path": "12"
    },
    "554": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1576,
        1679
      ],
      "op": "DUP3",
      "path": "12"
    },
    "555": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1576,
        1679
      ],
      "op": "ADD",
      "path": "12"
    },
    "556": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1576,
        1679
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "558": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1576,
        1679
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "559": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1576,
        1679
      ],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "560": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1576,
        1679
      ],
      "op": "DUP3",
      "path": "12"
    },
    "561": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1576,
        1679
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "562": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1576,
        1679
      ],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "563": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1576,
        1679
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "565": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1576,
        1679
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "567": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1576,
        1679
      ],
      "op": "DUP5",
      "path": "12"
    },
    "568": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1576,
        1679
      ],
      "op": "ADD",
      "path": "12"
    },
    "569": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1576,
        1679
      ],
      "op": "RETURNDATACOPY",
      "path": "12"
    },
    "570": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1576,
        1679
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x243"
    },
    "573": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1576,
        1679
      ],
      "op": "JUMP",
      "path": "12"
    },
    "574": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1576,
        1679
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "575": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1576,
        1679
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x60"
    },
    "577": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1576,
        1679
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "578": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1576,
        1679
      ],
      "op": "POP",
      "path": "12"
    },
    "579": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1576,
        1679
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "580": {
      "op": "POP"
    },
    "581": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1534,
        1679
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "582": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1534,
        1679
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "583": {
      "op": "POP"
    },
    "584": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1534,
        1679
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "585": {
      "op": "POP"
    },
    "586": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1844,
        1856
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 3,
      "value": "0x258"
    },
    "589": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1854,
        1856
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x3F"
    },
    "591": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1844,
        1851
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x60"
    },
    "593": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1844,
        1851
      ],
      "op": "DUP10",
      "path": "12"
    },
    "594": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1844,
        1851
      ],
      "op": "ADD",
      "path": "12"
    },
    "595": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1844,
        1851
      ],
      "op": "CALLDATALOAD",
      "path": "12"
    },
    "596": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1844,
        1856
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x996"
    },
    "599": {
      "fn": "MinimalForwarder.execute",
      "jump": "i",
      "offset": [
        1844,
        1856
      ],
      "op": "JUMP",
      "path": "12"
    },
    "600": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1844,
        1856
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "601": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1832,
        1841
      ],
      "op": "GAS",
      "path": "12"
    },
    "602": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1832,
        1856
      ],
      "op": "GT",
      "path": "12"
    },
    "603": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1825,
        1857
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x266"
    },
    "606": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1825,
        1857
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "607": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1825,
        1857
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x266"
    },
    "610": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1825,
        1857
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x9B8"
    },
    "613": {
      "fn": "MinimalForwarder.execute",
      "jump": "i",
      "offset": [
        1825,
        1857
      ],
      "op": "JUMP",
      "path": "12"
    },
    "614": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1825,
        1857
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "615": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1876,
        1883
      ],
      "op": "SWAP1",
      "path": "12",
      "statement": 4
    },
    "616": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1876,
        1883
      ],
      "op": "SWAP7",
      "path": "12"
    },
    "617": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1876,
        1883
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "618": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1876,
        1883
      ],
      "op": "SWAP6",
      "path": "12"
    },
    "619": {
      "op": "POP"
    },
    "620": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1241,
        1903
      ],
      "op": "SWAP4",
      "path": "12"
    },
    "621": {
      "op": "POP"
    },
    "622": {
      "op": "POP"
    },
    "623": {
      "op": "POP"
    },
    "624": {
      "op": "POP"
    },
    "625": {
      "fn": "MinimalForwarder.execute",
      "jump": "o",
      "offset": [
        1241,
        1903
      ],
      "op": "JUMP",
      "path": "12"
    },
    "626": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        873,
        1235
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "627": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        965,
        969
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "629": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        981,
        995
      ],
      "op": "DUP1",
      "path": "12"
    },
    "630": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        998,
        1159
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x385"
    },
    "633": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1149,
        1158
      ],
      "op": "DUP5",
      "path": "12"
    },
    "634": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1149,
        1158
      ],
      "op": "DUP5",
      "path": "12"
    },
    "635": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        998,
        1159
      ],
      "op": "DUP1",
      "path": "12"
    },
    "636": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        998,
        1159
      ],
      "op": "DUP1",
      "path": "12"
    },
    "637": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        998,
        1159
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1F"
    },
    "639": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        998,
        1159
      ],
      "op": "ADD",
      "path": "12"
    },
    "640": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        998,
        1159
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "642": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        998,
        1159
      ],
      "op": "DUP1",
      "path": "12"
    },
    "643": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        998,
        1159
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "644": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        998,
        1159
      ],
      "op": "DIV",
      "path": "12"
    },
    "645": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        998,
        1159
      ],
      "op": "MUL",
      "path": "12"
    },
    "646": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        998,
        1159
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "648": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        998,
        1159
      ],
      "op": "ADD",
      "path": "12"
    },
    "649": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        998,
        1159
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "651": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        998,
        1159
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "652": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        998,
        1159
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "653": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        998,
        1159
      ],
      "op": "DUP2",
      "path": "12"
    },
    "654": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        998,
        1159
      ],
      "op": "ADD",
      "path": "12"
    },
    "655": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        998,
        1159
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "657": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        998,
        1159
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "658": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        998,
        1159
      ],
      "op": "DUP1",
      "path": "12"
    },
    "659": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        998,
        1159
      ],
      "op": "SWAP4",
      "path": "12"
    },
    "660": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        998,
        1159
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "661": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        998,
        1159
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "662": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        998,
        1159
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "663": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        998,
        1159
      ],
      "op": "DUP2",
      "path": "12"
    },
    "664": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        998,
        1159
      ],
      "op": "DUP2",
      "path": "12"
    },
    "665": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        998,
        1159
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "666": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        998,
        1159
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "668": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        998,
        1159
      ],
      "op": "ADD",
      "path": "12"
    },
    "669": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        998,
        1159
      ],
      "op": "DUP4",
      "path": "12"
    },
    "670": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        998,
        1159
      ],
      "op": "DUP4",
      "path": "12"
    },
    "671": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        998,
        1159
      ],
      "op": "DUP1",
      "path": "12"
    },
    "672": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        998,
        1159
      ],
      "op": "DUP3",
      "path": "12"
    },
    "673": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        998,
        1159
      ],
      "op": "DUP5",
      "path": "12"
    },
    "674": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        998,
        1159
      ],
      "op": "CALLDATACOPY",
      "path": "12"
    },
    "675": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        998,
        1159
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "677": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        998,
        1159
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "678": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        998,
        1159
      ],
      "op": "ADD",
      "path": "12"
    },
    "679": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        998,
        1159
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "680": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        998,
        1159
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "681": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        998,
        1159
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "682": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        998,
        1159
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "683": {
      "op": "POP"
    },
    "684": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        998,
        1140
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x37F"
    },
    "687": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        998,
        1140
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "688": {
      "op": "POP"
    },
    "689": {
      "offset": [
        550,
        653
      ],
      "op": "PUSH32",
      "path": "12",
      "value": "0xDD8F4B70B0F4393E889BD39128A30628A78B61816A9EB8199759E7A349657E48"
    },
    "722": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        550,
        653
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "723": {
      "op": "POP"
    },
    "724": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1060,
        1068
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2E2"
    },
    "727": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1060,
        1068
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "728": {
      "op": "POP"
    },
    "729": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1060,
        1068
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "731": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1060,
        1068
      ],
      "op": "DUP11",
      "path": "12"
    },
    "732": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1060,
        1068
      ],
      "op": "ADD",
      "path": "12"
    },
    "733": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1060,
        1063
      ],
      "op": "DUP11",
      "path": "12"
    },
    "734": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1060,
        1068
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x7A5"
    },
    "737": {
      "fn": "MinimalForwarder.verify",
      "jump": "i",
      "offset": [
        1060,
        1068
      ],
      "op": "JUMP",
      "path": "12"
    },
    "738": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1060,
        1068
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "739": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1070,
        1076
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2F2"
    },
    "742": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1070,
        1076
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "744": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1070,
        1076
      ],
      "op": "DUP12",
      "path": "12"
    },
    "745": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1070,
        1076
      ],
      "op": "ADD",
      "path": "12"
    },
    "746": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1070,
        1076
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "748": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1070,
        1076
      ],
      "op": "DUP13",
      "path": "12"
    },
    "749": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1070,
        1076
      ],
      "op": "ADD",
      "path": "12"
    },
    "750": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1070,
        1076
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x7A5"
    },
    "753": {
      "fn": "MinimalForwarder.verify",
      "jump": "i",
      "offset": [
        1070,
        1076
      ],
      "op": "JUMP",
      "path": "12"
    },
    "754": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1070,
        1076
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "755": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1078,
        1087
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "757": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1078,
        1087
      ],
      "op": "DUP12",
      "path": "12"
    },
    "758": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1078,
        1087
      ],
      "op": "ADD",
      "path": "12"
    },
    "759": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1078,
        1087
      ],
      "op": "CALLDATALOAD",
      "path": "12"
    },
    "760": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1089,
        1096
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x60"
    },
    "762": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1089,
        1096
      ],
      "op": "DUP13",
      "path": "12"
    },
    "763": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1089,
        1096
      ],
      "op": "ADD",
      "path": "12"
    },
    "764": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1089,
        1096
      ],
      "op": "CALLDATALOAD",
      "path": "12"
    },
    "765": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1098,
        1107
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x80"
    },
    "767": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1098,
        1107
      ],
      "op": "DUP14",
      "path": "12"
    },
    "768": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1098,
        1107
      ],
      "op": "ADD",
      "path": "12"
    },
    "769": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1098,
        1107
      ],
      "op": "CALLDATALOAD",
      "path": "12"
    },
    "770": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1119,
        1127
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x30E"
    },
    "773": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1119,
        1127
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xA0"
    },
    "775": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1119,
        1127
      ],
      "op": "DUP16",
      "path": "12"
    },
    "776": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1119,
        1127
      ],
      "op": "ADD",
      "path": "12"
    },
    "777": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1078,
        1081
      ],
      "op": "DUP16",
      "path": "12"
    },
    "778": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1119,
        1127
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x906"
    },
    "781": {
      "fn": "MinimalForwarder.verify",
      "jump": "i",
      "offset": [
        1119,
        1127
      ],
      "op": "JUMP",
      "path": "12"
    },
    "782": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1119,
        1127
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "783": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1109,
        1128
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "785": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1109,
        1128
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "786": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1109,
        1128
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x31C"
    },
    "789": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1109,
        1128
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "790": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1109,
        1128
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "791": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1109,
        1128
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "792": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1109,
        1128
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x9CE"
    },
    "795": {
      "fn": "MinimalForwarder.verify",
      "jump": "i",
      "offset": [
        1109,
        1128
      ],
      "op": "JUMP",
      "path": "12"
    },
    "796": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1109,
        1128
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "797": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1109,
        1128
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "799": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1109,
        1128
      ],
      "op": "DUP1",
      "path": "12"
    },
    "800": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1109,
        1128
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "801": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1109,
        1128
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "802": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1109,
        1128
      ],
      "op": "DUP3",
      "path": "12"
    },
    "803": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1109,
        1128
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "804": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1109,
        1128
      ],
      "op": "SUB",
      "path": "12"
    },
    "805": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1109,
        1128
      ],
      "op": "DUP3",
      "path": "12"
    },
    "806": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1109,
        1128
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "807": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1038,
        1129
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "809": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1038,
        1129
      ],
      "op": "DUP4",
      "path": "12"
    },
    "810": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1038,
        1129
      ],
      "op": "ADD",
      "path": "12"
    },
    "811": {
      "op": "SWAP9"
    },
    "812": {
      "op": "SWAP1"
    },
    "813": {
      "op": "SWAP9"
    },
    "814": {
      "op": "MSTORE"
    },
    "815": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "817": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "819": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "821": {
      "op": "SHL"
    },
    "822": {
      "op": "SUB"
    },
    "823": {
      "op": "SWAP7"
    },
    "824": {
      "op": "DUP8"
    },
    "825": {
      "op": "AND"
    },
    "826": {
      "op": "SWAP1"
    },
    "827": {
      "op": "DUP3"
    },
    "828": {
      "op": "ADD"
    },
    "829": {
      "op": "MSTORE"
    },
    "830": {
      "op": "SWAP5"
    },
    "831": {
      "op": "SWAP1"
    },
    "832": {
      "op": "SWAP4"
    },
    "833": {
      "op": "AND"
    },
    "834": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "836": {
      "op": "DUP6"
    },
    "837": {
      "op": "ADD"
    },
    "838": {
      "op": "MSTORE"
    },
    "839": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "841": {
      "op": "DUP5"
    },
    "842": {
      "op": "ADD"
    },
    "843": {
      "op": "SWAP2"
    },
    "844": {
      "op": "SWAP1"
    },
    "845": {
      "op": "SWAP2"
    },
    "846": {
      "op": "MSTORE"
    },
    "847": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "849": {
      "op": "DUP4"
    },
    "850": {
      "op": "ADD"
    },
    "851": {
      "op": "MSTORE"
    },
    "852": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "854": {
      "op": "DUP3"
    },
    "855": {
      "op": "ADD"
    },
    "856": {
      "op": "MSTORE"
    },
    "857": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "859": {
      "op": "DUP2"
    },
    "860": {
      "op": "ADD"
    },
    "861": {
      "op": "SWAP2"
    },
    "862": {
      "op": "SWAP1"
    },
    "863": {
      "op": "SWAP2"
    },
    "864": {
      "op": "MSTORE"
    },
    "865": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "868": {
      "op": "ADD"
    },
    "869": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1038,
        1129
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "871": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1038,
        1129
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "872": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1038,
        1129
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "874": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1038,
        1129
      ],
      "op": "DUP2",
      "path": "12"
    },
    "875": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1038,
        1129
      ],
      "op": "DUP4",
      "path": "12"
    },
    "876": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1038,
        1129
      ],
      "op": "SUB",
      "path": "12"
    },
    "877": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1038,
        1129
      ],
      "op": "SUB",
      "path": "12"
    },
    "878": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1038,
        1129
      ],
      "op": "DUP2",
      "path": "12"
    },
    "879": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1038,
        1129
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "880": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1038,
        1129
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "881": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1038,
        1129
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "883": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1038,
        1129
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "884": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1028,
        1130
      ],
      "op": "DUP1",
      "path": "12"
    },
    "885": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1028,
        1130
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "886": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1028,
        1130
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "887": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1028,
        1130
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "889": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1028,
        1130
      ],
      "op": "ADD",
      "path": "12"
    },
    "890": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1028,
        1130
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "891": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        998,
        1014
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3F0"
    },
    "894": {
      "fn": "MinimalForwarder.verify",
      "jump": "i",
      "offset": [
        998,
        1140
      ],
      "op": "JUMP",
      "path": "12"
    },
    "895": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        998,
        1140
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "896": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        998,
        1148
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "897": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        998,
        1148
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x444"
    },
    "900": {
      "fn": "MinimalForwarder.verify",
      "jump": "i",
      "offset": [
        998,
        1159
      ],
      "op": "JUMP",
      "path": "12"
    },
    "901": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        998,
        1159
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "902": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        981,
        1159
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "903": {
      "op": "POP"
    },
    "904": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1197,
        1206
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 5,
      "value": "0x80"
    },
    "906": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1197,
        1206
      ],
      "op": "DUP6",
      "path": "12"
    },
    "907": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1197,
        1206
      ],
      "op": "ADD",
      "path": "12"
    },
    "908": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1197,
        1206
      ],
      "op": "CALLDATALOAD",
      "path": "12"
    },
    "909": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1176,
        1183
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "911": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1176,
        1183
      ],
      "op": "DUP1",
      "path": "12"
    },
    "912": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1184,
        1192
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x39C"
    },
    "915": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1184,
        1192
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "917": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1184,
        1192
      ],
      "op": "DUP10",
      "path": "12"
    },
    "918": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1184,
        1192
      ],
      "op": "ADD",
      "path": "12"
    },
    "919": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1197,
        1200
      ],
      "op": "DUP10",
      "path": "12"
    },
    "920": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1184,
        1192
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x7A5"
    },
    "923": {
      "fn": "MinimalForwarder.verify",
      "jump": "i",
      "offset": [
        1184,
        1192
      ],
      "op": "JUMP",
      "path": "12"
    },
    "924": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1184,
        1192
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "925": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "927": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "929": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "931": {
      "op": "SHL"
    },
    "932": {
      "op": "SUB"
    },
    "933": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1176,
        1193
      ],
      "op": "AND",
      "path": "12"
    },
    "934": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "936": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "938": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "940": {
      "op": "SHL"
    },
    "941": {
      "op": "SUB"
    },
    "942": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1176,
        1193
      ],
      "op": "AND",
      "path": "12"
    },
    "943": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1176,
        1193
      ],
      "op": "DUP2",
      "path": "12"
    },
    "944": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1176,
        1193
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "945": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1176,
        1193
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "947": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1176,
        1193
      ],
      "op": "ADD",
      "path": "12"
    },
    "948": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1176,
        1193
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "949": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1176,
        1193
      ],
      "op": "DUP2",
      "path": "12"
    },
    "950": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1176,
        1193
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "951": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1176,
        1193
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "953": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1176,
        1193
      ],
      "op": "ADD",
      "path": "12"
    },
    "954": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1176,
        1193
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "956": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1176,
        1193
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "957": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1176,
        1193
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "958": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1176,
        1206
      ],
      "op": "EQ",
      "path": "12"
    },
    "959": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1176,
        1228
      ],
      "op": "DUP1",
      "path": "12"
    },
    "960": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1176,
        1228
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "961": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1176,
        1228
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3E7"
    },
    "964": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1176,
        1228
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "965": {
      "op": "POP"
    },
    "966": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1220,
        1228
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3D2"
    },
    "969": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1220,
        1228
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "971": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1220,
        1228
      ],
      "op": "DUP7",
      "path": "12"
    },
    "972": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1220,
        1228
      ],
      "op": "ADD",
      "path": "12"
    },
    "973": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1220,
        1223
      ],
      "op": "DUP7",
      "path": "12"
    },
    "974": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1220,
        1228
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x7A5"
    },
    "977": {
      "fn": "MinimalForwarder.verify",
      "jump": "i",
      "offset": [
        1220,
        1228
      ],
      "op": "JUMP",
      "path": "12"
    },
    "978": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1220,
        1228
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "979": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "981": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "983": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "985": {
      "op": "SHL"
    },
    "986": {
      "op": "SUB"
    },
    "987": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1210,
        1228
      ],
      "op": "AND",
      "path": "12"
    },
    "988": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1210,
        1216
      ],
      "op": "DUP2",
      "path": "12"
    },
    "989": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "991": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "993": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "995": {
      "op": "SHL"
    },
    "996": {
      "op": "SUB"
    },
    "997": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1210,
        1228
      ],
      "op": "AND",
      "path": "12"
    },
    "998": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1210,
        1228
      ],
      "op": "EQ",
      "path": "12"
    },
    "999": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1176,
        1228
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1000": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1169,
        1228
      ],
      "op": "SWAP6",
      "path": "12"
    },
    "1001": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        873,
        1235
      ],
      "op": "SWAP5",
      "path": "12"
    },
    "1002": {
      "op": "POP"
    },
    "1003": {
      "op": "POP"
    },
    "1004": {
      "op": "POP"
    },
    "1005": {
      "op": "POP"
    },
    "1006": {
      "op": "POP"
    },
    "1007": {
      "fn": "MinimalForwarder.verify",
      "jump": "o",
      "offset": [
        873,
        1235
      ],
      "op": "JUMP",
      "path": "12"
    },
    "1008": {
      "fn": "EIP712._hashTypedDataV4",
      "offset": [
        4153,
        4318
      ],
      "op": "JUMPDEST",
      "path": "155"
    },
    "1009": {
      "fn": "EIP712._hashTypedDataV4",
      "offset": [
        4230,
        4237
      ],
      "op": "PUSH1",
      "path": "155",
      "value": "0x0"
    },
    "1011": {
      "fn": "EIP712._hashTypedDataV4",
      "offset": [
        4256,
        4311
      ],
      "op": "PUSH2",
      "path": "155",
      "statement": 6,
      "value": "0x43E"
    },
    "1014": {
      "fn": "EIP712._hashTypedDataV4",
      "offset": [
        4278,
        4298
      ],
      "op": "PUSH2",
      "path": "155",
      "value": "0x3FD"
    },
    "1017": {
      "fn": "EIP712._hashTypedDataV4",
      "offset": [
        4278,
        4296
      ],
      "op": "PUSH2",
      "path": "155",
      "value": "0x4E8"
    },
    "1020": {
      "fn": "EIP712._hashTypedDataV4",
      "jump": "i",
      "offset": [
        4278,
        4298
      ],
      "op": "JUMP",
      "path": "155"
    },
    "1021": {
      "fn": "EIP712._hashTypedDataV4",
      "offset": [
        4278,
        4298
      ],
      "op": "JUMPDEST",
      "path": "155"
    },
    "1022": {
      "fn": "EIP712._hashTypedDataV4",
      "offset": [
        4300,
        4310
      ],
      "op": "DUP4",
      "path": "155"
    },
    "1023": {
      "fn": "ECDSA.toTypedDataHash",
      "offset": [
        5774,
        5831
      ],
      "op": "PUSH1",
      "path": "152",
      "statement": 7,
      "value": "0x40"
    },
    "1025": {
      "fn": "ECDSA.toTypedDataHash",
      "offset": [
        5774,
        5831
      ],
      "op": "MLOAD",
      "path": "152"
    },
    "1026": {
      "op": "PUSH2",
      "value": "0x1901"
    },
    "1029": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "1031": {
      "op": "SHL"
    },
    "1032": {
      "fn": "ECDSA.toTypedDataHash",
      "offset": [
        5774,
        5831
      ],
      "op": "PUSH1",
      "path": "152",
      "value": "0x20"
    },
    "1034": {
      "fn": "ECDSA.toTypedDataHash",
      "offset": [
        5774,
        5831
      ],
      "op": "DUP3",
      "path": "152"
    },
    "1035": {
      "fn": "ECDSA.toTypedDataHash",
      "offset": [
        5774,
        5831
      ],
      "op": "ADD",
      "path": "152"
    },
    "1036": {
      "op": "MSTORE"
    },
    "1037": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "1039": {
      "op": "DUP2"
    },
    "1040": {
      "op": "ADD"
    },
    "1041": {
      "op": "DUP4"
    },
    "1042": {
      "op": "SWAP1"
    },
    "1043": {
      "op": "MSTORE"
    },
    "1044": {
      "op": "PUSH1",
      "value": "0x42"
    },
    "1046": {
      "op": "DUP2"
    },
    "1047": {
      "op": "ADD"
    },
    "1048": {
      "op": "DUP3"
    },
    "1049": {
      "op": "SWAP1"
    },
    "1050": {
      "op": "MSTORE"
    },
    "1051": {
      "fn": "ECDSA.toTypedDataHash",
      "offset": [
        5738,
        5745
      ],
      "op": "PUSH1",
      "path": "152",
      "value": "0x0"
    },
    "1053": {
      "fn": "ECDSA.toTypedDataHash",
      "offset": [
        5738,
        5745
      ],
      "op": "SWAP1",
      "path": "152"
    },
    "1054": {
      "op": "PUSH1",
      "value": "0x62"
    },
    "1056": {
      "op": "ADD"
    },
    "1057": {
      "fn": "ECDSA.toTypedDataHash",
      "offset": [
        5774,
        5831
      ],
      "op": "PUSH1",
      "path": "152",
      "value": "0x40"
    },
    "1059": {
      "fn": "ECDSA.toTypedDataHash",
      "offset": [
        5774,
        5831
      ],
      "op": "MLOAD",
      "path": "152"
    },
    "1060": {
      "fn": "ECDSA.toTypedDataHash",
      "offset": [
        5774,
        5831
      ],
      "op": "PUSH1",
      "path": "152",
      "value": "0x20"
    },
    "1062": {
      "fn": "ECDSA.toTypedDataHash",
      "offset": [
        5774,
        5831
      ],
      "op": "DUP2",
      "path": "152"
    },
    "1063": {
      "fn": "ECDSA.toTypedDataHash",
      "offset": [
        5774,
        5831
      ],
      "op": "DUP4",
      "path": "152"
    },
    "1064": {
      "fn": "ECDSA.toTypedDataHash",
      "offset": [
        5774,
        5831
      ],
      "op": "SUB",
      "path": "152"
    },
    "1065": {
      "fn": "ECDSA.toTypedDataHash",
      "offset": [
        5774,
        5831
      ],
      "op": "SUB",
      "path": "152"
    },
    "1066": {
      "fn": "ECDSA.toTypedDataHash",
      "offset": [
        5774,
        5831
      ],
      "op": "DUP2",
      "path": "152"
    },
    "1067": {
      "fn": "ECDSA.toTypedDataHash",
      "offset": [
        5774,
        5831
      ],
      "op": "MSTORE",
      "path": "152"
    },
    "1068": {
      "fn": "ECDSA.toTypedDataHash",
      "offset": [
        5774,
        5831
      ],
      "op": "SWAP1",
      "path": "152"
    },
    "1069": {
      "fn": "ECDSA.toTypedDataHash",
      "offset": [
        5774,
        5831
      ],
      "op": "PUSH1",
      "path": "152",
      "value": "0x40"
    },
    "1071": {
      "fn": "ECDSA.toTypedDataHash",
      "offset": [
        5774,
        5831
      ],
      "op": "MSTORE",
      "path": "152"
    },
    "1072": {
      "fn": "ECDSA.toTypedDataHash",
      "offset": [
        5764,
        5832
      ],
      "op": "DUP1",
      "path": "152"
    },
    "1073": {
      "fn": "ECDSA.toTypedDataHash",
      "offset": [
        5764,
        5832
      ],
      "op": "MLOAD",
      "path": "152"
    },
    "1074": {
      "fn": "ECDSA.toTypedDataHash",
      "offset": [
        5764,
        5832
      ],
      "op": "SWAP1",
      "path": "152"
    },
    "1075": {
      "fn": "ECDSA.toTypedDataHash",
      "offset": [
        5764,
        5832
      ],
      "op": "PUSH1",
      "path": "152",
      "value": "0x20"
    },
    "1077": {
      "fn": "ECDSA.toTypedDataHash",
      "offset": [
        5764,
        5832
      ],
      "op": "ADD",
      "path": "152"
    },
    "1078": {
      "fn": "ECDSA.toTypedDataHash",
      "offset": [
        5764,
        5832
      ],
      "op": "KECCAK256",
      "path": "152"
    },
    "1079": {
      "fn": "ECDSA.toTypedDataHash",
      "offset": [
        5757,
        5832
      ],
      "op": "SWAP1",
      "path": "152"
    },
    "1080": {
      "fn": "ECDSA.toTypedDataHash",
      "offset": [
        5757,
        5832
      ],
      "op": "POP",
      "path": "152"
    },
    "1081": {
      "fn": "ECDSA.toTypedDataHash",
      "offset": [
        5645,
        5839
      ],
      "op": "SWAP3",
      "path": "152"
    },
    "1082": {
      "fn": "ECDSA.toTypedDataHash",
      "offset": [
        5645,
        5839
      ],
      "op": "SWAP2",
      "path": "152"
    },
    "1083": {
      "fn": "ECDSA.toTypedDataHash",
      "offset": [
        5645,
        5839
      ],
      "op": "POP",
      "path": "152"
    },
    "1084": {
      "fn": "ECDSA.toTypedDataHash",
      "offset": [
        5645,
        5839
      ],
      "op": "POP",
      "path": "152"
    },
    "1085": {
      "fn": "ECDSA.toTypedDataHash",
      "offset": [
        5645,
        5839
      ],
      "op": "JUMP",
      "path": "152"
    },
    "1086": {
      "fn": "EIP712._hashTypedDataV4",
      "offset": [
        4256,
        4311
      ],
      "op": "JUMPDEST",
      "path": "155"
    },
    "1087": {
      "fn": "EIP712._hashTypedDataV4",
      "offset": [
        4249,
        4311
      ],
      "op": "SWAP3",
      "path": "155"
    },
    "1088": {
      "fn": "EIP712._hashTypedDataV4",
      "offset": [
        4153,
        4318
      ],
      "op": "SWAP2",
      "path": "155"
    },
    "1089": {
      "op": "POP"
    },
    "1090": {
      "op": "POP"
    },
    "1091": {
      "fn": "EIP712._hashTypedDataV4",
      "jump": "o",
      "offset": [
        4153,
        4318
      ],
      "op": "JUMP",
      "path": "155"
    },
    "1092": {
      "fn": "ECDSA.recover",
      "offset": [
        1288,
        2529
      ],
      "op": "JUMPDEST",
      "path": "152"
    },
    "1093": {
      "fn": "ECDSA.recover",
      "offset": [
        1366,
        1373
      ],
      "op": "PUSH1",
      "path": "152",
      "value": "0x0"
    },
    "1095": {
      "fn": "ECDSA.recover",
      "offset": [
        1582,
        1591
      ],
      "op": "DUP2",
      "path": "152"
    },
    "1096": {
      "fn": "ECDSA.recover",
      "offset": [
        1582,
        1598
      ],
      "op": "MLOAD",
      "path": "152"
    },
    "1097": {
      "fn": "ECDSA.recover",
      "offset": [
        1602,
        1604
      ],
      "op": "PUSH1",
      "path": "152",
      "value": "0x41"
    },
    "1099": {
      "branch": 19,
      "fn": "ECDSA.recover",
      "offset": [
        1582,
        1604
      ],
      "op": "EQ",
      "path": "152"
    },
    "1100": {
      "fn": "ECDSA.recover",
      "offset": [
        1578,
        2523
      ],
      "op": "ISZERO",
      "path": "152"
    },
    "1101": {
      "fn": "ECDSA.recover",
      "offset": [
        1578,
        2523
      ],
      "op": "PUSH2",
      "path": "152",
      "value": "0x478"
    },
    "1104": {
      "branch": 19,
      "fn": "ECDSA.recover",
      "offset": [
        1578,
        2523
      ],
      "op": "JUMPI",
      "path": "152"
    },
    "1105": {
      "fn": "ECDSA.recover",
      "offset": [
        1871,
        1875
      ],
      "op": "PUSH1",
      "path": "152",
      "value": "0x20"
    },
    "1107": {
      "fn": "ECDSA.recover",
      "offset": [
        1856,
        1876
      ],
      "op": "DUP3",
      "path": "152"
    },
    "1108": {
      "fn": "ECDSA.recover",
      "offset": [
        1856,
        1876
      ],
      "op": "ADD",
      "path": "152"
    },
    "1109": {
      "fn": "ECDSA.recover",
      "offset": [
        1850,
        1877
      ],
      "op": "MLOAD",
      "path": "152"
    },
    "1110": {
      "fn": "ECDSA.recover",
      "offset": [
        1920,
        1924
      ],
      "op": "PUSH1",
      "path": "152",
      "value": "0x40"
    },
    "1112": {
      "fn": "ECDSA.recover",
      "offset": [
        1905,
        1925
      ],
      "op": "DUP4",
      "path": "152"
    },
    "1113": {
      "fn": "ECDSA.recover",
      "offset": [
        1905,
        1925
      ],
      "op": "ADD",
      "path": "152"
    },
    "1114": {
      "fn": "ECDSA.recover",
      "offset": [
        1899,
        1926
      ],
      "op": "MLOAD",
      "path": "152"
    },
    "1115": {
      "fn": "ECDSA.recover",
      "offset": [
        1977,
        1981
      ],
      "op": "PUSH1",
      "path": "152",
      "value": "0x60"
    },
    "1117": {
      "fn": "ECDSA.recover",
      "offset": [
        1962,
        1982
      ],
      "op": "DUP5",
      "path": "152"
    },
    "1118": {
      "fn": "ECDSA.recover",
      "offset": [
        1962,
        1982
      ],
      "op": "ADD",
      "path": "152"
    },
    "1119": {
      "fn": "ECDSA.recover",
      "offset": [
        1956,
        1983
      ],
      "op": "MLOAD",
      "path": "152"
    },
    "1120": {
      "fn": "ECDSA.recover",
      "offset": [
        1620,
        1629
      ],
      "op": "PUSH1",
      "path": "152",
      "value": "0x0"
    },
    "1122": {
      "fn": "ECDSA.recover",
      "offset": [
        1948,
        1984
      ],
      "op": "BYTE",
      "path": "152"
    },
    "1123": {
      "fn": "ECDSA.recover",
      "offset": [
        2018,
        2040
      ],
      "op": "PUSH2",
      "path": "152",
      "statement": 8,
      "value": "0x46E"
    },
    "1126": {
      "fn": "ECDSA.recover",
      "offset": [
        2026,
        2030
      ],
      "op": "DUP7",
      "path": "152"
    },
    "1127": {
      "fn": "ECDSA.recover",
      "offset": [
        1948,
        1984
      ],
      "op": "DUP3",
      "path": "152"
    },
    "1128": {
      "fn": "ECDSA.recover",
      "offset": [
        1850,
        1877
      ],
      "op": "DUP6",
      "path": "152"
    },
    "1129": {
      "fn": "ECDSA.recover",
      "offset": [
        1899,
        1926
      ],
      "op": "DUP6",
      "path": "152"
    },
    "1130": {
      "fn": "ECDSA.recover",
      "offset": [
        2018,
        2025
      ],
      "op": "PUSH2",
      "path": "152",
      "value": "0x5DB"
    },
    "1133": {
      "fn": "ECDSA.recover",
      "jump": "i",
      "offset": [
        2018,
        2040
      ],
      "op": "JUMP",
      "path": "152"
    },
    "1134": {
      "fn": "ECDSA.recover",
      "offset": [
        2018,
        2040
      ],
      "op": "JUMPDEST",
      "path": "152"
    },
    "1135": {
      "fn": "ECDSA.recover",
      "offset": [
        2011,
        2040
      ],
      "op": "SWAP4",
      "path": "152"
    },
    "1136": {
      "fn": "ECDSA.recover",
      "offset": [
        2011,
        2040
      ],
      "op": "POP",
      "path": "152"
    },
    "1137": {
      "fn": "ECDSA.recover",
      "offset": [
        2011,
        2040
      ],
      "op": "POP",
      "path": "152"
    },
    "1138": {
      "fn": "ECDSA.recover",
      "offset": [
        2011,
        2040
      ],
      "op": "POP",
      "path": "152"
    },
    "1139": {
      "fn": "ECDSA.recover",
      "offset": [
        2011,
        2040
      ],
      "op": "POP",
      "path": "152"
    },
    "1140": {
      "fn": "ECDSA.recover",
      "offset": [
        2011,
        2040
      ],
      "op": "PUSH2",
      "path": "152",
      "value": "0x43E"
    },
    "1143": {
      "fn": "ECDSA.recover",
      "offset": [
        2011,
        2040
      ],
      "op": "JUMP",
      "path": "152"
    },
    "1144": {
      "fn": "ECDSA.recover",
      "offset": [
        1578,
        2523
      ],
      "op": "JUMPDEST",
      "path": "152"
    },
    "1145": {
      "fn": "ECDSA.recover",
      "offset": [
        2061,
        2070
      ],
      "op": "DUP2",
      "path": "152"
    },
    "1146": {
      "fn": "ECDSA.recover",
      "offset": [
        2061,
        2077
      ],
      "op": "MLOAD",
      "path": "152"
    },
    "1147": {
      "fn": "ECDSA.recover",
      "offset": [
        2081,
        2083
      ],
      "op": "PUSH1",
      "path": "152",
      "value": "0x40"
    },
    "1149": {
      "branch": 20,
      "fn": "ECDSA.recover",
      "offset": [
        2061,
        2083
      ],
      "op": "EQ",
      "path": "152"
    },
    "1150": {
      "fn": "ECDSA.recover",
      "offset": [
        2057,
        2523
      ],
      "op": "ISZERO",
      "path": "152"
    },
    "1151": {
      "fn": "ECDSA.recover",
      "offset": [
        2057,
        2523
      ],
      "op": "PUSH2",
      "path": "152",
      "value": "0x4A0"
    },
    "1154": {
      "branch": 20,
      "fn": "ECDSA.recover",
      "offset": [
        2057,
        2523
      ],
      "op": "JUMPI",
      "path": "152"
    },
    "1155": {
      "fn": "ECDSA.recover",
      "offset": [
        2330,
        2334
      ],
      "op": "PUSH1",
      "path": "152",
      "value": "0x20"
    },
    "1157": {
      "fn": "ECDSA.recover",
      "offset": [
        2315,
        2335
      ],
      "op": "DUP3",
      "path": "152"
    },
    "1158": {
      "fn": "ECDSA.recover",
      "offset": [
        2315,
        2335
      ],
      "op": "ADD",
      "path": "152"
    },
    "1159": {
      "fn": "ECDSA.recover",
      "offset": [
        2309,
        2336
      ],
      "op": "MLOAD",
      "path": "152"
    },
    "1160": {
      "fn": "ECDSA.recover",
      "offset": [
        2380,
        2384
      ],
      "op": "PUSH1",
      "path": "152",
      "value": "0x40"
    },
    "1162": {
      "fn": "ECDSA.recover",
      "offset": [
        2365,
        2385
      ],
      "op": "DUP4",
      "path": "152"
    },
    "1163": {
      "fn": "ECDSA.recover",
      "offset": [
        2365,
        2385
      ],
      "op": "ADD",
      "path": "152"
    },
    "1164": {
      "fn": "ECDSA.recover",
      "offset": [
        2359,
        2386
      ],
      "op": "MLOAD",
      "path": "152"
    },
    "1165": {
      "fn": "ECDSA.recover",
      "offset": [
        2420,
        2440
      ],
      "op": "PUSH2",
      "path": "152",
      "statement": 9,
      "value": "0x497"
    },
    "1168": {
      "fn": "ECDSA.recover",
      "offset": [
        2428,
        2432
      ],
      "op": "DUP6",
      "path": "152"
    },
    "1169": {
      "fn": "ECDSA.recover",
      "offset": [
        2309,
        2336
      ],
      "op": "DUP4",
      "path": "152"
    },
    "1170": {
      "fn": "ECDSA.recover",
      "offset": [
        2359,
        2386
      ],
      "op": "DUP4",
      "path": "152"
    },
    "1171": {
      "fn": "ECDSA.recover",
      "offset": [
        2420,
        2427
      ],
      "op": "PUSH2",
      "path": "152",
      "value": "0x77B"
    },
    "1174": {
      "fn": "ECDSA.recover",
      "jump": "i",
      "offset": [
        2420,
        2440
      ],
      "op": "JUMP",
      "path": "152"
    },
    "1175": {
      "fn": "ECDSA.recover",
      "offset": [
        2420,
        2440
      ],
      "op": "JUMPDEST",
      "path": "152"
    },
    "1176": {
      "fn": "ECDSA.recover",
      "offset": [
        2413,
        2440
      ],
      "op": "SWAP3",
      "path": "152"
    },
    "1177": {
      "fn": "ECDSA.recover",
      "offset": [
        2413,
        2440
      ],
      "op": "POP",
      "path": "152"
    },
    "1178": {
      "fn": "ECDSA.recover",
      "offset": [
        2413,
        2440
      ],
      "op": "POP",
      "path": "152"
    },
    "1179": {
      "fn": "ECDSA.recover",
      "offset": [
        2413,
        2440
      ],
      "op": "POP",
      "path": "152"
    },
    "1180": {
      "fn": "ECDSA.recover",
      "offset": [
        2413,
        2440
      ],
      "op": "PUSH2",
      "path": "152",
      "value": "0x43E"
    },
    "1183": {
      "fn": "ECDSA.recover",
      "offset": [
        2413,
        2440
      ],
      "op": "JUMP",
      "path": "152"
    },
    "1184": {
      "fn": "ECDSA.recover",
      "offset": [
        2057,
        2523
      ],
      "op": "JUMPDEST",
      "path": "152"
    },
    "1185": {
      "fn": "ECDSA.recover",
      "offset": [
        2471,
        2512
      ],
      "op": "PUSH1",
      "path": "152",
      "statement": 10,
      "value": "0x40"
    },
    "1187": {
      "fn": "ECDSA.recover",
      "offset": [
        2471,
        2512
      ],
      "op": "MLOAD",
      "path": "152"
    },
    "1188": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1192": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1194": {
      "op": "SHL"
    },
    "1195": {
      "fn": "ECDSA.recover",
      "offset": [
        2471,
        2512
      ],
      "op": "DUP2",
      "path": "152"
    },
    "1196": {
      "fn": "ECDSA.recover",
      "offset": [
        2471,
        2512
      ],
      "op": "MSTORE",
      "path": "152"
    },
    "1197": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1199": {
      "fn": "ECDSA.recover",
      "offset": [
        2471,
        2512
      ],
      "op": "PUSH1",
      "path": "152",
      "value": "0x4"
    },
    "1201": {
      "fn": "ECDSA.recover",
      "offset": [
        2471,
        2512
      ],
      "op": "DUP3",
      "path": "152"
    },
    "1202": {
      "fn": "ECDSA.recover",
      "offset": [
        2471,
        2512
      ],
      "op": "ADD",
      "path": "152"
    },
    "1203": {
      "op": "MSTORE"
    },
    "1204": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1206": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1208": {
      "op": "DUP3"
    },
    "1209": {
      "op": "ADD"
    },
    "1210": {
      "op": "MSTORE"
    },
    "1211": {
      "op": "PUSH32",
      "value": "0x45434453413A20696E76616C6964207369676E6174757265206C656E67746800"
    },
    "1244": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1246": {
      "op": "DUP3"
    },
    "1247": {
      "op": "ADD"
    },
    "1248": {
      "op": "MSTORE"
    },
    "1249": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1251": {
      "op": "ADD"
    },
    "1252": {
      "fn": "ECDSA.recover",
      "offset": [
        2471,
        2512
      ],
      "op": "PUSH2",
      "path": "152",
      "value": "0x145"
    },
    "1255": {
      "op": "JUMP"
    },
    "1256": {
      "fn": "EIP712._domainSeparatorV4",
      "offset": [
        2990,
        3265
      ],
      "op": "JUMPDEST",
      "path": "155"
    },
    "1257": {
      "fn": "EIP712._domainSeparatorV4",
      "offset": [
        3043,
        3050
      ],
      "op": "PUSH1",
      "path": "155",
      "value": "0x0"
    },
    "1259": {
      "fn": "EIP712._domainSeparatorV4",
      "offset": [
        3083,
        3099
      ],
      "op": "PUSH32",
      "path": "155",
      "value": "0x0"
    },
    "1292": {
      "fn": "EIP712._domainSeparatorV4",
      "offset": [
        3066,
        3079
      ],
      "op": "CHAINID",
      "path": "155"
    },
    "1293": {
      "branch": 25,
      "fn": "EIP712._domainSeparatorV4",
      "offset": [
        3066,
        3099
      ],
      "op": "EQ",
      "path": "155"
    },
    "1294": {
      "fn": "EIP712._domainSeparatorV4",
      "offset": [
        3062,
        3259
      ],
      "op": "ISZERO",
      "path": "155"
    },
    "1295": {
      "fn": "EIP712._domainSeparatorV4",
      "offset": [
        3062,
        3259
      ],
      "op": "PUSH2",
      "path": "155",
      "value": "0x537"
    },
    "1298": {
      "branch": 25,
      "fn": "EIP712._domainSeparatorV4",
      "offset": [
        3062,
        3259
      ],
      "op": "JUMPI",
      "path": "155"
    },
    "1299": {
      "op": "POP"
    },
    "1300": {
      "fn": "EIP712._domainSeparatorV4",
      "offset": [
        3122,
        3146
      ],
      "op": "PUSH32",
      "path": "155",
      "statement": 11,
      "value": "0x0"
    },
    "1333": {
      "fn": "EIP712._domainSeparatorV4",
      "offset": [
        3122,
        3146
      ],
      "op": "SWAP1",
      "path": "155"
    },
    "1334": {
      "fn": "EIP712._domainSeparatorV4",
      "jump": "o",
      "offset": [
        2990,
        3265
      ],
      "op": "JUMP",
      "path": "155"
    },
    "1335": {
      "fn": "EIP712._domainSeparatorV4",
      "offset": [
        3062,
        3259
      ],
      "op": "JUMPDEST",
      "path": "155"
    },
    "1336": {
      "op": "POP"
    },
    "1337": {
      "fn": "EIP712._buildDomainSeparator",
      "offset": [
        3447,
        3520
      ],
      "op": "PUSH1",
      "path": "155",
      "statement": 12,
      "value": "0x40"
    },
    "1339": {
      "fn": "EIP712._buildDomainSeparator",
      "offset": [
        3447,
        3520
      ],
      "op": "DUP1",
      "path": "155"
    },
    "1340": {
      "fn": "EIP712._buildDomainSeparator",
      "offset": [
        3447,
        3520
      ],
      "op": "MLOAD",
      "path": "155"
    },
    "1341": {
      "fn": "EIP712._domainSeparatorV4",
      "offset": [
        3206,
        3216
      ],
      "op": "PUSH32",
      "path": "155",
      "statement": 13,
      "value": "0x0"
    },
    "1374": {
      "fn": "EIP712._buildDomainSeparator",
      "offset": [
        3447,
        3520
      ],
      "op": "PUSH1",
      "path": "155",
      "value": "0x20"
    },
    "1376": {
      "fn": "EIP712._buildDomainSeparator",
      "offset": [
        3447,
        3520
      ],
      "op": "DUP1",
      "path": "155"
    },
    "1377": {
      "fn": "EIP712._buildDomainSeparator",
      "offset": [
        3447,
        3520
      ],
      "op": "DUP4",
      "path": "155"
    },
    "1378": {
      "fn": "EIP712._buildDomainSeparator",
      "offset": [
        3447,
        3520
      ],
      "op": "ADD",
      "path": "155"
    },
    "1379": {
      "op": "SWAP2"
    },
    "1380": {
      "op": "SWAP1"
    },
    "1381": {
      "op": "SWAP2"
    },
    "1382": {
      "op": "MSTORE"
    },
    "1383": {
      "fn": "EIP712._domainSeparatorV4",
      "offset": [
        3218,
        3230
      ],
      "op": "PUSH32",
      "path": "155",
      "value": "0x0"
    },
    "1416": {
      "op": "DUP3"
    },
    "1417": {
      "op": "DUP5"
    },
    "1418": {
      "op": "ADD"
    },
    "1419": {
      "op": "MSTORE"
    },
    "1420": {
      "fn": "EIP712._domainSeparatorV4",
      "offset": [
        3232,
        3247
      ],
      "op": "PUSH32",
      "path": "155",
      "value": "0x0"
    },
    "1453": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1455": {
      "op": "DUP4"
    },
    "1456": {
      "op": "ADD"
    },
    "1457": {
      "op": "MSTORE"
    },
    "1458": {
      "fn": "EIP712._buildDomainSeparator",
      "offset": [
        3491,
        3504
      ],
      "op": "CHAINID",
      "path": "155"
    },
    "1459": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1461": {
      "op": "DUP4"
    },
    "1462": {
      "op": "ADD"
    },
    "1463": {
      "op": "MSTORE"
    },
    "1464": {
      "fn": "EIP712._buildDomainSeparator",
      "offset": [
        3514,
        3518
      ],
      "op": "ADDRESS",
      "path": "155"
    },
    "1465": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1467": {
      "op": "DUP1"
    },
    "1468": {
      "op": "DUP5"
    },
    "1469": {
      "op": "ADD"
    },
    "1470": {
      "op": "SWAP2"
    },
    "1471": {
      "op": "SWAP1"
    },
    "1472": {
      "op": "SWAP2"
    },
    "1473": {
      "op": "MSTORE"
    },
    "1474": {
      "fn": "EIP712._buildDomainSeparator",
      "offset": [
        3447,
        3520
      ],
      "op": "DUP4",
      "path": "155"
    },
    "1475": {
      "fn": "EIP712._buildDomainSeparator",
      "offset": [
        3447,
        3520
      ],
      "op": "MLOAD",
      "path": "155"
    },
    "1476": {
      "fn": "EIP712._buildDomainSeparator",
      "offset": [
        3447,
        3520
      ],
      "op": "DUP1",
      "path": "155"
    },
    "1477": {
      "fn": "EIP712._buildDomainSeparator",
      "offset": [
        3447,
        3520
      ],
      "op": "DUP5",
      "path": "155"
    },
    "1478": {
      "fn": "EIP712._buildDomainSeparator",
      "offset": [
        3447,
        3520
      ],
      "op": "SUB",
      "path": "155"
    },
    "1479": {
      "fn": "EIP712._buildDomainSeparator",
      "offset": [
        3447,
        3520
      ],
      "op": "SWAP1",
      "path": "155"
    },
    "1480": {
      "fn": "EIP712._buildDomainSeparator",
      "offset": [
        3447,
        3520
      ],
      "op": "SWAP2",
      "path": "155"
    },
    "1481": {
      "fn": "EIP712._buildDomainSeparator",
      "offset": [
        3447,
        3520
      ],
      "op": "ADD",
      "path": "155"
    },
    "1482": {
      "fn": "EIP712._buildDomainSeparator",
      "offset": [
        3447,
        3520
      ],
      "op": "DUP2",
      "path": "155"
    },
    "1483": {
      "fn": "EIP712._buildDomainSeparator",
      "offset": [
        3447,
        3520
      ],
      "op": "MSTORE",
      "path": "155"
    },
    "1484": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "1486": {
      "op": "SWAP1"
    },
    "1487": {
      "op": "SWAP3"
    },
    "1488": {
      "op": "ADD"
    },
    "1489": {
      "fn": "EIP712._buildDomainSeparator",
      "offset": [
        3447,
        3520
      ],
      "op": "SWAP1",
      "path": "155"
    },
    "1490": {
      "fn": "EIP712._buildDomainSeparator",
      "offset": [
        3447,
        3520
      ],
      "op": "SWAP3",
      "path": "155"
    },
    "1491": {
      "fn": "EIP712._buildDomainSeparator",
      "offset": [
        3447,
        3520
      ],
      "op": "MSTORE",
      "path": "155"
    },
    "1492": {
      "fn": "EIP712._buildDomainSeparator",
      "offset": [
        3437,
        3521
      ],
      "op": "DUP1",
      "path": "155"
    },
    "1493": {
      "fn": "EIP712._buildDomainSeparator",
      "offset": [
        3437,
        3521
      ],
      "op": "MLOAD",
      "path": "155"
    },
    "1494": {
      "fn": "EIP712._buildDomainSeparator",
      "offset": [
        3437,
        3521
      ],
      "op": "SWAP2",
      "path": "155"
    },
    "1495": {
      "fn": "EIP712._buildDomainSeparator",
      "offset": [
        3437,
        3521
      ],
      "op": "ADD",
      "path": "155"
    },
    "1496": {
      "fn": "EIP712._buildDomainSeparator",
      "offset": [
        3437,
        3521
      ],
      "op": "KECCAK256",
      "path": "155"
    },
    "1497": {
      "fn": "EIP712._buildDomainSeparator",
      "offset": [
        3437,
        3521
      ],
      "op": "SWAP1",
      "path": "155"
    },
    "1498": {
      "fn": "EIP712._domainSeparatorV4",
      "jump": "o",
      "offset": [
        2990,
        3265
      ],
      "op": "JUMP",
      "path": "155"
    },
    "1499": {
      "fn": "ECDSA.recover",
      "offset": [
        3265,
        4751
      ],
      "op": "JUMPDEST",
      "path": "152"
    },
    "1500": {
      "fn": "ECDSA.recover",
      "offset": [
        3388,
        3395
      ],
      "op": "PUSH1",
      "path": "152",
      "value": "0x0"
    },
    "1502": {
      "fn": "ECDSA.recover",
      "offset": [
        4316,
        4382
      ],
      "op": "PUSH32",
      "path": "152",
      "statement": 14,
      "value": "0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0"
    },
    "1535": {
      "fn": "ECDSA.recover",
      "offset": [
        4302,
        4382
      ],
      "op": "DUP3",
      "path": "152"
    },
    "1536": {
      "fn": "ECDSA.recover",
      "offset": [
        4302,
        4382
      ],
      "op": "GT",
      "path": "152"
    },
    "1537": {
      "branch": 21,
      "fn": "ECDSA.recover",
      "offset": [
        4302,
        4382
      ],
      "op": "ISZERO",
      "path": "152"
    },
    "1538": {
      "fn": "ECDSA.recover",
      "offset": [
        4281,
        4442
      ],
      "op": "PUSH2",
      "path": "152",
      "value": "0x658"
    },
    "1541": {
      "branch": 21,
      "fn": "ECDSA.recover",
      "offset": [
        4281,
        4442
      ],
      "op": "JUMPI",
      "path": "152"
    },
    "1542": {
      "fn": "ECDSA.recover",
      "offset": [
        4281,
        4442
      ],
      "op": "PUSH1",
      "path": "152",
      "value": "0x40"
    },
    "1544": {
      "fn": "ECDSA.recover",
      "offset": [
        4281,
        4442
      ],
      "op": "MLOAD",
      "path": "152"
    },
    "1545": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1549": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1551": {
      "op": "SHL"
    },
    "1552": {
      "fn": "ECDSA.recover",
      "offset": [
        4281,
        4442
      ],
      "op": "DUP2",
      "path": "152"
    },
    "1553": {
      "fn": "ECDSA.recover",
      "offset": [
        4281,
        4442
      ],
      "op": "MSTORE",
      "path": "152"
    },
    "1554": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1556": {
      "fn": "ECDSA.recover",
      "offset": [
        4281,
        4442
      ],
      "op": "PUSH1",
      "path": "152",
      "value": "0x4"
    },
    "1558": {
      "fn": "ECDSA.recover",
      "offset": [
        4281,
        4442
      ],
      "op": "DUP3",
      "path": "152"
    },
    "1559": {
      "fn": "ECDSA.recover",
      "offset": [
        4281,
        4442
      ],
      "op": "ADD",
      "path": "152"
    },
    "1560": {
      "op": "MSTORE"
    },
    "1561": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "1563": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1565": {
      "op": "DUP3"
    },
    "1566": {
      "op": "ADD"
    },
    "1567": {
      "op": "MSTORE"
    },
    "1568": {
      "op": "PUSH32",
      "value": "0x45434453413A20696E76616C6964207369676E6174757265202773272076616C"
    },
    "1601": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1603": {
      "op": "DUP3"
    },
    "1604": {
      "op": "ADD"
    },
    "1605": {
      "op": "MSTORE"
    },
    "1606": {
      "op": "PUSH2",
      "value": "0x7565"
    },
    "1609": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "1611": {
      "op": "SHL"
    },
    "1612": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1614": {
      "op": "DUP3"
    },
    "1615": {
      "op": "ADD"
    },
    "1616": {
      "op": "MSTORE"
    },
    "1617": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1619": {
      "op": "ADD"
    },
    "1620": {
      "fn": "ECDSA.recover",
      "offset": [
        4281,
        4442
      ],
      "op": "PUSH2",
      "path": "152",
      "value": "0x145"
    },
    "1623": {
      "op": "JUMP"
    },
    "1624": {
      "fn": "ECDSA.recover",
      "offset": [
        4281,
        4442
      ],
      "op": "JUMPDEST",
      "path": "152"
    },
    "1625": {
      "fn": "ECDSA.recover",
      "offset": [
        4460,
        4461
      ],
      "op": "DUP4",
      "path": "152",
      "statement": 15
    },
    "1626": {
      "fn": "ECDSA.recover",
      "offset": [
        4460,
        4467
      ],
      "op": "PUSH1",
      "path": "152",
      "value": "0xFF"
    },
    "1628": {
      "fn": "ECDSA.recover",
      "offset": [
        4460,
        4467
      ],
      "op": "AND",
      "path": "152"
    },
    "1629": {
      "fn": "ECDSA.recover",
      "offset": [
        4465,
        4467
      ],
      "op": "PUSH1",
      "path": "152",
      "value": "0x1B"
    },
    "1631": {
      "branch": 22,
      "fn": "ECDSA.recover",
      "offset": [
        4460,
        4467
      ],
      "op": "EQ",
      "path": "152"
    },
    "1632": {
      "fn": "ECDSA.recover",
      "offset": [
        4460,
        4478
      ],
      "op": "DUP1",
      "path": "152"
    },
    "1633": {
      "fn": "ECDSA.recover",
      "offset": [
        4460,
        4478
      ],
      "op": "PUSH2",
      "path": "152",
      "value": "0x66D"
    },
    "1636": {
      "branch": 22,
      "fn": "ECDSA.recover",
      "offset": [
        4460,
        4478
      ],
      "op": "JUMPI",
      "path": "152"
    },
    "1637": {
      "fn": "ECDSA.recover",
      "offset": [
        4460,
        4478
      ],
      "op": "POP",
      "path": "152"
    },
    "1638": {
      "fn": "ECDSA.recover",
      "offset": [
        4471,
        4472
      ],
      "op": "DUP4",
      "path": "152"
    },
    "1639": {
      "fn": "ECDSA.recover",
      "offset": [
        4471,
        4478
      ],
      "op": "PUSH1",
      "path": "152",
      "value": "0xFF"
    },
    "1641": {
      "fn": "ECDSA.recover",
      "offset": [
        4471,
        4478
      ],
      "op": "AND",
      "path": "152"
    },
    "1642": {
      "fn": "ECDSA.recover",
      "offset": [
        4476,
        4478
      ],
      "op": "PUSH1",
      "path": "152",
      "value": "0x1C"
    },
    "1644": {
      "branch": 23,
      "fn": "ECDSA.recover",
      "offset": [
        4471,
        4478
      ],
      "op": "EQ",
      "path": "152"
    },
    "1645": {
      "fn": "ECDSA.recover",
      "offset": [
        4460,
        4478
      ],
      "op": "JUMPDEST",
      "path": "152"
    },
    "1646": {
      "fn": "ECDSA.recover",
      "offset": [
        4452,
        4517
      ],
      "op": "PUSH2",
      "path": "152",
      "value": "0x6C4"
    },
    "1649": {
      "branch": 23,
      "fn": "ECDSA.recover",
      "offset": [
        4452,
        4517
      ],
      "op": "JUMPI",
      "path": "152"
    },
    "1650": {
      "fn": "ECDSA.recover",
      "offset": [
        4452,
        4517
      ],
      "op": "PUSH1",
      "path": "152",
      "value": "0x40"
    },
    "1652": {
      "fn": "ECDSA.recover",
      "offset": [
        4452,
        4517
      ],
      "op": "MLOAD",
      "path": "152"
    },
    "1653": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1657": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1659": {
      "op": "SHL"
    },
    "1660": {
      "fn": "ECDSA.recover",
      "offset": [
        4452,
        4517
      ],
      "op": "DUP2",
      "path": "152"
    },
    "1661": {
      "fn": "ECDSA.recover",
      "offset": [
        4452,
        4517
      ],
      "op": "MSTORE",
      "path": "152"
    },
    "1662": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1664": {
      "fn": "ECDSA.recover",
      "offset": [
        4452,
        4517
      ],
      "op": "PUSH1",
      "path": "152",
      "value": "0x4"
    },
    "1666": {
      "fn": "ECDSA.recover",
      "offset": [
        4452,
        4517
      ],
      "op": "DUP3",
      "path": "152"
    },
    "1667": {
      "fn": "ECDSA.recover",
      "offset": [
        4452,
        4517
      ],
      "op": "ADD",
      "path": "152"
    },
    "1668": {
      "op": "MSTORE"
    },
    "1669": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "1671": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1673": {
      "op": "DUP3"
    },
    "1674": {
      "op": "ADD"
    },
    "1675": {
      "op": "MSTORE"
    },
    "1676": {
      "op": "PUSH32",
      "value": "0x45434453413A20696E76616C6964207369676E6174757265202776272076616C"
    },
    "1709": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1711": {
      "op": "DUP3"
    },
    "1712": {
      "op": "ADD"
    },
    "1713": {
      "op": "MSTORE"
    },
    "1714": {
      "op": "PUSH2",
      "value": "0x7565"
    },
    "1717": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "1719": {
      "op": "SHL"
    },
    "1720": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1722": {
      "op": "DUP3"
    },
    "1723": {
      "op": "ADD"
    },
    "1724": {
      "op": "MSTORE"
    },
    "1725": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1727": {
      "op": "ADD"
    },
    "1728": {
      "fn": "ECDSA.recover",
      "offset": [
        4452,
        4517
      ],
      "op": "PUSH2",
      "path": "152",
      "value": "0x145"
    },
    "1731": {
      "op": "JUMP"
    },
    "1732": {
      "fn": "ECDSA.recover",
      "offset": [
        4452,
        4517
      ],
      "op": "JUMPDEST",
      "path": "152"
    },
    "1733": {
      "fn": "ECDSA.recover",
      "offset": [
        4629,
        4653
      ],
      "op": "PUSH1",
      "path": "152",
      "value": "0x40"
    },
    "1735": {
      "fn": "ECDSA.recover",
      "offset": [
        4629,
        4653
      ],
      "op": "DUP1",
      "path": "152"
    },
    "1736": {
      "fn": "ECDSA.recover",
      "offset": [
        4629,
        4653
      ],
      "op": "MLOAD",
      "path": "152"
    },
    "1737": {
      "fn": "ECDSA.recover",
      "offset": [
        4612,
        4626
      ],
      "op": "PUSH1",
      "path": "152",
      "value": "0x0"
    },
    "1739": {
      "fn": "ECDSA.recover",
      "offset": [
        4629,
        4653
      ],
      "op": "DUP1",
      "path": "152"
    },
    "1740": {
      "fn": "ECDSA.recover",
      "offset": [
        4629,
        4653
      ],
      "op": "DUP3",
      "path": "152"
    },
    "1741": {
      "fn": "ECDSA.recover",
      "offset": [
        4629,
        4653
      ],
      "op": "MSTORE",
      "path": "152"
    },
    "1742": {
      "fn": "ECDSA.recover",
      "offset": [
        4629,
        4653
      ],
      "op": "PUSH1",
      "path": "152",
      "value": "0x20"
    },
    "1744": {
      "fn": "ECDSA.recover",
      "offset": [
        4629,
        4653
      ],
      "op": "DUP3",
      "path": "152"
    },
    "1745": {
      "fn": "ECDSA.recover",
      "offset": [
        4629,
        4653
      ],
      "op": "ADD",
      "path": "152"
    },
    "1746": {
      "fn": "ECDSA.recover",
      "offset": [
        4629,
        4653
      ],
      "op": "DUP1",
      "path": "152"
    },
    "1747": {
      "fn": "ECDSA.recover",
      "offset": [
        4629,
        4653
      ],
      "op": "DUP5",
      "path": "152"
    },
    "1748": {
      "fn": "ECDSA.recover",
      "offset": [
        4629,
        4653
      ],
      "op": "MSTORE",
      "path": "152"
    },
    "1749": {
      "op": "DUP9"
    },
    "1750": {
      "op": "SWAP1"
    },
    "1751": {
      "op": "MSTORE"
    },
    "1752": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1754": {
      "op": "DUP8"
    },
    "1755": {
      "op": "AND"
    },
    "1756": {
      "op": "SWAP3"
    },
    "1757": {
      "op": "DUP3"
    },
    "1758": {
      "op": "ADD"
    },
    "1759": {
      "op": "SWAP3"
    },
    "1760": {
      "op": "SWAP1"
    },
    "1761": {
      "op": "SWAP3"
    },
    "1762": {
      "op": "MSTORE"
    },
    "1763": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1765": {
      "op": "DUP2"
    },
    "1766": {
      "op": "ADD"
    },
    "1767": {
      "op": "DUP6"
    },
    "1768": {
      "op": "SWAP1"
    },
    "1769": {
      "op": "MSTORE"
    },
    "1770": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1772": {
      "op": "DUP2"
    },
    "1773": {
      "op": "ADD"
    },
    "1774": {
      "op": "DUP5"
    },
    "1775": {
      "op": "SWAP1"
    },
    "1776": {
      "op": "MSTORE"
    },
    "1777": {
      "fn": "ECDSA.recover",
      "offset": [
        4629,
        4653
      ],
      "op": "PUSH1",
      "path": "152",
      "value": "0x1"
    },
    "1779": {
      "fn": "ECDSA.recover",
      "offset": [
        4629,
        4653
      ],
      "op": "SWAP1",
      "path": "152"
    },
    "1780": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1782": {
      "op": "ADD"
    },
    "1783": {
      "fn": "ECDSA.recover",
      "offset": [
        4629,
        4653
      ],
      "op": "PUSH1",
      "path": "152",
      "value": "0x20"
    },
    "1785": {
      "fn": "ECDSA.recover",
      "offset": [
        4629,
        4653
      ],
      "op": "PUSH1",
      "path": "152",
      "value": "0x40"
    },
    "1787": {
      "fn": "ECDSA.recover",
      "offset": [
        4629,
        4653
      ],
      "op": "MLOAD",
      "path": "152"
    },
    "1788": {
      "fn": "ECDSA.recover",
      "offset": [
        4629,
        4653
      ],
      "op": "PUSH1",
      "path": "152",
      "value": "0x20"
    },
    "1790": {
      "fn": "ECDSA.recover",
      "offset": [
        4629,
        4653
      ],
      "op": "DUP2",
      "path": "152"
    },
    "1791": {
      "fn": "ECDSA.recover",
      "offset": [
        4629,
        4653
      ],
      "op": "SUB",
      "path": "152"
    },
    "1792": {
      "fn": "ECDSA.recover",
      "offset": [
        4629,
        4653
      ],
      "op": "SWAP1",
      "path": "152"
    },
    "1793": {
      "fn": "ECDSA.recover",
      "offset": [
        4629,
        4653
      ],
      "op": "DUP1",
      "path": "152"
    },
    "1794": {
      "fn": "ECDSA.recover",
      "offset": [
        4629,
        4653
      ],
      "op": "DUP5",
      "path": "152"
    },
    "1795": {
      "fn": "ECDSA.recover",
      "offset": [
        4629,
        4653
      ],
      "op": "SUB",
      "path": "152"
    },
    "1796": {
      "fn": "ECDSA.recover",
      "offset": [
        4629,
        4653
      ],
      "op": "SWAP1",
      "path": "152"
    },
    "1797": {
      "fn": "ECDSA.recover",
      "offset": [
        4629,
        4653
      ],
      "op": "DUP6",
      "path": "152"
    },
    "1798": {
      "fn": "ECDSA.recover",
      "offset": [
        4629,
        4653
      ],
      "op": "GAS",
      "path": "152"
    },
    "1799": {
      "fn": "ECDSA.recover",
      "offset": [
        4629,
        4653
      ],
      "op": "STATICCALL",
      "path": "152"
    },
    "1800": {
      "fn": "ECDSA.recover",
      "offset": [
        4629,
        4653
      ],
      "op": "ISZERO",
      "path": "152"
    },
    "1801": {
      "fn": "ECDSA.recover",
      "offset": [
        4629,
        4653
      ],
      "op": "DUP1",
      "path": "152"
    },
    "1802": {
      "fn": "ECDSA.recover",
      "offset": [
        4629,
        4653
      ],
      "op": "ISZERO",
      "path": "152"
    },
    "1803": {
      "fn": "ECDSA.recover",
      "offset": [
        4629,
        4653
      ],
      "op": "PUSH2",
      "path": "152",
      "value": "0x718"
    },
    "1806": {
      "fn": "ECDSA.recover",
      "offset": [
        4629,
        4653
      ],
      "op": "JUMPI",
      "path": "152"
    },
    "1807": {
      "fn": "ECDSA.recover",
      "offset": [
        4629,
        4653
      ],
      "op": "RETURNDATASIZE",
      "path": "152"
    },
    "1808": {
      "fn": "ECDSA.recover",
      "offset": [
        4629,
        4653
      ],
      "op": "PUSH1",
      "path": "152",
      "value": "0x0"
    },
    "1810": {
      "fn": "ECDSA.recover",
      "offset": [
        4629,
        4653
      ],
      "op": "DUP1",
      "path": "152"
    },
    "1811": {
      "fn": "ECDSA.recover",
      "offset": [
        4629,
        4653
      ],
      "op": "RETURNDATACOPY",
      "path": "152"
    },
    "1812": {
      "fn": "ECDSA.recover",
      "offset": [
        4629,
        4653
      ],
      "op": "RETURNDATASIZE",
      "path": "152"
    },
    "1813": {
      "fn": "ECDSA.recover",
      "offset": [
        4629,
        4653
      ],
      "op": "PUSH1",
      "path": "152",
      "value": "0x0"
    },
    "1815": {
      "fn": "ECDSA.recover",
      "offset": [
        4629,
        4653
      ],
      "op": "REVERT",
      "path": "152"
    },
    "1816": {
      "fn": "ECDSA.recover",
      "offset": [
        4629,
        4653
      ],
      "op": "JUMPDEST",
      "path": "152"
    },
    "1817": {
      "op": "POP"
    },
    "1818": {
      "op": "POP"
    },
    "1819": {
      "fn": "ECDSA.recover",
      "offset": [
        4629,
        4653
      ],
      "op": "PUSH1",
      "path": "152",
      "value": "0x40"
    },
    "1821": {
      "fn": "ECDSA.recover",
      "offset": [
        4629,
        4653
      ],
      "op": "MLOAD",
      "path": "152"
    },
    "1822": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1824": {
      "op": "NOT"
    },
    "1825": {
      "fn": "ECDSA.recover",
      "offset": [
        4629,
        4653
      ],
      "op": "ADD",
      "path": "152"
    },
    "1826": {
      "fn": "ECDSA.recover",
      "offset": [
        4629,
        4653
      ],
      "op": "MLOAD",
      "path": "152"
    },
    "1827": {
      "fn": "ECDSA.recover",
      "offset": [
        4629,
        4653
      ],
      "op": "SWAP2",
      "path": "152"
    },
    "1828": {
      "op": "POP"
    },
    "1829": {
      "op": "POP"
    },
    "1830": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1832": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1834": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1836": {
      "op": "SHL"
    },
    "1837": {
      "op": "SUB"
    },
    "1838": {
      "fn": "ECDSA.recover",
      "offset": [
        4671,
        4691
      ],
      "op": "DUP2",
      "path": "152",
      "statement": 16
    },
    "1839": {
      "branch": 24,
      "fn": "ECDSA.recover",
      "offset": [
        4671,
        4691
      ],
      "op": "AND",
      "path": "152"
    },
    "1840": {
      "fn": "ECDSA.recover",
      "offset": [
        4663,
        4720
      ],
      "op": "PUSH2",
      "path": "152",
      "value": "0x3E7"
    },
    "1843": {
      "branch": 24,
      "fn": "ECDSA.recover",
      "offset": [
        4663,
        4720
      ],
      "op": "JUMPI",
      "path": "152"
    },
    "1844": {
      "fn": "ECDSA.recover",
      "offset": [
        4663,
        4720
      ],
      "op": "PUSH1",
      "path": "152",
      "value": "0x40"
    },
    "1846": {
      "fn": "ECDSA.recover",
      "offset": [
        4663,
        4720
      ],
      "op": "MLOAD",
      "path": "152"
    },
    "1847": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1851": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1853": {
      "op": "SHL"
    },
    "1854": {
      "fn": "ECDSA.recover",
      "offset": [
        4663,
        4720
      ],
      "op": "DUP2",
      "path": "152"
    },
    "1855": {
      "fn": "ECDSA.recover",
      "offset": [
        4663,
        4720
      ],
      "op": "MSTORE",
      "path": "152"
    },
    "1856": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1858": {
      "fn": "ECDSA.recover",
      "offset": [
        4663,
        4720
      ],
      "op": "PUSH1",
      "path": "152",
      "value": "0x4"
    },
    "1860": {
      "fn": "ECDSA.recover",
      "offset": [
        4663,
        4720
      ],
      "op": "DUP3",
      "path": "152"
    },
    "1861": {
      "fn": "ECDSA.recover",
      "offset": [
        4663,
        4720
      ],
      "op": "ADD",
      "path": "152"
    },
    "1862": {
      "op": "MSTORE"
    },
    "1863": {
      "op": "PUSH1",
      "value": "0x18"
    },
    "1865": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1867": {
      "op": "DUP3"
    },
    "1868": {
      "op": "ADD"
    },
    "1869": {
      "op": "MSTORE"
    },
    "1870": {
      "op": "PUSH32",
      "value": "0x45434453413A20696E76616C6964207369676E61747572650000000000000000"
    },
    "1903": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1905": {
      "op": "DUP3"
    },
    "1906": {
      "op": "ADD"
    },
    "1907": {
      "op": "MSTORE"
    },
    "1908": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1910": {
      "op": "ADD"
    },
    "1911": {
      "fn": "ECDSA.recover",
      "offset": [
        4663,
        4720
      ],
      "op": "PUSH2",
      "path": "152",
      "value": "0x145"
    },
    "1914": {
      "op": "JUMP"
    },
    "1915": {
      "fn": "ECDSA.recover",
      "offset": [
        2780,
        3139
      ],
      "op": "JUMPDEST",
      "path": "152"
    },
    "1916": {
      "fn": "ECDSA.recover",
      "offset": [
        2887,
        2894
      ],
      "op": "PUSH1",
      "path": "152",
      "value": "0x0"
    },
    "1918": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1920": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1922": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1924": {
      "op": "SHL"
    },
    "1925": {
      "op": "SUB"
    },
    "1926": {
      "fn": "ECDSA.recover",
      "offset": [
        2970,
        3045
      ],
      "op": "DUP3",
      "path": "152"
    },
    "1927": {
      "fn": "ECDSA.recover",
      "offset": [
        2970,
        3045
      ],
      "op": "AND",
      "path": "152"
    },
    "1928": {
      "fn": "ECDSA.recover",
      "offset": [
        3071,
        3074
      ],
      "op": "PUSH1",
      "path": "152",
      "value": "0xFF"
    },
    "1930": {
      "fn": "ECDSA.recover",
      "offset": [
        3067,
        3079
      ],
      "op": "DUP4",
      "path": "152"
    },
    "1931": {
      "fn": "ECDSA.recover",
      "offset": [
        3067,
        3079
      ],
      "op": "SWAP1",
      "path": "152"
    },
    "1932": {
      "fn": "ECDSA.recover",
      "offset": [
        3067,
        3079
      ],
      "op": "SHR",
      "path": "152"
    },
    "1933": {
      "fn": "ECDSA.recover",
      "offset": [
        3081,
        3083
      ],
      "op": "PUSH1",
      "path": "152",
      "value": "0x1B"
    },
    "1935": {
      "fn": "ECDSA.recover",
      "offset": [
        3063,
        3084
      ],
      "op": "ADD",
      "path": "152"
    },
    "1936": {
      "fn": "ECDSA.recover",
      "offset": [
        3110,
        3132
      ],
      "op": "PUSH2",
      "path": "152",
      "statement": 17,
      "value": "0x79B"
    },
    "1939": {
      "fn": "ECDSA.recover",
      "offset": [
        3118,
        3122
      ],
      "op": "DUP7",
      "path": "152"
    },
    "1940": {
      "fn": "ECDSA.recover",
      "offset": [
        3063,
        3084
      ],
      "op": "DUP3",
      "path": "152"
    },
    "1941": {
      "fn": "ECDSA.recover",
      "offset": [
        3127,
        3128
      ],
      "op": "DUP8",
      "path": "152"
    },
    "1942": {
      "fn": "ECDSA.recover",
      "offset": [
        2970,
        3045
      ],
      "op": "DUP6",
      "path": "152"
    },
    "1943": {
      "fn": "ECDSA.recover",
      "offset": [
        3110,
        3117
      ],
      "op": "PUSH2",
      "path": "152",
      "value": "0x5DB"
    },
    "1946": {
      "fn": "ECDSA.recover",
      "jump": "i",
      "offset": [
        3110,
        3132
      ],
      "op": "JUMP",
      "path": "152"
    },
    "1947": {
      "fn": "ECDSA.recover",
      "offset": [
        3110,
        3132
      ],
      "op": "JUMPDEST",
      "path": "152"
    },
    "1948": {
      "fn": "ECDSA.recover",
      "offset": [
        3103,
        3132
      ],
      "op": "SWAP7",
      "path": "152"
    },
    "1949": {
      "fn": "ECDSA.recover",
      "offset": [
        2780,
        3139
      ],
      "op": "SWAP6",
      "path": "152"
    },
    "1950": {
      "op": "POP"
    },
    "1951": {
      "op": "POP"
    },
    "1952": {
      "op": "POP"
    },
    "1953": {
      "op": "POP"
    },
    "1954": {
      "op": "POP"
    },
    "1955": {
      "op": "POP"
    },
    "1956": {
      "fn": "ECDSA.recover",
      "jump": "o",
      "offset": [
        2780,
        3139
      ],
      "op": "JUMP",
      "path": "152"
    },
    "1957": {
      "op": "JUMPDEST"
    },
    "1958": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1960": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1962": {
      "op": "DUP3"
    },
    "1963": {
      "op": "DUP5"
    },
    "1964": {
      "op": "SUB"
    },
    "1965": {
      "op": "SLT"
    },
    "1966": {
      "op": "ISZERO"
    },
    "1967": {
      "op": "PUSH2",
      "value": "0x7B7"
    },
    "1970": {
      "op": "JUMPI"
    },
    "1971": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1973": {
      "op": "DUP1"
    },
    "1974": {
      "op": "REVERT"
    },
    "1975": {
      "op": "JUMPDEST"
    },
    "1976": {
      "op": "DUP2"
    },
    "1977": {
      "op": "CALLDATALOAD"
    },
    "1978": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1980": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1982": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1984": {
      "op": "SHL"
    },
    "1985": {
      "op": "SUB"
    },
    "1986": {
      "op": "DUP2"
    },
    "1987": {
      "op": "AND"
    },
    "1988": {
      "op": "DUP2"
    },
    "1989": {
      "op": "EQ"
    },
    "1990": {
      "op": "PUSH2",
      "value": "0x7CE"
    },
    "1993": {
      "op": "JUMPI"
    },
    "1994": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1996": {
      "op": "DUP1"
    },
    "1997": {
      "op": "REVERT"
    },
    "1998": {
      "op": "JUMPDEST"
    },
    "1999": {
      "op": "SWAP4"
    },
    "2000": {
      "op": "SWAP3"
    },
    "2001": {
      "op": "POP"
    },
    "2002": {
      "op": "POP"
    },
    "2003": {
      "op": "POP"
    },
    "2004": {
      "jump": "o",
      "op": "JUMP"
    },
    "2005": {
      "op": "JUMPDEST"
    },
    "2006": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2008": {
      "op": "DUP1"
    },
    "2009": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2011": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2013": {
      "op": "DUP5"
    },
    "2014": {
      "op": "DUP7"
    },
    "2015": {
      "op": "SUB"
    },
    "2016": {
      "op": "SLT"
    },
    "2017": {
      "op": "ISZERO"
    },
    "2018": {
      "op": "PUSH2",
      "value": "0x7EA"
    },
    "2021": {
      "op": "JUMPI"
    },
    "2022": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2024": {
      "op": "DUP1"
    },
    "2025": {
      "op": "REVERT"
    },
    "2026": {
      "op": "JUMPDEST"
    },
    "2027": {
      "op": "DUP4"
    },
    "2028": {
      "op": "CALLDATALOAD"
    },
    "2029": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "2038": {
      "op": "DUP1"
    },
    "2039": {
      "op": "DUP3"
    },
    "2040": {
      "op": "GT"
    },
    "2041": {
      "op": "ISZERO"
    },
    "2042": {
      "op": "PUSH2",
      "value": "0x802"
    },
    "2045": {
      "op": "JUMPI"
    },
    "2046": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2048": {
      "op": "DUP1"
    },
    "2049": {
      "op": "REVERT"
    },
    "2050": {
      "op": "JUMPDEST"
    },
    "2051": {
      "op": "SWAP1"
    },
    "2052": {
      "op": "DUP6"
    },
    "2053": {
      "op": "ADD"
    },
    "2054": {
      "op": "SWAP1"
    },
    "2055": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "2057": {
      "op": "DUP3"
    },
    "2058": {
      "op": "DUP9"
    },
    "2059": {
      "op": "SUB"
    },
    "2060": {
      "op": "SLT"
    },
    "2061": {
      "op": "ISZERO"
    },
    "2062": {
      "op": "PUSH2",
      "value": "0x816"
    },
    "2065": {
      "op": "JUMPI"
    },
    "2066": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2068": {
      "op": "DUP1"
    },
    "2069": {
      "op": "REVERT"
    },
    "2070": {
      "op": "JUMPDEST"
    },
    "2071": {
      "op": "SWAP1"
    },
    "2072": {
      "op": "SWAP4"
    },
    "2073": {
      "op": "POP"
    },
    "2074": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2076": {
      "op": "DUP6"
    },
    "2077": {
      "op": "ADD"
    },
    "2078": {
      "op": "CALLDATALOAD"
    },
    "2079": {
      "op": "SWAP1"
    },
    "2080": {
      "op": "DUP1"
    },
    "2081": {
      "op": "DUP3"
    },
    "2082": {
      "op": "GT"
    },
    "2083": {
      "op": "ISZERO"
    },
    "2084": {
      "op": "PUSH2",
      "value": "0x82C"
    },
    "2087": {
      "op": "JUMPI"
    },
    "2088": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2090": {
      "op": "DUP1"
    },
    "2091": {
      "op": "REVERT"
    },
    "2092": {
      "op": "JUMPDEST"
    },
    "2093": {
      "op": "DUP2"
    },
    "2094": {
      "op": "DUP7"
    },
    "2095": {
      "op": "ADD"
    },
    "2096": {
      "op": "SWAP2"
    },
    "2097": {
      "op": "POP"
    },
    "2098": {
      "op": "DUP7"
    },
    "2099": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2101": {
      "op": "DUP4"
    },
    "2102": {
      "op": "ADD"
    },
    "2103": {
      "op": "SLT"
    },
    "2104": {
      "op": "PUSH2",
      "value": "0x840"
    },
    "2107": {
      "op": "JUMPI"
    },
    "2108": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2110": {
      "op": "DUP1"
    },
    "2111": {
      "op": "REVERT"
    },
    "2112": {
      "op": "JUMPDEST"
    },
    "2113": {
      "op": "DUP2"
    },
    "2114": {
      "op": "CALLDATALOAD"
    },
    "2115": {
      "op": "DUP2"
    },
    "2116": {
      "op": "DUP2"
    },
    "2117": {
      "op": "GT"
    },
    "2118": {
      "op": "ISZERO"
    },
    "2119": {
      "op": "PUSH2",
      "value": "0x84F"
    },
    "2122": {
      "op": "JUMPI"
    },
    "2123": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2125": {
      "op": "DUP1"
    },
    "2126": {
      "op": "REVERT"
    },
    "2127": {
      "op": "JUMPDEST"
    },
    "2128": {
      "op": "DUP8"
    },
    "2129": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2131": {
      "op": "DUP3"
    },
    "2132": {
      "op": "DUP6"
    },
    "2133": {
      "op": "ADD"
    },
    "2134": {
      "op": "ADD"
    },
    "2135": {
      "op": "GT"
    },
    "2136": {
      "op": "ISZERO"
    },
    "2137": {
      "op": "PUSH2",
      "value": "0x861"
    },
    "2140": {
      "op": "JUMPI"
    },
    "2141": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2143": {
      "op": "DUP1"
    },
    "2144": {
      "op": "REVERT"
    },
    "2145": {
      "op": "JUMPDEST"
    },
    "2146": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2148": {
      "op": "DUP4"
    },
    "2149": {
      "op": "ADD"
    },
    "2150": {
      "op": "SWAP5"
    },
    "2151": {
      "op": "POP"
    },
    "2152": {
      "op": "DUP1"
    },
    "2153": {
      "op": "SWAP4"
    },
    "2154": {
      "op": "POP"
    },
    "2155": {
      "op": "POP"
    },
    "2156": {
      "op": "POP"
    },
    "2157": {
      "op": "POP"
    },
    "2158": {
      "op": "SWAP3"
    },
    "2159": {
      "op": "POP"
    },
    "2160": {
      "op": "SWAP3"
    },
    "2161": {
      "op": "POP"
    },
    "2162": {
      "op": "SWAP3"
    },
    "2163": {
      "jump": "o",
      "op": "JUMP"
    },
    "2164": {
      "op": "JUMPDEST"
    },
    "2165": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2167": {
      "op": "JUMPDEST"
    },
    "2168": {
      "op": "DUP4"
    },
    "2169": {
      "op": "DUP2"
    },
    "2170": {
      "op": "LT"
    },
    "2171": {
      "op": "ISZERO"
    },
    "2172": {
      "op": "PUSH2",
      "value": "0x88F"
    },
    "2175": {
      "op": "JUMPI"
    },
    "2176": {
      "op": "DUP2"
    },
    "2177": {
      "op": "DUP2"
    },
    "2178": {
      "op": "ADD"
    },
    "2179": {
      "op": "MLOAD"
    },
    "2180": {
      "op": "DUP4"
    },
    "2181": {
      "op": "DUP3"
    },
    "2182": {
      "op": "ADD"
    },
    "2183": {
      "op": "MSTORE"
    },
    "2184": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2186": {
      "op": "ADD"
    },
    "2187": {
      "op": "PUSH2",
      "value": "0x877"
    },
    "2190": {
      "op": "JUMP"
    },
    "2191": {
      "op": "JUMPDEST"
    },
    "2192": {
      "op": "DUP4"
    },
    "2193": {
      "op": "DUP2"
    },
    "2194": {
      "op": "GT"
    },
    "2195": {
      "op": "ISZERO"
    },
    "2196": {
      "op": "PUSH2",
      "value": "0x89E"
    },
    "2199": {
      "op": "JUMPI"
    },
    "2200": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2202": {
      "op": "DUP5"
    },
    "2203": {
      "op": "DUP5"
    },
    "2204": {
      "op": "ADD"
    },
    "2205": {
      "op": "MSTORE"
    },
    "2206": {
      "op": "JUMPDEST"
    },
    "2207": {
      "op": "POP"
    },
    "2208": {
      "op": "POP"
    },
    "2209": {
      "op": "POP"
    },
    "2210": {
      "op": "POP"
    },
    "2211": {
      "jump": "o",
      "op": "JUMP"
    },
    "2212": {
      "op": "JUMPDEST"
    },
    "2213": {
      "op": "DUP3"
    },
    "2214": {
      "op": "ISZERO"
    },
    "2215": {
      "op": "ISZERO"
    },
    "2216": {
      "op": "DUP2"
    },
    "2217": {
      "op": "MSTORE"
    },
    "2218": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2220": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2222": {
      "op": "DUP3"
    },
    "2223": {
      "op": "ADD"
    },
    "2224": {
      "op": "MSTORE"
    },
    "2225": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2227": {
      "op": "DUP3"
    },
    "2228": {
      "op": "MLOAD"
    },
    "2229": {
      "op": "DUP1"
    },
    "2230": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2232": {
      "op": "DUP5"
    },
    "2233": {
      "op": "ADD"
    },
    "2234": {
      "op": "MSTORE"
    },
    "2235": {
      "op": "PUSH2",
      "value": "0x8CB"
    },
    "2238": {
      "op": "DUP2"
    },
    "2239": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2241": {
      "op": "DUP6"
    },
    "2242": {
      "op": "ADD"
    },
    "2243": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2245": {
      "op": "DUP8"
    },
    "2246": {
      "op": "ADD"
    },
    "2247": {
      "op": "PUSH2",
      "value": "0x874"
    },
    "2250": {
      "jump": "i",
      "op": "JUMP"
    },
    "2251": {
      "op": "JUMPDEST"
    },
    "2252": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2254": {
      "op": "ADD"
    },
    "2255": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2257": {
      "op": "NOT"
    },
    "2258": {
      "op": "AND"
    },
    "2259": {
      "op": "SWAP2"
    },
    "2260": {
      "op": "SWAP1"
    },
    "2261": {
      "op": "SWAP2"
    },
    "2262": {
      "op": "ADD"
    },
    "2263": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2265": {
      "op": "ADD"
    },
    "2266": {
      "op": "SWAP4"
    },
    "2267": {
      "op": "SWAP3"
    },
    "2268": {
      "op": "POP"
    },
    "2269": {
      "op": "POP"
    },
    "2270": {
      "op": "POP"
    },
    "2271": {
      "jump": "o",
      "op": "JUMP"
    },
    "2272": {
      "op": "JUMPDEST"
    },
    "2273": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2275": {
      "op": "DUP3"
    },
    "2276": {
      "op": "NOT"
    },
    "2277": {
      "op": "DUP3"
    },
    "2278": {
      "op": "GT"
    },
    "2279": {
      "op": "ISZERO"
    },
    "2280": {
      "op": "PUSH2",
      "value": "0x901"
    },
    "2283": {
      "op": "JUMPI"
    },
    "2284": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "2289": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2291": {
      "op": "SHL"
    },
    "2292": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2294": {
      "op": "MSTORE"
    },
    "2295": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "2297": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "2299": {
      "op": "MSTORE"
    },
    "2300": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2302": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2304": {
      "op": "REVERT"
    },
    "2305": {
      "op": "JUMPDEST"
    },
    "2306": {
      "op": "POP"
    },
    "2307": {
      "op": "ADD"
    },
    "2308": {
      "op": "SWAP1"
    },
    "2309": {
      "jump": "o",
      "op": "JUMP"
    },
    "2310": {
      "op": "JUMPDEST"
    },
    "2311": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2313": {
      "op": "DUP1"
    },
    "2314": {
      "op": "DUP4"
    },
    "2315": {
      "op": "CALLDATALOAD"
    },
    "2316": {
      "op": "PUSH1",
      "value": "0x1E"
    },
    "2318": {
      "op": "NOT"
    },
    "2319": {
      "op": "DUP5"
    },
    "2320": {
      "op": "CALLDATASIZE"
    },
    "2321": {
      "op": "SUB"
    },
    "2322": {
      "op": "ADD"
    },
    "2323": {
      "op": "DUP2"
    },
    "2324": {
      "op": "SLT"
    },
    "2325": {
      "op": "PUSH2",
      "value": "0x91D"
    },
    "2328": {
      "op": "JUMPI"
    },
    "2329": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2331": {
      "op": "DUP1"
    },
    "2332": {
      "op": "REVERT"
    },
    "2333": {
      "op": "JUMPDEST"
    },
    "2334": {
      "op": "DUP4"
    },
    "2335": {
      "op": "ADD"
    },
    "2336": {
      "op": "DUP1"
    },
    "2337": {
      "op": "CALLDATALOAD"
    },
    "2338": {
      "op": "SWAP2"
    },
    "2339": {
      "op": "POP"
    },
    "2340": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "2349": {
      "op": "DUP3"
    },
    "2350": {
      "op": "GT"
    },
    "2351": {
      "op": "ISZERO"
    },
    "2352": {
      "op": "PUSH2",
      "value": "0x938"
    },
    "2355": {
      "op": "JUMPI"
    },
    "2356": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2358": {
      "op": "DUP1"
    },
    "2359": {
      "op": "REVERT"
    },
    "2360": {
      "op": "JUMPDEST"
    },
    "2361": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2363": {
      "op": "ADD"
    },
    "2364": {
      "op": "SWAP2"
    },
    "2365": {
      "op": "POP"
    },
    "2366": {
      "op": "CALLDATASIZE"
    },
    "2367": {
      "op": "DUP2"
    },
    "2368": {
      "op": "SWAP1"
    },
    "2369": {
      "op": "SUB"
    },
    "2370": {
      "op": "DUP3"
    },
    "2371": {
      "op": "SGT"
    },
    "2372": {
      "op": "ISZERO"
    },
    "2373": {
      "op": "PUSH2",
      "value": "0x94D"
    },
    "2376": {
      "op": "JUMPI"
    },
    "2377": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2379": {
      "op": "DUP1"
    },
    "2380": {
      "op": "REVERT"
    },
    "2381": {
      "op": "JUMPDEST"
    },
    "2382": {
      "op": "SWAP3"
    },
    "2383": {
      "op": "POP"
    },
    "2384": {
      "op": "SWAP3"
    },
    "2385": {
      "op": "SWAP1"
    },
    "2386": {
      "op": "POP"
    },
    "2387": {
      "jump": "o",
      "op": "JUMP"
    },
    "2388": {
      "op": "JUMPDEST"
    },
    "2389": {
      "op": "DUP3"
    },
    "2390": {
      "op": "DUP5"
    },
    "2391": {
      "op": "DUP3"
    },
    "2392": {
      "op": "CALLDATACOPY"
    },
    "2393": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2395": {
      "op": "SWAP2"
    },
    "2396": {
      "op": "SWAP1"
    },
    "2397": {
      "op": "SWAP2"
    },
    "2398": {
      "op": "SHL"
    },
    "2399": {
      "op": "PUSH12",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "2412": {
      "op": "NOT"
    },
    "2413": {
      "op": "AND"
    },
    "2414": {
      "op": "SWAP2"
    },
    "2415": {
      "op": "ADD"
    },
    "2416": {
      "op": "SWAP1"
    },
    "2417": {
      "op": "DUP2"
    },
    "2418": {
      "op": "MSTORE"
    },
    "2419": {
      "op": "PUSH1",
      "value": "0x14"
    },
    "2421": {
      "op": "ADD"
    },
    "2422": {
      "op": "SWAP2"
    },
    "2423": {
      "op": "SWAP1"
    },
    "2424": {
      "op": "POP"
    },
    "2425": {
      "jump": "o",
      "op": "JUMP"
    },
    "2426": {
      "op": "JUMPDEST"
    },
    "2427": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2429": {
      "op": "DUP3"
    },
    "2430": {
      "op": "MLOAD"
    },
    "2431": {
      "op": "PUSH2",
      "value": "0x98C"
    },
    "2434": {
      "op": "DUP2"
    },
    "2435": {
      "op": "DUP5"
    },
    "2436": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2438": {
      "op": "DUP8"
    },
    "2439": {
      "op": "ADD"
    },
    "2440": {
      "op": "PUSH2",
      "value": "0x874"
    },
    "2443": {
      "jump": "i",
      "op": "JUMP"
    },
    "2444": {
      "op": "JUMPDEST"
    },
    "2445": {
      "op": "SWAP2"
    },
    "2446": {
      "op": "SWAP1"
    },
    "2447": {
      "op": "SWAP2"
    },
    "2448": {
      "op": "ADD"
    },
    "2449": {
      "op": "SWAP3"
    },
    "2450": {
      "op": "SWAP2"
    },
    "2451": {
      "op": "POP"
    },
    "2452": {
      "op": "POP"
    },
    "2453": {
      "jump": "o",
      "op": "JUMP"
    },
    "2454": {
      "op": "JUMPDEST"
    },
    "2455": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2457": {
      "op": "DUP3"
    },
    "2458": {
      "op": "PUSH2",
      "value": "0x9B3"
    },
    "2461": {
      "op": "JUMPI"
    },
    "2462": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "2467": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2469": {
      "op": "SHL"
    },
    "2470": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2472": {
      "op": "MSTORE"
    },
    "2473": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "2475": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "2477": {
      "op": "MSTORE"
    },
    "2478": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2480": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2482": {
      "op": "REVERT"
    },
    "2483": {
      "op": "JUMPDEST"
    },
    "2484": {
      "op": "POP"
    },
    "2485": {
      "op": "DIV"
    },
    "2486": {
      "op": "SWAP1"
    },
    "2487": {
      "jump": "o",
      "op": "JUMP"
    },
    "2488": {
      "op": "JUMPDEST"
    },
    "2489": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "2494": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2496": {
      "op": "SHL"
    },
    "2497": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2499": {
      "op": "MSTORE"
    },
    "2500": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2502": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "2504": {
      "op": "MSTORE"
    },
    "2505": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2507": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2509": {
      "op": "REVERT"
    },
    "2510": {
      "op": "JUMPDEST"
    },
    "2511": {
      "op": "DUP2"
    },
    "2512": {
      "op": "DUP4"
    },
    "2513": {
      "op": "DUP3"
    },
    "2514": {
      "op": "CALLDATACOPY"
    },
    "2515": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2517": {
      "op": "SWAP2"
    },
    "2518": {
      "op": "ADD"
    },
    "2519": {
      "op": "SWAP1"
    },
    "2520": {
      "op": "DUP2"
    },
    "2521": {
      "op": "MSTORE"
    },
    "2522": {
      "op": "SWAP2"
    },
    "2523": {
      "op": "SWAP1"
    },
    "2524": {
      "op": "POP"
    },
    "2525": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "1afbef0ffe65c820cae2ae93a377f62f619cc1f4",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"../utils/cryptography/ECDSA.sol\";\nimport \"../utils/cryptography/draft-EIP712.sol\";\n\n/*\n * @dev Simple minimal forwarder to be used together with an ERC2771 compatible contract. See {ERC2771Context}.\n */\ncontract MinimalForwarder is EIP712 {\n    using ECDSA for bytes32;\n\n    struct ForwardRequest {\n        address from;\n        address to;\n        uint256 value;\n        uint256 gas;\n        uint256 nonce;\n        bytes data;\n    }\n\n    bytes32 private constant _TYPEHASH =\n        keccak256(\"ForwardRequest(address from,address to,uint256 value,uint256 gas,uint256 nonce,bytes data)\");\n\n    mapping(address => uint256) private _nonces;\n\n    constructor() EIP712(\"MinimalForwarder\", \"0.0.1\") {}\n\n    function getNonce(address from) public view returns (uint256) {\n        return _nonces[from];\n    }\n\n    function verify(ForwardRequest calldata req, bytes calldata signature) public view returns (bool) {\n        address signer = _hashTypedDataV4(\n            keccak256(abi.encode(_TYPEHASH, req.from, req.to, req.value, req.gas, req.nonce, keccak256(req.data)))\n        ).recover(signature);\n        return _nonces[req.from] == req.nonce && signer == req.from;\n    }\n\n    function execute(ForwardRequest calldata req, bytes calldata signature)\n        public\n        payable\n        returns (bool, bytes memory)\n    {\n        require(verify(req, signature), \"MinimalForwarder: signature does not match request\");\n        _nonces[req.from] = req.nonce + 1;\n\n        (bool success, bytes memory returndata) = req.to.call{gas: req.gas, value: req.value}(\n            abi.encodePacked(req.data, req.from)\n        );\n        // Validate that the relayer has sent enough gas for the call.\n        // See https://ronan.eth.link/blog/ethereum-gas-dangers/\n        assert(gasleft() > req.gas / 63);\n\n        return (success, returndata);\n    }\n}\n",
  "sourceMap": "269:1636:12:-:0;;;710:52;;;;;;;;;-1:-1:-1;2340:564:155;;;;;;;;;;;-1:-1:-1;;;2340:564:155;;;;;;;;;;;;;;;;;-1:-1:-1;;;2340:564:155;;;;2426:22;;;;2663:25;;;;2482;2698:31;;;;2758:13;2739:32;;;;3447:73;;2536:117;3447:73;;;273:25:174;;;314:18;;;307:34;;;;357:18;;;350:34;;;;400:18;;;;393:34;;;;3514:4:155;443:19:174;;;436:61;3447:73:155;;;;;;;;;;245:19:174;;;;3447:73:155;;;3437:84;;;;;;;;;;2781:85;;2876:21;;269:1636:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
  "sourcePath": "contracts/openzeppelin/contracts/metatx/MinimalForwarder.sol",
  "type": "contract"
}