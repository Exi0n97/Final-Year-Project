{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "beacon",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "stateMutability": "payable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "previousAdmin",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newAdmin",
          "type": "address"
        }
      ],
      "name": "AdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "beacon",
          "type": "address"
        }
      ],
      "name": "BeaconUpgraded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "implementation",
          "type": "address"
        }
      ],
      "name": "Upgraded",
      "type": "event"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "allSourcePaths": {
    "89": "contracts/openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol",
    "90": "contracts/openzeppelin/contracts/proxy/Proxy.sol",
    "91": "contracts/openzeppelin/contracts/proxy/beacon/BeaconProxy.sol",
    "92": "contracts/openzeppelin/contracts/proxy/beacon/IBeacon.sol"
  },
  "ast": {
    "absolutePath": "contracts/openzeppelin/contracts/proxy/beacon/BeaconProxy.sol",
    "exportedSymbols": {
      "Address": [
        17882
      ],
      "BeaconProxy": [
        9101
      ],
      "ERC1967Upgrade": [
        8967
      ],
      "IBeacon": [
        9111
      ],
      "Proxy": [
        9019
      ],
      "StorageSlot": [
        18288
      ]
    },
    "id": 9102,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 9021,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:91"
      },
      {
        "absolutePath": "contracts/openzeppelin/contracts/proxy/beacon/IBeacon.sol",
        "file": "./IBeacon.sol",
        "id": 9022,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 9102,
        "sourceUnit": 9112,
        "src": "58:23:91",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/openzeppelin/contracts/proxy/Proxy.sol",
        "file": "../Proxy.sol",
        "id": 9023,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 9102,
        "sourceUnit": 9020,
        "src": "82:22:91",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol",
        "file": "../ERC1967/ERC1967Upgrade.sol",
        "id": 9024,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 9102,
        "sourceUnit": 8968,
        "src": "105:39:91",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 9026,
              "name": "Proxy",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 9019,
              "src": "524:5:91"
            },
            "id": 9027,
            "nodeType": "InheritanceSpecifier",
            "src": "524:5:91"
          },
          {
            "baseName": {
              "id": 9028,
              "name": "ERC1967Upgrade",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 8967,
              "src": "531:14:91"
            },
            "id": 9029,
            "nodeType": "InheritanceSpecifier",
            "src": "531:14:91"
          }
        ],
        "canonicalName": "BeaconProxy",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 9025,
          "nodeType": "StructuredDocumentation",
          "src": "146:353:91",
          "text": " @dev This contract implements a proxy that gets the implementation address for each call from a {UpgradeableBeacon}.\n The beacon address is stored in storage slot `uint256(keccak256('eip1967.proxy.beacon')) - 1`, so that it doesn't\n conflict with the storage layout of the implementation behind the proxy.\n _Available since v3.4._"
        },
        "fullyImplemented": true,
        "id": 9101,
        "linearizedBaseContracts": [
          9101,
          8967,
          9019
        ],
        "name": "BeaconProxy",
        "nameLocation": "509:11:91",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 9059,
              "nodeType": "Block",
              "src": "1037:150:91",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 9050,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 9038,
                          "name": "_BEACON_SLOT",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8874,
                          "src": "1054:12:91",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 9048,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "leftExpression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "656970313936372e70726f78792e626561636f6e",
                                        "id": 9044,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "string",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "1096:22:91",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_stringliteral_a3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d51",
                                          "typeString": "literal_string \"eip1967.proxy.beacon\""
                                        },
                                        "value": "eip1967.proxy.beacon"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_stringliteral_a3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d51",
                                          "typeString": "literal_string \"eip1967.proxy.beacon\""
                                        }
                                      ],
                                      "id": 9043,
                                      "name": "keccak256",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -8,
                                      "src": "1086:9:91",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                        "typeString": "function (bytes memory) pure returns (bytes32)"
                                      }
                                    },
                                    "id": 9045,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "1086:33:91",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  ],
                                  "id": 9042,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "1078:7:91",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint256_$",
                                    "typeString": "type(uint256)"
                                  },
                                  "typeName": {
                                    "id": 9041,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "1078:7:91",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 9046,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1078:42:91",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "hexValue": "31",
                                "id": 9047,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1123:1:91",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              },
                              "src": "1078:46:91",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 9040,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1070:7:91",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_bytes32_$",
                              "typeString": "type(bytes32)"
                            },
                            "typeName": {
                              "id": 9039,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "1070:7:91",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 9049,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1070:55:91",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "1054:71:91",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 9037,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -3,
                      "src": "1047:6:91",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 9051,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1047:79:91",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9052,
                  "nodeType": "ExpressionStatement",
                  "src": "1047:79:91"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 9054,
                        "name": "beacon",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9032,
                        "src": "1160:6:91",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 9055,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9034,
                        "src": "1168:4:91",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 9056,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1174:5:91",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 9053,
                      "name": "_upgradeBeaconToAndCall",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8966,
                      "src": "1136:23:91",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_bool_$returns$__$",
                        "typeString": "function (address,bytes memory,bool)"
                      }
                    },
                    "id": 9057,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1136:44:91",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9058,
                  "nodeType": "ExpressionStatement",
                  "src": "1136:44:91"
                }
              ]
            },
            "documentation": {
              "id": 9030,
              "nodeType": "StructuredDocumentation",
              "src": "552:425:91",
              "text": " @dev Initializes the proxy with `beacon`.\n If `data` is nonempty, it's used as data in a delegate call to the implementation returned by the beacon. This\n will typically be an encoded function call, and allows initializating the storage of the proxy like a Solidity\n constructor.\n Requirements:\n - `beacon` must be a contract with the interface {IBeacon}."
            },
            "id": 9060,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9035,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9032,
                  "mutability": "mutable",
                  "name": "beacon",
                  "nameLocation": "1002:6:91",
                  "nodeType": "VariableDeclaration",
                  "scope": 9060,
                  "src": "994:14:91",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9031,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "994:7:91",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9034,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "1023:4:91",
                  "nodeType": "VariableDeclaration",
                  "scope": 9060,
                  "src": "1010:17:91",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 9033,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1010:5:91",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "993:35:91"
            },
            "returnParameters": {
              "id": 9036,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1037:0:91"
            },
            "scope": 9101,
            "src": "982:205:91",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 9069,
              "nodeType": "Block",
              "src": "1316:36:91",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 9066,
                      "name": "_getBeacon",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8892,
                      "src": "1333:10:91",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 9067,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1333:12:91",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 9065,
                  "id": 9068,
                  "nodeType": "Return",
                  "src": "1326:19:91"
                }
              ]
            },
            "documentation": {
              "id": 9061,
              "nodeType": "StructuredDocumentation",
              "src": "1193:59:91",
              "text": " @dev Returns the current beacon address."
            },
            "id": 9070,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_beacon",
            "nameLocation": "1266:7:91",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9062,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1273:2:91"
            },
            "returnParameters": {
              "id": 9065,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9064,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 9070,
                  "src": "1307:7:91",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9063,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1307:7:91",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1306:9:91"
            },
            "scope": 9101,
            "src": "1257:95:91",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              8984
            ],
            "body": {
              "id": 9084,
              "nodeType": "Block",
              "src": "1531:62:91",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 9078,
                              "name": "_getBeacon",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8892,
                              "src": "1556:10:91",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 9079,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1556:12:91",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 9077,
                          "name": "IBeacon",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9111,
                          "src": "1548:7:91",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IBeacon_$9111_$",
                            "typeString": "type(contract IBeacon)"
                          }
                        },
                        "id": 9080,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1548:21:91",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IBeacon_$9111",
                          "typeString": "contract IBeacon"
                        }
                      },
                      "id": 9081,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "implementation",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9110,
                      "src": "1548:36:91",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                        "typeString": "function () view external returns (address)"
                      }
                    },
                    "id": 9082,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1548:38:91",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 9076,
                  "id": 9083,
                  "nodeType": "Return",
                  "src": "1541:45:91"
                }
              ]
            },
            "documentation": {
              "id": 9071,
              "nodeType": "StructuredDocumentation",
              "src": "1358:92:91",
              "text": " @dev Returns the current implementation address of the associated beacon."
            },
            "id": 9085,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_implementation",
            "nameLocation": "1464:15:91",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 9073,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1504:8:91"
            },
            "parameters": {
              "id": 9072,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1479:2:91"
            },
            "returnParameters": {
              "id": 9076,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9075,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 9085,
                  "src": "1522:7:91",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9074,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1522:7:91",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1521:9:91"
            },
            "scope": 9101,
            "src": "1455:138:91",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 9099,
              "nodeType": "Block",
              "src": "2043:61:91",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 9094,
                        "name": "beacon",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9088,
                        "src": "2077:6:91",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 9095,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9090,
                        "src": "2085:4:91",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 9096,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2091:5:91",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 9093,
                      "name": "_upgradeBeaconToAndCall",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8966,
                      "src": "2053:23:91",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_bool_$returns$__$",
                        "typeString": "function (address,bytes memory,bool)"
                      }
                    },
                    "id": 9097,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2053:44:91",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9098,
                  "nodeType": "ExpressionStatement",
                  "src": "2053:44:91"
                }
              ]
            },
            "documentation": {
              "id": 9086,
              "nodeType": "StructuredDocumentation",
              "src": "1599:367:91",
              "text": " @dev Changes the proxy to use a new beacon. Deprecated: see {_upgradeBeaconToAndCall}.\n If `data` is nonempty, it's used as data in a delegate call to the implementation returned by the beacon.\n Requirements:\n - `beacon` must be a contract.\n - The implementation returned by `beacon` must be a contract."
            },
            "id": 9100,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_setBeacon",
            "nameLocation": "1980:10:91",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9091,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9088,
                  "mutability": "mutable",
                  "name": "beacon",
                  "nameLocation": "1999:6:91",
                  "nodeType": "VariableDeclaration",
                  "scope": 9100,
                  "src": "1991:14:91",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9087,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1991:7:91",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9090,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "2020:4:91",
                  "nodeType": "VariableDeclaration",
                  "scope": 9100,
                  "src": "2007:17:91",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 9089,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2007:5:91",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1990:35:91"
            },
            "returnParameters": {
              "id": 9092,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2043:0:91"
            },
            "scope": 9101,
            "src": "1971:133:91",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "scope": 9102,
        "src": "500:1606:91",
        "usedErrors": []
      }
    ],
    "src": "33:2074:91"
  },
  "bytecode": "608060405260405161096638038061096683398101604081905261002291610479565b61004d60017fa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d51610539565b60008051602061091f833981519152146100695761006961055e565b6100758282600061007c565b50506105de565b61008583610147565b6040516001600160a01b038416907f1cf3b03a6cf19fa2baba4df148e9dcabedea7f8a5c07840e207e5c089be95d3e90600090a26000825111806100c65750805b1561014257610140836001600160a01b0316635c60da1b6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561010c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101309190610574565b836102d860201b6100291760201c565b505b505050565b61015a8161030460201b6100551760201c565b6101b95760405162461bcd60e51b815260206004820152602560248201527f455243313936373a206e657720626561636f6e206973206e6f74206120636f6e6044820152641d1c9858dd60da1b60648201526084015b60405180910390fd5b61022d816001600160a01b0316635c60da1b6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156101fa573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061021e9190610574565b61030460201b6100551760201c565b6102925760405162461bcd60e51b815260206004820152603060248201527f455243313936373a20626561636f6e20696d706c656d656e746174696f6e206960448201526f1cc81b9bdd08184818dbdb9d1c9858dd60821b60648201526084016101b0565b806102b760008051602061091f83398151915260001b61030a60201b61005b1760201c565b80546001600160a01b0319166001600160a01b039290921691909117905550565b60606102fd838360405180606001604052806027815260200161093f6027913961030d565b9392505050565b3b151590565b90565b6060833b61036c5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b60648201526084016101b0565b600080856001600160a01b031685604051610387919061058f565b600060405180830381855af49150503d80600081146103c2576040519150601f19603f3d011682016040523d82523d6000602084013e6103c7565b606091505b5090925090506103d88282866103e2565b9695505050505050565b606083156103f15750816102fd565b8251156104015782518084602001fd5b8160405162461bcd60e51b81526004016101b091906105ab565b80516001600160a01b038116811461043257600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b60005b83811015610468578181015183820152602001610450565b838111156101405750506000910152565b6000806040838503121561048c57600080fd5b6104958361041b565b60208401519092506001600160401b03808211156104b257600080fd5b818501915085601f8301126104c657600080fd5b8151818111156104d8576104d8610437565b604051601f8201601f19908116603f0116810190838211818310171561050057610500610437565b8160405282815288602084870101111561051957600080fd5b61052a83602083016020880161044d565b80955050505050509250929050565b60008282101561055957634e487b7160e01b600052601160045260246000fd5b500390565b634e487b7160e01b600052600160045260246000fd5b60006020828403121561058657600080fd5b6102fd8261041b565b600082516105a181846020870161044d565b9190910192915050565b60208152600082518060208401526105ca81604085016020870161044d565b601f01601f19169190910160400192915050565b610332806105ed6000396000f3fe60806040523661001357610011610017565b005b6100115b61002761002261005e565b6100f7565b565b606061004e83836040518060600160405280602781526020016102d66027913961011b565b9392505050565b3b151590565b90565b60006100917fa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50546001600160a01b031690565b6001600160a01b0316635c60da1b6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156100ce573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100f2919061022d565b905090565b3660008037600080366000845af43d6000803e808015610116573d6000f35b3d6000fd5b6060833b61017f5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b60648201526084015b60405180910390fd5b600080856001600160a01b03168560405161019a9190610286565b600060405180830381855af49150503d80600081146101d5576040519150601f19603f3d011682016040523d82523d6000602084013e6101da565b606091505b50915091506101ea8282866101f4565b9695505050505050565b6060831561020357508161004e565b8251156102135782518084602001fd5b8160405162461bcd60e51b815260040161017691906102a2565b60006020828403121561023f57600080fd5b81516001600160a01b038116811461004e57600080fd5b60005b83811015610271578181015183820152602001610259565b83811115610280576000848401525b50505050565b60008251610298818460208701610256565b9190910192915050565b60208152600082518060208401526102c1816040850160208701610256565b601f01601f1916919091016040019291505056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220ab0d83c1c04d79e763dccb6ede56c3adef1532ac317d2e5188ec06fd18a4630e64736f6c634300080c0033a3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
  "bytecodeSha1": "da39a3ee5e6b4b0d3255bfef95601890afd80709",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.12+commit.f00d7308"
  },
  "contractName": "BeaconProxy",
  "coverageMap": {
    "branches": {
      "89": {},
      "90": {},
      "91": {},
      "92": {}
    },
    "statements": {
      "89": {
        "ERC1967Upgrade._getBeacon": {
          "4": [
            5503,
            5556
          ]
        }
      },
      "90": {
        "Proxy.<fallback>": {
          "1": [
            2610,
            2621
          ]
        },
        "Proxy.<receive>": {
          "0": [
            2833,
            2844
          ]
        },
        "Proxy._fallback": {
          "2": [
            2332,
            2360
          ]
        }
      },
      "91": {
        "BeaconProxy._implementation": {
          "3": [
            1541,
            1586
          ]
        }
      },
      "92": {}
    }
  },
  "dependencies": [
    "ERC1967Upgrade",
    "IBeacon",
    "Proxy"
  ],
  "deployedBytecode": "60806040523661001357610011610017565b005b6100115b61002761002261005e565b6100f7565b565b606061004e83836040518060600160405280602781526020016102d66027913961011b565b9392505050565b3b151590565b90565b60006100917fa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50546001600160a01b031690565b6001600160a01b0316635c60da1b6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156100ce573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100f2919061022d565b905090565b3660008037600080366000845af43d6000803e808015610116573d6000f35b3d6000fd5b6060833b61017f5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b60648201526084015b60405180910390fd5b600080856001600160a01b03168560405161019a9190610286565b600060405180830381855af49150503d80600081146101d5576040519150601f19603f3d011682016040523d82523d6000602084013e6101da565b606091505b50915091506101ea8282866101f4565b9695505050505050565b6060831561020357508161004e565b8251156102135782518084602001fd5b8160405162461bcd60e51b815260040161017691906102a2565b60006020828403121561023f57600080fd5b81516001600160a01b038116811461004e57600080fd5b60005b83811015610271578181015183820152602001610259565b83811115610280576000848401525b50505050565b60008251610298818460208701610256565b9190910192915050565b60208152600082518060208401526102c1816040850160208701610256565b601f01601f1916919091016040019291505056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220ab0d83c1c04d79e763dccb6ede56c3adef1532ac317d2e5188ec06fd18a4630e64736f6c634300080c0033",
  "deployedSourceMap": "500:1606:91:-:0;;;;;;2833:11:90;:9;:11::i;:::-;500:1606:91;;2610:11:90;2257:110;2332:28;2342:17;:15;:17::i;:::-;2332:9;:28::i;:::-;2257:110::o;6172:198:144:-;6255:12;6286:77;6307:6;6315:4;6286:77;;;;;;;;;;;;;;;;;:20;:77::i;:::-;6279:84;6172:198;-1:-1:-1;;;6172:198:144:o;718:377::-;1034:20;1080:8;;;718:377::o;1542:147:150:-;1669:4;1542:147::o;1455:138:91:-;1522:7;1556:12;5194:66:89;5510:46;-1:-1:-1;;;;;5510:46:89;;5439:124;1556:12:91;-1:-1:-1;;;;;1548:36:91;;:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1541:45;;1455:138;:::o;883:895:90:-;1221:14;1218:1;1215;1202:34;1435:1;1432;1416:14;1413:1;1397:14;1390:5;1377:60;1511:16;1508:1;1505;1490:38;1549:6;1616:66;;;;1731:16;1728:1;1721:27;1616:66;1651:16;1648:1;1641:27;6556:388:144;6697:12;1034:20;;6721:69;;;;-1:-1:-1;;;6721:69:144;;511:2:174;6721:69:144;;;493:21:174;550:2;530:18;;;523:30;589:34;569:18;;;562:62;-1:-1:-1;;;640:18:174;;;633:36;686:19;;6721:69:144;;;;;;;;;6802:12;6816:23;6843:6;-1:-1:-1;;;;;6843:19:144;6863:4;6843:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6801:67;;;;6885:52;6903:7;6912:10;6924:12;6885:17;:52::i;:::-;6878:59;6556:388;-1:-1:-1;;;;;;6556:388:144:o;6950:692::-;7096:12;7124:7;7120:516;;;-1:-1:-1;7154:10:144;7147:17;;7120:516;7265:17;;:21;7261:365;;7459:10;7453:17;7519:15;7506:10;7502:2;7498:19;7491:44;7261:365;7598:12;7591:20;;-1:-1:-1;;;7591:20:144;;;;;;;;:::i;14:290:174:-;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:174;;214:42;;204:70;;270:1;267;260:12;716:258;788:1;798:113;812:6;809:1;806:13;798:113;;;888:11;;;882:18;869:11;;;862:39;834:2;827:10;798:113;;;929:6;926:1;923:13;920:48;;;964:1;955:6;950:3;946:16;939:27;920:48;;716:258;;;:::o;979:274::-;1108:3;1146:6;1140:13;1162:53;1208:6;1203:3;1196:4;1188:6;1184:17;1162:53;:::i;:::-;1231:16;;;;;979:274;-1:-1:-1;;979:274:174:o;1258:383::-;1407:2;1396:9;1389:21;1370:4;1439:6;1433:13;1482:6;1477:2;1466:9;1462:18;1455:34;1498:66;1557:6;1552:2;1541:9;1537:18;1532:2;1524:6;1520:15;1498:66;:::i;:::-;1625:2;1604:15;-1:-1:-1;;1600:29:174;1585:45;;;;1632:2;1581:54;;1258:383;-1:-1:-1;;1258:383:174:o",
  "language": "Solidity",
  "natspec": {
    "details": "This contract implements a proxy that gets the implementation address for each call from a {UpgradeableBeacon}. The beacon address is stored in storage slot `uint256(keccak256('eip1967.proxy.beacon')) - 1`, so that it doesn't conflict with the storage layout of the implementation behind the proxy. _Available since v3.4._",
    "kind": "dev",
    "methods": {
      "constructor": {
        "details": "Initializes the proxy with `beacon`. If `data` is nonempty, it's used as data in a delegate call to the implementation returned by the beacon. This will typically be an encoded function call, and allows initializating the storage of the proxy like a Solidity constructor. Requirements: - `beacon` must be a contract with the interface {IBeacon}."
      }
    },
    "version": 1
  },
  "offset": [
    500,
    2106
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLDATASIZE PUSH2 0x13 JUMPI PUSH2 0x11 PUSH2 0x17 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x11 JUMPDEST PUSH2 0x27 PUSH2 0x22 PUSH2 0x5E JUMP JUMPDEST PUSH2 0xF7 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 PUSH2 0x4E DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2D6 PUSH1 0x27 SWAP2 CODECOPY PUSH2 0x11B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST EXTCODESIZE ISZERO ISZERO SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x91 PUSH32 0xA3F0AD74E5423AEBFD80D3EF4346578335A9A72AEAEE59FF6CB3582B35133D50 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x5C60DA1B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xCE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xF2 SWAP2 SWAP1 PUSH2 0x22D JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST CALLDATASIZE PUSH1 0x0 DUP1 CALLDATACOPY PUSH1 0x0 DUP1 CALLDATASIZE PUSH1 0x0 DUP5 GAS DELEGATECALL RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY DUP1 DUP1 ISZERO PUSH2 0x116 JUMPI RETURNDATASIZE PUSH1 0x0 RETURN JUMPDEST RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST PUSH1 0x60 DUP4 EXTCODESIZE PUSH2 0x17F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2064656C65676174652063616C6C20746F206E6F6E2D636F PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x1B9D1C9858DD PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x40 MLOAD PUSH2 0x19A SWAP2 SWAP1 PUSH2 0x286 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1D5 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1DA JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x1EA DUP3 DUP3 DUP7 PUSH2 0x1F4 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x203 JUMPI POP DUP2 PUSH2 0x4E JUMP JUMPDEST DUP3 MLOAD ISZERO PUSH2 0x213 JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x176 SWAP2 SWAP1 PUSH2 0x2A2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x23F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x4E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x271 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x259 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x280 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x298 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x256 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x2C1 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x256 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP INVALID COINBASE PUSH5 0x6472657373 GASPRICE KECCAK256 PUSH13 0x6F772D6C6576656C2064656C65 PUSH8 0x6174652063616C6C KECCAK256 PUSH7 0x61696C6564A264 PUSH10 0x70667358221220AB0D83 0xC1 0xC0 0x4D PUSH26 0xE763DCCB6EDE56C3ADEF1532AC317D2E5188EC06FD18A4630E64 PUSH20 0x6F6C634300080C00330000000000000000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        500,
        2106
      ],
      "op": "PUSH1",
      "path": "91",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        500,
        2106
      ],
      "op": "PUSH1",
      "path": "91",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        500,
        2106
      ],
      "op": "MSTORE",
      "path": "91"
    },
    "5": {
      "fn": null,
      "offset": [
        500,
        2106
      ],
      "op": "CALLDATASIZE",
      "path": "91"
    },
    "6": {
      "fn": null,
      "offset": [
        500,
        2106
      ],
      "op": "PUSH2",
      "path": "91",
      "value": "0x13"
    },
    "9": {
      "fn": null,
      "offset": [
        500,
        2106
      ],
      "op": "JUMPI",
      "path": "91"
    },
    "10": {
      "fn": "Proxy.<receive>",
      "offset": [
        2833,
        2844
      ],
      "op": "PUSH2",
      "path": "90",
      "statement": 0,
      "value": "0x11"
    },
    "13": {
      "fn": "Proxy.<receive>",
      "offset": [
        2833,
        2842
      ],
      "op": "PUSH2",
      "path": "90",
      "value": "0x17"
    },
    "16": {
      "fn": "Proxy.<receive>",
      "jump": "i",
      "offset": [
        2833,
        2844
      ],
      "op": "JUMP",
      "path": "90"
    },
    "17": {
      "fn": "Proxy.<receive>",
      "offset": [
        2833,
        2844
      ],
      "op": "JUMPDEST",
      "path": "90"
    },
    "18": {
      "offset": [
        500,
        2106
      ],
      "op": "STOP",
      "path": "91"
    },
    "19": {
      "fn": "Proxy.<receive>",
      "offset": [
        500,
        2106
      ],
      "op": "JUMPDEST",
      "path": "91"
    },
    "20": {
      "fn": "Proxy.<fallback>",
      "offset": [
        2610,
        2621
      ],
      "op": "PUSH2",
      "path": "90",
      "statement": 1,
      "value": "0x11"
    },
    "23": {
      "fn": "Proxy._fallback",
      "offset": [
        2257,
        2367
      ],
      "op": "JUMPDEST",
      "path": "90"
    },
    "24": {
      "fn": "Proxy._fallback",
      "offset": [
        2332,
        2360
      ],
      "op": "PUSH2",
      "path": "90",
      "statement": 2,
      "value": "0x27"
    },
    "27": {
      "fn": "Proxy._fallback",
      "offset": [
        2342,
        2359
      ],
      "op": "PUSH2",
      "path": "90",
      "value": "0x22"
    },
    "30": {
      "fn": "Proxy._fallback",
      "offset": [
        2342,
        2357
      ],
      "op": "PUSH2",
      "path": "90",
      "value": "0x5E"
    },
    "33": {
      "fn": "Proxy._fallback",
      "jump": "i",
      "offset": [
        2342,
        2359
      ],
      "op": "JUMP",
      "path": "90"
    },
    "34": {
      "fn": "Proxy._fallback",
      "offset": [
        2342,
        2359
      ],
      "op": "JUMPDEST",
      "path": "90"
    },
    "35": {
      "fn": "Proxy._fallback",
      "offset": [
        2332,
        2341
      ],
      "op": "PUSH2",
      "path": "90",
      "value": "0xF7"
    },
    "38": {
      "fn": "Proxy._fallback",
      "jump": "i",
      "offset": [
        2332,
        2360
      ],
      "op": "JUMP",
      "path": "90"
    },
    "39": {
      "fn": "Proxy._fallback",
      "offset": [
        2332,
        2360
      ],
      "op": "JUMPDEST",
      "path": "90"
    },
    "40": {
      "fn": "Proxy._fallback",
      "jump": "o",
      "offset": [
        2257,
        2367
      ],
      "op": "JUMP",
      "path": "90"
    },
    "41": {
      "op": "JUMPDEST"
    },
    "42": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "44": {
      "op": "PUSH2",
      "value": "0x4E"
    },
    "47": {
      "op": "DUP4"
    },
    "48": {
      "op": "DUP4"
    },
    "49": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "51": {
      "op": "MLOAD"
    },
    "52": {
      "op": "DUP1"
    },
    "53": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "55": {
      "op": "ADD"
    },
    "56": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "58": {
      "op": "MSTORE"
    },
    "59": {
      "op": "DUP1"
    },
    "60": {
      "op": "PUSH1",
      "value": "0x27"
    },
    "62": {
      "op": "DUP2"
    },
    "63": {
      "op": "MSTORE"
    },
    "64": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "66": {
      "op": "ADD"
    },
    "67": {
      "op": "PUSH2",
      "value": "0x2D6"
    },
    "70": {
      "op": "PUSH1",
      "value": "0x27"
    },
    "72": {
      "op": "SWAP2"
    },
    "73": {
      "op": "CODECOPY"
    },
    "74": {
      "op": "PUSH2",
      "value": "0x11B"
    },
    "77": {
      "jump": "i",
      "op": "JUMP"
    },
    "78": {
      "op": "JUMPDEST"
    },
    "79": {
      "op": "SWAP4"
    },
    "80": {
      "op": "SWAP3"
    },
    "81": {
      "op": "POP"
    },
    "82": {
      "op": "POP"
    },
    "83": {
      "op": "POP"
    },
    "84": {
      "jump": "o",
      "op": "JUMP"
    },
    "85": {
      "op": "JUMPDEST"
    },
    "86": {
      "op": "EXTCODESIZE"
    },
    "87": {
      "op": "ISZERO"
    },
    "88": {
      "op": "ISZERO"
    },
    "89": {
      "op": "SWAP1"
    },
    "90": {
      "jump": "o",
      "op": "JUMP"
    },
    "91": {
      "op": "JUMPDEST"
    },
    "92": {
      "op": "SWAP1"
    },
    "93": {
      "jump": "o",
      "op": "JUMP"
    },
    "94": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1455,
        1593
      ],
      "op": "JUMPDEST",
      "path": "91"
    },
    "95": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1522,
        1529
      ],
      "op": "PUSH1",
      "path": "91",
      "value": "0x0"
    },
    "97": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1556,
        1568
      ],
      "op": "PUSH2",
      "path": "91",
      "statement": 3,
      "value": "0x91"
    },
    "100": {
      "offset": [
        5194,
        5260
      ],
      "op": "PUSH32",
      "path": "89",
      "value": "0xA3F0AD74E5423AEBFD80D3EF4346578335A9A72AEAEE59FF6CB3582B35133D50"
    },
    "133": {
      "fn": "ERC1967Upgrade._getBeacon",
      "offset": [
        5510,
        5556
      ],
      "op": "SLOAD",
      "path": "89",
      "statement": 4
    },
    "134": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "136": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "138": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "140": {
      "op": "SHL"
    },
    "141": {
      "op": "SUB"
    },
    "142": {
      "fn": "ERC1967Upgrade._getBeacon",
      "offset": [
        5510,
        5556
      ],
      "op": "AND",
      "path": "89"
    },
    "143": {
      "fn": "ERC1967Upgrade._getBeacon",
      "offset": [
        5510,
        5556
      ],
      "op": "SWAP1",
      "path": "89"
    },
    "144": {
      "fn": "ERC1967Upgrade._getBeacon",
      "offset": [
        5439,
        5563
      ],
      "op": "JUMP",
      "path": "89"
    },
    "145": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1556,
        1568
      ],
      "op": "JUMPDEST",
      "path": "91"
    },
    "146": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "148": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "150": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "152": {
      "op": "SHL"
    },
    "153": {
      "op": "SUB"
    },
    "154": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1548,
        1584
      ],
      "op": "AND",
      "path": "91"
    },
    "155": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1548,
        1584
      ],
      "op": "PUSH4",
      "path": "91",
      "value": "0x5C60DA1B"
    },
    "160": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1548,
        1586
      ],
      "op": "PUSH1",
      "path": "91",
      "value": "0x40"
    },
    "162": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1548,
        1586
      ],
      "op": "MLOAD",
      "path": "91"
    },
    "163": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1548,
        1586
      ],
      "op": "DUP2",
      "path": "91"
    },
    "164": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1548,
        1586
      ],
      "op": "PUSH4",
      "path": "91",
      "value": "0xFFFFFFFF"
    },
    "169": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1548,
        1586
      ],
      "op": "AND",
      "path": "91"
    },
    "170": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1548,
        1586
      ],
      "op": "PUSH1",
      "path": "91",
      "value": "0xE0"
    },
    "172": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1548,
        1586
      ],
      "op": "SHL",
      "path": "91"
    },
    "173": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1548,
        1586
      ],
      "op": "DUP2",
      "path": "91"
    },
    "174": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1548,
        1586
      ],
      "op": "MSTORE",
      "path": "91"
    },
    "175": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1548,
        1586
      ],
      "op": "PUSH1",
      "path": "91",
      "value": "0x4"
    },
    "177": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1548,
        1586
      ],
      "op": "ADD",
      "path": "91"
    },
    "178": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1548,
        1586
      ],
      "op": "PUSH1",
      "path": "91",
      "value": "0x20"
    },
    "180": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1548,
        1586
      ],
      "op": "PUSH1",
      "path": "91",
      "value": "0x40"
    },
    "182": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1548,
        1586
      ],
      "op": "MLOAD",
      "path": "91"
    },
    "183": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1548,
        1586
      ],
      "op": "DUP1",
      "path": "91"
    },
    "184": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1548,
        1586
      ],
      "op": "DUP4",
      "path": "91"
    },
    "185": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1548,
        1586
      ],
      "op": "SUB",
      "path": "91"
    },
    "186": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1548,
        1586
      ],
      "op": "DUP2",
      "path": "91"
    },
    "187": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1548,
        1586
      ],
      "op": "DUP7",
      "path": "91"
    },
    "188": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1548,
        1586
      ],
      "op": "GAS",
      "path": "91"
    },
    "189": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1548,
        1586
      ],
      "op": "STATICCALL",
      "path": "91"
    },
    "190": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1548,
        1586
      ],
      "op": "ISZERO",
      "path": "91"
    },
    "191": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1548,
        1586
      ],
      "op": "DUP1",
      "path": "91"
    },
    "192": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1548,
        1586
      ],
      "op": "ISZERO",
      "path": "91"
    },
    "193": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1548,
        1586
      ],
      "op": "PUSH2",
      "path": "91",
      "value": "0xCE"
    },
    "196": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1548,
        1586
      ],
      "op": "JUMPI",
      "path": "91"
    },
    "197": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1548,
        1586
      ],
      "op": "RETURNDATASIZE",
      "path": "91"
    },
    "198": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1548,
        1586
      ],
      "op": "PUSH1",
      "path": "91",
      "value": "0x0"
    },
    "200": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1548,
        1586
      ],
      "op": "DUP1",
      "path": "91"
    },
    "201": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1548,
        1586
      ],
      "op": "RETURNDATACOPY",
      "path": "91"
    },
    "202": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1548,
        1586
      ],
      "op": "RETURNDATASIZE",
      "path": "91"
    },
    "203": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1548,
        1586
      ],
      "op": "PUSH1",
      "path": "91",
      "value": "0x0"
    },
    "205": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1548,
        1586
      ],
      "op": "REVERT",
      "path": "91"
    },
    "206": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1548,
        1586
      ],
      "op": "JUMPDEST",
      "path": "91"
    },
    "207": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1548,
        1586
      ],
      "op": "POP",
      "path": "91"
    },
    "208": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1548,
        1586
      ],
      "op": "POP",
      "path": "91"
    },
    "209": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1548,
        1586
      ],
      "op": "POP",
      "path": "91"
    },
    "210": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1548,
        1586
      ],
      "op": "POP",
      "path": "91"
    },
    "211": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1548,
        1586
      ],
      "op": "PUSH1",
      "path": "91",
      "value": "0x40"
    },
    "213": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1548,
        1586
      ],
      "op": "MLOAD",
      "path": "91"
    },
    "214": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1548,
        1586
      ],
      "op": "RETURNDATASIZE",
      "path": "91"
    },
    "215": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1548,
        1586
      ],
      "op": "PUSH1",
      "path": "91",
      "value": "0x1F"
    },
    "217": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1548,
        1586
      ],
      "op": "NOT",
      "path": "91"
    },
    "218": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1548,
        1586
      ],
      "op": "PUSH1",
      "path": "91",
      "value": "0x1F"
    },
    "220": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1548,
        1586
      ],
      "op": "DUP3",
      "path": "91"
    },
    "221": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1548,
        1586
      ],
      "op": "ADD",
      "path": "91"
    },
    "222": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1548,
        1586
      ],
      "op": "AND",
      "path": "91"
    },
    "223": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1548,
        1586
      ],
      "op": "DUP3",
      "path": "91"
    },
    "224": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1548,
        1586
      ],
      "op": "ADD",
      "path": "91"
    },
    "225": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1548,
        1586
      ],
      "op": "DUP1",
      "path": "91"
    },
    "226": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1548,
        1586
      ],
      "op": "PUSH1",
      "path": "91",
      "value": "0x40"
    },
    "228": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1548,
        1586
      ],
      "op": "MSTORE",
      "path": "91"
    },
    "229": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1548,
        1586
      ],
      "op": "POP",
      "path": "91"
    },
    "230": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1548,
        1586
      ],
      "op": "DUP2",
      "path": "91"
    },
    "231": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1548,
        1586
      ],
      "op": "ADD",
      "path": "91"
    },
    "232": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1548,
        1586
      ],
      "op": "SWAP1",
      "path": "91"
    },
    "233": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1548,
        1586
      ],
      "op": "PUSH2",
      "path": "91",
      "value": "0xF2"
    },
    "236": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1548,
        1586
      ],
      "op": "SWAP2",
      "path": "91"
    },
    "237": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1548,
        1586
      ],
      "op": "SWAP1",
      "path": "91"
    },
    "238": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1548,
        1586
      ],
      "op": "PUSH2",
      "path": "91",
      "value": "0x22D"
    },
    "241": {
      "fn": "BeaconProxy._implementation",
      "jump": "i",
      "offset": [
        1548,
        1586
      ],
      "op": "JUMP",
      "path": "91"
    },
    "242": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1548,
        1586
      ],
      "op": "JUMPDEST",
      "path": "91"
    },
    "243": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1541,
        1586
      ],
      "op": "SWAP1",
      "path": "91"
    },
    "244": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1541,
        1586
      ],
      "op": "POP",
      "path": "91"
    },
    "245": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1455,
        1593
      ],
      "op": "SWAP1",
      "path": "91"
    },
    "246": {
      "fn": "BeaconProxy._implementation",
      "jump": "o",
      "offset": [
        1455,
        1593
      ],
      "op": "JUMP",
      "path": "91"
    },
    "247": {
      "fn": "Proxy._delegate",
      "offset": [
        883,
        1778
      ],
      "op": "JUMPDEST",
      "path": "90"
    },
    "248": {
      "fn": "Proxy._delegate",
      "offset": [
        1221,
        1235
      ],
      "op": "CALLDATASIZE",
      "path": "90"
    },
    "249": {
      "fn": "Proxy._delegate",
      "offset": [
        1218,
        1219
      ],
      "op": "PUSH1",
      "path": "90",
      "value": "0x0"
    },
    "251": {
      "fn": "Proxy._delegate",
      "offset": [
        1215,
        1216
      ],
      "op": "DUP1",
      "path": "90"
    },
    "252": {
      "fn": "Proxy._delegate",
      "offset": [
        1202,
        1236
      ],
      "op": "CALLDATACOPY",
      "path": "90"
    },
    "253": {
      "fn": "Proxy._delegate",
      "offset": [
        1435,
        1436
      ],
      "op": "PUSH1",
      "path": "90",
      "value": "0x0"
    },
    "255": {
      "fn": "Proxy._delegate",
      "offset": [
        1432,
        1433
      ],
      "op": "DUP1",
      "path": "90"
    },
    "256": {
      "fn": "Proxy._delegate",
      "offset": [
        1416,
        1430
      ],
      "op": "CALLDATASIZE",
      "path": "90"
    },
    "257": {
      "fn": "Proxy._delegate",
      "offset": [
        1413,
        1414
      ],
      "op": "PUSH1",
      "path": "90",
      "value": "0x0"
    },
    "259": {
      "fn": "Proxy._delegate",
      "offset": [
        1397,
        1411
      ],
      "op": "DUP5",
      "path": "90"
    },
    "260": {
      "fn": "Proxy._delegate",
      "offset": [
        1390,
        1395
      ],
      "op": "GAS",
      "path": "90"
    },
    "261": {
      "fn": "Proxy._delegate",
      "offset": [
        1377,
        1437
      ],
      "op": "DELEGATECALL",
      "path": "90"
    },
    "262": {
      "fn": "Proxy._delegate",
      "offset": [
        1511,
        1527
      ],
      "op": "RETURNDATASIZE",
      "path": "90"
    },
    "263": {
      "fn": "Proxy._delegate",
      "offset": [
        1508,
        1509
      ],
      "op": "PUSH1",
      "path": "90",
      "value": "0x0"
    },
    "265": {
      "fn": "Proxy._delegate",
      "offset": [
        1505,
        1506
      ],
      "op": "DUP1",
      "path": "90"
    },
    "266": {
      "fn": "Proxy._delegate",
      "offset": [
        1490,
        1528
      ],
      "op": "RETURNDATACOPY",
      "path": "90"
    },
    "267": {
      "fn": "Proxy._delegate",
      "offset": [
        1549,
        1555
      ],
      "op": "DUP1",
      "path": "90"
    },
    "268": {
      "fn": "Proxy._delegate",
      "offset": [
        1616,
        1682
      ],
      "op": "DUP1",
      "path": "90"
    },
    "269": {
      "fn": "Proxy._delegate",
      "offset": [
        1616,
        1682
      ],
      "op": "ISZERO",
      "path": "90"
    },
    "270": {
      "fn": "Proxy._delegate",
      "offset": [
        1616,
        1682
      ],
      "op": "PUSH2",
      "path": "90",
      "value": "0x116"
    },
    "273": {
      "fn": "Proxy._delegate",
      "offset": [
        1616,
        1682
      ],
      "op": "JUMPI",
      "path": "90"
    },
    "274": {
      "fn": "Proxy._delegate",
      "offset": [
        1731,
        1747
      ],
      "op": "RETURNDATASIZE",
      "path": "90"
    },
    "275": {
      "fn": "Proxy._delegate",
      "offset": [
        1728,
        1729
      ],
      "op": "PUSH1",
      "path": "90",
      "value": "0x0"
    },
    "277": {
      "fn": "Proxy._delegate",
      "offset": [
        1721,
        1748
      ],
      "op": "RETURN",
      "path": "90"
    },
    "278": {
      "fn": "Proxy._delegate",
      "offset": [
        1616,
        1682
      ],
      "op": "JUMPDEST",
      "path": "90"
    },
    "279": {
      "fn": "Proxy._delegate",
      "offset": [
        1651,
        1667
      ],
      "op": "RETURNDATASIZE",
      "path": "90"
    },
    "280": {
      "fn": "Proxy._delegate",
      "offset": [
        1648,
        1649
      ],
      "op": "PUSH1",
      "path": "90",
      "value": "0x0"
    },
    "282": {
      "fn": "Proxy._delegate",
      "offset": [
        1641,
        1668
      ],
      "op": "REVERT",
      "path": "90"
    },
    "283": {
      "op": "JUMPDEST"
    },
    "284": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "286": {
      "op": "DUP4"
    },
    "287": {
      "op": "EXTCODESIZE"
    },
    "288": {
      "op": "PUSH2",
      "value": "0x17F"
    },
    "291": {
      "op": "JUMPI"
    },
    "292": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "294": {
      "op": "MLOAD"
    },
    "295": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "299": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "301": {
      "op": "SHL"
    },
    "302": {
      "op": "DUP2"
    },
    "303": {
      "op": "MSTORE"
    },
    "304": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "306": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "308": {
      "op": "DUP3"
    },
    "309": {
      "op": "ADD"
    },
    "310": {
      "op": "MSTORE"
    },
    "311": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "313": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "315": {
      "op": "DUP3"
    },
    "316": {
      "op": "ADD"
    },
    "317": {
      "op": "MSTORE"
    },
    "318": {
      "op": "PUSH32",
      "value": "0x416464726573733A2064656C65676174652063616C6C20746F206E6F6E2D636F"
    },
    "351": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "353": {
      "op": "DUP3"
    },
    "354": {
      "op": "ADD"
    },
    "355": {
      "op": "MSTORE"
    },
    "356": {
      "op": "PUSH6",
      "value": "0x1B9D1C9858DD"
    },
    "363": {
      "op": "PUSH1",
      "value": "0xD2"
    },
    "365": {
      "op": "SHL"
    },
    "366": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "368": {
      "op": "DUP3"
    },
    "369": {
      "op": "ADD"
    },
    "370": {
      "op": "MSTORE"
    },
    "371": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "373": {
      "op": "ADD"
    },
    "374": {
      "op": "JUMPDEST"
    },
    "375": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "377": {
      "op": "MLOAD"
    },
    "378": {
      "op": "DUP1"
    },
    "379": {
      "op": "SWAP2"
    },
    "380": {
      "op": "SUB"
    },
    "381": {
      "op": "SWAP1"
    },
    "382": {
      "op": "REVERT"
    },
    "383": {
      "op": "JUMPDEST"
    },
    "384": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "386": {
      "op": "DUP1"
    },
    "387": {
      "op": "DUP6"
    },
    "388": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "390": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "392": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "394": {
      "op": "SHL"
    },
    "395": {
      "op": "SUB"
    },
    "396": {
      "op": "AND"
    },
    "397": {
      "op": "DUP6"
    },
    "398": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "400": {
      "op": "MLOAD"
    },
    "401": {
      "op": "PUSH2",
      "value": "0x19A"
    },
    "404": {
      "op": "SWAP2"
    },
    "405": {
      "op": "SWAP1"
    },
    "406": {
      "op": "PUSH2",
      "value": "0x286"
    },
    "409": {
      "jump": "i",
      "op": "JUMP"
    },
    "410": {
      "op": "JUMPDEST"
    },
    "411": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "413": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "415": {
      "op": "MLOAD"
    },
    "416": {
      "op": "DUP1"
    },
    "417": {
      "op": "DUP4"
    },
    "418": {
      "op": "SUB"
    },
    "419": {
      "op": "DUP2"
    },
    "420": {
      "op": "DUP6"
    },
    "421": {
      "op": "GAS"
    },
    "422": {
      "op": "DELEGATECALL"
    },
    "423": {
      "op": "SWAP2"
    },
    "424": {
      "op": "POP"
    },
    "425": {
      "op": "POP"
    },
    "426": {
      "op": "RETURNDATASIZE"
    },
    "427": {
      "op": "DUP1"
    },
    "428": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "430": {
      "op": "DUP2"
    },
    "431": {
      "op": "EQ"
    },
    "432": {
      "op": "PUSH2",
      "value": "0x1D5"
    },
    "435": {
      "op": "JUMPI"
    },
    "436": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "438": {
      "op": "MLOAD"
    },
    "439": {
      "op": "SWAP2"
    },
    "440": {
      "op": "POP"
    },
    "441": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "443": {
      "op": "NOT"
    },
    "444": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "446": {
      "op": "RETURNDATASIZE"
    },
    "447": {
      "op": "ADD"
    },
    "448": {
      "op": "AND"
    },
    "449": {
      "op": "DUP3"
    },
    "450": {
      "op": "ADD"
    },
    "451": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "453": {
      "op": "MSTORE"
    },
    "454": {
      "op": "RETURNDATASIZE"
    },
    "455": {
      "op": "DUP3"
    },
    "456": {
      "op": "MSTORE"
    },
    "457": {
      "op": "RETURNDATASIZE"
    },
    "458": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "460": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "462": {
      "op": "DUP5"
    },
    "463": {
      "op": "ADD"
    },
    "464": {
      "op": "RETURNDATACOPY"
    },
    "465": {
      "op": "PUSH2",
      "value": "0x1DA"
    },
    "468": {
      "op": "JUMP"
    },
    "469": {
      "op": "JUMPDEST"
    },
    "470": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "472": {
      "op": "SWAP2"
    },
    "473": {
      "op": "POP"
    },
    "474": {
      "op": "JUMPDEST"
    },
    "475": {
      "op": "POP"
    },
    "476": {
      "op": "SWAP2"
    },
    "477": {
      "op": "POP"
    },
    "478": {
      "op": "SWAP2"
    },
    "479": {
      "op": "POP"
    },
    "480": {
      "op": "PUSH2",
      "value": "0x1EA"
    },
    "483": {
      "op": "DUP3"
    },
    "484": {
      "op": "DUP3"
    },
    "485": {
      "op": "DUP7"
    },
    "486": {
      "op": "PUSH2",
      "value": "0x1F4"
    },
    "489": {
      "jump": "i",
      "op": "JUMP"
    },
    "490": {
      "op": "JUMPDEST"
    },
    "491": {
      "op": "SWAP7"
    },
    "492": {
      "op": "SWAP6"
    },
    "493": {
      "op": "POP"
    },
    "494": {
      "op": "POP"
    },
    "495": {
      "op": "POP"
    },
    "496": {
      "op": "POP"
    },
    "497": {
      "op": "POP"
    },
    "498": {
      "op": "POP"
    },
    "499": {
      "jump": "o",
      "op": "JUMP"
    },
    "500": {
      "op": "JUMPDEST"
    },
    "501": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "503": {
      "op": "DUP4"
    },
    "504": {
      "op": "ISZERO"
    },
    "505": {
      "op": "PUSH2",
      "value": "0x203"
    },
    "508": {
      "op": "JUMPI"
    },
    "509": {
      "op": "POP"
    },
    "510": {
      "op": "DUP2"
    },
    "511": {
      "op": "PUSH2",
      "value": "0x4E"
    },
    "514": {
      "op": "JUMP"
    },
    "515": {
      "op": "JUMPDEST"
    },
    "516": {
      "op": "DUP3"
    },
    "517": {
      "op": "MLOAD"
    },
    "518": {
      "op": "ISZERO"
    },
    "519": {
      "op": "PUSH2",
      "value": "0x213"
    },
    "522": {
      "op": "JUMPI"
    },
    "523": {
      "op": "DUP3"
    },
    "524": {
      "op": "MLOAD"
    },
    "525": {
      "op": "DUP1"
    },
    "526": {
      "op": "DUP5"
    },
    "527": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "529": {
      "op": "ADD"
    },
    "530": {
      "op": "REVERT"
    },
    "531": {
      "op": "JUMPDEST"
    },
    "532": {
      "op": "DUP2"
    },
    "533": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "535": {
      "op": "MLOAD"
    },
    "536": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "540": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "542": {
      "op": "SHL"
    },
    "543": {
      "op": "DUP2"
    },
    "544": {
      "op": "MSTORE"
    },
    "545": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "547": {
      "op": "ADD"
    },
    "548": {
      "op": "PUSH2",
      "value": "0x176"
    },
    "551": {
      "op": "SWAP2"
    },
    "552": {
      "op": "SWAP1"
    },
    "553": {
      "op": "PUSH2",
      "value": "0x2A2"
    },
    "556": {
      "jump": "i",
      "op": "JUMP"
    },
    "557": {
      "op": "JUMPDEST"
    },
    "558": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "560": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "562": {
      "op": "DUP3"
    },
    "563": {
      "op": "DUP5"
    },
    "564": {
      "op": "SUB"
    },
    "565": {
      "op": "SLT"
    },
    "566": {
      "op": "ISZERO"
    },
    "567": {
      "op": "PUSH2",
      "value": "0x23F"
    },
    "570": {
      "op": "JUMPI"
    },
    "571": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "573": {
      "op": "DUP1"
    },
    "574": {
      "op": "REVERT"
    },
    "575": {
      "op": "JUMPDEST"
    },
    "576": {
      "op": "DUP2"
    },
    "577": {
      "op": "MLOAD"
    },
    "578": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "580": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "582": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "584": {
      "op": "SHL"
    },
    "585": {
      "op": "SUB"
    },
    "586": {
      "op": "DUP2"
    },
    "587": {
      "op": "AND"
    },
    "588": {
      "op": "DUP2"
    },
    "589": {
      "op": "EQ"
    },
    "590": {
      "op": "PUSH2",
      "value": "0x4E"
    },
    "593": {
      "op": "JUMPI"
    },
    "594": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "596": {
      "op": "DUP1"
    },
    "597": {
      "op": "REVERT"
    },
    "598": {
      "op": "JUMPDEST"
    },
    "599": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "601": {
      "op": "JUMPDEST"
    },
    "602": {
      "op": "DUP4"
    },
    "603": {
      "op": "DUP2"
    },
    "604": {
      "op": "LT"
    },
    "605": {
      "op": "ISZERO"
    },
    "606": {
      "op": "PUSH2",
      "value": "0x271"
    },
    "609": {
      "op": "JUMPI"
    },
    "610": {
      "op": "DUP2"
    },
    "611": {
      "op": "DUP2"
    },
    "612": {
      "op": "ADD"
    },
    "613": {
      "op": "MLOAD"
    },
    "614": {
      "op": "DUP4"
    },
    "615": {
      "op": "DUP3"
    },
    "616": {
      "op": "ADD"
    },
    "617": {
      "op": "MSTORE"
    },
    "618": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "620": {
      "op": "ADD"
    },
    "621": {
      "op": "PUSH2",
      "value": "0x259"
    },
    "624": {
      "op": "JUMP"
    },
    "625": {
      "op": "JUMPDEST"
    },
    "626": {
      "op": "DUP4"
    },
    "627": {
      "op": "DUP2"
    },
    "628": {
      "op": "GT"
    },
    "629": {
      "op": "ISZERO"
    },
    "630": {
      "op": "PUSH2",
      "value": "0x280"
    },
    "633": {
      "op": "JUMPI"
    },
    "634": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "636": {
      "op": "DUP5"
    },
    "637": {
      "op": "DUP5"
    },
    "638": {
      "op": "ADD"
    },
    "639": {
      "op": "MSTORE"
    },
    "640": {
      "op": "JUMPDEST"
    },
    "641": {
      "op": "POP"
    },
    "642": {
      "op": "POP"
    },
    "643": {
      "op": "POP"
    },
    "644": {
      "op": "POP"
    },
    "645": {
      "jump": "o",
      "op": "JUMP"
    },
    "646": {
      "op": "JUMPDEST"
    },
    "647": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "649": {
      "op": "DUP3"
    },
    "650": {
      "op": "MLOAD"
    },
    "651": {
      "op": "PUSH2",
      "value": "0x298"
    },
    "654": {
      "op": "DUP2"
    },
    "655": {
      "op": "DUP5"
    },
    "656": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "658": {
      "op": "DUP8"
    },
    "659": {
      "op": "ADD"
    },
    "660": {
      "op": "PUSH2",
      "value": "0x256"
    },
    "663": {
      "jump": "i",
      "op": "JUMP"
    },
    "664": {
      "op": "JUMPDEST"
    },
    "665": {
      "op": "SWAP2"
    },
    "666": {
      "op": "SWAP1"
    },
    "667": {
      "op": "SWAP2"
    },
    "668": {
      "op": "ADD"
    },
    "669": {
      "op": "SWAP3"
    },
    "670": {
      "op": "SWAP2"
    },
    "671": {
      "op": "POP"
    },
    "672": {
      "op": "POP"
    },
    "673": {
      "jump": "o",
      "op": "JUMP"
    },
    "674": {
      "op": "JUMPDEST"
    },
    "675": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "677": {
      "op": "DUP2"
    },
    "678": {
      "op": "MSTORE"
    },
    "679": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "681": {
      "op": "DUP3"
    },
    "682": {
      "op": "MLOAD"
    },
    "683": {
      "op": "DUP1"
    },
    "684": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "686": {
      "op": "DUP5"
    },
    "687": {
      "op": "ADD"
    },
    "688": {
      "op": "MSTORE"
    },
    "689": {
      "op": "PUSH2",
      "value": "0x2C1"
    },
    "692": {
      "op": "DUP2"
    },
    "693": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "695": {
      "op": "DUP6"
    },
    "696": {
      "op": "ADD"
    },
    "697": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "699": {
      "op": "DUP8"
    },
    "700": {
      "op": "ADD"
    },
    "701": {
      "op": "PUSH2",
      "value": "0x256"
    },
    "704": {
      "jump": "i",
      "op": "JUMP"
    },
    "705": {
      "op": "JUMPDEST"
    },
    "706": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "708": {
      "op": "ADD"
    },
    "709": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "711": {
      "op": "NOT"
    },
    "712": {
      "op": "AND"
    },
    "713": {
      "op": "SWAP2"
    },
    "714": {
      "op": "SWAP1"
    },
    "715": {
      "op": "SWAP2"
    },
    "716": {
      "op": "ADD"
    },
    "717": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "719": {
      "op": "ADD"
    },
    "720": {
      "op": "SWAP3"
    },
    "721": {
      "op": "SWAP2"
    },
    "722": {
      "op": "POP"
    },
    "723": {
      "op": "POP"
    },
    "724": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "dd40923fa69467eb230c9e1520c8560dfcaf70b4",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"./IBeacon.sol\";\nimport \"../Proxy.sol\";\nimport \"../ERC1967/ERC1967Upgrade.sol\";\n\n/**\n * @dev This contract implements a proxy that gets the implementation address for each call from a {UpgradeableBeacon}.\n *\n * The beacon address is stored in storage slot `uint256(keccak256('eip1967.proxy.beacon')) - 1`, so that it doesn't\n * conflict with the storage layout of the implementation behind the proxy.\n *\n * _Available since v3.4._\n */\ncontract BeaconProxy is Proxy, ERC1967Upgrade {\n    /**\n     * @dev Initializes the proxy with `beacon`.\n     *\n     * If `data` is nonempty, it's used as data in a delegate call to the implementation returned by the beacon. This\n     * will typically be an encoded function call, and allows initializating the storage of the proxy like a Solidity\n     * constructor.\n     *\n     * Requirements:\n     *\n     * - `beacon` must be a contract with the interface {IBeacon}.\n     */\n    constructor(address beacon, bytes memory data) payable {\n        assert(_BEACON_SLOT == bytes32(uint256(keccak256(\"eip1967.proxy.beacon\")) - 1));\n        _upgradeBeaconToAndCall(beacon, data, false);\n    }\n\n    /**\n     * @dev Returns the current beacon address.\n     */\n    function _beacon() internal view virtual returns (address) {\n        return _getBeacon();\n    }\n\n    /**\n     * @dev Returns the current implementation address of the associated beacon.\n     */\n    function _implementation() internal view virtual override returns (address) {\n        return IBeacon(_getBeacon()).implementation();\n    }\n\n    /**\n     * @dev Changes the proxy to use a new beacon. Deprecated: see {_upgradeBeaconToAndCall}.\n     *\n     * If `data` is nonempty, it's used as data in a delegate call to the implementation returned by the beacon.\n     *\n     * Requirements:\n     *\n     * - `beacon` must be a contract.\n     * - The implementation returned by `beacon` must be a contract.\n     */\n    function _setBeacon(address beacon, bytes memory data) internal virtual {\n        _upgradeBeaconToAndCall(beacon, data, false);\n    }\n}\n",
  "sourceMap": "500:1606:91:-:0;;;982:205;;;;;;;;;;;;;;;;;;:::i;:::-;1078:46;1123:1;1086:33;1078:46;:::i;:::-;-1:-1:-1;;;;;;;;;;;1054:71:91;1047:79;;;;:::i;:::-;1136:44;1160:6;1168:4;1174:5;1136:23;:44::i;:::-;982:205;;500:1606;;6319:343:89;6455:21;6466:9;6455:10;:21::i;:::-;6491:25;;-1:-1:-1;;;;;6491:25:89;;;;;;;;6544:1;6530:4;:11;:15;:28;;;;6549:9;6530:28;6526:130;;;6574:71;6611:9;-1:-1:-1;;;;;6603:33:89;;:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6640:4;6574:28;;;;;:71;;:::i;:::-;;6526:130;6319:343;;;:::o;5645:371::-;5710:29;5729:9;5710:18;;;;;:29;;:::i;:::-;5702:79;;;;-1:-1:-1;;;5702:79:89;;2338:2:174;5702:79:89;;;2320:21:174;2377:2;2357:18;;;2350:30;2416:34;2396:18;;;2389:62;-1:-1:-1;;;2467:18:174;;;2460:35;2512:19;;5702:79:89;;;;;;;;;5812:55;5839:9;-1:-1:-1;;;;;5831:33:89;;:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5812:18;;;;;:55;;:::i;:::-;5791:150;;;;-1:-1:-1;;;5791:150:89;;2744:2:174;5791:150:89;;;2726:21:174;2783:2;2763:18;;;2756:30;2822:34;2802:18;;;2795:62;-1:-1:-1;;;2873:18:174;;;2866:46;2929:19;;5791:150:89;2542:412:174;5791:150:89;6000:9;5951:40;-1:-1:-1;;;;;;;;;;;5978:12:89;;5951:26;;;;;:40;;:::i;:::-;:58;;-1:-1:-1;;;;;;5951:58:89;-1:-1:-1;;;;;5951:58:89;;;;;;;;;;-1:-1:-1;5645:371:89:o;6172:198:144:-;6255:12;6286:77;6307:6;6315:4;6286:77;;;;;;;;;;;;;;;;;:20;:77::i;:::-;6279:84;6172:198;-1:-1:-1;;;6172:198:144:o;718:377::-;1034:20;1080:8;;;718:377::o;1542:147:150:-;1669:4;1542:147::o;6556:388:144:-;6697:12;1034:20;;6721:69;;;;-1:-1:-1;;;6721:69:144;;3161:2:174;6721:69:144;;;3143:21:174;3200:2;3180:18;;;3173:30;3239:34;3219:18;;;3212:62;-1:-1:-1;;;3290:18:174;;;3283:36;3336:19;;6721:69:144;2959:402:174;6721:69:144;6802:12;6816:23;6843:6;-1:-1:-1;;;;;6843:19:144;6863:4;6843:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6801:67:144;;-1:-1:-1;6801:67:144;-1:-1:-1;6885:52:144;6801:67;;6924:12;6885:17;:52::i;:::-;6878:59;6556:388;-1:-1:-1;;;;;;6556:388:144:o;6950:692::-;7096:12;7124:7;7120:516;;;-1:-1:-1;7154:10:144;7147:17;;7120:516;7265:17;;:21;7261:365;;7459:10;7453:17;7519:15;7506:10;7502:2;7498:19;7491:44;7261:365;7598:12;7591:20;;-1:-1:-1;;;7591:20:144;;;;;;;;:::i;14:177:174:-;93:13;;-1:-1:-1;;;;;135:31:174;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:127::-;257:10;252:3;248:20;245:1;238:31;288:4;285:1;278:15;312:4;309:1;302:15;328:258;400:1;410:113;424:6;421:1;418:13;410:113;;;500:11;;;494:18;481:11;;;474:39;446:2;439:10;410:113;;;541:6;538:1;535:13;532:48;;;-1:-1:-1;;576:1:174;558:16;;551:27;328:258::o;591:968::-;679:6;687;740:2;728:9;719:7;715:23;711:32;708:52;;;756:1;753;746:12;708:52;779:40;809:9;779:40;:::i;:::-;863:2;848:18;;842:25;769:50;;-1:-1:-1;;;;;;916:14:174;;;913:34;;;943:1;940;933:12;913:34;981:6;970:9;966:22;956:32;;1026:7;1019:4;1015:2;1011:13;1007:27;997:55;;1048:1;1045;1038:12;997:55;1077:2;1071:9;1099:2;1095;1092:10;1089:36;;;1105:18;;:::i;:::-;1180:2;1174:9;1148:2;1234:13;;-1:-1:-1;;1230:22:174;;;1254:2;1226:31;1222:40;1210:53;;;1278:18;;;1298:22;;;1275:46;1272:72;;;1324:18;;:::i;:::-;1364:10;1360:2;1353:22;1399:2;1391:6;1384:18;1439:7;1434:2;1429;1425;1421:11;1417:20;1414:33;1411:53;;;1460:1;1457;1450:12;1411:53;1473:55;1525:2;1520;1512:6;1508:15;1503:2;1499;1495:11;1473:55;:::i;:::-;1547:6;1537:16;;;;;;;591:968;;;;;:::o;1564:222::-;1604:4;1632:1;1629;1626:8;1623:131;;;1676:10;1671:3;1667:20;1664:1;1657:31;1711:4;1708:1;1701:15;1739:4;1736:1;1729:15;1623:131;-1:-1:-1;1771:9:174;;1564:222::o;1791:127::-;1852:10;1847:3;1843:20;1840:1;1833:31;1883:4;1880:1;1873:15;1907:4;1904:1;1897:15;1923:208;1993:6;2046:2;2034:9;2025:7;2021:23;2017:32;2014:52;;;2062:1;2059;2052:12;2014:52;2085:40;2115:9;2085:40;:::i;3366:274::-;3495:3;3533:6;3527:13;3549:53;3595:6;3590:3;3583:4;3575:6;3571:17;3549:53;:::i;:::-;3618:16;;;;;3366:274;-1:-1:-1;;3366:274:174:o;3645:383::-;3794:2;3783:9;3776:21;3757:4;3826:6;3820:13;3869:6;3864:2;3853:9;3849:18;3842:34;3885:66;3944:6;3939:2;3928:9;3924:18;3919:2;3911:6;3907:15;3885:66;:::i;:::-;4012:2;3991:15;-1:-1:-1;;3987:29:174;3972:45;;;;4019:2;3968:54;;3645:383;-1:-1:-1;;3645:383:174:o;:::-;500:1606:91;;;;;;",
  "sourcePath": "contracts/openzeppelin/contracts/proxy/beacon/BeaconProxy.sol",
  "type": "contract"
}