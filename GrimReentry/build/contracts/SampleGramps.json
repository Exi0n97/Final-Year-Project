{
  "abi": [
    {
      "inputs": [],
      "name": "gramps",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "value",
          "type": "string"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isHuman",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "68": "contracts/openzeppelin/contracts/mocks/MultipleInheritanceInitializableMocks.sol",
    "93": "contracts/openzeppelin/contracts/proxy/utils/Initializable.sol"
  },
  "ast": {
    "absolutePath": "contracts/openzeppelin/contracts/mocks/MultipleInheritanceInitializableMocks.sol",
    "exportedSymbols": {
      "Initializable": [
        9194
      ],
      "SampleChild": [
        6433
      ],
      "SampleFather": [
        6392
      ],
      "SampleGramps": [
        6364
      ],
      "SampleHuman": [
        6314
      ],
      "SampleMother": [
        6339
      ]
    },
    "id": 6434,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 6297,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:68"
      },
      {
        "absolutePath": "contracts/openzeppelin/contracts/proxy/utils/Initializable.sol",
        "file": "../proxy/utils/Initializable.sol",
        "id": 6298,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 6434,
        "sourceUnit": 9195,
        "src": "58:42:68",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 6300,
              "name": "Initializable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 9194,
              "src": "496:13:68"
            },
            "id": 6301,
            "nodeType": "InheritanceSpecifier",
            "src": "496:13:68"
          }
        ],
        "canonicalName": "SampleHuman",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 6299,
          "nodeType": "StructuredDocumentation",
          "src": "411:60:68",
          "text": " Sample base intializable contract that is a human"
        },
        "fullyImplemented": true,
        "id": 6314,
        "linearizedBaseContracts": [
          6314,
          9194
        ],
        "name": "SampleHuman",
        "nameLocation": "481:11:68",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "4a6c9db6",
            "id": 6303,
            "mutability": "mutable",
            "name": "isHuman",
            "nameLocation": "528:7:68",
            "nodeType": "VariableDeclaration",
            "scope": 6314,
            "src": "516:19:68",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 6302,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "516:4:68",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 6312,
              "nodeType": "Block",
              "src": "583:31:68",
              "statements": [
                {
                  "expression": {
                    "id": 6310,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 6308,
                      "name": "isHuman",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6303,
                      "src": "593:7:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 6309,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "603:4:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "593:14:68",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 6311,
                  "nodeType": "ExpressionStatement",
                  "src": "593:14:68"
                }
              ]
            },
            "functionSelector": "8129fc1c",
            "id": 6313,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 6306,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 6305,
                  "name": "initializer",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 9193,
                  "src": "571:11:68"
                },
                "nodeType": "ModifierInvocation",
                "src": "571:11:68"
              }
            ],
            "name": "initialize",
            "nameLocation": "551:10:68",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6304,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "561:2:68"
            },
            "returnParameters": {
              "id": 6307,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "583:0:68"
            },
            "scope": 6314,
            "src": "542:72:68",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 6434,
        "src": "472:144:68",
        "usedErrors": []
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 6316,
              "name": "Initializable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 9194,
              "src": "716:13:68"
            },
            "id": 6317,
            "nodeType": "InheritanceSpecifier",
            "src": "716:13:68"
          },
          {
            "baseName": {
              "id": 6318,
              "name": "SampleHuman",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 6314,
              "src": "731:11:68"
            },
            "id": 6319,
            "nodeType": "InheritanceSpecifier",
            "src": "731:11:68"
          }
        ],
        "canonicalName": "SampleMother",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 6315,
          "nodeType": "StructuredDocumentation",
          "src": "618:72:68",
          "text": " Sample base intializable contract that defines a field mother"
        },
        "fullyImplemented": true,
        "id": 6339,
        "linearizedBaseContracts": [
          6339,
          6314,
          9194
        ],
        "name": "SampleMother",
        "nameLocation": "700:12:68",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "ed7dfee3",
            "id": 6321,
            "mutability": "mutable",
            "name": "mother",
            "nameLocation": "764:6:68",
            "nodeType": "VariableDeclaration",
            "scope": 6339,
            "src": "749:21:68",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 6320,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "749:7:68",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 6337,
              "nodeType": "Block",
              "src": "839:65:68",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 6328,
                        "name": "SampleHuman",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6314,
                        "src": "849:11:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SampleHuman_$6314_$",
                          "typeString": "type(contract SampleHuman)"
                        }
                      },
                      "id": 6330,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6313,
                      "src": "849:22:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 6331,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "849:24:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6332,
                  "nodeType": "ExpressionStatement",
                  "src": "849:24:68"
                },
                {
                  "expression": {
                    "id": 6335,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 6333,
                      "name": "mother",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6321,
                      "src": "883:6:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 6334,
                      "name": "value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6323,
                      "src": "892:5:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "883:14:68",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 6336,
                  "nodeType": "ExpressionStatement",
                  "src": "883:14:68"
                }
              ]
            },
            "functionSelector": "fe4b84df",
            "id": 6338,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 6326,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 6325,
                  "name": "initializer",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 9193,
                  "src": "827:11:68"
                },
                "nodeType": "ModifierInvocation",
                "src": "827:11:68"
              }
            ],
            "name": "initialize",
            "nameLocation": "786:10:68",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6324,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6323,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "805:5:68",
                  "nodeType": "VariableDeclaration",
                  "scope": 6338,
                  "src": "797:13:68",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6322,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "797:7:68",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "796:15:68"
            },
            "returnParameters": {
              "id": 6327,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "839:0:68"
            },
            "scope": 6339,
            "src": "777:127:68",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          }
        ],
        "scope": 6434,
        "src": "691:215:68",
        "usedErrors": []
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 6341,
              "name": "Initializable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 9194,
              "src": "1006:13:68"
            },
            "id": 6342,
            "nodeType": "InheritanceSpecifier",
            "src": "1006:13:68"
          },
          {
            "baseName": {
              "id": 6343,
              "name": "SampleHuman",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 6314,
              "src": "1021:11:68"
            },
            "id": 6344,
            "nodeType": "InheritanceSpecifier",
            "src": "1021:11:68"
          }
        ],
        "canonicalName": "SampleGramps",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 6340,
          "nodeType": "StructuredDocumentation",
          "src": "908:72:68",
          "text": " Sample base intializable contract that defines a field gramps"
        },
        "fullyImplemented": true,
        "id": 6364,
        "linearizedBaseContracts": [
          6364,
          6314,
          9194
        ],
        "name": "SampleGramps",
        "nameLocation": "990:12:68",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "fa39851f",
            "id": 6346,
            "mutability": "mutable",
            "name": "gramps",
            "nameLocation": "1053:6:68",
            "nodeType": "VariableDeclaration",
            "scope": 6364,
            "src": "1039:20:68",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 6345,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "1039:6:68",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 6362,
              "nodeType": "Block",
              "src": "1134:65:68",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 6353,
                        "name": "SampleHuman",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6314,
                        "src": "1144:11:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SampleHuman_$6314_$",
                          "typeString": "type(contract SampleHuman)"
                        }
                      },
                      "id": 6355,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6313,
                      "src": "1144:22:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 6356,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1144:24:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6357,
                  "nodeType": "ExpressionStatement",
                  "src": "1144:24:68"
                },
                {
                  "expression": {
                    "id": 6360,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 6358,
                      "name": "gramps",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6346,
                      "src": "1178:6:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 6359,
                      "name": "value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6348,
                      "src": "1187:5:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1178:14:68",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 6361,
                  "nodeType": "ExpressionStatement",
                  "src": "1178:14:68"
                }
              ]
            },
            "functionSelector": "f62d1888",
            "id": 6363,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 6351,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 6350,
                  "name": "initializer",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 9193,
                  "src": "1122:11:68"
                },
                "nodeType": "ModifierInvocation",
                "src": "1122:11:68"
              }
            ],
            "name": "initialize",
            "nameLocation": "1075:10:68",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6349,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6348,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "1100:5:68",
                  "nodeType": "VariableDeclaration",
                  "scope": 6363,
                  "src": "1086:19:68",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 6347,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1086:6:68",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1085:21:68"
            },
            "returnParameters": {
              "id": 6352,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1134:0:68"
            },
            "scope": 6364,
            "src": "1066:133:68",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          }
        ],
        "scope": 6434,
        "src": "981:220:68",
        "usedErrors": []
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 6366,
              "name": "Initializable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 9194,
              "src": "1325:13:68"
            },
            "id": 6367,
            "nodeType": "InheritanceSpecifier",
            "src": "1325:13:68"
          },
          {
            "baseName": {
              "id": 6368,
              "name": "SampleGramps",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 6364,
              "src": "1340:12:68"
            },
            "id": 6369,
            "nodeType": "InheritanceSpecifier",
            "src": "1340:12:68"
          }
        ],
        "canonicalName": "SampleFather",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 6365,
          "nodeType": "StructuredDocumentation",
          "src": "1203:96:68",
          "text": " Sample base intializable contract that defines a field father and extends from gramps"
        },
        "fullyImplemented": true,
        "id": 6392,
        "linearizedBaseContracts": [
          6392,
          6364,
          6314,
          9194
        ],
        "name": "SampleFather",
        "nameLocation": "1309:12:68",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "1c8aca3b",
            "id": 6371,
            "mutability": "mutable",
            "name": "father",
            "nameLocation": "1374:6:68",
            "nodeType": "VariableDeclaration",
            "scope": 6392,
            "src": "1359:21:68",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 6370,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1359:7:68",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 6390,
              "nodeType": "Block",
              "src": "1466:75:68",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 6383,
                        "name": "_gramps",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6373,
                        "src": "1500:7:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "expression": {
                        "id": 6380,
                        "name": "SampleGramps",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6364,
                        "src": "1476:12:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SampleGramps_$6364_$",
                          "typeString": "type(contract SampleGramps)"
                        }
                      },
                      "id": 6382,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6363,
                      "src": "1476:23:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 6384,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1476:32:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6385,
                  "nodeType": "ExpressionStatement",
                  "src": "1476:32:68"
                },
                {
                  "expression": {
                    "id": 6388,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 6386,
                      "name": "father",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6371,
                      "src": "1518:6:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 6387,
                      "name": "_father",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6375,
                      "src": "1527:7:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1518:16:68",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 6389,
                  "nodeType": "ExpressionStatement",
                  "src": "1518:16:68"
                }
              ]
            },
            "functionSelector": "8beaf7d7",
            "id": 6391,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 6378,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 6377,
                  "name": "initializer",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 9193,
                  "src": "1454:11:68"
                },
                "nodeType": "ModifierInvocation",
                "src": "1454:11:68"
              }
            ],
            "name": "initialize",
            "nameLocation": "1396:10:68",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6376,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6373,
                  "mutability": "mutable",
                  "name": "_gramps",
                  "nameLocation": "1421:7:68",
                  "nodeType": "VariableDeclaration",
                  "scope": 6391,
                  "src": "1407:21:68",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 6372,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1407:6:68",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6375,
                  "mutability": "mutable",
                  "name": "_father",
                  "nameLocation": "1438:7:68",
                  "nodeType": "VariableDeclaration",
                  "scope": 6391,
                  "src": "1430:15:68",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6374,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1430:7:68",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1406:40:68"
            },
            "returnParameters": {
              "id": 6379,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1466:0:68"
            },
            "scope": 6392,
            "src": "1387:154:68",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 6434,
        "src": "1300:243:68",
        "usedErrors": []
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 6394,
              "name": "Initializable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 9194,
              "src": "1623:13:68"
            },
            "id": 6395,
            "nodeType": "InheritanceSpecifier",
            "src": "1623:13:68"
          },
          {
            "baseName": {
              "id": 6396,
              "name": "SampleMother",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 6339,
              "src": "1638:12:68"
            },
            "id": 6397,
            "nodeType": "InheritanceSpecifier",
            "src": "1638:12:68"
          },
          {
            "baseName": {
              "id": 6398,
              "name": "SampleFather",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 6392,
              "src": "1652:12:68"
            },
            "id": 6399,
            "nodeType": "InheritanceSpecifier",
            "src": "1652:12:68"
          }
        ],
        "canonicalName": "SampleChild",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 6393,
          "nodeType": "StructuredDocumentation",
          "src": "1545:53:68",
          "text": " Child extends from mother, father (gramps)"
        },
        "fullyImplemented": true,
        "id": 6433,
        "linearizedBaseContracts": [
          6433,
          6392,
          6364,
          6339,
          6314,
          9194
        ],
        "name": "SampleChild",
        "nameLocation": "1608:11:68",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "237b5e96",
            "id": 6401,
            "mutability": "mutable",
            "name": "child",
            "nameLocation": "1686:5:68",
            "nodeType": "VariableDeclaration",
            "scope": 6433,
            "src": "1671:20:68",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 6400,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1671:7:68",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 6431,
              "nodeType": "Block",
              "src": "1848:124:68",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 6417,
                        "name": "_mother",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6403,
                        "src": "1882:7:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 6414,
                        "name": "SampleMother",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6339,
                        "src": "1858:12:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SampleMother_$6339_$",
                          "typeString": "type(contract SampleMother)"
                        }
                      },
                      "id": 6416,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6338,
                      "src": "1858:23:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 6418,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1858:32:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6419,
                  "nodeType": "ExpressionStatement",
                  "src": "1858:32:68"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 6423,
                        "name": "_gramps",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6405,
                        "src": "1924:7:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 6424,
                        "name": "_father",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6407,
                        "src": "1933:7:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 6420,
                        "name": "SampleFather",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6392,
                        "src": "1900:12:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SampleFather_$6392_$",
                          "typeString": "type(contract SampleFather)"
                        }
                      },
                      "id": 6422,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6391,
                      "src": "1900:23:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256)"
                      }
                    },
                    "id": 6425,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1900:41:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6426,
                  "nodeType": "ExpressionStatement",
                  "src": "1900:41:68"
                },
                {
                  "expression": {
                    "id": 6429,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 6427,
                      "name": "child",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6401,
                      "src": "1951:5:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 6428,
                      "name": "_child",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6409,
                      "src": "1959:6:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1951:14:68",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 6430,
                  "nodeType": "ExpressionStatement",
                  "src": "1951:14:68"
                }
              ]
            },
            "functionSelector": "6f2edbd2",
            "id": 6432,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 6412,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 6411,
                  "name": "initializer",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 9193,
                  "src": "1836:11:68"
                },
                "nodeType": "ModifierInvocation",
                "src": "1836:11:68"
              }
            ],
            "name": "initialize",
            "nameLocation": "1707:10:68",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6410,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6403,
                  "mutability": "mutable",
                  "name": "_mother",
                  "nameLocation": "1735:7:68",
                  "nodeType": "VariableDeclaration",
                  "scope": 6432,
                  "src": "1727:15:68",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6402,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1727:7:68",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6405,
                  "mutability": "mutable",
                  "name": "_gramps",
                  "nameLocation": "1766:7:68",
                  "nodeType": "VariableDeclaration",
                  "scope": 6432,
                  "src": "1752:21:68",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 6404,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1752:6:68",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6407,
                  "mutability": "mutable",
                  "name": "_father",
                  "nameLocation": "1791:7:68",
                  "nodeType": "VariableDeclaration",
                  "scope": 6432,
                  "src": "1783:15:68",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6406,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1783:7:68",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6409,
                  "mutability": "mutable",
                  "name": "_child",
                  "nameLocation": "1816:6:68",
                  "nodeType": "VariableDeclaration",
                  "scope": 6432,
                  "src": "1808:14:68",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6408,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1808:7:68",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1717:111:68"
            },
            "returnParameters": {
              "id": 6413,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1848:0:68"
            },
            "scope": 6433,
            "src": "1698:274:68",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 6434,
        "src": "1599:375:68",
        "usedErrors": []
      }
    ],
    "src": "33:1942:68"
  },
  "bytecode": "608060405234801561001057600080fd5b506104bc806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80634a6c9db6146100515780638129fc1c14610079578063f62d188814610083578063fa39851f14610096575b600080fd5b6000546100649062010000900460ff1681565b60405190151581526020015b60405180910390f35b6100816100ab565b005b6100816100913660046102f7565b610131565b61009e6101ba565b60405161007091906103a8565b600054610100900460ff16806100c4575060005460ff16155b6100e95760405162461bcd60e51b81526004016100e0906103fd565b60405180910390fd5b600054610100900460ff1615801561010b576000805461ffff19166101011790555b6000805462ff0000191662010000179055801561012e576000805461ff00191690555b50565b600054610100900460ff168061014a575060005460ff16155b6101665760405162461bcd60e51b81526004016100e0906103fd565b600054610100900460ff16158015610188576000805461ffff19166101011790555b6101906100ab565b81516101a3906001906020850190610248565b5080156101b6576000805461ff00191690555b5050565b600180546101c79061044b565b80601f01602080910402602001604051908101604052809291908181526020018280546101f39061044b565b80156102405780601f1061021557610100808354040283529160200191610240565b820191906000526020600020905b81548152906001019060200180831161022357829003601f168201915b505050505081565b8280546102549061044b565b90600052602060002090601f01602090048101928261027657600085556102bc565b82601f1061028f57805160ff19168380011785556102bc565b828001600101855582156102bc579182015b828111156102bc5782518255916020019190600101906102a1565b506102c89291506102cc565b5090565b5b808211156102c857600081556001016102cd565b634e487b7160e01b600052604160045260246000fd5b60006020828403121561030957600080fd5b813567ffffffffffffffff8082111561032157600080fd5b818401915084601f83011261033557600080fd5b813581811115610347576103476102e1565b604051601f8201601f19908116603f0116810190838211818310171561036f5761036f6102e1565b8160405282815287602084870101111561038857600080fd5b826020860160208301376000928101602001929092525095945050505050565b600060208083528351808285015260005b818110156103d5578581018301518582016040015282016103b9565b818111156103e7576000604083870101525b50601f01601f1916929092016040019392505050565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b600181811c9082168061045f57607f821691505b6020821081141561048057634e487b7160e01b600052602260045260246000fd5b5091905056fea26469706673582212208aa4331603a42ace2ad4caf9ce577da47409ec6d5afbf7e29ba881b86b07e0f564736f6c634300080c0033",
  "bytecodeSha1": "97c82c0809507cacdba0eb6fcfcf76ef2cb18c1d",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.12+commit.f00d7308"
  },
  "contractName": "SampleGramps",
  "coverageMap": {
    "branches": {
      "68": {},
      "93": {
        "SampleGramps.initialize": {
          "3": [
            1409,
            1422,
            true
          ],
          "4": [
            1427,
            1439,
            true
          ]
        }
      }
    },
    "statements": {
      "68": {
        "SampleGramps.initialize": {
          "1": [
            1144,
            1168
          ],
          "2": [
            1178,
            1192
          ]
        },
        "SampleHuman.initialize": {
          "0": [
            593,
            607
          ]
        }
      },
      "93": {}
    }
  },
  "dependencies": [
    "Initializable",
    "SampleHuman"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b506004361061004c5760003560e01c80634a6c9db6146100515780638129fc1c14610079578063f62d188814610083578063fa39851f14610096575b600080fd5b6000546100649062010000900460ff1681565b60405190151581526020015b60405180910390f35b6100816100ab565b005b6100816100913660046102f7565b610131565b61009e6101ba565b60405161007091906103a8565b600054610100900460ff16806100c4575060005460ff16155b6100e95760405162461bcd60e51b81526004016100e0906103fd565b60405180910390fd5b600054610100900460ff1615801561010b576000805461ffff19166101011790555b6000805462ff0000191662010000179055801561012e576000805461ff00191690555b50565b600054610100900460ff168061014a575060005460ff16155b6101665760405162461bcd60e51b81526004016100e0906103fd565b600054610100900460ff16158015610188576000805461ffff19166101011790555b6101906100ab565b81516101a3906001906020850190610248565b5080156101b6576000805461ff00191690555b5050565b600180546101c79061044b565b80601f01602080910402602001604051908101604052809291908181526020018280546101f39061044b565b80156102405780601f1061021557610100808354040283529160200191610240565b820191906000526020600020905b81548152906001019060200180831161022357829003601f168201915b505050505081565b8280546102549061044b565b90600052602060002090601f01602090048101928261027657600085556102bc565b82601f1061028f57805160ff19168380011785556102bc565b828001600101855582156102bc579182015b828111156102bc5782518255916020019190600101906102a1565b506102c89291506102cc565b5090565b5b808211156102c857600081556001016102cd565b634e487b7160e01b600052604160045260246000fd5b60006020828403121561030957600080fd5b813567ffffffffffffffff8082111561032157600080fd5b818401915084601f83011261033557600080fd5b813581811115610347576103476102e1565b604051601f8201601f19908116603f0116810190838211818310171561036f5761036f6102e1565b8160405282815287602084870101111561038857600080fd5b826020860160208301376000928101602001929092525095945050505050565b600060208083528351808285015260005b818110156103d5578581018301518582016040015282016103b9565b818111156103e7576000604083870101525b50601f01601f1916929092016040019392505050565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b600181811c9082168061045f57607f821691505b6020821081141561048057634e487b7160e01b600052602260045260246000fd5b5091905056fea26469706673582212208aa4331603a42ace2ad4caf9ce577da47409ec6d5afbf7e29ba881b86b07e0f564736f6c634300080c0033",
  "deployedSourceMap": "981:220:68:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;516:19;;;;;;;;;;;;;;;179:14:171;;172:22;154:41;;142:2;127:18;516:19:68;;;;;;;;542:72;;;:::i;:::-;;1066:133;;;;;;:::i;:::-;;:::i;1039:20::-;;;:::i;:::-;;;;;;;:::i;542:72::-;1409:13:93;;;;;;;;:30;;-1:-1:-1;1427:12:93;;;;1426:13;1409:30;1401:89;;;;-1:-1:-1;;;1401:89:93;;;;;;;:::i;:::-;;;;;;;;;1501:19;1524:13;;;;;;1523:14;1547:98;;;;1581:13;:20;;-1:-1:-1;;1615:19:93;;;;;1547:98;593:7:68::1;:14:::0;;-1:-1:-1;;593:14:68::1;::::0;::::1;::::0;;1667:66:93;;;;1717:5;1701:21;;-1:-1:-1;;1701:21:93;;;1667:66;1391:348;542:72:68:o;1066:133::-;1409:13:93;;;;;;;;:30;;-1:-1:-1;1427:12:93;;;;1426:13;1409:30;1401:89;;;;-1:-1:-1;;;1401:89:93;;;;;;;:::i;:::-;1501:19;1524:13;;;;;;1523:14;1547:98;;;;1581:13;:20;;-1:-1:-1;;1615:19:93;;;;;1547:98;1144:24:68::1;:22;:24::i;:::-;1178:14:::0;;::::1;::::0;:6:::1;::::0;:14:::1;::::0;::::1;::::0;::::1;:::i;:::-;;1671::93::0;1667:66;;;1717:5;1701:21;;-1:-1:-1;;1701:21:93;;;1667:66;1391:348;1066:133:68;:::o;1039:20::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;206:127:171;267:10;262:3;258:20;255:1;248:31;298:4;295:1;288:15;322:4;319:1;312:15;338:922;407:6;460:2;448:9;439:7;435:23;431:32;428:52;;;476:1;473;466:12;428:52;516:9;503:23;545:18;586:2;578:6;575:14;572:34;;;602:1;599;592:12;572:34;640:6;629:9;625:22;615:32;;685:7;678:4;674:2;670:13;666:27;656:55;;707:1;704;697:12;656:55;743:2;730:16;765:2;761;758:10;755:36;;;771:18;;:::i;:::-;846:2;840:9;814:2;900:13;;-1:-1:-1;;896:22:171;;;920:2;892:31;888:40;876:53;;;944:18;;;964:22;;;941:46;938:72;;;990:18;;:::i;:::-;1030:10;1026:2;1019:22;1065:2;1057:6;1050:18;1105:7;1100:2;1095;1091;1087:11;1083:20;1080:33;1077:53;;;1126:1;1123;1116:12;1077:53;1182:2;1177;1173;1169:11;1164:2;1156:6;1152:15;1139:46;1227:1;1205:15;;;1222:2;1201:24;1194:35;;;;-1:-1:-1;1209:6:171;338:922;-1:-1:-1;;;;;338:922:171:o;1265:597::-;1377:4;1406:2;1435;1424:9;1417:21;1467:6;1461:13;1510:6;1505:2;1494:9;1490:18;1483:34;1535:1;1545:140;1559:6;1556:1;1553:13;1545:140;;;1654:14;;;1650:23;;1644:30;1620:17;;;1639:2;1616:26;1609:66;1574:10;;1545:140;;;1703:6;1700:1;1697:13;1694:91;;;1773:1;1768:2;1759:6;1748:9;1744:22;1740:31;1733:42;1694:91;-1:-1:-1;1846:2:171;1825:15;-1:-1:-1;;1821:29:171;1806:45;;;;1853:2;1802:54;;1265:597;-1:-1:-1;;;1265:597:171:o;1867:410::-;2069:2;2051:21;;;2108:2;2088:18;;;2081:30;2147:34;2142:2;2127:18;;2120:62;-1:-1:-1;;;2213:2:171;2198:18;;2191:44;2267:3;2252:19;;1867:410::o;2282:380::-;2361:1;2357:12;;;;2404;;;2425:61;;2479:4;2471:6;2467:17;2457:27;;2425:61;2532:2;2524:6;2521:14;2501:18;2498:38;2495:161;;;2578:10;2573:3;2569:20;2566:1;2559:31;2613:4;2610:1;2603:15;2641:4;2638:1;2631:15;2495:161;;2282:380;;;:::o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {},
    "notice": "Sample base intializable contract that defines a field gramps",
    "version": 1
  },
  "offset": [
    981,
    1201
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4A6C9DB6 EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0x8129FC1C EQ PUSH2 0x79 JUMPI DUP1 PUSH4 0xF62D1888 EQ PUSH2 0x83 JUMPI DUP1 PUSH4 0xFA39851F EQ PUSH2 0x96 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x64 SWAP1 PUSH3 0x10000 SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x81 PUSH2 0xAB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x81 PUSH2 0x91 CALLDATASIZE PUSH1 0x4 PUSH2 0x2F7 JUMP JUMPDEST PUSH2 0x131 JUMP JUMPDEST PUSH2 0x9E PUSH2 0x1BA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x70 SWAP2 SWAP1 PUSH2 0x3A8 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0xC4 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0xE9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE0 SWAP1 PUSH2 0x3FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x10B JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFFFF NOT AND PUSH2 0x101 OR SWAP1 SSTORE JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH3 0xFF0000 NOT AND PUSH3 0x10000 OR SWAP1 SSTORE DUP1 ISZERO PUSH2 0x12E JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x14A JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0x166 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE0 SWAP1 PUSH2 0x3FD JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x188 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFFFF NOT AND PUSH2 0x101 OR SWAP1 SSTORE JUMPDEST PUSH2 0x190 PUSH2 0xAB JUMP JUMPDEST DUP2 MLOAD PUSH2 0x1A3 SWAP1 PUSH1 0x1 SWAP1 PUSH1 0x20 DUP6 ADD SWAP1 PUSH2 0x248 JUMP JUMPDEST POP DUP1 ISZERO PUSH2 0x1B6 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH2 0x1C7 SWAP1 PUSH2 0x44B JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1F3 SWAP1 PUSH2 0x44B JUMP JUMPDEST DUP1 ISZERO PUSH2 0x240 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x215 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x240 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x223 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x254 SWAP1 PUSH2 0x44B JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x276 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x2BC JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x28F JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x2BC JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x2BC JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x2BC JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x2A1 JUMP JUMPDEST POP PUSH2 0x2C8 SWAP3 SWAP2 POP PUSH2 0x2CC JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x2C8 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x2CD JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x309 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x321 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP5 ADD SWAP2 POP DUP5 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x335 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x347 JUMPI PUSH2 0x347 PUSH2 0x2E1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x36F JUMPI PUSH2 0x36F PUSH2 0x2E1 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP8 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x388 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP3 DUP2 ADD PUSH1 0x20 ADD SWAP3 SWAP1 SWAP3 MSTORE POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x3D5 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x3B9 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x3E7 JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2E SWAP1 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x40 DUP3 ADD MSTORE PUSH14 0x191E481A5B9A5D1A585B1A5E9959 PUSH1 0x92 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x45F JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x480 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP11 LOG4 CALLER AND SUB LOG4 0x2A 0xCE 0x2A 0xD4 0xCA 0xF9 0xCE JUMPI PUSH30 0xA47409EC6D5AFBF7E29BA881B86B07E0F564736F6C634300080C00330000 ",
  "pcMap": {
    "0": {
      "offset": [
        981,
        1201
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        981,
        1201
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        981,
        1201
      ],
      "op": "MSTORE",
      "path": "68"
    },
    "5": {
      "fn": null,
      "offset": [
        981,
        1201
      ],
      "op": "CALLVALUE",
      "path": "68"
    },
    "6": {
      "fn": null,
      "offset": [
        981,
        1201
      ],
      "op": "DUP1",
      "path": "68"
    },
    "7": {
      "fn": null,
      "offset": [
        981,
        1201
      ],
      "op": "ISZERO",
      "path": "68"
    },
    "8": {
      "fn": null,
      "offset": [
        981,
        1201
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        981,
        1201
      ],
      "op": "JUMPI",
      "path": "68"
    },
    "12": {
      "fn": null,
      "offset": [
        981,
        1201
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        981,
        1201
      ],
      "op": "DUP1",
      "path": "68"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        981,
        1201
      ],
      "op": "REVERT",
      "path": "68"
    },
    "16": {
      "fn": null,
      "offset": [
        981,
        1201
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "17": {
      "fn": null,
      "offset": [
        981,
        1201
      ],
      "op": "POP",
      "path": "68"
    },
    "18": {
      "fn": null,
      "offset": [
        981,
        1201
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        981,
        1201
      ],
      "op": "CALLDATASIZE",
      "path": "68"
    },
    "21": {
      "fn": null,
      "offset": [
        981,
        1201
      ],
      "op": "LT",
      "path": "68"
    },
    "22": {
      "fn": null,
      "offset": [
        981,
        1201
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x4C"
    },
    "25": {
      "fn": null,
      "offset": [
        981,
        1201
      ],
      "op": "JUMPI",
      "path": "68"
    },
    "26": {
      "fn": null,
      "offset": [
        981,
        1201
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        981,
        1201
      ],
      "op": "CALLDATALOAD",
      "path": "68"
    },
    "29": {
      "fn": null,
      "offset": [
        981,
        1201
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        981,
        1201
      ],
      "op": "SHR",
      "path": "68"
    },
    "32": {
      "fn": null,
      "offset": [
        981,
        1201
      ],
      "op": "DUP1",
      "path": "68"
    },
    "33": {
      "fn": null,
      "offset": [
        981,
        1201
      ],
      "op": "PUSH4",
      "path": "68",
      "value": "0x4A6C9DB6"
    },
    "38": {
      "fn": null,
      "offset": [
        981,
        1201
      ],
      "op": "EQ",
      "path": "68"
    },
    "39": {
      "fn": null,
      "offset": [
        981,
        1201
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x51"
    },
    "42": {
      "fn": null,
      "offset": [
        981,
        1201
      ],
      "op": "JUMPI",
      "path": "68"
    },
    "43": {
      "fn": null,
      "offset": [
        981,
        1201
      ],
      "op": "DUP1",
      "path": "68"
    },
    "44": {
      "fn": null,
      "offset": [
        981,
        1201
      ],
      "op": "PUSH4",
      "path": "68",
      "value": "0x8129FC1C"
    },
    "49": {
      "fn": null,
      "offset": [
        981,
        1201
      ],
      "op": "EQ",
      "path": "68"
    },
    "50": {
      "fn": null,
      "offset": [
        981,
        1201
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x79"
    },
    "53": {
      "fn": null,
      "offset": [
        981,
        1201
      ],
      "op": "JUMPI",
      "path": "68"
    },
    "54": {
      "fn": null,
      "offset": [
        981,
        1201
      ],
      "op": "DUP1",
      "path": "68"
    },
    "55": {
      "fn": null,
      "offset": [
        981,
        1201
      ],
      "op": "PUSH4",
      "path": "68",
      "value": "0xF62D1888"
    },
    "60": {
      "fn": null,
      "offset": [
        981,
        1201
      ],
      "op": "EQ",
      "path": "68"
    },
    "61": {
      "fn": null,
      "offset": [
        981,
        1201
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x83"
    },
    "64": {
      "fn": null,
      "offset": [
        981,
        1201
      ],
      "op": "JUMPI",
      "path": "68"
    },
    "65": {
      "fn": null,
      "offset": [
        981,
        1201
      ],
      "op": "DUP1",
      "path": "68"
    },
    "66": {
      "fn": null,
      "offset": [
        981,
        1201
      ],
      "op": "PUSH4",
      "path": "68",
      "value": "0xFA39851F"
    },
    "71": {
      "fn": null,
      "offset": [
        981,
        1201
      ],
      "op": "EQ",
      "path": "68"
    },
    "72": {
      "fn": null,
      "offset": [
        981,
        1201
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x96"
    },
    "75": {
      "fn": null,
      "offset": [
        981,
        1201
      ],
      "op": "JUMPI",
      "path": "68"
    },
    "76": {
      "fn": null,
      "offset": [
        981,
        1201
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "77": {
      "fn": null,
      "offset": [
        981,
        1201
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x0"
    },
    "79": {
      "fn": null,
      "offset": [
        981,
        1201
      ],
      "op": "DUP1",
      "path": "68"
    },
    "80": {
      "first_revert": true,
      "fn": null,
      "offset": [
        981,
        1201
      ],
      "op": "REVERT",
      "path": "68"
    },
    "81": {
      "offset": [
        516,
        535
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "82": {
      "fn": null,
      "offset": [
        516,
        535
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x0"
    },
    "84": {
      "fn": null,
      "offset": [
        516,
        535
      ],
      "op": "SLOAD",
      "path": "68"
    },
    "85": {
      "fn": null,
      "offset": [
        516,
        535
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x64"
    },
    "88": {
      "fn": null,
      "offset": [
        516,
        535
      ],
      "op": "SWAP1",
      "path": "68"
    },
    "89": {
      "fn": null,
      "offset": [
        516,
        535
      ],
      "op": "PUSH3",
      "path": "68",
      "value": "0x10000"
    },
    "93": {
      "fn": null,
      "offset": [
        516,
        535
      ],
      "op": "SWAP1",
      "path": "68"
    },
    "94": {
      "fn": null,
      "offset": [
        516,
        535
      ],
      "op": "DIV",
      "path": "68"
    },
    "95": {
      "fn": null,
      "offset": [
        516,
        535
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0xFF"
    },
    "97": {
      "fn": null,
      "offset": [
        516,
        535
      ],
      "op": "AND",
      "path": "68"
    },
    "98": {
      "fn": null,
      "offset": [
        516,
        535
      ],
      "op": "DUP2",
      "path": "68"
    },
    "99": {
      "fn": null,
      "offset": [
        516,
        535
      ],
      "op": "JUMP",
      "path": "68"
    },
    "100": {
      "fn": null,
      "offset": [
        516,
        535
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "101": {
      "fn": null,
      "offset": [
        516,
        535
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "103": {
      "fn": null,
      "offset": [
        516,
        535
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "104": {
      "op": "SWAP1"
    },
    "105": {
      "op": "ISZERO"
    },
    "106": {
      "op": "ISZERO"
    },
    "107": {
      "op": "DUP2"
    },
    "108": {
      "op": "MSTORE"
    },
    "109": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "111": {
      "op": "ADD"
    },
    "112": {
      "offset": [
        516,
        535
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "113": {
      "fn": null,
      "offset": [
        516,
        535
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "115": {
      "fn": null,
      "offset": [
        516,
        535
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "116": {
      "fn": null,
      "offset": [
        516,
        535
      ],
      "op": "DUP1",
      "path": "68"
    },
    "117": {
      "fn": null,
      "offset": [
        516,
        535
      ],
      "op": "SWAP2",
      "path": "68"
    },
    "118": {
      "fn": null,
      "offset": [
        516,
        535
      ],
      "op": "SUB",
      "path": "68"
    },
    "119": {
      "fn": null,
      "offset": [
        516,
        535
      ],
      "op": "SWAP1",
      "path": "68"
    },
    "120": {
      "fn": null,
      "offset": [
        516,
        535
      ],
      "op": "RETURN",
      "path": "68"
    },
    "121": {
      "fn": "SampleHuman.initialize",
      "offset": [
        542,
        614
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "122": {
      "fn": "SampleHuman.initialize",
      "offset": [
        542,
        614
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x81"
    },
    "125": {
      "fn": "SampleHuman.initialize",
      "offset": [
        542,
        614
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0xAB"
    },
    "128": {
      "fn": "SampleHuman.initialize",
      "jump": "i",
      "offset": [
        542,
        614
      ],
      "op": "JUMP",
      "path": "68"
    },
    "129": {
      "fn": "SampleHuman.initialize",
      "offset": [
        542,
        614
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "130": {
      "fn": "SampleHuman.initialize",
      "offset": [
        542,
        614
      ],
      "op": "STOP",
      "path": "68"
    },
    "131": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1066,
        1199
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "132": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1066,
        1199
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x81"
    },
    "135": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1066,
        1199
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x91"
    },
    "138": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1066,
        1199
      ],
      "op": "CALLDATASIZE",
      "path": "68"
    },
    "139": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1066,
        1199
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x4"
    },
    "141": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1066,
        1199
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x2F7"
    },
    "144": {
      "fn": "SampleGramps.initialize",
      "jump": "i",
      "offset": [
        1066,
        1199
      ],
      "op": "JUMP",
      "path": "68"
    },
    "145": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1066,
        1199
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "146": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1066,
        1199
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x131"
    },
    "149": {
      "fn": "SampleGramps.initialize",
      "jump": "i",
      "offset": [
        1066,
        1199
      ],
      "op": "JUMP",
      "path": "68"
    },
    "150": {
      "offset": [
        1039,
        1059
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "151": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x9E"
    },
    "154": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x1BA"
    },
    "157": {
      "fn": "SampleGramps.initialize",
      "jump": "i",
      "offset": [
        1039,
        1059
      ],
      "op": "JUMP",
      "path": "68"
    },
    "158": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "159": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "161": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "162": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x70"
    },
    "165": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "SWAP2",
      "path": "68"
    },
    "166": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "SWAP1",
      "path": "68"
    },
    "167": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x3A8"
    },
    "170": {
      "fn": "SampleGramps.initialize",
      "jump": "i",
      "offset": [
        1039,
        1059
      ],
      "op": "JUMP",
      "path": "68"
    },
    "171": {
      "fn": "SampleHuman.initialize",
      "offset": [
        542,
        614
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "172": {
      "offset": [
        1409,
        1422
      ],
      "op": "PUSH1",
      "path": "93",
      "value": "0x0"
    },
    "174": {
      "fn": "SampleHuman.initialize",
      "offset": [
        1409,
        1422
      ],
      "op": "SLOAD",
      "path": "93"
    },
    "175": {
      "fn": "SampleHuman.initialize",
      "offset": [
        1409,
        1422
      ],
      "op": "PUSH2",
      "path": "93",
      "value": "0x100"
    },
    "178": {
      "fn": "SampleHuman.initialize",
      "offset": [
        1409,
        1422
      ],
      "op": "SWAP1",
      "path": "93"
    },
    "179": {
      "fn": "SampleHuman.initialize",
      "offset": [
        1409,
        1422
      ],
      "op": "DIV",
      "path": "93"
    },
    "180": {
      "fn": "SampleHuman.initialize",
      "offset": [
        1409,
        1422
      ],
      "op": "PUSH1",
      "path": "93",
      "value": "0xFF"
    },
    "182": {
      "fn": "SampleHuman.initialize",
      "offset": [
        1409,
        1422
      ],
      "op": "AND",
      "path": "93"
    },
    "183": {
      "fn": "SampleHuman.initialize",
      "offset": [
        1409,
        1422
      ],
      "op": "DUP1",
      "path": "93"
    },
    "184": {
      "offset": [
        1409,
        1439
      ],
      "op": "PUSH2",
      "path": "93",
      "value": "0xC4"
    },
    "187": {
      "offset": [
        1409,
        1439
      ],
      "op": "JUMPI",
      "path": "93"
    },
    "188": {
      "op": "POP"
    },
    "189": {
      "offset": [
        1427,
        1439
      ],
      "op": "PUSH1",
      "path": "93",
      "value": "0x0"
    },
    "191": {
      "fn": "SampleHuman.initialize",
      "offset": [
        1427,
        1439
      ],
      "op": "SLOAD",
      "path": "93"
    },
    "192": {
      "fn": "SampleHuman.initialize",
      "offset": [
        1427,
        1439
      ],
      "op": "PUSH1",
      "path": "93",
      "value": "0xFF"
    },
    "194": {
      "fn": "SampleHuman.initialize",
      "offset": [
        1427,
        1439
      ],
      "op": "AND",
      "path": "93"
    },
    "195": {
      "offset": [
        1426,
        1439
      ],
      "op": "ISZERO",
      "path": "93"
    },
    "196": {
      "offset": [
        1409,
        1439
      ],
      "op": "JUMPDEST",
      "path": "93"
    },
    "197": {
      "offset": [
        1401,
        1490
      ],
      "op": "PUSH2",
      "path": "93",
      "value": "0xE9"
    },
    "200": {
      "offset": [
        1401,
        1490
      ],
      "op": "JUMPI",
      "path": "93"
    },
    "201": {
      "fn": "SampleHuman.initialize",
      "offset": [
        1401,
        1490
      ],
      "op": "PUSH1",
      "path": "93",
      "value": "0x40"
    },
    "203": {
      "fn": "SampleHuman.initialize",
      "offset": [
        1401,
        1490
      ],
      "op": "MLOAD",
      "path": "93"
    },
    "204": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "208": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "210": {
      "op": "SHL"
    },
    "211": {
      "offset": [
        1401,
        1490
      ],
      "op": "DUP2",
      "path": "93"
    },
    "212": {
      "fn": "SampleHuman.initialize",
      "offset": [
        1401,
        1490
      ],
      "op": "MSTORE",
      "path": "93"
    },
    "213": {
      "fn": "SampleHuman.initialize",
      "offset": [
        1401,
        1490
      ],
      "op": "PUSH1",
      "path": "93",
      "value": "0x4"
    },
    "215": {
      "fn": "SampleHuman.initialize",
      "offset": [
        1401,
        1490
      ],
      "op": "ADD",
      "path": "93"
    },
    "216": {
      "fn": "SampleHuman.initialize",
      "offset": [
        1401,
        1490
      ],
      "op": "PUSH2",
      "path": "93",
      "value": "0xE0"
    },
    "219": {
      "fn": "SampleHuman.initialize",
      "offset": [
        1401,
        1490
      ],
      "op": "SWAP1",
      "path": "93"
    },
    "220": {
      "fn": "SampleHuman.initialize",
      "offset": [
        1401,
        1490
      ],
      "op": "PUSH2",
      "path": "93",
      "value": "0x3FD"
    },
    "223": {
      "fn": "SampleHuman.initialize",
      "jump": "i",
      "offset": [
        1401,
        1490
      ],
      "op": "JUMP",
      "path": "93"
    },
    "224": {
      "fn": "SampleHuman.initialize",
      "offset": [
        1401,
        1490
      ],
      "op": "JUMPDEST",
      "path": "93"
    },
    "225": {
      "fn": "SampleHuman.initialize",
      "offset": [
        1401,
        1490
      ],
      "op": "PUSH1",
      "path": "93",
      "value": "0x40"
    },
    "227": {
      "fn": "SampleHuman.initialize",
      "offset": [
        1401,
        1490
      ],
      "op": "MLOAD",
      "path": "93"
    },
    "228": {
      "fn": "SampleHuman.initialize",
      "offset": [
        1401,
        1490
      ],
      "op": "DUP1",
      "path": "93"
    },
    "229": {
      "fn": "SampleHuman.initialize",
      "offset": [
        1401,
        1490
      ],
      "op": "SWAP2",
      "path": "93"
    },
    "230": {
      "fn": "SampleHuman.initialize",
      "offset": [
        1401,
        1490
      ],
      "op": "SUB",
      "path": "93"
    },
    "231": {
      "fn": "SampleHuman.initialize",
      "offset": [
        1401,
        1490
      ],
      "op": "SWAP1",
      "path": "93"
    },
    "232": {
      "fn": "SampleHuman.initialize",
      "offset": [
        1401,
        1490
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "93"
    },
    "233": {
      "fn": "SampleHuman.initialize",
      "offset": [
        1401,
        1490
      ],
      "op": "JUMPDEST",
      "path": "93"
    },
    "234": {
      "offset": [
        1501,
        1520
      ],
      "op": "PUSH1",
      "path": "93",
      "value": "0x0"
    },
    "236": {
      "offset": [
        1524,
        1537
      ],
      "op": "SLOAD",
      "path": "93"
    },
    "237": {
      "fn": "SampleHuman.initialize",
      "offset": [
        1524,
        1537
      ],
      "op": "PUSH2",
      "path": "93",
      "value": "0x100"
    },
    "240": {
      "fn": "SampleHuman.initialize",
      "offset": [
        1524,
        1537
      ],
      "op": "SWAP1",
      "path": "93"
    },
    "241": {
      "fn": "SampleHuman.initialize",
      "offset": [
        1524,
        1537
      ],
      "op": "DIV",
      "path": "93"
    },
    "242": {
      "fn": "SampleHuman.initialize",
      "offset": [
        1524,
        1537
      ],
      "op": "PUSH1",
      "path": "93",
      "value": "0xFF"
    },
    "244": {
      "fn": "SampleHuman.initialize",
      "offset": [
        1524,
        1537
      ],
      "op": "AND",
      "path": "93"
    },
    "245": {
      "offset": [
        1523,
        1537
      ],
      "op": "ISZERO",
      "path": "93"
    },
    "246": {
      "offset": [
        1547,
        1645
      ],
      "op": "DUP1",
      "path": "93"
    },
    "247": {
      "fn": "SampleHuman.initialize",
      "offset": [
        1547,
        1645
      ],
      "op": "ISZERO",
      "path": "93"
    },
    "248": {
      "fn": "SampleHuman.initialize",
      "offset": [
        1547,
        1645
      ],
      "op": "PUSH2",
      "path": "93",
      "value": "0x10B"
    },
    "251": {
      "fn": "SampleHuman.initialize",
      "offset": [
        1547,
        1645
      ],
      "op": "JUMPI",
      "path": "93"
    },
    "252": {
      "offset": [
        1581,
        1594
      ],
      "op": "PUSH1",
      "path": "93",
      "value": "0x0"
    },
    "254": {
      "offset": [
        1581,
        1601
      ],
      "op": "DUP1",
      "path": "93"
    },
    "255": {
      "fn": "SampleHuman.initialize",
      "offset": [
        1581,
        1601
      ],
      "op": "SLOAD",
      "path": "93"
    },
    "256": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "259": {
      "op": "NOT"
    },
    "260": {
      "offset": [
        1615,
        1634
      ],
      "op": "AND",
      "path": "93"
    },
    "261": {
      "fn": "SampleHuman.initialize",
      "offset": [
        1615,
        1634
      ],
      "op": "PUSH2",
      "path": "93",
      "value": "0x101"
    },
    "264": {
      "fn": "SampleHuman.initialize",
      "offset": [
        1615,
        1634
      ],
      "op": "OR",
      "path": "93"
    },
    "265": {
      "fn": "SampleHuman.initialize",
      "offset": [
        1615,
        1634
      ],
      "op": "SWAP1",
      "path": "93"
    },
    "266": {
      "fn": "SampleHuman.initialize",
      "offset": [
        1615,
        1634
      ],
      "op": "SSTORE",
      "path": "93"
    },
    "267": {
      "offset": [
        1547,
        1645
      ],
      "op": "JUMPDEST",
      "path": "93"
    },
    "268": {
      "fn": "SampleHuman.initialize",
      "offset": [
        593,
        600
      ],
      "op": "PUSH1",
      "path": "68",
      "statement": 0,
      "value": "0x0"
    },
    "270": {
      "fn": "SampleHuman.initialize",
      "offset": [
        593,
        607
      ],
      "op": "DUP1",
      "path": "68"
    },
    "271": {
      "fn": "SampleHuman.initialize",
      "offset": [
        593,
        607
      ],
      "op": "SLOAD",
      "path": "68"
    },
    "272": {
      "op": "PUSH3",
      "value": "0xFF0000"
    },
    "276": {
      "op": "NOT"
    },
    "277": {
      "fn": "SampleHuman.initialize",
      "offset": [
        593,
        607
      ],
      "op": "AND",
      "path": "68"
    },
    "278": {
      "fn": "SampleHuman.initialize",
      "offset": [
        593,
        607
      ],
      "op": "PUSH3",
      "path": "68",
      "value": "0x10000"
    },
    "282": {
      "fn": "SampleHuman.initialize",
      "offset": [
        593,
        607
      ],
      "op": "OR",
      "path": "68"
    },
    "283": {
      "fn": "SampleHuman.initialize",
      "offset": [
        593,
        607
      ],
      "op": "SWAP1",
      "path": "68"
    },
    "284": {
      "fn": "SampleHuman.initialize",
      "offset": [
        593,
        607
      ],
      "op": "SSTORE",
      "path": "68"
    },
    "285": {
      "offset": [
        1667,
        1733
      ],
      "op": "DUP1",
      "path": "93"
    },
    "286": {
      "fn": "SampleHuman.initialize",
      "offset": [
        1667,
        1733
      ],
      "op": "ISZERO",
      "path": "93"
    },
    "287": {
      "fn": "SampleHuman.initialize",
      "offset": [
        1667,
        1733
      ],
      "op": "PUSH2",
      "path": "93",
      "value": "0x12E"
    },
    "290": {
      "fn": "SampleHuman.initialize",
      "offset": [
        1667,
        1733
      ],
      "op": "JUMPI",
      "path": "93"
    },
    "291": {
      "offset": [
        1717,
        1722
      ],
      "op": "PUSH1",
      "path": "93",
      "value": "0x0"
    },
    "293": {
      "offset": [
        1701,
        1722
      ],
      "op": "DUP1",
      "path": "93"
    },
    "294": {
      "fn": "SampleHuman.initialize",
      "offset": [
        1701,
        1722
      ],
      "op": "SLOAD",
      "path": "93"
    },
    "295": {
      "op": "PUSH2",
      "value": "0xFF00"
    },
    "298": {
      "op": "NOT"
    },
    "299": {
      "offset": [
        1701,
        1722
      ],
      "op": "AND",
      "path": "93"
    },
    "300": {
      "fn": "SampleHuman.initialize",
      "offset": [
        1701,
        1722
      ],
      "op": "SWAP1",
      "path": "93"
    },
    "301": {
      "fn": "SampleHuman.initialize",
      "offset": [
        1701,
        1722
      ],
      "op": "SSTORE",
      "path": "93"
    },
    "302": {
      "offset": [
        1667,
        1733
      ],
      "op": "JUMPDEST",
      "path": "93"
    },
    "303": {
      "offset": [
        1391,
        1739
      ],
      "op": "POP",
      "path": "93"
    },
    "304": {
      "fn": "SampleHuman.initialize",
      "jump": "o",
      "offset": [
        542,
        614
      ],
      "op": "JUMP",
      "path": "68"
    },
    "305": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1066,
        1199
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "306": {
      "offset": [
        1409,
        1422
      ],
      "op": "PUSH1",
      "path": "93",
      "value": "0x0"
    },
    "308": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1409,
        1422
      ],
      "op": "SLOAD",
      "path": "93"
    },
    "309": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1409,
        1422
      ],
      "op": "PUSH2",
      "path": "93",
      "value": "0x100"
    },
    "312": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1409,
        1422
      ],
      "op": "SWAP1",
      "path": "93"
    },
    "313": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1409,
        1422
      ],
      "op": "DIV",
      "path": "93"
    },
    "314": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1409,
        1422
      ],
      "op": "PUSH1",
      "path": "93",
      "value": "0xFF"
    },
    "316": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1409,
        1422
      ],
      "op": "AND",
      "path": "93"
    },
    "317": {
      "branch": 3,
      "fn": "SampleGramps.initialize",
      "offset": [
        1409,
        1422
      ],
      "op": "DUP1",
      "path": "93"
    },
    "318": {
      "offset": [
        1409,
        1439
      ],
      "op": "PUSH2",
      "path": "93",
      "value": "0x14A"
    },
    "321": {
      "branch": 3,
      "offset": [
        1409,
        1439
      ],
      "op": "JUMPI",
      "path": "93"
    },
    "322": {
      "op": "POP"
    },
    "323": {
      "offset": [
        1427,
        1439
      ],
      "op": "PUSH1",
      "path": "93",
      "value": "0x0"
    },
    "325": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1427,
        1439
      ],
      "op": "SLOAD",
      "path": "93"
    },
    "326": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1427,
        1439
      ],
      "op": "PUSH1",
      "path": "93",
      "value": "0xFF"
    },
    "328": {
      "branch": 4,
      "fn": "SampleGramps.initialize",
      "offset": [
        1427,
        1439
      ],
      "op": "AND",
      "path": "93"
    },
    "329": {
      "offset": [
        1426,
        1439
      ],
      "op": "ISZERO",
      "path": "93"
    },
    "330": {
      "offset": [
        1409,
        1439
      ],
      "op": "JUMPDEST",
      "path": "93"
    },
    "331": {
      "offset": [
        1401,
        1490
      ],
      "op": "PUSH2",
      "path": "93",
      "value": "0x166"
    },
    "334": {
      "branch": 4,
      "offset": [
        1401,
        1490
      ],
      "op": "JUMPI",
      "path": "93"
    },
    "335": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1401,
        1490
      ],
      "op": "PUSH1",
      "path": "93",
      "value": "0x40"
    },
    "337": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1401,
        1490
      ],
      "op": "MLOAD",
      "path": "93"
    },
    "338": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "342": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "344": {
      "op": "SHL"
    },
    "345": {
      "offset": [
        1401,
        1490
      ],
      "op": "DUP2",
      "path": "93"
    },
    "346": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1401,
        1490
      ],
      "op": "MSTORE",
      "path": "93"
    },
    "347": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1401,
        1490
      ],
      "op": "PUSH1",
      "path": "93",
      "value": "0x4"
    },
    "349": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1401,
        1490
      ],
      "op": "ADD",
      "path": "93"
    },
    "350": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1401,
        1490
      ],
      "op": "PUSH2",
      "path": "93",
      "value": "0xE0"
    },
    "353": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1401,
        1490
      ],
      "op": "SWAP1",
      "path": "93"
    },
    "354": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1401,
        1490
      ],
      "op": "PUSH2",
      "path": "93",
      "value": "0x3FD"
    },
    "357": {
      "fn": "SampleGramps.initialize",
      "jump": "i",
      "offset": [
        1401,
        1490
      ],
      "op": "JUMP",
      "path": "93"
    },
    "358": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1401,
        1490
      ],
      "op": "JUMPDEST",
      "path": "93"
    },
    "359": {
      "offset": [
        1501,
        1520
      ],
      "op": "PUSH1",
      "path": "93",
      "value": "0x0"
    },
    "361": {
      "offset": [
        1524,
        1537
      ],
      "op": "SLOAD",
      "path": "93"
    },
    "362": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1524,
        1537
      ],
      "op": "PUSH2",
      "path": "93",
      "value": "0x100"
    },
    "365": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1524,
        1537
      ],
      "op": "SWAP1",
      "path": "93"
    },
    "366": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1524,
        1537
      ],
      "op": "DIV",
      "path": "93"
    },
    "367": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1524,
        1537
      ],
      "op": "PUSH1",
      "path": "93",
      "value": "0xFF"
    },
    "369": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1524,
        1537
      ],
      "op": "AND",
      "path": "93"
    },
    "370": {
      "offset": [
        1523,
        1537
      ],
      "op": "ISZERO",
      "path": "93"
    },
    "371": {
      "offset": [
        1547,
        1645
      ],
      "op": "DUP1",
      "path": "93"
    },
    "372": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1547,
        1645
      ],
      "op": "ISZERO",
      "path": "93"
    },
    "373": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1547,
        1645
      ],
      "op": "PUSH2",
      "path": "93",
      "value": "0x188"
    },
    "376": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1547,
        1645
      ],
      "op": "JUMPI",
      "path": "93"
    },
    "377": {
      "offset": [
        1581,
        1594
      ],
      "op": "PUSH1",
      "path": "93",
      "value": "0x0"
    },
    "379": {
      "offset": [
        1581,
        1601
      ],
      "op": "DUP1",
      "path": "93"
    },
    "380": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1581,
        1601
      ],
      "op": "SLOAD",
      "path": "93"
    },
    "381": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "384": {
      "op": "NOT"
    },
    "385": {
      "offset": [
        1615,
        1634
      ],
      "op": "AND",
      "path": "93"
    },
    "386": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1615,
        1634
      ],
      "op": "PUSH2",
      "path": "93",
      "value": "0x101"
    },
    "389": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1615,
        1634
      ],
      "op": "OR",
      "path": "93"
    },
    "390": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1615,
        1634
      ],
      "op": "SWAP1",
      "path": "93"
    },
    "391": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1615,
        1634
      ],
      "op": "SSTORE",
      "path": "93"
    },
    "392": {
      "offset": [
        1547,
        1645
      ],
      "op": "JUMPDEST",
      "path": "93"
    },
    "393": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1144,
        1168
      ],
      "op": "PUSH2",
      "path": "68",
      "statement": 1,
      "value": "0x190"
    },
    "396": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1144,
        1166
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0xAB"
    },
    "399": {
      "fn": "SampleGramps.initialize",
      "jump": "i",
      "offset": [
        1144,
        1168
      ],
      "op": "JUMP",
      "path": "68"
    },
    "400": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1144,
        1168
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "401": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1178,
        1192
      ],
      "op": "DUP2",
      "path": "68",
      "statement": 2
    },
    "402": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1178,
        1192
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "403": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1178,
        1192
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x1A3"
    },
    "406": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1178,
        1192
      ],
      "op": "SWAP1",
      "path": "68"
    },
    "407": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1178,
        1184
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x1"
    },
    "409": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1178,
        1184
      ],
      "op": "SWAP1",
      "path": "68"
    },
    "410": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1178,
        1192
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x20"
    },
    "412": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1178,
        1192
      ],
      "op": "DUP6",
      "path": "68"
    },
    "413": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1178,
        1192
      ],
      "op": "ADD",
      "path": "68"
    },
    "414": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1178,
        1192
      ],
      "op": "SWAP1",
      "path": "68"
    },
    "415": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1178,
        1192
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x248"
    },
    "418": {
      "fn": "SampleGramps.initialize",
      "jump": "i",
      "offset": [
        1178,
        1192
      ],
      "op": "JUMP",
      "path": "68"
    },
    "419": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1178,
        1192
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "420": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1178,
        1192
      ],
      "op": "POP",
      "path": "68"
    },
    "421": {
      "offset": [
        1671,
        1685
      ],
      "op": "DUP1",
      "path": "93"
    },
    "422": {
      "offset": [
        1667,
        1733
      ],
      "op": "ISZERO",
      "path": "93"
    },
    "423": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1667,
        1733
      ],
      "op": "PUSH2",
      "path": "93",
      "value": "0x1B6"
    },
    "426": {
      "offset": [
        1667,
        1733
      ],
      "op": "JUMPI",
      "path": "93"
    },
    "427": {
      "offset": [
        1717,
        1722
      ],
      "op": "PUSH1",
      "path": "93",
      "value": "0x0"
    },
    "429": {
      "offset": [
        1701,
        1722
      ],
      "op": "DUP1",
      "path": "93"
    },
    "430": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1701,
        1722
      ],
      "op": "SLOAD",
      "path": "93"
    },
    "431": {
      "op": "PUSH2",
      "value": "0xFF00"
    },
    "434": {
      "op": "NOT"
    },
    "435": {
      "offset": [
        1701,
        1722
      ],
      "op": "AND",
      "path": "93"
    },
    "436": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1701,
        1722
      ],
      "op": "SWAP1",
      "path": "93"
    },
    "437": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1701,
        1722
      ],
      "op": "SSTORE",
      "path": "93"
    },
    "438": {
      "offset": [
        1667,
        1733
      ],
      "op": "JUMPDEST",
      "path": "93"
    },
    "439": {
      "offset": [
        1391,
        1739
      ],
      "op": "POP",
      "path": "93"
    },
    "440": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1066,
        1199
      ],
      "op": "POP",
      "path": "68"
    },
    "441": {
      "fn": "SampleGramps.initialize",
      "jump": "o",
      "offset": [
        1066,
        1199
      ],
      "op": "JUMP",
      "path": "68"
    },
    "442": {
      "offset": [
        1039,
        1059
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "443": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x1"
    },
    "445": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "DUP1",
      "path": "68"
    },
    "446": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "SLOAD",
      "path": "68"
    },
    "447": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x1C7"
    },
    "450": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "SWAP1",
      "path": "68"
    },
    "451": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x44B"
    },
    "454": {
      "fn": "SampleGramps.initialize",
      "jump": "i",
      "offset": [
        1039,
        1059
      ],
      "op": "JUMP",
      "path": "68"
    },
    "455": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "456": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "DUP1",
      "path": "68"
    },
    "457": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x1F"
    },
    "459": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "ADD",
      "path": "68"
    },
    "460": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x20"
    },
    "462": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "DUP1",
      "path": "68"
    },
    "463": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "SWAP2",
      "path": "68"
    },
    "464": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "DIV",
      "path": "68"
    },
    "465": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "MUL",
      "path": "68"
    },
    "466": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x20"
    },
    "468": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "ADD",
      "path": "68"
    },
    "469": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "471": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "472": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "SWAP1",
      "path": "68"
    },
    "473": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "DUP2",
      "path": "68"
    },
    "474": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "ADD",
      "path": "68"
    },
    "475": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "477": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "MSTORE",
      "path": "68"
    },
    "478": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "DUP1",
      "path": "68"
    },
    "479": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "SWAP3",
      "path": "68"
    },
    "480": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "SWAP2",
      "path": "68"
    },
    "481": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "SWAP1",
      "path": "68"
    },
    "482": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "DUP2",
      "path": "68"
    },
    "483": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "DUP2",
      "path": "68"
    },
    "484": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "MSTORE",
      "path": "68"
    },
    "485": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x20"
    },
    "487": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "ADD",
      "path": "68"
    },
    "488": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "DUP3",
      "path": "68"
    },
    "489": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "DUP1",
      "path": "68"
    },
    "490": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "SLOAD",
      "path": "68"
    },
    "491": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x1F3"
    },
    "494": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "SWAP1",
      "path": "68"
    },
    "495": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x44B"
    },
    "498": {
      "fn": "SampleGramps.initialize",
      "jump": "i",
      "offset": [
        1039,
        1059
      ],
      "op": "JUMP",
      "path": "68"
    },
    "499": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "500": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "DUP1",
      "path": "68"
    },
    "501": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "ISZERO",
      "path": "68"
    },
    "502": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x240"
    },
    "505": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "JUMPI",
      "path": "68"
    },
    "506": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "DUP1",
      "path": "68"
    },
    "507": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x1F"
    },
    "509": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "LT",
      "path": "68"
    },
    "510": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x215"
    },
    "513": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "JUMPI",
      "path": "68"
    },
    "514": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x100"
    },
    "517": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "DUP1",
      "path": "68"
    },
    "518": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "DUP4",
      "path": "68"
    },
    "519": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "SLOAD",
      "path": "68"
    },
    "520": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "DIV",
      "path": "68"
    },
    "521": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "MUL",
      "path": "68"
    },
    "522": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "DUP4",
      "path": "68"
    },
    "523": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "MSTORE",
      "path": "68"
    },
    "524": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "SWAP2",
      "path": "68"
    },
    "525": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x20"
    },
    "527": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "ADD",
      "path": "68"
    },
    "528": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "SWAP2",
      "path": "68"
    },
    "529": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x240"
    },
    "532": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "JUMP",
      "path": "68"
    },
    "533": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "534": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "DUP3",
      "path": "68"
    },
    "535": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "ADD",
      "path": "68"
    },
    "536": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "SWAP2",
      "path": "68"
    },
    "537": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "SWAP1",
      "path": "68"
    },
    "538": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x0"
    },
    "540": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "MSTORE",
      "path": "68"
    },
    "541": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x20"
    },
    "543": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x0"
    },
    "545": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "KECCAK256",
      "path": "68"
    },
    "546": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "SWAP1",
      "path": "68"
    },
    "547": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "548": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "DUP2",
      "path": "68"
    },
    "549": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "SLOAD",
      "path": "68"
    },
    "550": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "DUP2",
      "path": "68"
    },
    "551": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "MSTORE",
      "path": "68"
    },
    "552": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "SWAP1",
      "path": "68"
    },
    "553": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x1"
    },
    "555": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "ADD",
      "path": "68"
    },
    "556": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "SWAP1",
      "path": "68"
    },
    "557": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x20"
    },
    "559": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "ADD",
      "path": "68"
    },
    "560": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "DUP1",
      "path": "68"
    },
    "561": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "DUP4",
      "path": "68"
    },
    "562": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "GT",
      "path": "68"
    },
    "563": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x223"
    },
    "566": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "JUMPI",
      "path": "68"
    },
    "567": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "DUP3",
      "path": "68"
    },
    "568": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "SWAP1",
      "path": "68"
    },
    "569": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "SUB",
      "path": "68"
    },
    "570": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x1F"
    },
    "572": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "AND",
      "path": "68"
    },
    "573": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "DUP3",
      "path": "68"
    },
    "574": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "ADD",
      "path": "68"
    },
    "575": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "SWAP2",
      "path": "68"
    },
    "576": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "577": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "POP",
      "path": "68"
    },
    "578": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "POP",
      "path": "68"
    },
    "579": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "POP",
      "path": "68"
    },
    "580": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "POP",
      "path": "68"
    },
    "581": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "POP",
      "path": "68"
    },
    "582": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "DUP2",
      "path": "68"
    },
    "583": {
      "fn": "SampleGramps.initialize",
      "jump": "o",
      "offset": [
        1039,
        1059
      ],
      "op": "JUMP",
      "path": "68"
    },
    "584": {
      "op": "JUMPDEST"
    },
    "585": {
      "op": "DUP3"
    },
    "586": {
      "op": "DUP1"
    },
    "587": {
      "op": "SLOAD"
    },
    "588": {
      "op": "PUSH2",
      "value": "0x254"
    },
    "591": {
      "op": "SWAP1"
    },
    "592": {
      "op": "PUSH2",
      "value": "0x44B"
    },
    "595": {
      "jump": "i",
      "op": "JUMP"
    },
    "596": {
      "op": "JUMPDEST"
    },
    "597": {
      "op": "SWAP1"
    },
    "598": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "600": {
      "op": "MSTORE"
    },
    "601": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "603": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "605": {
      "op": "KECCAK256"
    },
    "606": {
      "op": "SWAP1"
    },
    "607": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "609": {
      "op": "ADD"
    },
    "610": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "612": {
      "op": "SWAP1"
    },
    "613": {
      "op": "DIV"
    },
    "614": {
      "op": "DUP2"
    },
    "615": {
      "op": "ADD"
    },
    "616": {
      "op": "SWAP3"
    },
    "617": {
      "op": "DUP3"
    },
    "618": {
      "op": "PUSH2",
      "value": "0x276"
    },
    "621": {
      "op": "JUMPI"
    },
    "622": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "624": {
      "op": "DUP6"
    },
    "625": {
      "op": "SSTORE"
    },
    "626": {
      "op": "PUSH2",
      "value": "0x2BC"
    },
    "629": {
      "op": "JUMP"
    },
    "630": {
      "op": "JUMPDEST"
    },
    "631": {
      "op": "DUP3"
    },
    "632": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "634": {
      "op": "LT"
    },
    "635": {
      "op": "PUSH2",
      "value": "0x28F"
    },
    "638": {
      "op": "JUMPI"
    },
    "639": {
      "op": "DUP1"
    },
    "640": {
      "op": "MLOAD"
    },
    "641": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "643": {
      "op": "NOT"
    },
    "644": {
      "op": "AND"
    },
    "645": {
      "op": "DUP4"
    },
    "646": {
      "op": "DUP1"
    },
    "647": {
      "op": "ADD"
    },
    "648": {
      "op": "OR"
    },
    "649": {
      "op": "DUP6"
    },
    "650": {
      "op": "SSTORE"
    },
    "651": {
      "op": "PUSH2",
      "value": "0x2BC"
    },
    "654": {
      "op": "JUMP"
    },
    "655": {
      "op": "JUMPDEST"
    },
    "656": {
      "op": "DUP3"
    },
    "657": {
      "op": "DUP1"
    },
    "658": {
      "op": "ADD"
    },
    "659": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "661": {
      "op": "ADD"
    },
    "662": {
      "op": "DUP6"
    },
    "663": {
      "op": "SSTORE"
    },
    "664": {
      "op": "DUP3"
    },
    "665": {
      "op": "ISZERO"
    },
    "666": {
      "op": "PUSH2",
      "value": "0x2BC"
    },
    "669": {
      "op": "JUMPI"
    },
    "670": {
      "op": "SWAP2"
    },
    "671": {
      "op": "DUP3"
    },
    "672": {
      "op": "ADD"
    },
    "673": {
      "op": "JUMPDEST"
    },
    "674": {
      "op": "DUP3"
    },
    "675": {
      "op": "DUP2"
    },
    "676": {
      "op": "GT"
    },
    "677": {
      "op": "ISZERO"
    },
    "678": {
      "op": "PUSH2",
      "value": "0x2BC"
    },
    "681": {
      "op": "JUMPI"
    },
    "682": {
      "op": "DUP3"
    },
    "683": {
      "op": "MLOAD"
    },
    "684": {
      "op": "DUP3"
    },
    "685": {
      "op": "SSTORE"
    },
    "686": {
      "op": "SWAP2"
    },
    "687": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "689": {
      "op": "ADD"
    },
    "690": {
      "op": "SWAP2"
    },
    "691": {
      "op": "SWAP1"
    },
    "692": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "694": {
      "op": "ADD"
    },
    "695": {
      "op": "SWAP1"
    },
    "696": {
      "op": "PUSH2",
      "value": "0x2A1"
    },
    "699": {
      "op": "JUMP"
    },
    "700": {
      "op": "JUMPDEST"
    },
    "701": {
      "op": "POP"
    },
    "702": {
      "op": "PUSH2",
      "value": "0x2C8"
    },
    "705": {
      "op": "SWAP3"
    },
    "706": {
      "op": "SWAP2"
    },
    "707": {
      "op": "POP"
    },
    "708": {
      "op": "PUSH2",
      "value": "0x2CC"
    },
    "711": {
      "jump": "i",
      "op": "JUMP"
    },
    "712": {
      "op": "JUMPDEST"
    },
    "713": {
      "op": "POP"
    },
    "714": {
      "op": "SWAP1"
    },
    "715": {
      "jump": "o",
      "op": "JUMP"
    },
    "716": {
      "op": "JUMPDEST"
    },
    "717": {
      "op": "JUMPDEST"
    },
    "718": {
      "op": "DUP1"
    },
    "719": {
      "op": "DUP3"
    },
    "720": {
      "op": "GT"
    },
    "721": {
      "op": "ISZERO"
    },
    "722": {
      "op": "PUSH2",
      "value": "0x2C8"
    },
    "725": {
      "op": "JUMPI"
    },
    "726": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "728": {
      "op": "DUP2"
    },
    "729": {
      "op": "SSTORE"
    },
    "730": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "732": {
      "op": "ADD"
    },
    "733": {
      "op": "PUSH2",
      "value": "0x2CD"
    },
    "736": {
      "op": "JUMP"
    },
    "737": {
      "op": "JUMPDEST"
    },
    "738": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "743": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "745": {
      "op": "SHL"
    },
    "746": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "748": {
      "op": "MSTORE"
    },
    "749": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "751": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "753": {
      "op": "MSTORE"
    },
    "754": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "756": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "758": {
      "op": "REVERT"
    },
    "759": {
      "op": "JUMPDEST"
    },
    "760": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "762": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "764": {
      "op": "DUP3"
    },
    "765": {
      "op": "DUP5"
    },
    "766": {
      "op": "SUB"
    },
    "767": {
      "op": "SLT"
    },
    "768": {
      "op": "ISZERO"
    },
    "769": {
      "op": "PUSH2",
      "value": "0x309"
    },
    "772": {
      "op": "JUMPI"
    },
    "773": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "775": {
      "op": "DUP1"
    },
    "776": {
      "op": "REVERT"
    },
    "777": {
      "op": "JUMPDEST"
    },
    "778": {
      "op": "DUP2"
    },
    "779": {
      "op": "CALLDATALOAD"
    },
    "780": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "789": {
      "op": "DUP1"
    },
    "790": {
      "op": "DUP3"
    },
    "791": {
      "op": "GT"
    },
    "792": {
      "op": "ISZERO"
    },
    "793": {
      "op": "PUSH2",
      "value": "0x321"
    },
    "796": {
      "op": "JUMPI"
    },
    "797": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "799": {
      "op": "DUP1"
    },
    "800": {
      "op": "REVERT"
    },
    "801": {
      "op": "JUMPDEST"
    },
    "802": {
      "op": "DUP2"
    },
    "803": {
      "op": "DUP5"
    },
    "804": {
      "op": "ADD"
    },
    "805": {
      "op": "SWAP2"
    },
    "806": {
      "op": "POP"
    },
    "807": {
      "op": "DUP5"
    },
    "808": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "810": {
      "op": "DUP4"
    },
    "811": {
      "op": "ADD"
    },
    "812": {
      "op": "SLT"
    },
    "813": {
      "op": "PUSH2",
      "value": "0x335"
    },
    "816": {
      "op": "JUMPI"
    },
    "817": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "819": {
      "op": "DUP1"
    },
    "820": {
      "op": "REVERT"
    },
    "821": {
      "op": "JUMPDEST"
    },
    "822": {
      "op": "DUP2"
    },
    "823": {
      "op": "CALLDATALOAD"
    },
    "824": {
      "op": "DUP2"
    },
    "825": {
      "op": "DUP2"
    },
    "826": {
      "op": "GT"
    },
    "827": {
      "op": "ISZERO"
    },
    "828": {
      "op": "PUSH2",
      "value": "0x347"
    },
    "831": {
      "op": "JUMPI"
    },
    "832": {
      "op": "PUSH2",
      "value": "0x347"
    },
    "835": {
      "op": "PUSH2",
      "value": "0x2E1"
    },
    "838": {
      "jump": "i",
      "op": "JUMP"
    },
    "839": {
      "op": "JUMPDEST"
    },
    "840": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "842": {
      "op": "MLOAD"
    },
    "843": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "845": {
      "op": "DUP3"
    },
    "846": {
      "op": "ADD"
    },
    "847": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "849": {
      "op": "NOT"
    },
    "850": {
      "op": "SWAP1"
    },
    "851": {
      "op": "DUP2"
    },
    "852": {
      "op": "AND"
    },
    "853": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "855": {
      "op": "ADD"
    },
    "856": {
      "op": "AND"
    },
    "857": {
      "op": "DUP2"
    },
    "858": {
      "op": "ADD"
    },
    "859": {
      "op": "SWAP1"
    },
    "860": {
      "op": "DUP4"
    },
    "861": {
      "op": "DUP3"
    },
    "862": {
      "op": "GT"
    },
    "863": {
      "op": "DUP2"
    },
    "864": {
      "op": "DUP4"
    },
    "865": {
      "op": "LT"
    },
    "866": {
      "op": "OR"
    },
    "867": {
      "op": "ISZERO"
    },
    "868": {
      "op": "PUSH2",
      "value": "0x36F"
    },
    "871": {
      "op": "JUMPI"
    },
    "872": {
      "op": "PUSH2",
      "value": "0x36F"
    },
    "875": {
      "op": "PUSH2",
      "value": "0x2E1"
    },
    "878": {
      "jump": "i",
      "op": "JUMP"
    },
    "879": {
      "op": "JUMPDEST"
    },
    "880": {
      "op": "DUP2"
    },
    "881": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "883": {
      "op": "MSTORE"
    },
    "884": {
      "op": "DUP3"
    },
    "885": {
      "op": "DUP2"
    },
    "886": {
      "op": "MSTORE"
    },
    "887": {
      "op": "DUP8"
    },
    "888": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "890": {
      "op": "DUP5"
    },
    "891": {
      "op": "DUP8"
    },
    "892": {
      "op": "ADD"
    },
    "893": {
      "op": "ADD"
    },
    "894": {
      "op": "GT"
    },
    "895": {
      "op": "ISZERO"
    },
    "896": {
      "op": "PUSH2",
      "value": "0x388"
    },
    "899": {
      "op": "JUMPI"
    },
    "900": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "902": {
      "op": "DUP1"
    },
    "903": {
      "op": "REVERT"
    },
    "904": {
      "op": "JUMPDEST"
    },
    "905": {
      "op": "DUP3"
    },
    "906": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "908": {
      "op": "DUP7"
    },
    "909": {
      "op": "ADD"
    },
    "910": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "912": {
      "op": "DUP4"
    },
    "913": {
      "op": "ADD"
    },
    "914": {
      "op": "CALLDATACOPY"
    },
    "915": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "917": {
      "op": "SWAP3"
    },
    "918": {
      "op": "DUP2"
    },
    "919": {
      "op": "ADD"
    },
    "920": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "922": {
      "op": "ADD"
    },
    "923": {
      "op": "SWAP3"
    },
    "924": {
      "op": "SWAP1"
    },
    "925": {
      "op": "SWAP3"
    },
    "926": {
      "op": "MSTORE"
    },
    "927": {
      "op": "POP"
    },
    "928": {
      "op": "SWAP6"
    },
    "929": {
      "op": "SWAP5"
    },
    "930": {
      "op": "POP"
    },
    "931": {
      "op": "POP"
    },
    "932": {
      "op": "POP"
    },
    "933": {
      "op": "POP"
    },
    "934": {
      "op": "POP"
    },
    "935": {
      "jump": "o",
      "op": "JUMP"
    },
    "936": {
      "op": "JUMPDEST"
    },
    "937": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "939": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "941": {
      "op": "DUP1"
    },
    "942": {
      "op": "DUP4"
    },
    "943": {
      "op": "MSTORE"
    },
    "944": {
      "op": "DUP4"
    },
    "945": {
      "op": "MLOAD"
    },
    "946": {
      "op": "DUP1"
    },
    "947": {
      "op": "DUP3"
    },
    "948": {
      "op": "DUP6"
    },
    "949": {
      "op": "ADD"
    },
    "950": {
      "op": "MSTORE"
    },
    "951": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "953": {
      "op": "JUMPDEST"
    },
    "954": {
      "op": "DUP2"
    },
    "955": {
      "op": "DUP2"
    },
    "956": {
      "op": "LT"
    },
    "957": {
      "op": "ISZERO"
    },
    "958": {
      "op": "PUSH2",
      "value": "0x3D5"
    },
    "961": {
      "op": "JUMPI"
    },
    "962": {
      "op": "DUP6"
    },
    "963": {
      "op": "DUP2"
    },
    "964": {
      "op": "ADD"
    },
    "965": {
      "op": "DUP4"
    },
    "966": {
      "op": "ADD"
    },
    "967": {
      "op": "MLOAD"
    },
    "968": {
      "op": "DUP6"
    },
    "969": {
      "op": "DUP3"
    },
    "970": {
      "op": "ADD"
    },
    "971": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "973": {
      "op": "ADD"
    },
    "974": {
      "op": "MSTORE"
    },
    "975": {
      "op": "DUP3"
    },
    "976": {
      "op": "ADD"
    },
    "977": {
      "op": "PUSH2",
      "value": "0x3B9"
    },
    "980": {
      "op": "JUMP"
    },
    "981": {
      "op": "JUMPDEST"
    },
    "982": {
      "op": "DUP2"
    },
    "983": {
      "op": "DUP2"
    },
    "984": {
      "op": "GT"
    },
    "985": {
      "op": "ISZERO"
    },
    "986": {
      "op": "PUSH2",
      "value": "0x3E7"
    },
    "989": {
      "op": "JUMPI"
    },
    "990": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "992": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "994": {
      "op": "DUP4"
    },
    "995": {
      "op": "DUP8"
    },
    "996": {
      "op": "ADD"
    },
    "997": {
      "op": "ADD"
    },
    "998": {
      "op": "MSTORE"
    },
    "999": {
      "op": "JUMPDEST"
    },
    "1000": {
      "op": "POP"
    },
    "1001": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1003": {
      "op": "ADD"
    },
    "1004": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1006": {
      "op": "NOT"
    },
    "1007": {
      "op": "AND"
    },
    "1008": {
      "op": "SWAP3"
    },
    "1009": {
      "op": "SWAP1"
    },
    "1010": {
      "op": "SWAP3"
    },
    "1011": {
      "op": "ADD"
    },
    "1012": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1014": {
      "op": "ADD"
    },
    "1015": {
      "op": "SWAP4"
    },
    "1016": {
      "op": "SWAP3"
    },
    "1017": {
      "op": "POP"
    },
    "1018": {
      "op": "POP"
    },
    "1019": {
      "op": "POP"
    },
    "1020": {
      "jump": "o",
      "op": "JUMP"
    },
    "1021": {
      "op": "JUMPDEST"
    },
    "1022": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1024": {
      "op": "DUP1"
    },
    "1025": {
      "op": "DUP3"
    },
    "1026": {
      "op": "MSTORE"
    },
    "1027": {
      "op": "PUSH1",
      "value": "0x2E"
    },
    "1029": {
      "op": "SWAP1"
    },
    "1030": {
      "op": "DUP3"
    },
    "1031": {
      "op": "ADD"
    },
    "1032": {
      "op": "MSTORE"
    },
    "1033": {
      "op": "PUSH32",
      "value": "0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561"
    },
    "1066": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1068": {
      "op": "DUP3"
    },
    "1069": {
      "op": "ADD"
    },
    "1070": {
      "op": "MSTORE"
    },
    "1071": {
      "op": "PUSH14",
      "value": "0x191E481A5B9A5D1A585B1A5E9959"
    },
    "1086": {
      "op": "PUSH1",
      "value": "0x92"
    },
    "1088": {
      "op": "SHL"
    },
    "1089": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1091": {
      "op": "DUP3"
    },
    "1092": {
      "op": "ADD"
    },
    "1093": {
      "op": "MSTORE"
    },
    "1094": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1096": {
      "op": "ADD"
    },
    "1097": {
      "op": "SWAP1"
    },
    "1098": {
      "jump": "o",
      "op": "JUMP"
    },
    "1099": {
      "op": "JUMPDEST"
    },
    "1100": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1102": {
      "op": "DUP2"
    },
    "1103": {
      "op": "DUP2"
    },
    "1104": {
      "op": "SHR"
    },
    "1105": {
      "op": "SWAP1"
    },
    "1106": {
      "op": "DUP3"
    },
    "1107": {
      "op": "AND"
    },
    "1108": {
      "op": "DUP1"
    },
    "1109": {
      "op": "PUSH2",
      "value": "0x45F"
    },
    "1112": {
      "op": "JUMPI"
    },
    "1113": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "1115": {
      "op": "DUP3"
    },
    "1116": {
      "op": "AND"
    },
    "1117": {
      "op": "SWAP2"
    },
    "1118": {
      "op": "POP"
    },
    "1119": {
      "op": "JUMPDEST"
    },
    "1120": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1122": {
      "op": "DUP3"
    },
    "1123": {
      "op": "LT"
    },
    "1124": {
      "op": "DUP2"
    },
    "1125": {
      "op": "EQ"
    },
    "1126": {
      "op": "ISZERO"
    },
    "1127": {
      "op": "PUSH2",
      "value": "0x480"
    },
    "1130": {
      "op": "JUMPI"
    },
    "1131": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "1136": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1138": {
      "op": "SHL"
    },
    "1139": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1141": {
      "op": "MSTORE"
    },
    "1142": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "1144": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "1146": {
      "op": "MSTORE"
    },
    "1147": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1149": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1151": {
      "op": "REVERT"
    },
    "1152": {
      "op": "JUMPDEST"
    },
    "1153": {
      "op": "POP"
    },
    "1154": {
      "op": "SWAP2"
    },
    "1155": {
      "op": "SWAP1"
    },
    "1156": {
      "op": "POP"
    },
    "1157": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "e5d5fb97e35fc725af618e81bf0e1c1b779a15ab",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"../proxy/utils/Initializable.sol\";\n\n// Sample contracts showing upgradeability with multiple inheritance.\n// Child contract inherits from Father and Mother contracts, and Father extends from Gramps.\n//\n//         Human\n//       /       \\\n//      |       Gramps\n//      |         |\n//    Mother    Father\n//      |         |\n//      -- Child --\n\n/**\n * Sample base intializable contract that is a human\n */\ncontract SampleHuman is Initializable {\n    bool public isHuman;\n\n    function initialize() public initializer {\n        isHuman = true;\n    }\n}\n\n/**\n * Sample base intializable contract that defines a field mother\n */\ncontract SampleMother is Initializable, SampleHuman {\n    uint256 public mother;\n\n    function initialize(uint256 value) public virtual initializer {\n        SampleHuman.initialize();\n        mother = value;\n    }\n}\n\n/**\n * Sample base intializable contract that defines a field gramps\n */\ncontract SampleGramps is Initializable, SampleHuman {\n    string public gramps;\n\n    function initialize(string memory value) public virtual initializer {\n        SampleHuman.initialize();\n        gramps = value;\n    }\n}\n\n/**\n * Sample base intializable contract that defines a field father and extends from gramps\n */\ncontract SampleFather is Initializable, SampleGramps {\n    uint256 public father;\n\n    function initialize(string memory _gramps, uint256 _father) public initializer {\n        SampleGramps.initialize(_gramps);\n        father = _father;\n    }\n}\n\n/**\n * Child extends from mother, father (gramps)\n */\ncontract SampleChild is Initializable, SampleMother, SampleFather {\n    uint256 public child;\n\n    function initialize(\n        uint256 _mother,\n        string memory _gramps,\n        uint256 _father,\n        uint256 _child\n    ) public initializer {\n        SampleMother.initialize(_mother);\n        SampleFather.initialize(_gramps, _father);\n        child = _child;\n    }\n}\n",
  "sourceMap": "981:220:68:-:0;;;;;;;;;;;;;;;;;;;",
  "sourcePath": "contracts/openzeppelin/contracts/mocks/MultipleInheritanceInitializableMocks.sol",
  "type": "contract"
}