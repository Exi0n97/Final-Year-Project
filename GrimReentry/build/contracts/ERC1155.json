{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "uri_",
          "type": "string"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "ids",
          "type": "uint256[]"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "values",
          "type": "uint256[]"
        }
      ],
      "name": "TransferBatch",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "TransferSingle",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "value",
          "type": "string"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "URI",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "accounts",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "ids",
          "type": "uint256[]"
        }
      ],
      "name": "balanceOfBatch",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256[]",
          "name": "ids",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "amounts",
          "type": "uint256[]"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeBatchTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "uri",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "100": "contracts/openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol",
    "104": "contracts/openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol",
    "141": "contracts/openzeppelin/contracts/utils/Address.sol",
    "143": "contracts/openzeppelin/contracts/utils/Context.sol",
    "156": "contracts/openzeppelin/contracts/utils/introspection/ERC165.sol",
    "160": "contracts/openzeppelin/contracts/utils/introspection/IERC165.sol",
    "98": "contracts/openzeppelin/contracts/token/ERC1155/ERC1155.sol",
    "99": "contracts/openzeppelin/contracts/token/ERC1155/IERC1155.sol"
  },
  "ast": {
    "absolutePath": "contracts/openzeppelin/contracts/token/ERC1155/ERC1155.sol",
    "exportedSymbols": {
      "Address": [
        17544
      ],
      "Context": [
        17650
      ],
      "ERC1155": [
        10526
      ],
      "ERC165": [
        18938
      ],
      "IERC1155": [
        10648
      ],
      "IERC1155MetadataURI": [
        11009
      ],
      "IERC1155Receiver": [
        10689
      ],
      "IERC165": [
        19264
      ]
    },
    "id": 10527,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 9443,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:98"
      },
      {
        "absolutePath": "contracts/openzeppelin/contracts/token/ERC1155/IERC1155.sol",
        "file": "./IERC1155.sol",
        "id": 9444,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 10527,
        "sourceUnit": 10649,
        "src": "58:24:98",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol",
        "file": "./IERC1155Receiver.sol",
        "id": 9445,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 10527,
        "sourceUnit": 10690,
        "src": "83:32:98",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol",
        "file": "./extensions/IERC1155MetadataURI.sol",
        "id": 9446,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 10527,
        "sourceUnit": 11010,
        "src": "116:46:98",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/openzeppelin/contracts/utils/Address.sol",
        "file": "../../utils/Address.sol",
        "id": 9447,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 10527,
        "sourceUnit": 17545,
        "src": "163:33:98",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/openzeppelin/contracts/utils/Context.sol",
        "file": "../../utils/Context.sol",
        "id": 9448,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 10527,
        "sourceUnit": 17651,
        "src": "197:33:98",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/openzeppelin/contracts/utils/introspection/ERC165.sol",
        "file": "../../utils/introspection/ERC165.sol",
        "id": 9449,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 10527,
        "sourceUnit": 18939,
        "src": "231:46:98",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 9451,
              "name": "Context",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 17650,
              "src": "514:7:98"
            },
            "id": 9452,
            "nodeType": "InheritanceSpecifier",
            "src": "514:7:98"
          },
          {
            "baseName": {
              "id": 9453,
              "name": "ERC165",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 18938,
              "src": "523:6:98"
            },
            "id": 9454,
            "nodeType": "InheritanceSpecifier",
            "src": "523:6:98"
          },
          {
            "baseName": {
              "id": 9455,
              "name": "IERC1155",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 10648,
              "src": "531:8:98"
            },
            "id": 9456,
            "nodeType": "InheritanceSpecifier",
            "src": "531:8:98"
          },
          {
            "baseName": {
              "id": 9457,
              "name": "IERC1155MetadataURI",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 11009,
              "src": "541:19:98"
            },
            "id": 9458,
            "nodeType": "InheritanceSpecifier",
            "src": "541:19:98"
          }
        ],
        "canonicalName": "ERC1155",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 9450,
          "nodeType": "StructuredDocumentation",
          "src": "279:214:98",
          "text": " @dev Implementation of the basic standard multi-token.\n See https://eips.ethereum.org/EIPS/eip-1155\n Originally based on code by Enjin: https://github.com/enjin/erc-1155\n _Available since v3.1._"
        },
        "fullyImplemented": true,
        "id": 10526,
        "linearizedBaseContracts": [
          10526,
          11009,
          10648,
          18938,
          19264,
          17650
        ],
        "name": "ERC1155",
        "nameLocation": "503:7:98",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 9461,
            "libraryName": {
              "id": 9459,
              "name": "Address",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 17544,
              "src": "573:7:98"
            },
            "nodeType": "UsingForDirective",
            "src": "567:26:98",
            "typeName": {
              "id": 9460,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "585:7:98",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            }
          },
          {
            "constant": false,
            "id": 9467,
            "mutability": "mutable",
            "name": "_balances",
            "nameLocation": "704:9:98",
            "nodeType": "VariableDeclaration",
            "scope": 10526,
            "src": "648:65:98",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
              "typeString": "mapping(uint256 => mapping(address => uint256))"
            },
            "typeName": {
              "id": 9466,
              "keyType": {
                "id": 9462,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "656:7:98",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "648:47:98",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
                "typeString": "mapping(uint256 => mapping(address => uint256))"
              },
              "valueType": {
                "id": 9465,
                "keyType": {
                  "id": 9463,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "675:7:98",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "667:27:98",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                  "typeString": "mapping(address => uint256)"
                },
                "valueType": {
                  "id": 9464,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "686:7:98",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 9473,
            "mutability": "mutable",
            "name": "_operatorApprovals",
            "nameLocation": "823:18:98",
            "nodeType": "VariableDeclaration",
            "scope": 10526,
            "src": "770:71:98",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
              "typeString": "mapping(address => mapping(address => bool))"
            },
            "typeName": {
              "id": 9472,
              "keyType": {
                "id": 9468,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "778:7:98",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "770:44:98",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                "typeString": "mapping(address => mapping(address => bool))"
              },
              "valueType": {
                "id": 9471,
                "keyType": {
                  "id": 9469,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "797:7:98",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "789:24:98",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                  "typeString": "mapping(address => bool)"
                },
                "valueType": {
                  "id": 9470,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "808:4:98",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 9475,
            "mutability": "mutable",
            "name": "_uri",
            "nameLocation": "977:4:98",
            "nodeType": "VariableDeclaration",
            "scope": 10526,
            "src": "962:19:98",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 9474,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "962:6:98",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 9485,
              "nodeType": "Block",
              "src": "1063:30:98",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 9482,
                        "name": "uri_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9478,
                        "src": "1081:4:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 9481,
                      "name": "_setURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9982,
                      "src": "1073:7:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 9483,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1073:13:98",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9484,
                  "nodeType": "ExpressionStatement",
                  "src": "1073:13:98"
                }
              ]
            },
            "documentation": {
              "id": 9476,
              "nodeType": "StructuredDocumentation",
              "src": "988:38:98",
              "text": " @dev See {_setURI}."
            },
            "id": 9486,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9479,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9478,
                  "mutability": "mutable",
                  "name": "uri_",
                  "nameLocation": "1057:4:98",
                  "nodeType": "VariableDeclaration",
                  "scope": 9486,
                  "src": "1043:18:98",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 9477,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1043:6:98",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1042:20:98"
            },
            "returnParameters": {
              "id": 9480,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1063:0:98"
            },
            "scope": 10526,
            "src": "1031:62:98",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              18937,
              19263
            ],
            "body": {
              "id": 9516,
              "nodeType": "Block",
              "src": "1268:197:98",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 9514,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 9509,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "id": 9502,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 9497,
                          "name": "interfaceId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9489,
                          "src": "1297:11:98",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 9499,
                                "name": "IERC1155",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10648,
                                "src": "1317:8:98",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC1155_$10648_$",
                                  "typeString": "type(contract IERC1155)"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_type$_t_contract$_IERC1155_$10648_$",
                                  "typeString": "type(contract IERC1155)"
                                }
                              ],
                              "id": 9498,
                              "name": "type",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -27,
                              "src": "1312:4:98",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 9500,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1312:14:98",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_meta_type_t_contract$_IERC1155_$10648",
                              "typeString": "type(contract IERC1155)"
                            }
                          },
                          "id": 9501,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "interfaceId",
                          "nodeType": "MemberAccess",
                          "src": "1312:26:98",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "src": "1297:41:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "||",
                      "rightExpression": {
                        "commonType": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "id": 9508,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 9503,
                          "name": "interfaceId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9489,
                          "src": "1354:11:98",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 9505,
                                "name": "IERC1155MetadataURI",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 11009,
                                "src": "1374:19:98",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC1155MetadataURI_$11009_$",
                                  "typeString": "type(contract IERC1155MetadataURI)"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_type$_t_contract$_IERC1155MetadataURI_$11009_$",
                                  "typeString": "type(contract IERC1155MetadataURI)"
                                }
                              ],
                              "id": 9504,
                              "name": "type",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -27,
                              "src": "1369:4:98",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 9506,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1369:25:98",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_meta_type_t_contract$_IERC1155MetadataURI_$11009",
                              "typeString": "type(contract IERC1155MetadataURI)"
                            }
                          },
                          "id": 9507,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "interfaceId",
                          "nodeType": "MemberAccess",
                          "src": "1369:37:98",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "src": "1354:52:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "src": "1297:109:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "arguments": [
                        {
                          "id": 9512,
                          "name": "interfaceId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9489,
                          "src": "1446:11:98",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        ],
                        "expression": {
                          "id": 9510,
                          "name": "super",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -25,
                          "src": "1422:5:98",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_super$_ERC1155_$10526_$",
                            "typeString": "type(contract super ERC1155)"
                          }
                        },
                        "id": 9511,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "supportsInterface",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 18937,
                        "src": "1422:23:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
                          "typeString": "function (bytes4) view returns (bool)"
                        }
                      },
                      "id": 9513,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1422:36:98",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "1297:161:98",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 9496,
                  "id": 9515,
                  "nodeType": "Return",
                  "src": "1278:180:98"
                }
              ]
            },
            "documentation": {
              "id": 9487,
              "nodeType": "StructuredDocumentation",
              "src": "1099:56:98",
              "text": " @dev See {IERC165-supportsInterface}."
            },
            "functionSelector": "01ffc9a7",
            "id": 9517,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "supportsInterface",
            "nameLocation": "1169:17:98",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 9493,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 9491,
                  "name": "ERC165",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 18938,
                  "src": "1236:6:98"
                },
                {
                  "id": 9492,
                  "name": "IERC165",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 19264,
                  "src": "1244:7:98"
                }
              ],
              "src": "1227:25:98"
            },
            "parameters": {
              "id": 9490,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9489,
                  "mutability": "mutable",
                  "name": "interfaceId",
                  "nameLocation": "1194:11:98",
                  "nodeType": "VariableDeclaration",
                  "scope": 9517,
                  "src": "1187:18:98",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 9488,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "1187:6:98",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1186:20:98"
            },
            "returnParameters": {
              "id": 9496,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9495,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 9517,
                  "src": "1262:4:98",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 9494,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1262:4:98",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1261:6:98"
            },
            "scope": 10526,
            "src": "1160:305:98",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              11008
            ],
            "body": {
              "id": 9528,
              "nodeType": "Block",
              "src": "1939:28:98",
              "statements": [
                {
                  "expression": {
                    "id": 9526,
                    "name": "_uri",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 9475,
                    "src": "1956:4:98",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 9525,
                  "id": 9527,
                  "nodeType": "Return",
                  "src": "1949:11:98"
                }
              ]
            },
            "documentation": {
              "id": 9518,
              "nodeType": "StructuredDocumentation",
              "src": "1471:388:98",
              "text": " @dev See {IERC1155MetadataURI-uri}.\n This implementation returns the same URI for *all* token types. It relies\n on the token type ID substitution mechanism\n https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n Clients calling this function must replace the `\\{id\\}` substring with the\n actual token type ID."
            },
            "functionSelector": "0e89341c",
            "id": 9529,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "uri",
            "nameLocation": "1873:3:98",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 9522,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1906:8:98"
            },
            "parameters": {
              "id": 9521,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9520,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 9529,
                  "src": "1877:7:98",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9519,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1877:7:98",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1876:9:98"
            },
            "returnParameters": {
              "id": 9525,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9524,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 9529,
                  "src": "1924:13:98",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 9523,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1924:6:98",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1923:15:98"
            },
            "scope": 10526,
            "src": "1864:103:98",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              10586
            ],
            "body": {
              "id": 9556,
              "nodeType": "Block",
              "src": "2204:133:98",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 9546,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 9541,
                          "name": "account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9532,
                          "src": "2222:7:98",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 9544,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2241:1:98",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 9543,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2233:7:98",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 9542,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2233:7:98",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 9545,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2233:10:98",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2222:21:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313135353a2062616c616e636520717565727920666f7220746865207a65726f2061646472657373",
                        "id": 9547,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2245:45:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9",
                          "typeString": "literal_string \"ERC1155: balance query for the zero address\""
                        },
                        "value": "ERC1155: balance query for the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9",
                          "typeString": "literal_string \"ERC1155: balance query for the zero address\""
                        }
                      ],
                      "id": 9540,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2214:7:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 9548,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2214:77:98",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9549,
                  "nodeType": "ExpressionStatement",
                  "src": "2214:77:98"
                },
                {
                  "expression": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 9550,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9467,
                        "src": "2308:9:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
                          "typeString": "mapping(uint256 => mapping(address => uint256))"
                        }
                      },
                      "id": 9552,
                      "indexExpression": {
                        "id": 9551,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9534,
                        "src": "2318:2:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "2308:13:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 9554,
                    "indexExpression": {
                      "id": 9553,
                      "name": "account",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9532,
                      "src": "2322:7:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2308:22:98",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 9539,
                  "id": 9555,
                  "nodeType": "Return",
                  "src": "2301:29:98"
                }
              ]
            },
            "documentation": {
              "id": 9530,
              "nodeType": "StructuredDocumentation",
              "src": "1973:131:98",
              "text": " @dev See {IERC1155-balanceOf}.\n Requirements:\n - `account` cannot be the zero address."
            },
            "functionSelector": "00fdd58e",
            "id": 9557,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOf",
            "nameLocation": "2118:9:98",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 9536,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2177:8:98"
            },
            "parameters": {
              "id": 9535,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9532,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "2136:7:98",
                  "nodeType": "VariableDeclaration",
                  "scope": 9557,
                  "src": "2128:15:98",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9531,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2128:7:98",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9534,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "2153:2:98",
                  "nodeType": "VariableDeclaration",
                  "scope": 9557,
                  "src": "2145:10:98",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9533,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2145:7:98",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2127:29:98"
            },
            "returnParameters": {
              "id": 9539,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9538,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 9557,
                  "src": "2195:7:98",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9537,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2195:7:98",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2194:9:98"
            },
            "scope": 10526,
            "src": "2109:228:98",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              10599
            ],
            "body": {
              "id": 9620,
              "nodeType": "Block",
              "src": "2667:335:98",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 9576,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 9572,
                            "name": "accounts",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9561,
                            "src": "2685:8:98",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            }
                          },
                          "id": 9573,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "2685:15:98",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 9574,
                            "name": "ids",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9564,
                            "src": "2704:3:98",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          "id": 9575,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "2704:10:98",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2685:29:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313135353a206163636f756e747320616e6420696473206c656e677468206d69736d61746368",
                        "id": 9577,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2716:43:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5",
                          "typeString": "literal_string \"ERC1155: accounts and ids length mismatch\""
                        },
                        "value": "ERC1155: accounts and ids length mismatch"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5",
                          "typeString": "literal_string \"ERC1155: accounts and ids length mismatch\""
                        }
                      ],
                      "id": 9571,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2677:7:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 9578,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2677:83:98",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9579,
                  "nodeType": "ExpressionStatement",
                  "src": "2677:83:98"
                },
                {
                  "assignments": [
                    9584
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 9584,
                      "mutability": "mutable",
                      "name": "batchBalances",
                      "nameLocation": "2788:13:98",
                      "nodeType": "VariableDeclaration",
                      "scope": 9620,
                      "src": "2771:30:98",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 9582,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2771:7:98",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 9583,
                        "nodeType": "ArrayTypeName",
                        "src": "2771:9:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 9591,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 9588,
                          "name": "accounts",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9561,
                          "src": "2818:8:98",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        },
                        "id": 9589,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "2818:15:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 9587,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "2804:13:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (uint256[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 9585,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2808:7:98",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 9586,
                        "nodeType": "ArrayTypeName",
                        "src": "2808:9:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      }
                    },
                    "id": 9590,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2804:30:98",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2771:63:98"
                },
                {
                  "body": {
                    "id": 9616,
                    "nodeType": "Block",
                    "src": "2891:74:98",
                    "statements": [
                      {
                        "expression": {
                          "id": 9614,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 9603,
                              "name": "batchBalances",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9584,
                              "src": "2905:13:98",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            "id": 9605,
                            "indexExpression": {
                              "id": 9604,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9593,
                              "src": "2919:1:98",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2905:16:98",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "baseExpression": {
                                  "id": 9607,
                                  "name": "accounts",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 9561,
                                  "src": "2934:8:98",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                    "typeString": "address[] memory"
                                  }
                                },
                                "id": 9609,
                                "indexExpression": {
                                  "id": 9608,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 9593,
                                  "src": "2943:1:98",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "2934:11:98",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "baseExpression": {
                                  "id": 9610,
                                  "name": "ids",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 9564,
                                  "src": "2947:3:98",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                    "typeString": "uint256[] memory"
                                  }
                                },
                                "id": 9612,
                                "indexExpression": {
                                  "id": 9611,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 9593,
                                  "src": "2951:1:98",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "2947:6:98",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 9606,
                              "name": "balanceOf",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9557,
                              "src": "2924:9:98",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
                                "typeString": "function (address,uint256) view returns (uint256)"
                              }
                            },
                            "id": 9613,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2924:30:98",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2905:49:98",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 9615,
                        "nodeType": "ExpressionStatement",
                        "src": "2905:49:98"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 9599,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 9596,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9593,
                      "src": "2865:1:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 9597,
                        "name": "accounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9561,
                        "src": "2869:8:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 9598,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "2869:15:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2865:19:98",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 9617,
                  "initializationExpression": {
                    "assignments": [
                      9593
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 9593,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "2858:1:98",
                        "nodeType": "VariableDeclaration",
                        "scope": 9617,
                        "src": "2850:9:98",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 9592,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2850:7:98",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 9595,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 9594,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2862:1:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "2850:13:98"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 9601,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": true,
                      "src": "2886:3:98",
                      "subExpression": {
                        "id": 9600,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9593,
                        "src": "2888:1:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 9602,
                    "nodeType": "ExpressionStatement",
                    "src": "2886:3:98"
                  },
                  "nodeType": "ForStatement",
                  "src": "2845:120:98"
                },
                {
                  "expression": {
                    "id": 9618,
                    "name": "batchBalances",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 9584,
                    "src": "2982:13:98",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "functionReturnParameters": 9570,
                  "id": 9619,
                  "nodeType": "Return",
                  "src": "2975:20:98"
                }
              ]
            },
            "documentation": {
              "id": 9558,
              "nodeType": "StructuredDocumentation",
              "src": "2343:146:98",
              "text": " @dev See {IERC1155-balanceOfBatch}.\n Requirements:\n - `accounts` and `ids` must have the same length."
            },
            "functionSelector": "4e1273f4",
            "id": 9621,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOfBatch",
            "nameLocation": "2503:14:98",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 9566,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2619:8:98"
            },
            "parameters": {
              "id": 9565,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9561,
                  "mutability": "mutable",
                  "name": "accounts",
                  "nameLocation": "2535:8:98",
                  "nodeType": "VariableDeclaration",
                  "scope": 9621,
                  "src": "2518:25:98",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 9559,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "2518:7:98",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 9560,
                    "nodeType": "ArrayTypeName",
                    "src": "2518:9:98",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9564,
                  "mutability": "mutable",
                  "name": "ids",
                  "nameLocation": "2562:3:98",
                  "nodeType": "VariableDeclaration",
                  "scope": 9621,
                  "src": "2545:20:98",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 9562,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "2545:7:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 9563,
                    "nodeType": "ArrayTypeName",
                    "src": "2545:9:98",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2517:49:98"
            },
            "returnParameters": {
              "id": 9570,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9569,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 9621,
                  "src": "2645:16:98",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 9567,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "2645:7:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 9568,
                    "nodeType": "ArrayTypeName",
                    "src": "2645:9:98",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2644:18:98"
            },
            "scope": 10526,
            "src": "2494:508:98",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              10607
            ],
            "body": {
              "id": 9654,
              "nodeType": "Block",
              "src": "3154:222:98",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 9634,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 9631,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 17640,
                            "src": "3172:10:98",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 9632,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3172:12:98",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 9633,
                          "name": "operator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9624,
                          "src": "3188:8:98",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3172:24:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313135353a2073657474696e6720617070726f76616c2073746174757320666f722073656c66",
                        "id": 9635,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3198:43:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2",
                          "typeString": "literal_string \"ERC1155: setting approval status for self\""
                        },
                        "value": "ERC1155: setting approval status for self"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2",
                          "typeString": "literal_string \"ERC1155: setting approval status for self\""
                        }
                      ],
                      "id": 9630,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3164:7:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 9636,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3164:78:98",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9637,
                  "nodeType": "ExpressionStatement",
                  "src": "3164:78:98"
                },
                {
                  "expression": {
                    "id": 9645,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 9638,
                          "name": "_operatorApprovals",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9473,
                          "src": "3253:18:98",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                            "typeString": "mapping(address => mapping(address => bool))"
                          }
                        },
                        "id": 9642,
                        "indexExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 9639,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 17640,
                            "src": "3272:10:98",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 9640,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3272:12:98",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3253:32:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 9643,
                      "indexExpression": {
                        "id": 9641,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9624,
                        "src": "3286:8:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3253:42:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 9644,
                      "name": "approved",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9626,
                      "src": "3298:8:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "3253:53:98",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 9646,
                  "nodeType": "ExpressionStatement",
                  "src": "3253:53:98"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 9648,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 17640,
                          "src": "3336:10:98",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 9649,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3336:12:98",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 9650,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9624,
                        "src": "3350:8:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 9651,
                        "name": "approved",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9626,
                        "src": "3360:8:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 9647,
                      "name": "ApprovalForAll",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10569,
                      "src": "3321:14:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,address,bool)"
                      }
                    },
                    "id": 9652,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3321:48:98",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9653,
                  "nodeType": "EmitStatement",
                  "src": "3316:53:98"
                }
              ]
            },
            "documentation": {
              "id": 9622,
              "nodeType": "StructuredDocumentation",
              "src": "3008:57:98",
              "text": " @dev See {IERC1155-setApprovalForAll}."
            },
            "functionSelector": "a22cb465",
            "id": 9655,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setApprovalForAll",
            "nameLocation": "3079:17:98",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 9628,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3145:8:98"
            },
            "parameters": {
              "id": 9627,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9624,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "3105:8:98",
                  "nodeType": "VariableDeclaration",
                  "scope": 9655,
                  "src": "3097:16:98",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9623,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3097:7:98",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9626,
                  "mutability": "mutable",
                  "name": "approved",
                  "nameLocation": "3120:8:98",
                  "nodeType": "VariableDeclaration",
                  "scope": 9655,
                  "src": "3115:13:98",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 9625,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3115:4:98",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3096:33:98"
            },
            "returnParameters": {
              "id": 9629,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3154:0:98"
            },
            "scope": 10526,
            "src": "3070:306:98",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              10617
            ],
            "body": {
              "id": 9672,
              "nodeType": "Block",
              "src": "3548:61:98",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 9666,
                        "name": "_operatorApprovals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9473,
                        "src": "3565:18:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                          "typeString": "mapping(address => mapping(address => bool))"
                        }
                      },
                      "id": 9668,
                      "indexExpression": {
                        "id": 9667,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9658,
                        "src": "3584:7:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "3565:27:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      }
                    },
                    "id": 9670,
                    "indexExpression": {
                      "id": 9669,
                      "name": "operator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9660,
                      "src": "3593:8:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3565:37:98",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 9665,
                  "id": 9671,
                  "nodeType": "Return",
                  "src": "3558:44:98"
                }
              ]
            },
            "documentation": {
              "id": 9656,
              "nodeType": "StructuredDocumentation",
              "src": "3382:56:98",
              "text": " @dev See {IERC1155-isApprovedForAll}."
            },
            "functionSelector": "e985e9c5",
            "id": 9673,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isApprovedForAll",
            "nameLocation": "3452:16:98",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 9662,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3524:8:98"
            },
            "parameters": {
              "id": 9661,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9658,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "3477:7:98",
                  "nodeType": "VariableDeclaration",
                  "scope": 9673,
                  "src": "3469:15:98",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9657,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3469:7:98",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9660,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "3494:8:98",
                  "nodeType": "VariableDeclaration",
                  "scope": 9673,
                  "src": "3486:16:98",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9659,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3486:7:98",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3468:35:98"
            },
            "returnParameters": {
              "id": 9665,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9664,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 9673,
                  "src": "3542:4:98",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 9663,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3542:4:98",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3541:6:98"
            },
            "scope": 10526,
            "src": "3443:166:98",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              10631
            ],
            "body": {
              "id": 9710,
              "nodeType": "Block",
              "src": "3845:220:98",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 9698,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 9692,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 9689,
                            "name": "from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9676,
                            "src": "3876:4:98",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 9690,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 17640,
                              "src": "3884:10:98",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 9691,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3884:12:98",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3876:20:98",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 9694,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9676,
                              "src": "3917:4:98",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 9695,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 17640,
                                "src": "3923:10:98",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 9696,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3923:12:98",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 9693,
                            "name": "isApprovedForAll",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9673,
                            "src": "3900:16:98",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address,address) view returns (bool)"
                            }
                          },
                          "id": 9697,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3900:36:98",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "3876:60:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564",
                        "id": 9699,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3950:43:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a",
                          "typeString": "literal_string \"ERC1155: caller is not owner nor approved\""
                        },
                        "value": "ERC1155: caller is not owner nor approved"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a",
                          "typeString": "literal_string \"ERC1155: caller is not owner nor approved\""
                        }
                      ],
                      "id": 9688,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3855:7:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 9700,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3855:148:98",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9701,
                  "nodeType": "ExpressionStatement",
                  "src": "3855:148:98"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 9703,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9676,
                        "src": "4031:4:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 9704,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9678,
                        "src": "4037:2:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 9705,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9680,
                        "src": "4041:2:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 9706,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9682,
                        "src": "4045:6:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 9707,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9684,
                        "src": "4053:4:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 9702,
                      "name": "_safeTransferFrom",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9845,
                      "src": "4013:17:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256,bytes memory)"
                      }
                    },
                    "id": 9708,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4013:45:98",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9709,
                  "nodeType": "ExpressionStatement",
                  "src": "4013:45:98"
                }
              ]
            },
            "documentation": {
              "id": 9674,
              "nodeType": "StructuredDocumentation",
              "src": "3615:56:98",
              "text": " @dev See {IERC1155-safeTransferFrom}."
            },
            "functionSelector": "f242432a",
            "id": 9711,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "safeTransferFrom",
            "nameLocation": "3685:16:98",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 9686,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3836:8:98"
            },
            "parameters": {
              "id": 9685,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9676,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "3719:4:98",
                  "nodeType": "VariableDeclaration",
                  "scope": 9711,
                  "src": "3711:12:98",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9675,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3711:7:98",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9678,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "3741:2:98",
                  "nodeType": "VariableDeclaration",
                  "scope": 9711,
                  "src": "3733:10:98",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9677,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3733:7:98",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9680,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "3761:2:98",
                  "nodeType": "VariableDeclaration",
                  "scope": 9711,
                  "src": "3753:10:98",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9679,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3753:7:98",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9682,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "3781:6:98",
                  "nodeType": "VariableDeclaration",
                  "scope": 9711,
                  "src": "3773:14:98",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9681,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3773:7:98",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9684,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "3810:4:98",
                  "nodeType": "VariableDeclaration",
                  "scope": 9711,
                  "src": "3797:17:98",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 9683,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3797:5:98",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3701:119:98"
            },
            "returnParameters": {
              "id": 9687,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3845:0:98"
            },
            "scope": 10526,
            "src": "3676:389:98",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              10647
            ],
            "body": {
              "id": 9750,
              "nodeType": "Block",
              "src": "4331:236:98",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 9738,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 9732,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 9729,
                            "name": "from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9714,
                            "src": "4362:4:98",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 9730,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 17640,
                              "src": "4370:10:98",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 9731,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4370:12:98",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "4362:20:98",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 9734,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9714,
                              "src": "4403:4:98",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 9735,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 17640,
                                "src": "4409:10:98",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 9736,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4409:12:98",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 9733,
                            "name": "isApprovedForAll",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9673,
                            "src": "4386:16:98",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address,address) view returns (bool)"
                            }
                          },
                          "id": 9737,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4386:36:98",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "4362:60:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313135353a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564",
                        "id": 9739,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4436:52:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686",
                          "typeString": "literal_string \"ERC1155: transfer caller is not owner nor approved\""
                        },
                        "value": "ERC1155: transfer caller is not owner nor approved"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686",
                          "typeString": "literal_string \"ERC1155: transfer caller is not owner nor approved\""
                        }
                      ],
                      "id": 9728,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4341:7:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 9740,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4341:157:98",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9741,
                  "nodeType": "ExpressionStatement",
                  "src": "4341:157:98"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 9743,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9714,
                        "src": "4531:4:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 9744,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9716,
                        "src": "4537:2:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 9745,
                        "name": "ids",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9719,
                        "src": "4541:3:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "id": 9746,
                        "name": "amounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9722,
                        "src": "4546:7:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "id": 9747,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9724,
                        "src": "4555:4:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 9742,
                      "name": "_safeBatchTransferFrom",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9971,
                      "src": "4508:22:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory)"
                      }
                    },
                    "id": 9748,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4508:52:98",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9749,
                  "nodeType": "ExpressionStatement",
                  "src": "4508:52:98"
                }
              ]
            },
            "documentation": {
              "id": 9712,
              "nodeType": "StructuredDocumentation",
              "src": "4071:61:98",
              "text": " @dev See {IERC1155-safeBatchTransferFrom}."
            },
            "functionSelector": "2eb2c2d6",
            "id": 9751,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "safeBatchTransferFrom",
            "nameLocation": "4146:21:98",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 9726,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4322:8:98"
            },
            "parameters": {
              "id": 9725,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9714,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "4185:4:98",
                  "nodeType": "VariableDeclaration",
                  "scope": 9751,
                  "src": "4177:12:98",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9713,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4177:7:98",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9716,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "4207:2:98",
                  "nodeType": "VariableDeclaration",
                  "scope": 9751,
                  "src": "4199:10:98",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9715,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4199:7:98",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9719,
                  "mutability": "mutable",
                  "name": "ids",
                  "nameLocation": "4236:3:98",
                  "nodeType": "VariableDeclaration",
                  "scope": 9751,
                  "src": "4219:20:98",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 9717,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "4219:7:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 9718,
                    "nodeType": "ArrayTypeName",
                    "src": "4219:9:98",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9722,
                  "mutability": "mutable",
                  "name": "amounts",
                  "nameLocation": "4266:7:98",
                  "nodeType": "VariableDeclaration",
                  "scope": 9751,
                  "src": "4249:24:98",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 9720,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "4249:7:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 9721,
                    "nodeType": "ArrayTypeName",
                    "src": "4249:9:98",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9724,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "4296:4:98",
                  "nodeType": "VariableDeclaration",
                  "scope": 9751,
                  "src": "4283:17:98",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 9723,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "4283:5:98",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4167:139:98"
            },
            "returnParameters": {
              "id": 9727,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4331:0:98"
            },
            "scope": 10526,
            "src": "4137:430:98",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 9844,
              "nodeType": "Block",
              "src": "5180:634:98",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 9771,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 9766,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9756,
                          "src": "5198:2:98",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 9769,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5212:1:98",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 9768,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "5204:7:98",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 9767,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "5204:7:98",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 9770,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5204:10:98",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "5198:16:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313135353a207472616e7366657220746f20746865207a65726f2061646472657373",
                        "id": 9772,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5216:39:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d",
                          "typeString": "literal_string \"ERC1155: transfer to the zero address\""
                        },
                        "value": "ERC1155: transfer to the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d",
                          "typeString": "literal_string \"ERC1155: transfer to the zero address\""
                        }
                      ],
                      "id": 9765,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5190:7:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 9773,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5190:66:98",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9774,
                  "nodeType": "ExpressionStatement",
                  "src": "5190:66:98"
                },
                {
                  "assignments": [
                    9776
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 9776,
                      "mutability": "mutable",
                      "name": "operator",
                      "nameLocation": "5275:8:98",
                      "nodeType": "VariableDeclaration",
                      "scope": 9844,
                      "src": "5267:16:98",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 9775,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "5267:7:98",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 9779,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 9777,
                      "name": "_msgSender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17640,
                      "src": "5286:10:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 9778,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5286:12:98",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5267:31:98"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 9781,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9776,
                        "src": "5330:8:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 9782,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9754,
                        "src": "5340:4:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 9783,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9756,
                        "src": "5346:2:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 9785,
                            "name": "id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9758,
                            "src": "5368:2:98",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 9784,
                          "name": "_asSingletonArray",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10525,
                          "src": "5350:17:98",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                            "typeString": "function (uint256) pure returns (uint256[] memory)"
                          }
                        },
                        "id": 9786,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5350:21:98",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 9788,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9760,
                            "src": "5391:6:98",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 9787,
                          "name": "_asSingletonArray",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10525,
                          "src": "5373:17:98",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                            "typeString": "function (uint256) pure returns (uint256[] memory)"
                          }
                        },
                        "id": 9789,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5373:25:98",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "id": 9790,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9762,
                        "src": "5400:4:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 9780,
                      "name": "_beforeTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10365,
                      "src": "5309:20:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
                      }
                    },
                    "id": 9791,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5309:96:98",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9792,
                  "nodeType": "ExpressionStatement",
                  "src": "5309:96:98"
                },
                {
                  "assignments": [
                    9794
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 9794,
                      "mutability": "mutable",
                      "name": "fromBalance",
                      "nameLocation": "5424:11:98",
                      "nodeType": "VariableDeclaration",
                      "scope": 9844,
                      "src": "5416:19:98",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 9793,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5416:7:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 9800,
                  "initialValue": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 9795,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9467,
                        "src": "5438:9:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
                          "typeString": "mapping(uint256 => mapping(address => uint256))"
                        }
                      },
                      "id": 9797,
                      "indexExpression": {
                        "id": 9796,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9758,
                        "src": "5448:2:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "5438:13:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 9799,
                    "indexExpression": {
                      "id": 9798,
                      "name": "from",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9754,
                      "src": "5452:4:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "5438:19:98",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5416:41:98"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 9804,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 9802,
                          "name": "fromBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9794,
                          "src": "5475:11:98",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 9803,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9760,
                          "src": "5490:6:98",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5475:21:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313135353a20696e73756666696369656e742062616c616e636520666f72207472616e73666572",
                        "id": 9805,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5498:44:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf",
                          "typeString": "literal_string \"ERC1155: insufficient balance for transfer\""
                        },
                        "value": "ERC1155: insufficient balance for transfer"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf",
                          "typeString": "literal_string \"ERC1155: insufficient balance for transfer\""
                        }
                      ],
                      "id": 9801,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5467:7:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 9806,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5467:76:98",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9807,
                  "nodeType": "ExpressionStatement",
                  "src": "5467:76:98"
                },
                {
                  "id": 9818,
                  "nodeType": "UncheckedBlock",
                  "src": "5553:77:98",
                  "statements": [
                    {
                      "expression": {
                        "id": 9816,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 9808,
                              "name": "_balances",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9467,
                              "src": "5577:9:98",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
                                "typeString": "mapping(uint256 => mapping(address => uint256))"
                              }
                            },
                            "id": 9811,
                            "indexExpression": {
                              "id": 9809,
                              "name": "id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9758,
                              "src": "5587:2:98",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5577:13:98",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 9812,
                          "indexExpression": {
                            "id": 9810,
                            "name": "from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9754,
                            "src": "5591:4:98",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "nodeType": "IndexAccess",
                          "src": "5577:19:98",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 9815,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 9813,
                            "name": "fromBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9794,
                            "src": "5599:11:98",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "id": 9814,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9760,
                            "src": "5613:6:98",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5599:20:98",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5577:42:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 9817,
                      "nodeType": "ExpressionStatement",
                      "src": "5577:42:98"
                    }
                  ]
                },
                {
                  "expression": {
                    "id": 9825,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 9819,
                          "name": "_balances",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9467,
                          "src": "5639:9:98",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
                            "typeString": "mapping(uint256 => mapping(address => uint256))"
                          }
                        },
                        "id": 9822,
                        "indexExpression": {
                          "id": 9820,
                          "name": "id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9758,
                          "src": "5649:2:98",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5639:13:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 9823,
                      "indexExpression": {
                        "id": 9821,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9756,
                        "src": "5653:2:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5639:17:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 9824,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9760,
                      "src": "5660:6:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5639:27:98",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 9826,
                  "nodeType": "ExpressionStatement",
                  "src": "5639:27:98"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 9828,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9776,
                        "src": "5697:8:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 9829,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9754,
                        "src": "5707:4:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 9830,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9756,
                        "src": "5713:2:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 9831,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9758,
                        "src": "5717:2:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 9832,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9760,
                        "src": "5721:6:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 9827,
                      "name": "TransferSingle",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10545,
                      "src": "5682:14:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address,uint256,uint256)"
                      }
                    },
                    "id": 9833,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5682:46:98",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9834,
                  "nodeType": "EmitStatement",
                  "src": "5677:51:98"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 9836,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9776,
                        "src": "5770:8:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 9837,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9754,
                        "src": "5780:4:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 9838,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9756,
                        "src": "5786:2:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 9839,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9758,
                        "src": "5790:2:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 9840,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9760,
                        "src": "5794:6:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 9841,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9762,
                        "src": "5802:4:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 9835,
                      "name": "_doSafeTransferAcceptanceCheck",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10430,
                      "src": "5739:30:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,address,uint256,uint256,bytes memory)"
                      }
                    },
                    "id": 9842,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5739:68:98",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9843,
                  "nodeType": "ExpressionStatement",
                  "src": "5739:68:98"
                }
              ]
            },
            "documentation": {
              "id": 9752,
              "nodeType": "StructuredDocumentation",
              "src": "4573:439:98",
              "text": " @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - `from` must have a balance of tokens of type `id` of at least `amount`.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."
            },
            "id": 9845,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_safeTransferFrom",
            "nameLocation": "5026:17:98",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9763,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9754,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "5061:4:98",
                  "nodeType": "VariableDeclaration",
                  "scope": 9845,
                  "src": "5053:12:98",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9753,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5053:7:98",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9756,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "5083:2:98",
                  "nodeType": "VariableDeclaration",
                  "scope": 9845,
                  "src": "5075:10:98",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9755,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5075:7:98",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9758,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "5103:2:98",
                  "nodeType": "VariableDeclaration",
                  "scope": 9845,
                  "src": "5095:10:98",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9757,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5095:7:98",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9760,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "5123:6:98",
                  "nodeType": "VariableDeclaration",
                  "scope": 9845,
                  "src": "5115:14:98",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9759,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5115:7:98",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9762,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "5152:4:98",
                  "nodeType": "VariableDeclaration",
                  "scope": 9845,
                  "src": "5139:17:98",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 9761,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "5139:5:98",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5043:119:98"
            },
            "returnParameters": {
              "id": 9764,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5180:0:98"
            },
            "scope": 10526,
            "src": "5017:797:98",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 9970,
              "nodeType": "Block",
              "src": "6348:857:98",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 9866,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 9862,
                            "name": "ids",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9853,
                            "src": "6366:3:98",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          "id": 9863,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "6366:10:98",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 9864,
                            "name": "amounts",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9856,
                            "src": "6380:7:98",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          "id": 9865,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "6380:14:98",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6366:28:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313135353a2069647320616e6420616d6f756e7473206c656e677468206d69736d61746368",
                        "id": 9867,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6396:42:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
                          "typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
                        },
                        "value": "ERC1155: ids and amounts length mismatch"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
                          "typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
                        }
                      ],
                      "id": 9861,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6358:7:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 9868,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6358:81:98",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9869,
                  "nodeType": "ExpressionStatement",
                  "src": "6358:81:98"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 9876,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 9871,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9850,
                          "src": "6457:2:98",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 9874,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6471:1:98",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 9873,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6463:7:98",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 9872,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "6463:7:98",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 9875,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6463:10:98",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "6457:16:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313135353a207472616e7366657220746f20746865207a65726f2061646472657373",
                        "id": 9877,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6475:39:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d",
                          "typeString": "literal_string \"ERC1155: transfer to the zero address\""
                        },
                        "value": "ERC1155: transfer to the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d",
                          "typeString": "literal_string \"ERC1155: transfer to the zero address\""
                        }
                      ],
                      "id": 9870,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6449:7:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 9878,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6449:66:98",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9879,
                  "nodeType": "ExpressionStatement",
                  "src": "6449:66:98"
                },
                {
                  "assignments": [
                    9881
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 9881,
                      "mutability": "mutable",
                      "name": "operator",
                      "nameLocation": "6534:8:98",
                      "nodeType": "VariableDeclaration",
                      "scope": 9970,
                      "src": "6526:16:98",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 9880,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "6526:7:98",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 9884,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 9882,
                      "name": "_msgSender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17640,
                      "src": "6545:10:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 9883,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6545:12:98",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6526:31:98"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 9886,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9881,
                        "src": "6589:8:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 9887,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9848,
                        "src": "6599:4:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 9888,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9850,
                        "src": "6605:2:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 9889,
                        "name": "ids",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9853,
                        "src": "6609:3:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "id": 9890,
                        "name": "amounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9856,
                        "src": "6614:7:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "id": 9891,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9858,
                        "src": "6623:4:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 9885,
                      "name": "_beforeTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10365,
                      "src": "6568:20:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
                      }
                    },
                    "id": 9892,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6568:60:98",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9893,
                  "nodeType": "ExpressionStatement",
                  "src": "6568:60:98"
                },
                {
                  "body": {
                    "id": 9951,
                    "nodeType": "Block",
                    "src": "6680:370:98",
                    "statements": [
                      {
                        "assignments": [
                          9906
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 9906,
                            "mutability": "mutable",
                            "name": "id",
                            "nameLocation": "6702:2:98",
                            "nodeType": "VariableDeclaration",
                            "scope": 9951,
                            "src": "6694:10:98",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 9905,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "6694:7:98",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 9910,
                        "initialValue": {
                          "baseExpression": {
                            "id": 9907,
                            "name": "ids",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9853,
                            "src": "6707:3:98",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          "id": 9909,
                          "indexExpression": {
                            "id": 9908,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9895,
                            "src": "6711:1:98",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6707:6:98",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6694:19:98"
                      },
                      {
                        "assignments": [
                          9912
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 9912,
                            "mutability": "mutable",
                            "name": "amount",
                            "nameLocation": "6735:6:98",
                            "nodeType": "VariableDeclaration",
                            "scope": 9951,
                            "src": "6727:14:98",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 9911,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "6727:7:98",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 9916,
                        "initialValue": {
                          "baseExpression": {
                            "id": 9913,
                            "name": "amounts",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9856,
                            "src": "6744:7:98",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          "id": 9915,
                          "indexExpression": {
                            "id": 9914,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9895,
                            "src": "6752:1:98",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6744:10:98",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6727:27:98"
                      },
                      {
                        "assignments": [
                          9918
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 9918,
                            "mutability": "mutable",
                            "name": "fromBalance",
                            "nameLocation": "6777:11:98",
                            "nodeType": "VariableDeclaration",
                            "scope": 9951,
                            "src": "6769:19:98",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 9917,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "6769:7:98",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 9924,
                        "initialValue": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 9919,
                              "name": "_balances",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9467,
                              "src": "6791:9:98",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
                                "typeString": "mapping(uint256 => mapping(address => uint256))"
                              }
                            },
                            "id": 9921,
                            "indexExpression": {
                              "id": 9920,
                              "name": "id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9906,
                              "src": "6801:2:98",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "6791:13:98",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 9923,
                          "indexExpression": {
                            "id": 9922,
                            "name": "from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9848,
                            "src": "6805:4:98",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6791:19:98",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6769:41:98"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 9928,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 9926,
                                "name": "fromBalance",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 9918,
                                "src": "6832:11:98",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "id": 9927,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 9912,
                                "src": "6847:6:98",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "6832:21:98",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "455243313135353a20696e73756666696369656e742062616c616e636520666f72207472616e73666572",
                              "id": 9929,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6855:44:98",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf",
                                "typeString": "literal_string \"ERC1155: insufficient balance for transfer\""
                              },
                              "value": "ERC1155: insufficient balance for transfer"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf",
                                "typeString": "literal_string \"ERC1155: insufficient balance for transfer\""
                              }
                            ],
                            "id": 9925,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "6824:7:98",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 9930,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6824:76:98",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 9931,
                        "nodeType": "ExpressionStatement",
                        "src": "6824:76:98"
                      },
                      {
                        "id": 9942,
                        "nodeType": "UncheckedBlock",
                        "src": "6914:85:98",
                        "statements": [
                          {
                            "expression": {
                              "id": 9940,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "baseExpression": {
                                  "baseExpression": {
                                    "id": 9932,
                                    "name": "_balances",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 9467,
                                    "src": "6942:9:98",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
                                      "typeString": "mapping(uint256 => mapping(address => uint256))"
                                    }
                                  },
                                  "id": 9935,
                                  "indexExpression": {
                                    "id": 9933,
                                    "name": "id",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 9906,
                                    "src": "6952:2:98",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "6942:13:98",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                    "typeString": "mapping(address => uint256)"
                                  }
                                },
                                "id": 9936,
                                "indexExpression": {
                                  "id": 9934,
                                  "name": "from",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 9848,
                                  "src": "6956:4:98",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": true,
                                "nodeType": "IndexAccess",
                                "src": "6942:19:98",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "=",
                              "rightHandSide": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 9939,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 9937,
                                  "name": "fromBalance",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 9918,
                                  "src": "6964:11:98",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "-",
                                "rightExpression": {
                                  "id": 9938,
                                  "name": "amount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 9912,
                                  "src": "6978:6:98",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "6964:20:98",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "6942:42:98",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 9941,
                            "nodeType": "ExpressionStatement",
                            "src": "6942:42:98"
                          }
                        ]
                      },
                      {
                        "expression": {
                          "id": 9949,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 9943,
                                "name": "_balances",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 9467,
                                "src": "7012:9:98",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
                                  "typeString": "mapping(uint256 => mapping(address => uint256))"
                                }
                              },
                              "id": 9946,
                              "indexExpression": {
                                "id": 9944,
                                "name": "id",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 9906,
                                "src": "7022:2:98",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "7012:13:98",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 9947,
                            "indexExpression": {
                              "id": 9945,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9850,
                              "src": "7026:2:98",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "7012:17:98",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "id": 9948,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9912,
                            "src": "7033:6:98",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7012:27:98",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 9950,
                        "nodeType": "ExpressionStatement",
                        "src": "7012:27:98"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 9901,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 9898,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9895,
                      "src": "6659:1:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 9899,
                        "name": "ids",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9853,
                        "src": "6663:3:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      "id": 9900,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "6663:10:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6659:14:98",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 9952,
                  "initializationExpression": {
                    "assignments": [
                      9895
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 9895,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "6652:1:98",
                        "nodeType": "VariableDeclaration",
                        "scope": 9952,
                        "src": "6644:9:98",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 9894,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6644:7:98",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 9897,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 9896,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6656:1:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "6644:13:98"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 9903,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": true,
                      "src": "6675:3:98",
                      "subExpression": {
                        "id": 9902,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9895,
                        "src": "6677:1:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 9904,
                    "nodeType": "ExpressionStatement",
                    "src": "6675:3:98"
                  },
                  "nodeType": "ForStatement",
                  "src": "6639:411:98"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 9954,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9881,
                        "src": "7079:8:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 9955,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9848,
                        "src": "7089:4:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 9956,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9850,
                        "src": "7095:2:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 9957,
                        "name": "ids",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9853,
                        "src": "7099:3:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "id": 9958,
                        "name": "amounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9856,
                        "src": "7104:7:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      ],
                      "id": 9953,
                      "name": "TransferBatch",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10560,
                      "src": "7065:13:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,address,uint256[] memory,uint256[] memory)"
                      }
                    },
                    "id": 9959,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7065:47:98",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9960,
                  "nodeType": "EmitStatement",
                  "src": "7060:52:98"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 9962,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9881,
                        "src": "7159:8:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 9963,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9848,
                        "src": "7169:4:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 9964,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9850,
                        "src": "7175:2:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 9965,
                        "name": "ids",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9853,
                        "src": "7179:3:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "id": 9966,
                        "name": "amounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9856,
                        "src": "7184:7:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "id": 9967,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9858,
                        "src": "7193:4:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 9961,
                      "name": "_doSafeBatchTransferAcceptanceCheck",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10497,
                      "src": "7123:35:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
                      }
                    },
                    "id": 9968,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7123:75:98",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9969,
                  "nodeType": "ExpressionStatement",
                  "src": "7123:75:98"
                }
              ]
            },
            "documentation": {
              "id": 9846,
              "nodeType": "StructuredDocumentation",
              "src": "5820:335:98",
              "text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_safeTransferFrom}.\n Emits a {TransferBatch} event.\n Requirements:\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."
            },
            "id": 9971,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_safeBatchTransferFrom",
            "nameLocation": "6169:22:98",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9859,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9848,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "6209:4:98",
                  "nodeType": "VariableDeclaration",
                  "scope": 9971,
                  "src": "6201:12:98",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9847,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6201:7:98",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9850,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "6231:2:98",
                  "nodeType": "VariableDeclaration",
                  "scope": 9971,
                  "src": "6223:10:98",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9849,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6223:7:98",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9853,
                  "mutability": "mutable",
                  "name": "ids",
                  "nameLocation": "6260:3:98",
                  "nodeType": "VariableDeclaration",
                  "scope": 9971,
                  "src": "6243:20:98",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 9851,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "6243:7:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 9852,
                    "nodeType": "ArrayTypeName",
                    "src": "6243:9:98",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9856,
                  "mutability": "mutable",
                  "name": "amounts",
                  "nameLocation": "6290:7:98",
                  "nodeType": "VariableDeclaration",
                  "scope": 9971,
                  "src": "6273:24:98",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 9854,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "6273:7:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 9855,
                    "nodeType": "ArrayTypeName",
                    "src": "6273:9:98",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9858,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "6320:4:98",
                  "nodeType": "VariableDeclaration",
                  "scope": 9971,
                  "src": "6307:17:98",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 9857,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "6307:5:98",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6191:139:98"
            },
            "returnParameters": {
              "id": 9860,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6348:0:98"
            },
            "scope": 10526,
            "src": "6160:1045:98",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 9981,
              "nodeType": "Block",
              "src": "8084:30:98",
              "statements": [
                {
                  "expression": {
                    "id": 9979,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 9977,
                      "name": "_uri",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9475,
                      "src": "8094:4:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 9978,
                      "name": "newuri",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9974,
                      "src": "8101:6:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "8094:13:98",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 9980,
                  "nodeType": "ExpressionStatement",
                  "src": "8094:13:98"
                }
              ]
            },
            "documentation": {
              "id": 9972,
              "nodeType": "StructuredDocumentation",
              "src": "7211:812:98",
              "text": " @dev Sets a new URI for all token types, by relying on the token type ID\n substitution mechanism\n https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n By this mechanism, any occurrence of the `\\{id\\}` substring in either the\n URI or any of the amounts in the JSON file at said URI will be replaced by\n clients with the token type ID.\n For example, the `https://token-cdn-domain/\\{id\\}.json` URI would be\n interpreted by clients as\n `https://token-cdn-domain/000000000000000000000000000000000000000000000000000000000004cce0.json`\n for token type ID 0x4cce0.\n See {uri}.\n Because these URIs cannot be meaningfully represented by the {URI} event,\n this function emits no events."
            },
            "id": 9982,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_setURI",
            "nameLocation": "8037:7:98",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9975,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9974,
                  "mutability": "mutable",
                  "name": "newuri",
                  "nameLocation": "8059:6:98",
                  "nodeType": "VariableDeclaration",
                  "scope": 9982,
                  "src": "8045:20:98",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 9973,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "8045:6:98",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8044:22:98"
            },
            "returnParameters": {
              "id": 9976,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8084:0:98"
            },
            "scope": 10526,
            "src": "8028:86:98",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 10056,
              "nodeType": "Block",
              "src": "8636:449:98",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 10000,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 9995,
                          "name": "account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9985,
                          "src": "8654:7:98",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 9998,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8673:1:98",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 9997,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "8665:7:98",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 9996,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "8665:7:98",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 9999,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8665:10:98",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "8654:21:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313135353a206d696e7420746f20746865207a65726f2061646472657373",
                        "id": 10001,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8677:35:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2",
                          "typeString": "literal_string \"ERC1155: mint to the zero address\""
                        },
                        "value": "ERC1155: mint to the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2",
                          "typeString": "literal_string \"ERC1155: mint to the zero address\""
                        }
                      ],
                      "id": 9994,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8646:7:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10002,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8646:67:98",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10003,
                  "nodeType": "ExpressionStatement",
                  "src": "8646:67:98"
                },
                {
                  "assignments": [
                    10005
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10005,
                      "mutability": "mutable",
                      "name": "operator",
                      "nameLocation": "8732:8:98",
                      "nodeType": "VariableDeclaration",
                      "scope": 10056,
                      "src": "8724:16:98",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 10004,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "8724:7:98",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10008,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 10006,
                      "name": "_msgSender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17640,
                      "src": "8743:10:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 10007,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8743:12:98",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8724:31:98"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 10010,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10005,
                        "src": "8787:8:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 10013,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8805:1:98",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 10012,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8797:7:98",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 10011,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8797:7:98",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 10014,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8797:10:98",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 10015,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9985,
                        "src": "8809:7:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 10017,
                            "name": "id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9987,
                            "src": "8836:2:98",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 10016,
                          "name": "_asSingletonArray",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10525,
                          "src": "8818:17:98",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                            "typeString": "function (uint256) pure returns (uint256[] memory)"
                          }
                        },
                        "id": 10018,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8818:21:98",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 10020,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9989,
                            "src": "8859:6:98",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 10019,
                          "name": "_asSingletonArray",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10525,
                          "src": "8841:17:98",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                            "typeString": "function (uint256) pure returns (uint256[] memory)"
                          }
                        },
                        "id": 10021,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8841:25:98",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "id": 10022,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9991,
                        "src": "8868:4:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 10009,
                      "name": "_beforeTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10365,
                      "src": "8766:20:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
                      }
                    },
                    "id": 10023,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8766:107:98",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10024,
                  "nodeType": "ExpressionStatement",
                  "src": "8766:107:98"
                },
                {
                  "expression": {
                    "id": 10031,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 10025,
                          "name": "_balances",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9467,
                          "src": "8884:9:98",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
                            "typeString": "mapping(uint256 => mapping(address => uint256))"
                          }
                        },
                        "id": 10028,
                        "indexExpression": {
                          "id": 10026,
                          "name": "id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9987,
                          "src": "8894:2:98",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "8884:13:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 10029,
                      "indexExpression": {
                        "id": 10027,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9985,
                        "src": "8898:7:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "8884:22:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 10030,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9989,
                      "src": "8910:6:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8884:32:98",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 10032,
                  "nodeType": "ExpressionStatement",
                  "src": "8884:32:98"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 10034,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10005,
                        "src": "8946:8:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 10037,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8964:1:98",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 10036,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8956:7:98",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 10035,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8956:7:98",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 10038,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8956:10:98",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 10039,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9985,
                        "src": "8968:7:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 10040,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9987,
                        "src": "8977:2:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 10041,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9989,
                        "src": "8981:6:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 10033,
                      "name": "TransferSingle",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10545,
                      "src": "8931:14:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address,uint256,uint256)"
                      }
                    },
                    "id": 10042,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8931:57:98",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10043,
                  "nodeType": "EmitStatement",
                  "src": "8926:62:98"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 10045,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10005,
                        "src": "9030:8:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 10048,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9048:1:98",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 10047,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9040:7:98",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 10046,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9040:7:98",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 10049,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9040:10:98",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 10050,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9985,
                        "src": "9052:7:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 10051,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9987,
                        "src": "9061:2:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 10052,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9989,
                        "src": "9065:6:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 10053,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9991,
                        "src": "9073:4:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 10044,
                      "name": "_doSafeTransferAcceptanceCheck",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10430,
                      "src": "8999:30:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,address,uint256,uint256,bytes memory)"
                      }
                    },
                    "id": 10054,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8999:79:98",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10055,
                  "nodeType": "ExpressionStatement",
                  "src": "8999:79:98"
                }
              ]
            },
            "documentation": {
              "id": 9983,
              "nodeType": "StructuredDocumentation",
              "src": "8120:377:98",
              "text": " @dev Creates `amount` tokens of token type `id`, and assigns them to `account`.\n Emits a {TransferSingle} event.\n Requirements:\n - `account` cannot be the zero address.\n - If `account` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."
            },
            "id": 10057,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_mint",
            "nameLocation": "8511:5:98",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9992,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9985,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "8534:7:98",
                  "nodeType": "VariableDeclaration",
                  "scope": 10057,
                  "src": "8526:15:98",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9984,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8526:7:98",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9987,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "8559:2:98",
                  "nodeType": "VariableDeclaration",
                  "scope": 10057,
                  "src": "8551:10:98",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9986,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8551:7:98",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9989,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "8579:6:98",
                  "nodeType": "VariableDeclaration",
                  "scope": 10057,
                  "src": "8571:14:98",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9988,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8571:7:98",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9991,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "8608:4:98",
                  "nodeType": "VariableDeclaration",
                  "scope": 10057,
                  "src": "8595:17:98",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 9990,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "8595:5:98",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8516:102:98"
            },
            "returnParameters": {
              "id": 9993,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8636:0:98"
            },
            "scope": 10526,
            "src": "8502:583:98",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 10155,
              "nodeType": "Block",
              "src": "9584:561:98",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 10077,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 10072,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10060,
                          "src": "9602:2:98",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 10075,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9616:1:98",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 10074,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "9608:7:98",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 10073,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "9608:7:98",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 10076,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9608:10:98",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "9602:16:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313135353a206d696e7420746f20746865207a65726f2061646472657373",
                        "id": 10078,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9620:35:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2",
                          "typeString": "literal_string \"ERC1155: mint to the zero address\""
                        },
                        "value": "ERC1155: mint to the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2",
                          "typeString": "literal_string \"ERC1155: mint to the zero address\""
                        }
                      ],
                      "id": 10071,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9594:7:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10079,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9594:62:98",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10080,
                  "nodeType": "ExpressionStatement",
                  "src": "9594:62:98"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 10086,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 10082,
                            "name": "ids",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10063,
                            "src": "9674:3:98",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          "id": 10083,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "9674:10:98",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 10084,
                            "name": "amounts",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10066,
                            "src": "9688:7:98",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          "id": 10085,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "9688:14:98",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "9674:28:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313135353a2069647320616e6420616d6f756e7473206c656e677468206d69736d61746368",
                        "id": 10087,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9704:42:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
                          "typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
                        },
                        "value": "ERC1155: ids and amounts length mismatch"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
                          "typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
                        }
                      ],
                      "id": 10081,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9666:7:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10088,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9666:81:98",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10089,
                  "nodeType": "ExpressionStatement",
                  "src": "9666:81:98"
                },
                {
                  "assignments": [
                    10091
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10091,
                      "mutability": "mutable",
                      "name": "operator",
                      "nameLocation": "9766:8:98",
                      "nodeType": "VariableDeclaration",
                      "scope": 10155,
                      "src": "9758:16:98",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 10090,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "9758:7:98",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10094,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 10092,
                      "name": "_msgSender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17640,
                      "src": "9777:10:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 10093,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9777:12:98",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9758:31:98"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 10096,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10091,
                        "src": "9821:8:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 10099,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9839:1:98",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 10098,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9831:7:98",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 10097,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9831:7:98",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 10100,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9831:10:98",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 10101,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10060,
                        "src": "9843:2:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 10102,
                        "name": "ids",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10063,
                        "src": "9847:3:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "id": 10103,
                        "name": "amounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10066,
                        "src": "9852:7:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "id": 10104,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10068,
                        "src": "9861:4:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 10095,
                      "name": "_beforeTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10365,
                      "src": "9800:20:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
                      }
                    },
                    "id": 10105,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9800:66:98",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10106,
                  "nodeType": "ExpressionStatement",
                  "src": "9800:66:98"
                },
                {
                  "body": {
                    "id": 10130,
                    "nodeType": "Block",
                    "src": "9918:60:98",
                    "statements": [
                      {
                        "expression": {
                          "id": 10128,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 10118,
                                "name": "_balances",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 9467,
                                "src": "9932:9:98",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
                                  "typeString": "mapping(uint256 => mapping(address => uint256))"
                                }
                              },
                              "id": 10123,
                              "indexExpression": {
                                "baseExpression": {
                                  "id": 10119,
                                  "name": "ids",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 10063,
                                  "src": "9942:3:98",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                    "typeString": "uint256[] memory"
                                  }
                                },
                                "id": 10121,
                                "indexExpression": {
                                  "id": 10120,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 10108,
                                  "src": "9946:1:98",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "9942:6:98",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "9932:17:98",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 10124,
                            "indexExpression": {
                              "id": 10122,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10060,
                              "src": "9950:2:98",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "9932:21:98",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "baseExpression": {
                              "id": 10125,
                              "name": "amounts",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10066,
                              "src": "9957:7:98",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            "id": 10127,
                            "indexExpression": {
                              "id": 10126,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10108,
                              "src": "9965:1:98",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "9957:10:98",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9932:35:98",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 10129,
                        "nodeType": "ExpressionStatement",
                        "src": "9932:35:98"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 10114,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 10111,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10108,
                      "src": "9897:1:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 10112,
                        "name": "ids",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10063,
                        "src": "9901:3:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      "id": 10113,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "9901:10:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9897:14:98",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 10131,
                  "initializationExpression": {
                    "assignments": [
                      10108
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 10108,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "9890:1:98",
                        "nodeType": "VariableDeclaration",
                        "scope": 10131,
                        "src": "9882:9:98",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 10107,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "9882:7:98",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 10110,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 10109,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9894:1:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "9882:13:98"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 10116,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "9913:3:98",
                      "subExpression": {
                        "id": 10115,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10108,
                        "src": "9913:1:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 10117,
                    "nodeType": "ExpressionStatement",
                    "src": "9913:3:98"
                  },
                  "nodeType": "ForStatement",
                  "src": "9877:101:98"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 10133,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10091,
                        "src": "10007:8:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 10136,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10025:1:98",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 10135,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10017:7:98",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 10134,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "10017:7:98",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 10137,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10017:10:98",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 10138,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10060,
                        "src": "10029:2:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 10139,
                        "name": "ids",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10063,
                        "src": "10033:3:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "id": 10140,
                        "name": "amounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10066,
                        "src": "10038:7:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      ],
                      "id": 10132,
                      "name": "TransferBatch",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10560,
                      "src": "9993:13:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,address,uint256[] memory,uint256[] memory)"
                      }
                    },
                    "id": 10141,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9993:53:98",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10142,
                  "nodeType": "EmitStatement",
                  "src": "9988:58:98"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 10144,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10091,
                        "src": "10093:8:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 10147,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10111:1:98",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 10146,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10103:7:98",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 10145,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "10103:7:98",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 10148,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10103:10:98",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 10149,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10060,
                        "src": "10115:2:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 10150,
                        "name": "ids",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10063,
                        "src": "10119:3:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "id": 10151,
                        "name": "amounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10066,
                        "src": "10124:7:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "id": 10152,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10068,
                        "src": "10133:4:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 10143,
                      "name": "_doSafeBatchTransferAcceptanceCheck",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10497,
                      "src": "10057:35:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
                      }
                    },
                    "id": 10153,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10057:81:98",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10154,
                  "nodeType": "ExpressionStatement",
                  "src": "10057:81:98"
                }
              ]
            },
            "documentation": {
              "id": 10058,
              "nodeType": "StructuredDocumentation",
              "src": "9091:334:98",
              "text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_mint}.\n Requirements:\n - `ids` and `amounts` must have the same length.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."
            },
            "id": 10156,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_mintBatch",
            "nameLocation": "9439:10:98",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10069,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10060,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "9467:2:98",
                  "nodeType": "VariableDeclaration",
                  "scope": 10156,
                  "src": "9459:10:98",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10059,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9459:7:98",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10063,
                  "mutability": "mutable",
                  "name": "ids",
                  "nameLocation": "9496:3:98",
                  "nodeType": "VariableDeclaration",
                  "scope": 10156,
                  "src": "9479:20:98",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 10061,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "9479:7:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 10062,
                    "nodeType": "ArrayTypeName",
                    "src": "9479:9:98",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10066,
                  "mutability": "mutable",
                  "name": "amounts",
                  "nameLocation": "9526:7:98",
                  "nodeType": "VariableDeclaration",
                  "scope": 10156,
                  "src": "9509:24:98",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 10064,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "9509:7:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 10065,
                    "nodeType": "ArrayTypeName",
                    "src": "9509:9:98",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10068,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "9556:4:98",
                  "nodeType": "VariableDeclaration",
                  "scope": 10156,
                  "src": "9543:17:98",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 10067,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "9543:5:98",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9449:117:98"
            },
            "returnParameters": {
              "id": 10070,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9584:0:98"
            },
            "scope": 10526,
            "src": "9430:715:98",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 10234,
              "nodeType": "Block",
              "src": "10501:550:98",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 10172,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 10167,
                          "name": "account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10159,
                          "src": "10519:7:98",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 10170,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10538:1:98",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 10169,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "10530:7:98",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 10168,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "10530:7:98",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 10171,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10530:10:98",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "10519:21:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313135353a206275726e2066726f6d20746865207a65726f2061646472657373",
                        "id": 10173,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10542:37:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a",
                          "typeString": "literal_string \"ERC1155: burn from the zero address\""
                        },
                        "value": "ERC1155: burn from the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a",
                          "typeString": "literal_string \"ERC1155: burn from the zero address\""
                        }
                      ],
                      "id": 10166,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "10511:7:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10174,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10511:69:98",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10175,
                  "nodeType": "ExpressionStatement",
                  "src": "10511:69:98"
                },
                {
                  "assignments": [
                    10177
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10177,
                      "mutability": "mutable",
                      "name": "operator",
                      "nameLocation": "10599:8:98",
                      "nodeType": "VariableDeclaration",
                      "scope": 10234,
                      "src": "10591:16:98",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 10176,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "10591:7:98",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10180,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 10178,
                      "name": "_msgSender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17640,
                      "src": "10610:10:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 10179,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10610:12:98",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10591:31:98"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 10182,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10177,
                        "src": "10654:8:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 10183,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10159,
                        "src": "10664:7:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 10186,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10681:1:98",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 10185,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10673:7:98",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 10184,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "10673:7:98",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 10187,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10673:10:98",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 10189,
                            "name": "id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10161,
                            "src": "10703:2:98",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 10188,
                          "name": "_asSingletonArray",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10525,
                          "src": "10685:17:98",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                            "typeString": "function (uint256) pure returns (uint256[] memory)"
                          }
                        },
                        "id": 10190,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10685:21:98",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 10192,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10163,
                            "src": "10726:6:98",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 10191,
                          "name": "_asSingletonArray",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10525,
                          "src": "10708:17:98",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                            "typeString": "function (uint256) pure returns (uint256[] memory)"
                          }
                        },
                        "id": 10193,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10708:25:98",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 10194,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10735:2:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "id": 10181,
                      "name": "_beforeTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10365,
                      "src": "10633:20:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
                      }
                    },
                    "id": 10195,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10633:105:98",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10196,
                  "nodeType": "ExpressionStatement",
                  "src": "10633:105:98"
                },
                {
                  "assignments": [
                    10198
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10198,
                      "mutability": "mutable",
                      "name": "accountBalance",
                      "nameLocation": "10757:14:98",
                      "nodeType": "VariableDeclaration",
                      "scope": 10234,
                      "src": "10749:22:98",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 10197,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "10749:7:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10204,
                  "initialValue": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 10199,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9467,
                        "src": "10774:9:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
                          "typeString": "mapping(uint256 => mapping(address => uint256))"
                        }
                      },
                      "id": 10201,
                      "indexExpression": {
                        "id": 10200,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10161,
                        "src": "10784:2:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "10774:13:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 10203,
                    "indexExpression": {
                      "id": 10202,
                      "name": "account",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10159,
                      "src": "10788:7:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "10774:22:98",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10749:47:98"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 10208,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 10206,
                          "name": "accountBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10198,
                          "src": "10814:14:98",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 10207,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10163,
                          "src": "10832:6:98",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "10814:24:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313135353a206275726e20616d6f756e7420657863656564732062616c616e6365",
                        "id": 10209,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10840:38:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685",
                          "typeString": "literal_string \"ERC1155: burn amount exceeds balance\""
                        },
                        "value": "ERC1155: burn amount exceeds balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685",
                          "typeString": "literal_string \"ERC1155: burn amount exceeds balance\""
                        }
                      ],
                      "id": 10205,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "10806:7:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10210,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10806:73:98",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10211,
                  "nodeType": "ExpressionStatement",
                  "src": "10806:73:98"
                },
                {
                  "id": 10222,
                  "nodeType": "UncheckedBlock",
                  "src": "10889:83:98",
                  "statements": [
                    {
                      "expression": {
                        "id": 10220,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 10212,
                              "name": "_balances",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9467,
                              "src": "10913:9:98",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
                                "typeString": "mapping(uint256 => mapping(address => uint256))"
                              }
                            },
                            "id": 10215,
                            "indexExpression": {
                              "id": 10213,
                              "name": "id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10161,
                              "src": "10923:2:98",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "10913:13:98",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 10216,
                          "indexExpression": {
                            "id": 10214,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10159,
                            "src": "10927:7:98",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "nodeType": "IndexAccess",
                          "src": "10913:22:98",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 10219,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 10217,
                            "name": "accountBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10198,
                            "src": "10938:14:98",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "id": 10218,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10163,
                            "src": "10955:6:98",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "10938:23:98",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "10913:48:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 10221,
                      "nodeType": "ExpressionStatement",
                      "src": "10913:48:98"
                    }
                  ]
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 10224,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10177,
                        "src": "11002:8:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 10225,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10159,
                        "src": "11012:7:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 10228,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "11029:1:98",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 10227,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "11021:7:98",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 10226,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "11021:7:98",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 10229,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11021:10:98",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 10230,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10161,
                        "src": "11033:2:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 10231,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10163,
                        "src": "11037:6:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 10223,
                      "name": "TransferSingle",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10545,
                      "src": "10987:14:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address,uint256,uint256)"
                      }
                    },
                    "id": 10232,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10987:57:98",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10233,
                  "nodeType": "EmitStatement",
                  "src": "10982:62:98"
                }
              ]
            },
            "documentation": {
              "id": 10157,
              "nodeType": "StructuredDocumentation",
              "src": "10151:238:98",
              "text": " @dev Destroys `amount` tokens of token type `id` from `account`\n Requirements:\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens of token type `id`."
            },
            "id": 10235,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_burn",
            "nameLocation": "10403:5:98",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10164,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10159,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "10426:7:98",
                  "nodeType": "VariableDeclaration",
                  "scope": 10235,
                  "src": "10418:15:98",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10158,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10418:7:98",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10161,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "10451:2:98",
                  "nodeType": "VariableDeclaration",
                  "scope": 10235,
                  "src": "10443:10:98",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10160,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10443:7:98",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10163,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "10471:6:98",
                  "nodeType": "VariableDeclaration",
                  "scope": 10235,
                  "src": "10463:14:98",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10162,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10463:7:98",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10408:75:98"
            },
            "returnParameters": {
              "id": 10165,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10501:0:98"
            },
            "scope": 10526,
            "src": "10394:657:98",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 10345,
              "nodeType": "Block",
              "src": "11377:762:98",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 10253,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 10248,
                          "name": "account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10238,
                          "src": "11395:7:98",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 10251,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "11414:1:98",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 10250,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "11406:7:98",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 10249,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "11406:7:98",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 10252,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11406:10:98",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "11395:21:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313135353a206275726e2066726f6d20746865207a65726f2061646472657373",
                        "id": 10254,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11418:37:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a",
                          "typeString": "literal_string \"ERC1155: burn from the zero address\""
                        },
                        "value": "ERC1155: burn from the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a",
                          "typeString": "literal_string \"ERC1155: burn from the zero address\""
                        }
                      ],
                      "id": 10247,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "11387:7:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10255,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11387:69:98",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10256,
                  "nodeType": "ExpressionStatement",
                  "src": "11387:69:98"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 10262,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 10258,
                            "name": "ids",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10241,
                            "src": "11474:3:98",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          "id": 10259,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "11474:10:98",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 10260,
                            "name": "amounts",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10244,
                            "src": "11488:7:98",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          "id": 10261,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "11488:14:98",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "11474:28:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313135353a2069647320616e6420616d6f756e7473206c656e677468206d69736d61746368",
                        "id": 10263,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11504:42:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
                          "typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
                        },
                        "value": "ERC1155: ids and amounts length mismatch"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
                          "typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
                        }
                      ],
                      "id": 10257,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "11466:7:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10264,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11466:81:98",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10265,
                  "nodeType": "ExpressionStatement",
                  "src": "11466:81:98"
                },
                {
                  "assignments": [
                    10267
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10267,
                      "mutability": "mutable",
                      "name": "operator",
                      "nameLocation": "11566:8:98",
                      "nodeType": "VariableDeclaration",
                      "scope": 10345,
                      "src": "11558:16:98",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 10266,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "11558:7:98",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10270,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 10268,
                      "name": "_msgSender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17640,
                      "src": "11577:10:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 10269,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11577:12:98",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11558:31:98"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 10272,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10267,
                        "src": "11621:8:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 10273,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10238,
                        "src": "11631:7:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 10276,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "11648:1:98",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 10275,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "11640:7:98",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 10274,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "11640:7:98",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 10277,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11640:10:98",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 10278,
                        "name": "ids",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10241,
                        "src": "11652:3:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "id": 10279,
                        "name": "amounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10244,
                        "src": "11657:7:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 10280,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11666:2:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "id": 10271,
                      "name": "_beforeTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10365,
                      "src": "11600:20:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
                      }
                    },
                    "id": 10281,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11600:69:98",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10282,
                  "nodeType": "ExpressionStatement",
                  "src": "11600:69:98"
                },
                {
                  "body": {
                    "id": 10332,
                    "nodeType": "Block",
                    "src": "11721:338:98",
                    "statements": [
                      {
                        "assignments": [
                          10295
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 10295,
                            "mutability": "mutable",
                            "name": "id",
                            "nameLocation": "11743:2:98",
                            "nodeType": "VariableDeclaration",
                            "scope": 10332,
                            "src": "11735:10:98",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 10294,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "11735:7:98",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 10299,
                        "initialValue": {
                          "baseExpression": {
                            "id": 10296,
                            "name": "ids",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10241,
                            "src": "11748:3:98",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          "id": 10298,
                          "indexExpression": {
                            "id": 10297,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10284,
                            "src": "11752:1:98",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "11748:6:98",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "11735:19:98"
                      },
                      {
                        "assignments": [
                          10301
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 10301,
                            "mutability": "mutable",
                            "name": "amount",
                            "nameLocation": "11776:6:98",
                            "nodeType": "VariableDeclaration",
                            "scope": 10332,
                            "src": "11768:14:98",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 10300,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "11768:7:98",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 10305,
                        "initialValue": {
                          "baseExpression": {
                            "id": 10302,
                            "name": "amounts",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10244,
                            "src": "11785:7:98",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          "id": 10304,
                          "indexExpression": {
                            "id": 10303,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10284,
                            "src": "11793:1:98",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "11785:10:98",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "11768:27:98"
                      },
                      {
                        "assignments": [
                          10307
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 10307,
                            "mutability": "mutable",
                            "name": "accountBalance",
                            "nameLocation": "11818:14:98",
                            "nodeType": "VariableDeclaration",
                            "scope": 10332,
                            "src": "11810:22:98",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 10306,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "11810:7:98",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 10313,
                        "initialValue": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 10308,
                              "name": "_balances",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9467,
                              "src": "11835:9:98",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
                                "typeString": "mapping(uint256 => mapping(address => uint256))"
                              }
                            },
                            "id": 10310,
                            "indexExpression": {
                              "id": 10309,
                              "name": "id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10295,
                              "src": "11845:2:98",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "11835:13:98",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 10312,
                          "indexExpression": {
                            "id": 10311,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10238,
                            "src": "11849:7:98",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "11835:22:98",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "11810:47:98"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 10317,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 10315,
                                "name": "accountBalance",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10307,
                                "src": "11879:14:98",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "id": 10316,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10301,
                                "src": "11897:6:98",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "11879:24:98",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "455243313135353a206275726e20616d6f756e7420657863656564732062616c616e6365",
                              "id": 10318,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "11905:38:98",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685",
                                "typeString": "literal_string \"ERC1155: burn amount exceeds balance\""
                              },
                              "value": "ERC1155: burn amount exceeds balance"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685",
                                "typeString": "literal_string \"ERC1155: burn amount exceeds balance\""
                              }
                            ],
                            "id": 10314,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "11871:7:98",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 10319,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11871:73:98",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 10320,
                        "nodeType": "ExpressionStatement",
                        "src": "11871:73:98"
                      },
                      {
                        "id": 10331,
                        "nodeType": "UncheckedBlock",
                        "src": "11958:91:98",
                        "statements": [
                          {
                            "expression": {
                              "id": 10329,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "baseExpression": {
                                  "baseExpression": {
                                    "id": 10321,
                                    "name": "_balances",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 9467,
                                    "src": "11986:9:98",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
                                      "typeString": "mapping(uint256 => mapping(address => uint256))"
                                    }
                                  },
                                  "id": 10324,
                                  "indexExpression": {
                                    "id": 10322,
                                    "name": "id",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 10295,
                                    "src": "11996:2:98",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "11986:13:98",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                    "typeString": "mapping(address => uint256)"
                                  }
                                },
                                "id": 10325,
                                "indexExpression": {
                                  "id": 10323,
                                  "name": "account",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 10238,
                                  "src": "12000:7:98",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": true,
                                "nodeType": "IndexAccess",
                                "src": "11986:22:98",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "=",
                              "rightHandSide": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 10328,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 10326,
                                  "name": "accountBalance",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 10307,
                                  "src": "12011:14:98",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "-",
                                "rightExpression": {
                                  "id": 10327,
                                  "name": "amount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 10301,
                                  "src": "12028:6:98",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "12011:23:98",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "11986:48:98",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 10330,
                            "nodeType": "ExpressionStatement",
                            "src": "11986:48:98"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 10290,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 10287,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10284,
                      "src": "11700:1:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 10288,
                        "name": "ids",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10241,
                        "src": "11704:3:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      "id": 10289,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "11704:10:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11700:14:98",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 10333,
                  "initializationExpression": {
                    "assignments": [
                      10284
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 10284,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "11693:1:98",
                        "nodeType": "VariableDeclaration",
                        "scope": 10333,
                        "src": "11685:9:98",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 10283,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "11685:7:98",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 10286,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 10285,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "11697:1:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "11685:13:98"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 10292,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "11716:3:98",
                      "subExpression": {
                        "id": 10291,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10284,
                        "src": "11716:1:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 10293,
                    "nodeType": "ExpressionStatement",
                    "src": "11716:3:98"
                  },
                  "nodeType": "ForStatement",
                  "src": "11680:379:98"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 10335,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10267,
                        "src": "12088:8:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 10336,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10238,
                        "src": "12098:7:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 10339,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "12115:1:98",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 10338,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "12107:7:98",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 10337,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "12107:7:98",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 10340,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12107:10:98",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 10341,
                        "name": "ids",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10241,
                        "src": "12119:3:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "id": 10342,
                        "name": "amounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10244,
                        "src": "12124:7:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      ],
                      "id": 10334,
                      "name": "TransferBatch",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10560,
                      "src": "12074:13:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,address,uint256[] memory,uint256[] memory)"
                      }
                    },
                    "id": 10343,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12074:58:98",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10344,
                  "nodeType": "EmitStatement",
                  "src": "12069:63:98"
                }
              ]
            },
            "documentation": {
              "id": 10236,
              "nodeType": "StructuredDocumentation",
              "src": "11057:183:98",
              "text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_burn}.\n Requirements:\n - `ids` and `amounts` must have the same length."
            },
            "id": 10346,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_burnBatch",
            "nameLocation": "11254:10:98",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10245,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10238,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "11282:7:98",
                  "nodeType": "VariableDeclaration",
                  "scope": 10346,
                  "src": "11274:15:98",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10237,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11274:7:98",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10241,
                  "mutability": "mutable",
                  "name": "ids",
                  "nameLocation": "11316:3:98",
                  "nodeType": "VariableDeclaration",
                  "scope": 10346,
                  "src": "11299:20:98",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 10239,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "11299:7:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 10240,
                    "nodeType": "ArrayTypeName",
                    "src": "11299:9:98",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10244,
                  "mutability": "mutable",
                  "name": "amounts",
                  "nameLocation": "11346:7:98",
                  "nodeType": "VariableDeclaration",
                  "scope": 10346,
                  "src": "11329:24:98",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 10242,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "11329:7:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 10243,
                    "nodeType": "ArrayTypeName",
                    "src": "11329:9:98",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11264:95:98"
            },
            "returnParameters": {
              "id": 10246,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11377:0:98"
            },
            "scope": 10526,
            "src": "11245:894:98",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 10364,
              "nodeType": "Block",
              "src": "13285:2:98",
              "statements": []
            },
            "documentation": {
              "id": 10347,
              "nodeType": "StructuredDocumentation",
              "src": "12145:923:98",
              "text": " @dev Hook that is called before any token transfer. This includes minting\n and burning, as well as batched variants.\n The same hook is called on both single and batched variants. For single\n transfers, the length of the `id` and `amount` arrays will be 1.\n Calling conditions (for each `id` and `amount` pair):\n - When `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n of token type `id` will be  transferred to `to`.\n - When `from` is zero, `amount` tokens of token type `id` will be minted\n for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens of token type `id`\n will be burned.\n - `from` and `to` are never both zero.\n - `ids` and `amounts` have the same, non-zero length.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
            },
            "id": 10365,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_beforeTokenTransfer",
            "nameLocation": "13082:20:98",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10362,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10349,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "13120:8:98",
                  "nodeType": "VariableDeclaration",
                  "scope": 10365,
                  "src": "13112:16:98",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10348,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13112:7:98",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10351,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "13146:4:98",
                  "nodeType": "VariableDeclaration",
                  "scope": 10365,
                  "src": "13138:12:98",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10350,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13138:7:98",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10353,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "13168:2:98",
                  "nodeType": "VariableDeclaration",
                  "scope": 10365,
                  "src": "13160:10:98",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10352,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13160:7:98",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10356,
                  "mutability": "mutable",
                  "name": "ids",
                  "nameLocation": "13197:3:98",
                  "nodeType": "VariableDeclaration",
                  "scope": 10365,
                  "src": "13180:20:98",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 10354,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "13180:7:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 10355,
                    "nodeType": "ArrayTypeName",
                    "src": "13180:9:98",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10359,
                  "mutability": "mutable",
                  "name": "amounts",
                  "nameLocation": "13227:7:98",
                  "nodeType": "VariableDeclaration",
                  "scope": 10365,
                  "src": "13210:24:98",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 10357,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "13210:7:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 10358,
                    "nodeType": "ArrayTypeName",
                    "src": "13210:9:98",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10361,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "13257:4:98",
                  "nodeType": "VariableDeclaration",
                  "scope": 10365,
                  "src": "13244:17:98",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 10360,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "13244:5:98",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13102:165:98"
            },
            "returnParameters": {
              "id": 10363,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13285:0:98"
            },
            "scope": 10526,
            "src": "13073:214:98",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 10429,
              "nodeType": "Block",
              "src": "13486:536:98",
              "statements": [
                {
                  "condition": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 10380,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10371,
                        "src": "13500:2:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 10381,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "isContract",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17268,
                      "src": "13500:13:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$",
                        "typeString": "function (address) view returns (bool)"
                      }
                    },
                    "id": 10382,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13500:15:98",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 10428,
                  "nodeType": "IfStatement",
                  "src": "13496:520:98",
                  "trueBody": {
                    "id": 10427,
                    "nodeType": "Block",
                    "src": "13517:499:98",
                    "statements": [
                      {
                        "clauses": [
                          {
                            "block": {
                              "id": 10409,
                              "nodeType": "Block",
                              "src": "13634:188:98",
                              "statements": [
                                {
                                  "condition": {
                                    "commonType": {
                                      "typeIdentifier": "t_bytes4",
                                      "typeString": "bytes4"
                                    },
                                    "id": 10402,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 10396,
                                      "name": "response",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 10394,
                                      "src": "13656:8:98",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes4",
                                        "typeString": "bytes4"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "!=",
                                    "rightExpression": {
                                      "expression": {
                                        "expression": {
                                          "arguments": [
                                            {
                                              "id": 10398,
                                              "name": "to",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 10371,
                                              "src": "13685:2:98",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            ],
                                            "id": 10397,
                                            "name": "IERC1155Receiver",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 10689,
                                            "src": "13668:16:98",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$10689_$",
                                              "typeString": "type(contract IERC1155Receiver)"
                                            }
                                          },
                                          "id": 10399,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "typeConversion",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "13668:20:98",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_IERC1155Receiver_$10689",
                                            "typeString": "contract IERC1155Receiver"
                                          }
                                        },
                                        "id": 10400,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "onERC1155Received",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 10670,
                                        "src": "13668:38:98",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
                                          "typeString": "function (address,address,uint256,uint256,bytes memory) external returns (bytes4)"
                                        }
                                      },
                                      "id": 10401,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "selector",
                                      "nodeType": "MemberAccess",
                                      "src": "13668:47:98",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes4",
                                        "typeString": "bytes4"
                                      }
                                    },
                                    "src": "13656:59:98",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "id": 10408,
                                  "nodeType": "IfStatement",
                                  "src": "13652:156:98",
                                  "trueBody": {
                                    "id": 10407,
                                    "nodeType": "Block",
                                    "src": "13717:91:98",
                                    "statements": [
                                      {
                                        "expression": {
                                          "arguments": [
                                            {
                                              "hexValue": "455243313135353a204552433131353552656365697665722072656a656374656420746f6b656e73",
                                              "id": 10404,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "kind": "string",
                                              "lValueRequested": false,
                                              "nodeType": "Literal",
                                              "src": "13746:42:98",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503",
                                                "typeString": "literal_string \"ERC1155: ERC1155Receiver rejected tokens\""
                                              },
                                              "value": "ERC1155: ERC1155Receiver rejected tokens"
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503",
                                                "typeString": "literal_string \"ERC1155: ERC1155Receiver rejected tokens\""
                                              }
                                            ],
                                            "id": 10403,
                                            "name": "revert",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [
                                              -19,
                                              -19
                                            ],
                                            "referencedDeclaration": -19,
                                            "src": "13739:6:98",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                                              "typeString": "function (string memory) pure"
                                            }
                                          },
                                          "id": 10405,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "functionCall",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "13739:50:98",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                          }
                                        },
                                        "id": 10406,
                                        "nodeType": "ExpressionStatement",
                                        "src": "13739:50:98"
                                      }
                                    ]
                                  }
                                }
                              ]
                            },
                            "errorName": "",
                            "id": 10410,
                            "nodeType": "TryCatchClause",
                            "parameters": {
                              "id": 10395,
                              "nodeType": "ParameterList",
                              "parameters": [
                                {
                                  "constant": false,
                                  "id": 10394,
                                  "mutability": "mutable",
                                  "name": "response",
                                  "nameLocation": "13624:8:98",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 10410,
                                  "src": "13617:15:98",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  },
                                  "typeName": {
                                    "id": 10393,
                                    "name": "bytes4",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "13617:6:98",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes4",
                                      "typeString": "bytes4"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "src": "13616:17:98"
                            },
                            "src": "13608:214:98"
                          },
                          {
                            "block": {
                              "id": 10418,
                              "nodeType": "Block",
                              "src": "13857:47:98",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 10415,
                                        "name": "reason",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 10412,
                                        "src": "13882:6:98",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_string_memory_ptr",
                                          "typeString": "string memory"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_string_memory_ptr",
                                          "typeString": "string memory"
                                        }
                                      ],
                                      "id": 10414,
                                      "name": "revert",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [
                                        -19,
                                        -19
                                      ],
                                      "referencedDeclaration": -19,
                                      "src": "13875:6:98",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                                        "typeString": "function (string memory) pure"
                                      }
                                    },
                                    "id": 10416,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "13875:14:98",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_tuple$__$",
                                      "typeString": "tuple()"
                                    }
                                  },
                                  "id": 10417,
                                  "nodeType": "ExpressionStatement",
                                  "src": "13875:14:98"
                                }
                              ]
                            },
                            "errorName": "Error",
                            "id": 10419,
                            "nodeType": "TryCatchClause",
                            "parameters": {
                              "id": 10413,
                              "nodeType": "ParameterList",
                              "parameters": [
                                {
                                  "constant": false,
                                  "id": 10412,
                                  "mutability": "mutable",
                                  "name": "reason",
                                  "nameLocation": "13849:6:98",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 10419,
                                  "src": "13835:20:98",
                                  "stateVariable": false,
                                  "storageLocation": "memory",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string"
                                  },
                                  "typeName": {
                                    "id": 10411,
                                    "name": "string",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "13835:6:98",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_storage_ptr",
                                      "typeString": "string"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "src": "13834:22:98"
                            },
                            "src": "13823:81:98"
                          },
                          {
                            "block": {
                              "id": 10424,
                              "nodeType": "Block",
                              "src": "13911:95:98",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "hexValue": "455243313135353a207472616e7366657220746f206e6f6e2045524331313535526563656976657220696d706c656d656e746572",
                                        "id": 10421,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "string",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "13936:54:98",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed",
                                          "typeString": "literal_string \"ERC1155: transfer to non ERC1155Receiver implementer\""
                                        },
                                        "value": "ERC1155: transfer to non ERC1155Receiver implementer"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed",
                                          "typeString": "literal_string \"ERC1155: transfer to non ERC1155Receiver implementer\""
                                        }
                                      ],
                                      "id": 10420,
                                      "name": "revert",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [
                                        -19,
                                        -19
                                      ],
                                      "referencedDeclaration": -19,
                                      "src": "13929:6:98",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                                        "typeString": "function (string memory) pure"
                                      }
                                    },
                                    "id": 10422,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "13929:62:98",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_tuple$__$",
                                      "typeString": "tuple()"
                                    }
                                  },
                                  "id": 10423,
                                  "nodeType": "ExpressionStatement",
                                  "src": "13929:62:98"
                                }
                              ]
                            },
                            "errorName": "",
                            "id": 10425,
                            "nodeType": "TryCatchClause",
                            "src": "13905:101:98"
                          }
                        ],
                        "externalCall": {
                          "arguments": [
                            {
                              "id": 10387,
                              "name": "operator",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10367,
                              "src": "13574:8:98",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 10388,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10369,
                              "src": "13584:4:98",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 10389,
                              "name": "id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10373,
                              "src": "13590:2:98",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 10390,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10375,
                              "src": "13594:6:98",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 10391,
                              "name": "data",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10377,
                              "src": "13602:4:98",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 10384,
                                  "name": "to",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 10371,
                                  "src": "13552:2:98",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 10383,
                                "name": "IERC1155Receiver",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10689,
                                "src": "13535:16:98",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$10689_$",
                                  "typeString": "type(contract IERC1155Receiver)"
                                }
                              },
                              "id": 10385,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "13535:20:98",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC1155Receiver_$10689",
                                "typeString": "contract IERC1155Receiver"
                              }
                            },
                            "id": 10386,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "onERC1155Received",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 10670,
                            "src": "13535:38:98",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
                              "typeString": "function (address,address,uint256,uint256,bytes memory) external returns (bytes4)"
                            }
                          },
                          "id": 10392,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13535:72:98",
                          "tryCall": true,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "id": 10426,
                        "nodeType": "TryStatement",
                        "src": "13531:475:98"
                      }
                    ]
                  }
                }
              ]
            },
            "id": 10430,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_doSafeTransferAcceptanceCheck",
            "nameLocation": "13302:30:98",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10378,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10367,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "13350:8:98",
                  "nodeType": "VariableDeclaration",
                  "scope": 10430,
                  "src": "13342:16:98",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10366,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13342:7:98",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10369,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "13376:4:98",
                  "nodeType": "VariableDeclaration",
                  "scope": 10430,
                  "src": "13368:12:98",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10368,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13368:7:98",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10371,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "13398:2:98",
                  "nodeType": "VariableDeclaration",
                  "scope": 10430,
                  "src": "13390:10:98",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10370,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13390:7:98",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10373,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "13418:2:98",
                  "nodeType": "VariableDeclaration",
                  "scope": 10430,
                  "src": "13410:10:98",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10372,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13410:7:98",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10375,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "13438:6:98",
                  "nodeType": "VariableDeclaration",
                  "scope": 10430,
                  "src": "13430:14:98",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10374,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13430:7:98",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10377,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "13467:4:98",
                  "nodeType": "VariableDeclaration",
                  "scope": 10430,
                  "src": "13454:17:98",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 10376,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "13454:5:98",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13332:145:98"
            },
            "returnParameters": {
              "id": 10379,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13486:0:98"
            },
            "scope": 10526,
            "src": "13293:729:98",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 10496,
              "nodeType": "Block",
              "src": "14246:578:98",
              "statements": [
                {
                  "condition": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 10447,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10436,
                        "src": "14260:2:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 10448,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "isContract",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17268,
                      "src": "14260:13:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$",
                        "typeString": "function (address) view returns (bool)"
                      }
                    },
                    "id": 10449,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14260:15:98",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 10495,
                  "nodeType": "IfStatement",
                  "src": "14256:562:98",
                  "trueBody": {
                    "id": 10494,
                    "nodeType": "Block",
                    "src": "14277:541:98",
                    "statements": [
                      {
                        "clauses": [
                          {
                            "block": {
                              "id": 10476,
                              "nodeType": "Block",
                              "src": "14431:193:98",
                              "statements": [
                                {
                                  "condition": {
                                    "commonType": {
                                      "typeIdentifier": "t_bytes4",
                                      "typeString": "bytes4"
                                    },
                                    "id": 10469,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 10463,
                                      "name": "response",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 10461,
                                      "src": "14453:8:98",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes4",
                                        "typeString": "bytes4"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "!=",
                                    "rightExpression": {
                                      "expression": {
                                        "expression": {
                                          "arguments": [
                                            {
                                              "id": 10465,
                                              "name": "to",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 10436,
                                              "src": "14482:2:98",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            ],
                                            "id": 10464,
                                            "name": "IERC1155Receiver",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 10689,
                                            "src": "14465:16:98",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$10689_$",
                                              "typeString": "type(contract IERC1155Receiver)"
                                            }
                                          },
                                          "id": 10466,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "typeConversion",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "14465:20:98",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_IERC1155Receiver_$10689",
                                            "typeString": "contract IERC1155Receiver"
                                          }
                                        },
                                        "id": 10467,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "onERC1155BatchReceived",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 10688,
                                        "src": "14465:43:98",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
                                          "typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory) external returns (bytes4)"
                                        }
                                      },
                                      "id": 10468,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "selector",
                                      "nodeType": "MemberAccess",
                                      "src": "14465:52:98",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes4",
                                        "typeString": "bytes4"
                                      }
                                    },
                                    "src": "14453:64:98",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "id": 10475,
                                  "nodeType": "IfStatement",
                                  "src": "14449:161:98",
                                  "trueBody": {
                                    "id": 10474,
                                    "nodeType": "Block",
                                    "src": "14519:91:98",
                                    "statements": [
                                      {
                                        "expression": {
                                          "arguments": [
                                            {
                                              "hexValue": "455243313135353a204552433131353552656365697665722072656a656374656420746f6b656e73",
                                              "id": 10471,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "kind": "string",
                                              "lValueRequested": false,
                                              "nodeType": "Literal",
                                              "src": "14548:42:98",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503",
                                                "typeString": "literal_string \"ERC1155: ERC1155Receiver rejected tokens\""
                                              },
                                              "value": "ERC1155: ERC1155Receiver rejected tokens"
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503",
                                                "typeString": "literal_string \"ERC1155: ERC1155Receiver rejected tokens\""
                                              }
                                            ],
                                            "id": 10470,
                                            "name": "revert",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [
                                              -19,
                                              -19
                                            ],
                                            "referencedDeclaration": -19,
                                            "src": "14541:6:98",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                                              "typeString": "function (string memory) pure"
                                            }
                                          },
                                          "id": 10472,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "functionCall",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "14541:50:98",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                          }
                                        },
                                        "id": 10473,
                                        "nodeType": "ExpressionStatement",
                                        "src": "14541:50:98"
                                      }
                                    ]
                                  }
                                }
                              ]
                            },
                            "errorName": "",
                            "id": 10477,
                            "nodeType": "TryCatchClause",
                            "parameters": {
                              "id": 10462,
                              "nodeType": "ParameterList",
                              "parameters": [
                                {
                                  "constant": false,
                                  "id": 10461,
                                  "mutability": "mutable",
                                  "name": "response",
                                  "nameLocation": "14408:8:98",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 10477,
                                  "src": "14401:15:98",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  },
                                  "typeName": {
                                    "id": 10460,
                                    "name": "bytes4",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "14401:6:98",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes4",
                                      "typeString": "bytes4"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "src": "14383:47:98"
                            },
                            "src": "14375:249:98"
                          },
                          {
                            "block": {
                              "id": 10485,
                              "nodeType": "Block",
                              "src": "14659:47:98",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 10482,
                                        "name": "reason",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 10479,
                                        "src": "14684:6:98",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_string_memory_ptr",
                                          "typeString": "string memory"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_string_memory_ptr",
                                          "typeString": "string memory"
                                        }
                                      ],
                                      "id": 10481,
                                      "name": "revert",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [
                                        -19,
                                        -19
                                      ],
                                      "referencedDeclaration": -19,
                                      "src": "14677:6:98",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                                        "typeString": "function (string memory) pure"
                                      }
                                    },
                                    "id": 10483,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "14677:14:98",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_tuple$__$",
                                      "typeString": "tuple()"
                                    }
                                  },
                                  "id": 10484,
                                  "nodeType": "ExpressionStatement",
                                  "src": "14677:14:98"
                                }
                              ]
                            },
                            "errorName": "Error",
                            "id": 10486,
                            "nodeType": "TryCatchClause",
                            "parameters": {
                              "id": 10480,
                              "nodeType": "ParameterList",
                              "parameters": [
                                {
                                  "constant": false,
                                  "id": 10479,
                                  "mutability": "mutable",
                                  "name": "reason",
                                  "nameLocation": "14651:6:98",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 10486,
                                  "src": "14637:20:98",
                                  "stateVariable": false,
                                  "storageLocation": "memory",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string"
                                  },
                                  "typeName": {
                                    "id": 10478,
                                    "name": "string",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "14637:6:98",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_storage_ptr",
                                      "typeString": "string"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "src": "14636:22:98"
                            },
                            "src": "14625:81:98"
                          },
                          {
                            "block": {
                              "id": 10491,
                              "nodeType": "Block",
                              "src": "14713:95:98",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "hexValue": "455243313135353a207472616e7366657220746f206e6f6e2045524331313535526563656976657220696d706c656d656e746572",
                                        "id": 10488,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "string",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "14738:54:98",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed",
                                          "typeString": "literal_string \"ERC1155: transfer to non ERC1155Receiver implementer\""
                                        },
                                        "value": "ERC1155: transfer to non ERC1155Receiver implementer"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed",
                                          "typeString": "literal_string \"ERC1155: transfer to non ERC1155Receiver implementer\""
                                        }
                                      ],
                                      "id": 10487,
                                      "name": "revert",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [
                                        -19,
                                        -19
                                      ],
                                      "referencedDeclaration": -19,
                                      "src": "14731:6:98",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                                        "typeString": "function (string memory) pure"
                                      }
                                    },
                                    "id": 10489,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "14731:62:98",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_tuple$__$",
                                      "typeString": "tuple()"
                                    }
                                  },
                                  "id": 10490,
                                  "nodeType": "ExpressionStatement",
                                  "src": "14731:62:98"
                                }
                              ]
                            },
                            "errorName": "",
                            "id": 10492,
                            "nodeType": "TryCatchClause",
                            "src": "14707:101:98"
                          }
                        ],
                        "externalCall": {
                          "arguments": [
                            {
                              "id": 10454,
                              "name": "operator",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10432,
                              "src": "14339:8:98",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 10455,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10434,
                              "src": "14349:4:98",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 10456,
                              "name": "ids",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10439,
                              "src": "14355:3:98",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            {
                              "id": 10457,
                              "name": "amounts",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10442,
                              "src": "14360:7:98",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            {
                              "id": 10458,
                              "name": "data",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10444,
                              "src": "14369:4:98",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              },
                              {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 10451,
                                  "name": "to",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 10436,
                                  "src": "14312:2:98",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 10450,
                                "name": "IERC1155Receiver",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10689,
                                "src": "14295:16:98",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$10689_$",
                                  "typeString": "type(contract IERC1155Receiver)"
                                }
                              },
                              "id": 10452,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "14295:20:98",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC1155Receiver_$10689",
                                "typeString": "contract IERC1155Receiver"
                              }
                            },
                            "id": 10453,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "onERC1155BatchReceived",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 10688,
                            "src": "14295:43:98",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
                              "typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory) external returns (bytes4)"
                            }
                          },
                          "id": 10459,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14295:79:98",
                          "tryCall": true,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "id": 10493,
                        "nodeType": "TryStatement",
                        "src": "14291:517:98"
                      }
                    ]
                  }
                }
              ]
            },
            "id": 10497,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_doSafeBatchTransferAcceptanceCheck",
            "nameLocation": "14037:35:98",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10445,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10432,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "14090:8:98",
                  "nodeType": "VariableDeclaration",
                  "scope": 10497,
                  "src": "14082:16:98",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10431,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14082:7:98",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10434,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "14116:4:98",
                  "nodeType": "VariableDeclaration",
                  "scope": 10497,
                  "src": "14108:12:98",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10433,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14108:7:98",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10436,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "14138:2:98",
                  "nodeType": "VariableDeclaration",
                  "scope": 10497,
                  "src": "14130:10:98",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10435,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14130:7:98",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10439,
                  "mutability": "mutable",
                  "name": "ids",
                  "nameLocation": "14167:3:98",
                  "nodeType": "VariableDeclaration",
                  "scope": 10497,
                  "src": "14150:20:98",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 10437,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "14150:7:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 10438,
                    "nodeType": "ArrayTypeName",
                    "src": "14150:9:98",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10442,
                  "mutability": "mutable",
                  "name": "amounts",
                  "nameLocation": "14197:7:98",
                  "nodeType": "VariableDeclaration",
                  "scope": 10497,
                  "src": "14180:24:98",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 10440,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "14180:7:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 10441,
                    "nodeType": "ArrayTypeName",
                    "src": "14180:9:98",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10444,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "14227:4:98",
                  "nodeType": "VariableDeclaration",
                  "scope": 10497,
                  "src": "14214:17:98",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 10443,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "14214:5:98",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14072:165:98"
            },
            "returnParameters": {
              "id": 10446,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14246:0:98"
            },
            "scope": 10526,
            "src": "14028:796:98",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 10524,
              "nodeType": "Block",
              "src": "14914:109:98",
              "statements": [
                {
                  "assignments": [
                    10509
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10509,
                      "mutability": "mutable",
                      "name": "array",
                      "nameLocation": "14941:5:98",
                      "nodeType": "VariableDeclaration",
                      "scope": 10524,
                      "src": "14924:22:98",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 10507,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "14924:7:98",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 10508,
                        "nodeType": "ArrayTypeName",
                        "src": "14924:9:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10515,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 10513,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14963:1:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 10512,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "14949:13:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (uint256[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 10510,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "14953:7:98",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 10511,
                        "nodeType": "ArrayTypeName",
                        "src": "14953:9:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      }
                    },
                    "id": 10514,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14949:16:98",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14924:41:98"
                },
                {
                  "expression": {
                    "id": 10520,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 10516,
                        "name": "array",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10509,
                        "src": "14975:5:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      "id": 10518,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 10517,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14981:1:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "14975:8:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 10519,
                      "name": "element",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10499,
                      "src": "14986:7:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "14975:18:98",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 10521,
                  "nodeType": "ExpressionStatement",
                  "src": "14975:18:98"
                },
                {
                  "expression": {
                    "id": 10522,
                    "name": "array",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 10509,
                    "src": "15011:5:98",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "functionReturnParameters": 10504,
                  "id": 10523,
                  "nodeType": "Return",
                  "src": "15004:12:98"
                }
              ]
            },
            "id": 10525,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_asSingletonArray",
            "nameLocation": "14839:17:98",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10500,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10499,
                  "mutability": "mutable",
                  "name": "element",
                  "nameLocation": "14865:7:98",
                  "nodeType": "VariableDeclaration",
                  "scope": 10525,
                  "src": "14857:15:98",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10498,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14857:7:98",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14856:17:98"
            },
            "returnParameters": {
              "id": 10504,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10503,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 10525,
                  "src": "14896:16:98",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 10501,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "14896:7:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 10502,
                    "nodeType": "ArrayTypeName",
                    "src": "14896:9:98",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14895:18:98"
            },
            "scope": 10526,
            "src": "14830:193:98",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "private"
          }
        ],
        "scope": 10527,
        "src": "494:14531:98",
        "usedErrors": []
      }
    ],
    "src": "33:14993:98"
  },
  "bytecode": "60806040523480156200001157600080fd5b50604051620015eb380380620015eb83398101604081905262000034916200011b565b6200003f8162000046565b5062000234565b80516200005b9060029060208401906200005f565b5050565b8280546200006d90620001f7565b90600052602060002090601f016020900481019282620000915760008555620000dc565b82601f10620000ac57805160ff1916838001178555620000dc565b82800160010185558215620000dc579182015b82811115620000dc578251825591602001919060010190620000bf565b50620000ea929150620000ee565b5090565b5b80821115620000ea5760008155600101620000ef565b634e487b7160e01b600052604160045260246000fd5b600060208083850312156200012f57600080fd5b82516001600160401b03808211156200014757600080fd5b818501915085601f8301126200015c57600080fd5b81518181111562000171576200017162000105565b604051601f8201601f19908116603f011681019083821181831017156200019c576200019c62000105565b816040528281528886848701011115620001b557600080fd5b600093505b82841015620001d95784840186015181850187015292850192620001ba565b82841115620001eb5760008684830101525b98975050505050505050565b600181811c908216806200020c57607f821691505b602082108114156200022e57634e487b7160e01b600052602260045260246000fd5b50919050565b6113a780620002446000396000f3fe608060405234801561001057600080fd5b50600436106100875760003560e01c80634e1273f41161005b5780634e1273f41461010a578063a22cb4651461012a578063e985e9c51461013d578063f242432a1461017957600080fd5b8062fdd58e1461008c57806301ffc9a7146100b25780630e89341c146100d55780632eb2c2d6146100f5575b600080fd5b61009f61009a366004610ba9565b61018c565b6040519081526020015b60405180910390f35b6100c56100c0366004610bec565b610223565b60405190151581526020016100a9565b6100e86100e3366004610c10565b610275565b6040516100a99190610c76565b610108610103366004610dd5565b610309565b005b61011d610118366004610e7f565b6103a0565b6040516100a99190610f85565b610108610138366004610f98565b6104ca565b6100c561014b366004610fd4565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205460ff1690565b610108610187366004611007565b6105a1565b60006001600160a01b0383166101fd5760405162461bcd60e51b815260206004820152602b60248201527f455243313135353a2062616c616e636520717565727920666f7220746865207a60448201526a65726f206164647265737360a81b60648201526084015b60405180910390fd5b506000908152602081815260408083206001600160a01b03949094168352929052205490565b60006001600160e01b03198216636cdb3d1360e11b148061025457506001600160e01b031982166303a24d0760e21b145b8061026f57506301ffc9a760e01b6001600160e01b03198316145b92915050565b6060600280546102849061106c565b80601f01602080910402602001604051908101604052809291908181526020018280546102b09061106c565b80156102fd5780601f106102d2576101008083540402835291602001916102fd565b820191906000526020600020905b8154815290600101906020018083116102e057829003601f168201915b50505050509050919050565b6001600160a01b0385163314806103255750610325853361014b565b61038c5760405162461bcd60e51b815260206004820152603260248201527f455243313135353a207472616e736665722063616c6c6572206973206e6f74206044820152711bdddb995c881b9bdc88185c1c1c9bdd995960721b60648201526084016101f4565b6103998585858585610628565b5050505050565b606081518351146104055760405162461bcd60e51b815260206004820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e677468604482015268040dad2e6dac2e8c6d60bb1b60648201526084016101f4565b6000835167ffffffffffffffff81111561042157610421610c89565b60405190808252806020026020018201604052801561044a578160200160208202803683370190505b50905060005b84518110156104c25761049585828151811061046e5761046e6110a7565b6020026020010151858381518110610488576104886110a7565b602002602001015161018c565b8282815181106104a7576104a76110a7565b60209081029190910101526104bb816110d3565b9050610450565b509392505050565b336001600160a01b03831614156105355760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2073657474696e6720617070726f76616c20737461747573604482015268103337b91039b2b63360b91b60648201526084016101f4565b3360008181526001602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b6001600160a01b0385163314806105bd57506105bd853361014b565b61061b5760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7260448201526808185c1c1c9bdd995960ba1b60648201526084016101f4565b6103998585858585610805565b815183511461068a5760405162461bcd60e51b815260206004820152602860248201527f455243313135353a2069647320616e6420616d6f756e7473206c656e677468206044820152670dad2e6dac2e8c6d60c31b60648201526084016101f4565b6001600160a01b0384166106b05760405162461bcd60e51b81526004016101f4906110ee565b3360005b84518110156107975760008582815181106106d1576106d16110a7565b6020026020010151905060008583815181106106ef576106ef6110a7565b602090810291909101810151600084815280835260408082206001600160a01b038e16835290935291909120549091508181101561073f5760405162461bcd60e51b81526004016101f490611133565b6000838152602081815260408083206001600160a01b038e8116855292528083208585039055908b1682528120805484929061077c90849061117d565b9250508190555050505080610790906110d3565b90506106b4565b50846001600160a01b0316866001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb87876040516107e7929190611195565b60405180910390a46107fd81878787878761092b565b505050505050565b6001600160a01b03841661082b5760405162461bcd60e51b81526004016101f4906110ee565b3361084481878761083b88610a87565b61039988610a87565b6000848152602081815260408083206001600160a01b038a168452909152902054838110156108855760405162461bcd60e51b81526004016101f490611133565b6000858152602081815260408083206001600160a01b038b81168552925280832087850390559088168252812080548692906108c290849061117d565b909155505060408051868152602081018690526001600160a01b03808916928a821692918616917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4610922828888888888610ad2565b50505050505050565b6001600160a01b0384163b156107fd5760405163bc197c8160e01b81526001600160a01b0385169063bc197c819061096f90899089908890889088906004016111c3565b6020604051808303816000875af19250505080156109aa575060408051601f3d908101601f191682019092526109a791810190611221565b60015b610a57576109b661123e565b806308c379a014156109f057506109cb61125a565b806109d657506109f2565b8060405162461bcd60e51b81526004016101f49190610c76565b505b60405162461bcd60e51b815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e20455243313135356044820152732932b1b2b4bb32b91034b6b83632b6b2b73a32b960611b60648201526084016101f4565b6001600160e01b0319811663bc197c8160e01b146109225760405162461bcd60e51b81526004016101f4906112e4565b60408051600180825281830190925260609160009190602080830190803683370190505090508281600081518110610ac157610ac16110a7565b602090810291909101015292915050565b6001600160a01b0384163b156107fd5760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e6190610b16908990899088908890889060040161132c565b6020604051808303816000875af1925050508015610b51575060408051601f3d908101601f19168201909252610b4e91810190611221565b60015b610b5d576109b661123e565b6001600160e01b0319811663f23a6e6160e01b146109225760405162461bcd60e51b81526004016101f4906112e4565b80356001600160a01b0381168114610ba457600080fd5b919050565b60008060408385031215610bbc57600080fd5b610bc583610b8d565b946020939093013593505050565b6001600160e01b031981168114610be957600080fd5b50565b600060208284031215610bfe57600080fd5b8135610c0981610bd3565b9392505050565b600060208284031215610c2257600080fd5b5035919050565b6000815180845260005b81811015610c4f57602081850181015186830182015201610c33565b81811115610c61576000602083870101525b50601f01601f19169290920160200192915050565b602081526000610c096020830184610c29565b634e487b7160e01b600052604160045260246000fd5b601f8201601f1916810167ffffffffffffffff81118282101715610cc557610cc5610c89565b6040525050565b600067ffffffffffffffff821115610ce657610ce6610c89565b5060051b60200190565b600082601f830112610d0157600080fd5b81356020610d0e82610ccc565b604051610d1b8282610c9f565b83815260059390931b8501820192828101915086841115610d3b57600080fd5b8286015b84811015610d565780358352918301918301610d3f565b509695505050505050565b600082601f830112610d7257600080fd5b813567ffffffffffffffff811115610d8c57610d8c610c89565b604051610da3601f8301601f191660200182610c9f565b818152846020838601011115610db857600080fd5b816020850160208301376000918101602001919091529392505050565b600080600080600060a08688031215610ded57600080fd5b610df686610b8d565b9450610e0460208701610b8d565b9350604086013567ffffffffffffffff80821115610e2157600080fd5b610e2d89838a01610cf0565b94506060880135915080821115610e4357600080fd5b610e4f89838a01610cf0565b93506080880135915080821115610e6557600080fd5b50610e7288828901610d61565b9150509295509295909350565b60008060408385031215610e9257600080fd5b823567ffffffffffffffff80821115610eaa57600080fd5b818501915085601f830112610ebe57600080fd5b81356020610ecb82610ccc565b604051610ed88282610c9f565b83815260059390931b8501820192828101915089841115610ef857600080fd5b948201945b83861015610f1d57610f0e86610b8d565b82529482019490820190610efd565b96505086013592505080821115610f3357600080fd5b50610f4085828601610cf0565b9150509250929050565b600081518084526020808501945080840160005b83811015610f7a57815187529582019590820190600101610f5e565b509495945050505050565b602081526000610c096020830184610f4a565b60008060408385031215610fab57600080fd5b610fb483610b8d565b915060208301358015158114610fc957600080fd5b809150509250929050565b60008060408385031215610fe757600080fd5b610ff083610b8d565b9150610ffe60208401610b8d565b90509250929050565b600080600080600060a0868803121561101f57600080fd5b61102886610b8d565b945061103660208701610b8d565b93506040860135925060608601359150608086013567ffffffffffffffff81111561106057600080fd5b610e7288828901610d61565b600181811c9082168061108057607f821691505b602082108114156110a157634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60006000198214156110e7576110e76110bd565b5060010190565b60208082526025908201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604082015264647265737360d81b606082015260800190565b6020808252602a908201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60408201526939103a3930b739b332b960b11b606082015260800190565b60008219821115611190576111906110bd565b500190565b6040815260006111a86040830185610f4a565b82810360208401526111ba8185610f4a565b95945050505050565b6001600160a01b0386811682528516602082015260a0604082018190526000906111ef90830186610f4a565b82810360608401526112018186610f4a565b905082810360808401526112158185610c29565b98975050505050505050565b60006020828403121561123357600080fd5b8151610c0981610bd3565b600060033d11156112575760046000803e5060005160e01c5b90565b600060443d10156112685790565b6040516003193d81016004833e81513d67ffffffffffffffff816024840111818411171561129857505050505090565b82850191508151818111156112b05750505050505090565b843d87010160208285010111156112ca5750505050505090565b6112d960208286010187610c9f565b509095945050505050565b60208082526028908201527f455243313135353a204552433131353552656365697665722072656a656374656040820152676420746f6b656e7360c01b606082015260800190565b6001600160a01b03868116825285166020820152604081018490526060810183905260a06080820181905260009061136690830184610c29565b97965050505050505056fea2646970667358221220ccd9bb74c4987414b3ae9dc715b96de484e4ee5b6ce3486656e6d5cc18b21a3b64736f6c634300080c0033",
  "bytecodeSha1": "c270676d0bb3d79cdd22c3d8ed053fe7993918ee",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.12+commit.f00d7308"
  },
  "contractName": "ERC1155",
  "coverageMap": {
    "branches": {
      "100": {},
      "104": {},
      "141": {},
      "143": {},
      "156": {},
      "160": {},
      "98": {
        "ERC1155._doSafeBatchTransferAcceptanceCheck": {
          "52": [
            14453,
            14517,
            false
          ]
        },
        "ERC1155._doSafeTransferAcceptanceCheck": {
          "53": [
            13656,
            13715,
            false
          ]
        },
        "ERC1155._safeBatchTransferFrom": {
          "47": [
            6366,
            6394,
            true
          ],
          "48": [
            6457,
            6473,
            true
          ],
          "49": [
            6832,
            6853,
            true
          ]
        },
        "ERC1155._safeTransferFrom": {
          "50": [
            5198,
            5214,
            true
          ],
          "51": [
            5475,
            5496,
            true
          ]
        },
        "ERC1155.balanceOf": {
          "40": [
            2222,
            2243,
            true
          ]
        },
        "ERC1155.balanceOfBatch": {
          "43": [
            2685,
            2714,
            true
          ]
        },
        "ERC1155.safeBatchTransferFrom": {
          "41": [
            4362,
            4382,
            true
          ],
          "42": [
            4386,
            4422,
            true
          ]
        },
        "ERC1155.safeTransferFrom": {
          "45": [
            3876,
            3896,
            true
          ],
          "46": [
            3900,
            3936,
            true
          ]
        },
        "ERC1155.setApprovalForAll": {
          "44": [
            3172,
            3196,
            true
          ]
        }
      },
      "99": {}
    },
    "statements": {
      "100": {},
      "104": {},
      "141": {
        "Address.isContract": {
          "33": [
            1073,
            1088
          ]
        }
      },
      "143": {
        "Context._msgSender": {
          "7": [
            658,
            675
          ]
        }
      },
      "156": {
        "ERC165.supportsInterface": {
          "4": [
            864,
            911
          ]
        }
      },
      "160": {},
      "98": {
        "ERC1155._asSingletonArray": {
          "37": [
            14975,
            14993
          ],
          "38": [
            15004,
            15016
          ]
        },
        "ERC1155._doSafeBatchTransferAcceptanceCheck": {
          "34": [
            14677,
            14691
          ],
          "35": [
            14731,
            14793
          ],
          "36": [
            14541,
            14591
          ]
        },
        "ERC1155._doSafeTransferAcceptanceCheck": {
          "39": [
            13739,
            13789
          ]
        },
        "ERC1155._safeBatchTransferFrom": {
          "18": [
            6358,
            6439
          ],
          "19": [
            6449,
            6515
          ],
          "20": [
            6824,
            6900
          ],
          "21": [
            6942,
            6984
          ],
          "22": [
            7012,
            7039
          ],
          "23": [
            6675,
            6678
          ],
          "24": [
            7060,
            7112
          ],
          "25": [
            7123,
            7198
          ]
        },
        "ERC1155._safeTransferFrom": {
          "26": [
            5190,
            5256
          ],
          "27": [
            5309,
            5405
          ],
          "28": [
            5467,
            5543
          ],
          "29": [
            5577,
            5619
          ],
          "30": [
            5639,
            5666
          ],
          "31": [
            5677,
            5728
          ],
          "32": [
            5739,
            5807
          ]
        },
        "ERC1155.balanceOf": {
          "1": [
            2214,
            2291
          ],
          "2": [
            2301,
            2330
          ]
        },
        "ERC1155.balanceOfBatch": {
          "9": [
            2677,
            2760
          ],
          "10": [
            2905,
            2954
          ],
          "11": [
            2886,
            2889
          ],
          "12": [
            2975,
            2995
          ]
        },
        "ERC1155.isApprovedForAll": {
          "0": [
            3558,
            3602
          ]
        },
        "ERC1155.safeBatchTransferFrom": {
          "6": [
            4341,
            4498
          ],
          "8": [
            4508,
            4560
          ]
        },
        "ERC1155.safeTransferFrom": {
          "16": [
            3855,
            4003
          ],
          "17": [
            4013,
            4058
          ]
        },
        "ERC1155.setApprovalForAll": {
          "13": [
            3164,
            3242
          ],
          "14": [
            3253,
            3306
          ],
          "15": [
            3316,
            3369
          ]
        },
        "ERC1155.supportsInterface": {
          "3": [
            1278,
            1458
          ]
        },
        "ERC1155.uri": {
          "5": [
            1949,
            1960
          ]
        }
      },
      "99": {}
    }
  },
  "dependencies": [
    "Address",
    "Context",
    "ERC165",
    "IERC1155",
    "IERC1155MetadataURI",
    "IERC1155Receiver",
    "IERC165"
  ],
  "deployedBytecode": "",
  "deployedSourceMap": "494:14531:98:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2109:228;;;;;;:::i;:::-;;:::i;:::-;;;597:25:171;;;585:2;570:18;2109:228:98;;;;;;;;1160:305;;;;;;:::i;:::-;;:::i;:::-;;;1184:14:171;;1177:22;1159:41;;1147:2;1132:18;1160:305:98;1019:187:171;1864:103:98;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;4137:430::-;;;;;;:::i;:::-;;:::i;:::-;;2494:508;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;3070:306::-;;;;;;:::i;:::-;;:::i;3443:166::-;;;;;;:::i;:::-;-1:-1:-1;;;;;3565:27:98;;;3542:4;3565:27;;;:18;:27;;;;;;;;:37;;;;;;;;;;;;;;;3443:166;3676:389;;;;;;:::i;:::-;;:::i;2109:228::-;2195:7;-1:-1:-1;;;;;2222:21:98;;2214:77;;;;-1:-1:-1;;;2214:77:98;;8258:2:171;2214:77:98;;;8240:21:171;8297:2;8277:18;;;8270:30;8336:34;8316:18;;;8309:62;-1:-1:-1;;;8387:18:171;;;8380:41;8438:19;;2214:77:98;;;;;;;;;-1:-1:-1;2308:9:98;:13;;;;;;;;;;;-1:-1:-1;;;;;2308:22:98;;;;;;;;;;;;2109:228::o;1160:305::-;1262:4;-1:-1:-1;;;;;;1297:41:98;;-1:-1:-1;;;1297:41:98;;:109;;-1:-1:-1;;;;;;;1354:52:98;;-1:-1:-1;;;1354:52:98;1297:109;:161;;;-1:-1:-1;;;;;;;;;;871:40:156;;;1422:36:98;1278:180;1160:305;-1:-1:-1;;1160:305:98:o;1864:103::-;1924:13;1956:4;1949:11;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1864:103;;;:::o;4137:430::-;-1:-1:-1;;;;;4362:20:98;;665:10:143;4362:20:98;;:60;;-1:-1:-1;4386:36:98;4403:4;665:10:143;3443:166:98;:::i;4386:36::-;4341:157;;;;-1:-1:-1;;;4341:157:98;;9055:2:171;4341:157:98;;;9037:21:171;9094:2;9074:18;;;9067:30;9133:34;9113:18;;;9106:62;-1:-1:-1;;;9184:18:171;;;9177:48;9242:19;;4341:157:98;8853:414:171;4341:157:98;4508:52;4531:4;4537:2;4541:3;4546:7;4555:4;4508:22;:52::i;:::-;4137:430;;;;;:::o;2494:508::-;2645:16;2704:3;:10;2685:8;:15;:29;2677:83;;;;-1:-1:-1;;;2677:83:98;;9474:2:171;2677:83:98;;;9456:21:171;9513:2;9493:18;;;9486:30;9552:34;9532:18;;;9525:62;-1:-1:-1;;;9603:18:171;;;9596:39;9652:19;;2677:83:98;9272:405:171;2677:83:98;2771:30;2818:8;:15;2804:30;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2804:30:98;;2771:63;;2850:9;2845:120;2869:8;:15;2865:1;:19;2845:120;;;2924:30;2934:8;2943:1;2934:11;;;;;;;;:::i;:::-;;;;;;;2947:3;2951:1;2947:6;;;;;;;;:::i;:::-;;;;;;;2924:9;:30::i;:::-;2905:13;2919:1;2905:16;;;;;;;;:::i;:::-;;;;;;;;;;:49;2886:3;;;:::i;:::-;;;2845:120;;;-1:-1:-1;2982:13:98;2494:508;-1:-1:-1;;;2494:508:98:o;3070:306::-;665:10:143;-1:-1:-1;;;;;3172:24:98;;;;3164:78;;;;-1:-1:-1;;;3164:78:98;;10288:2:171;3164:78:98;;;10270:21:171;10327:2;10307:18;;;10300:30;10366:34;10346:18;;;10339:62;-1:-1:-1;;;10417:18:171;;;10410:39;10466:19;;3164:78:98;10086:405:171;3164:78:98;665:10:143;3253:32:98;;;;:18;:32;;;;;;;;-1:-1:-1;;;;;3253:42:98;;;;;;;;;;;;:53;;-1:-1:-1;;3253:53:98;;;;;;;;;;3321:48;;1159:41:171;;;3253:42:98;;665:10:143;3321:48:98;;1132:18:171;3321:48:98;;;;;;;3070:306;;:::o;3676:389::-;-1:-1:-1;;;;;3876:20:98;;665:10:143;3876:20:98;;:60;;-1:-1:-1;3900:36:98;3917:4;665:10:143;3443:166:98;:::i;3900:36::-;3855:148;;;;-1:-1:-1;;;3855:148:98;;10698:2:171;3855:148:98;;;10680:21:171;10737:2;10717:18;;;10710:30;10776:34;10756:18;;;10749:62;-1:-1:-1;;;10827:18:171;;;10820:39;10876:19;;3855:148:98;10496:405:171;3855:148:98;4013:45;4031:4;4037:2;4041;4045:6;4053:4;4013:17;:45::i;6160:1045::-;6380:7;:14;6366:3;:10;:28;6358:81;;;;-1:-1:-1;;;6358:81:98;;11108:2:171;6358:81:98;;;11090:21:171;11147:2;11127:18;;;11120:30;11186:34;11166:18;;;11159:62;-1:-1:-1;;;11237:18:171;;;11230:38;11285:19;;6358:81:98;10906:404:171;6358:81:98;-1:-1:-1;;;;;6457:16:98;;6449:66;;;;-1:-1:-1;;;6449:66:98;;;;;;;:::i;:::-;665:10:143;6526:16:98;6639:411;6663:3;:10;6659:1;:14;6639:411;;;6694:10;6707:3;6711:1;6707:6;;;;;;;;:::i;:::-;;;;;;;6694:19;;6727:14;6744:7;6752:1;6744:10;;;;;;;;:::i;:::-;;;;;;;;;;;;6769:19;6791:13;;;;;;;;;;-1:-1:-1;;;;;6791:19:98;;;;;;;;;;;;6744:10;;-1:-1:-1;6832:21:98;;;;6824:76;;;;-1:-1:-1;;;6824:76:98;;;;;;;:::i;:::-;6942:9;:13;;;;;;;;;;;-1:-1:-1;;;;;6942:19:98;;;;;;;;;;6964:20;;;6942:42;;7012:17;;;;;;;:27;;6964:20;;6942:9;7012:27;;6964:20;;7012:27;:::i;:::-;;;;;;;;6680:370;;;6675:3;;;;:::i;:::-;;;6639:411;;;;7095:2;-1:-1:-1;;;;;7065:47:98;7089:4;-1:-1:-1;;;;;7065:47:98;7079:8;-1:-1:-1;;;;;7065:47:98;;7099:3;7104:7;7065:47;;;;;;;:::i;:::-;;;;;;;;7123:75;7159:8;7169:4;7175:2;7179:3;7184:7;7193:4;7123:35;:75::i;:::-;6348:857;6160:1045;;;;;:::o;5017:797::-;-1:-1:-1;;;;;5198:16:98;;5190:66;;;;-1:-1:-1;;;5190:66:98;;;;;;;:::i;:::-;665:10:143;5309:96:98;665:10:143;5340:4:98;5346:2;5350:21;5368:2;5350:17;:21::i;:::-;5373:25;5391:6;5373:17;:25::i;5309:96::-;5416:19;5438:13;;;;;;;;;;;-1:-1:-1;;;;;5438:19:98;;;;;;;;;;5475:21;;;;5467:76;;;;-1:-1:-1;;;5467:76:98;;;;;;;:::i;:::-;5577:9;:13;;;;;;;;;;;-1:-1:-1;;;;;5577:19:98;;;;;;;;;;5599:20;;;5577:42;;5639:17;;;;;;;:27;;5599:20;;5577:9;5639:27;;5599:20;;5639:27;:::i;:::-;;;;-1:-1:-1;;5682:46:98;;;12909:25:171;;;12965:2;12950:18;;12943:34;;;-1:-1:-1;;;;;5682:46:98;;;;;;;;;;;;;;12882:18:171;5682:46:98;;;;;;;5739:68;5770:8;5780:4;5786:2;5790;5794:6;5802:4;5739:30;:68::i;:::-;5180:634;;5017:797;;;;;:::o;14028:796::-;-1:-1:-1;;;;;14260:13:98;;1034:20:141;1080:8;14256:562:98;;14295:79;;-1:-1:-1;;;14295:79:98;;-1:-1:-1;;;;;14295:43:98;;;;;:79;;14339:8;;14349:4;;14355:3;;14360:7;;14369:4;;14295:79;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;14295:79:98;;;;;;;;-1:-1:-1;;14295:79:98;;;;;;;;;;;;:::i;:::-;;;14291:517;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;14684:6;14677:14;;-1:-1:-1;;;14677:14:98;;;;;;;;:::i;14291:517::-;;;14731:62;;-1:-1:-1;;;14731:62:98;;15136:2:171;14731:62:98;;;15118:21:171;15175:2;15155:18;;;15148:30;15214:34;15194:18;;;15187:62;-1:-1:-1;;;15265:18:171;;;15258:50;15325:19;;14731:62:98;14934:416:171;14291:517:98;-1:-1:-1;;;;;;14453:64:98;;-1:-1:-1;;;14453:64:98;14449:161;;14541:50;;-1:-1:-1;;;14541:50:98;;;;;;;:::i;14830:193::-;14949:16;;;14963:1;14949:16;;;;;;;;;14896;;14924:22;;14949:16;;;;;;;;;;;;-1:-1:-1;14949:16:98;14924:41;;14986:7;14975:5;14981:1;14975:8;;;;;;;;:::i;:::-;;;;;;;;;;:18;15011:5;14830:193;-1:-1:-1;;14830:193:98:o;13293:729::-;-1:-1:-1;;;;;13500:13:98;;1034:20:141;1080:8;13496:520:98;;13535:72;;-1:-1:-1;;;13535:72:98;;-1:-1:-1;;;;;13535:38:98;;;;;:72;;13574:8;;13584:4;;13590:2;;13594:6;;13602:4;;13535:72;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;13535:72:98;;;;;;;;-1:-1:-1;;13535:72:98;;;;;;;;;;;;:::i;:::-;;;13531:475;;;;:::i;:::-;-1:-1:-1;;;;;;13656:59:98;;-1:-1:-1;;;13656:59:98;13652:156;;13739:50;;-1:-1:-1;;;13739:50:98;;;;;;;:::i;14:173:171:-;82:20;;-1:-1:-1;;;;;131:31:171;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:254::-;260:6;268;321:2;309:9;300:7;296:23;292:32;289:52;;;337:1;334;327:12;289:52;360:29;379:9;360:29;:::i;:::-;350:39;436:2;421:18;;;;408:32;;-1:-1:-1;;;192:254:171:o;633:131::-;-1:-1:-1;;;;;;707:32:171;;697:43;;687:71;;754:1;751;744:12;687:71;633:131;:::o;769:245::-;827:6;880:2;868:9;859:7;855:23;851:32;848:52;;;896:1;893;886:12;848:52;935:9;922:23;954:30;978:5;954:30;:::i;:::-;1003:5;769:245;-1:-1:-1;;;769:245:171:o;1211:180::-;1270:6;1323:2;1311:9;1302:7;1298:23;1294:32;1291:52;;;1339:1;1336;1329:12;1291:52;-1:-1:-1;1362:23:171;;1211:180;-1:-1:-1;1211:180:171:o;1396:472::-;1438:3;1476:5;1470:12;1503:6;1498:3;1491:19;1528:1;1538:162;1552:6;1549:1;1546:13;1538:162;;;1614:4;1670:13;;;1666:22;;1660:29;1642:11;;;1638:20;;1631:59;1567:12;1538:162;;;1718:6;1715:1;1712:13;1709:87;;;1784:1;1777:4;1768:6;1763:3;1759:16;1755:27;1748:38;1709:87;-1:-1:-1;1850:2:171;1829:15;-1:-1:-1;;1825:29:171;1816:39;;;;1857:4;1812:50;;1396:472;-1:-1:-1;;1396:472:171:o;1873:220::-;2022:2;2011:9;2004:21;1985:4;2042:45;2083:2;2072:9;2068:18;2060:6;2042:45;:::i;2098:127::-;2159:10;2154:3;2150:20;2147:1;2140:31;2190:4;2187:1;2180:15;2214:4;2211:1;2204:15;2230:249;2340:2;2321:13;;-1:-1:-1;;2317:27:171;2305:40;;2375:18;2360:34;;2396:22;;;2357:62;2354:88;;;2422:18;;:::i;:::-;2458:2;2451:22;-1:-1:-1;;2230:249:171:o;2484:183::-;2544:4;2577:18;2569:6;2566:30;2563:56;;;2599:18;;:::i;:::-;-1:-1:-1;2644:1:171;2640:14;2656:4;2636:25;;2484:183::o;2672:724::-;2726:5;2779:3;2772:4;2764:6;2760:17;2756:27;2746:55;;2797:1;2794;2787:12;2746:55;2833:6;2820:20;2859:4;2882:43;2922:2;2882:43;:::i;:::-;2954:2;2948:9;2966:31;2994:2;2986:6;2966:31;:::i;:::-;3032:18;;;3124:1;3120:10;;;;3108:23;;3104:32;;;3066:15;;;;-1:-1:-1;3148:15:171;;;3145:35;;;3176:1;3173;3166:12;3145:35;3212:2;3204:6;3200:15;3224:142;3240:6;3235:3;3232:15;3224:142;;;3306:17;;3294:30;;3344:12;;;;3257;;3224:142;;;-1:-1:-1;3384:6:171;2672:724;-1:-1:-1;;;;;;2672:724:171:o;3401:555::-;3443:5;3496:3;3489:4;3481:6;3477:17;3473:27;3463:55;;3514:1;3511;3504:12;3463:55;3550:6;3537:20;3576:18;3572:2;3569:26;3566:52;;;3598:18;;:::i;:::-;3647:2;3641:9;3659:67;3714:2;3695:13;;-1:-1:-1;;3691:27:171;3720:4;3687:38;3641:9;3659:67;:::i;:::-;3750:2;3742:6;3735:18;3796:3;3789:4;3784:2;3776:6;3772:15;3768:26;3765:35;3762:55;;;3813:1;3810;3803:12;3762:55;3877:2;3870:4;3862:6;3858:17;3851:4;3843:6;3839:17;3826:54;3924:1;3900:15;;;3917:4;3896:26;3889:37;;;;3904:6;3401:555;-1:-1:-1;;;3401:555:171:o;3961:943::-;4115:6;4123;4131;4139;4147;4200:3;4188:9;4179:7;4175:23;4171:33;4168:53;;;4217:1;4214;4207:12;4168:53;4240:29;4259:9;4240:29;:::i;:::-;4230:39;;4288:38;4322:2;4311:9;4307:18;4288:38;:::i;:::-;4278:48;;4377:2;4366:9;4362:18;4349:32;4400:18;4441:2;4433:6;4430:14;4427:34;;;4457:1;4454;4447:12;4427:34;4480:61;4533:7;4524:6;4513:9;4509:22;4480:61;:::i;:::-;4470:71;;4594:2;4583:9;4579:18;4566:32;4550:48;;4623:2;4613:8;4610:16;4607:36;;;4639:1;4636;4629:12;4607:36;4662:63;4717:7;4706:8;4695:9;4691:24;4662:63;:::i;:::-;4652:73;;4778:3;4767:9;4763:19;4750:33;4734:49;;4808:2;4798:8;4795:16;4792:36;;;4824:1;4821;4814:12;4792:36;;4847:51;4890:7;4879:8;4868:9;4864:24;4847:51;:::i;:::-;4837:61;;;3961:943;;;;;;;;:::o;4909:1208::-;5027:6;5035;5088:2;5076:9;5067:7;5063:23;5059:32;5056:52;;;5104:1;5101;5094:12;5056:52;5144:9;5131:23;5173:18;5214:2;5206:6;5203:14;5200:34;;;5230:1;5227;5220:12;5200:34;5268:6;5257:9;5253:22;5243:32;;5313:7;5306:4;5302:2;5298:13;5294:27;5284:55;;5335:1;5332;5325:12;5284:55;5371:2;5358:16;5393:4;5416:43;5456:2;5416:43;:::i;:::-;5488:2;5482:9;5500:31;5528:2;5520:6;5500:31;:::i;:::-;5566:18;;;5654:1;5650:10;;;;5642:19;;5638:28;;;5600:15;;;;-1:-1:-1;5678:19:171;;;5675:39;;;5710:1;5707;5700:12;5675:39;5734:11;;;;5754:148;5770:6;5765:3;5762:15;5754:148;;;5836:23;5855:3;5836:23;:::i;:::-;5824:36;;5787:12;;;;5880;;;;5754:148;;;5921:6;-1:-1:-1;;5965:18:171;;5952:32;;-1:-1:-1;;5996:16:171;;;5993:36;;;6025:1;6022;6015:12;5993:36;;6048:63;6103:7;6092:8;6081:9;6077:24;6048:63;:::i;:::-;6038:73;;;4909:1208;;;;;:::o;6122:435::-;6175:3;6213:5;6207:12;6240:6;6235:3;6228:19;6266:4;6295:2;6290:3;6286:12;6279:19;;6332:2;6325:5;6321:14;6353:1;6363:169;6377:6;6374:1;6371:13;6363:169;;;6438:13;;6426:26;;6472:12;;;;6507:15;;;;6399:1;6392:9;6363:169;;;-1:-1:-1;6548:3:171;;6122:435;-1:-1:-1;;;;;6122:435:171:o;6562:261::-;6741:2;6730:9;6723:21;6704:4;6761:56;6813:2;6802:9;6798:18;6790:6;6761:56;:::i;6828:347::-;6893:6;6901;6954:2;6942:9;6933:7;6929:23;6925:32;6922:52;;;6970:1;6967;6960:12;6922:52;6993:29;7012:9;6993:29;:::i;:::-;6983:39;;7072:2;7061:9;7057:18;7044:32;7119:5;7112:13;7105:21;7098:5;7095:32;7085:60;;7141:1;7138;7131:12;7085:60;7164:5;7154:15;;;6828:347;;;;;:::o;7180:260::-;7248:6;7256;7309:2;7297:9;7288:7;7284:23;7280:32;7277:52;;;7325:1;7322;7315:12;7277:52;7348:29;7367:9;7348:29;:::i;:::-;7338:39;;7396:38;7430:2;7419:9;7415:18;7396:38;:::i;:::-;7386:48;;7180:260;;;;;:::o;7445:606::-;7549:6;7557;7565;7573;7581;7634:3;7622:9;7613:7;7609:23;7605:33;7602:53;;;7651:1;7648;7641:12;7602:53;7674:29;7693:9;7674:29;:::i;:::-;7664:39;;7722:38;7756:2;7745:9;7741:18;7722:38;:::i;:::-;7712:48;;7807:2;7796:9;7792:18;7779:32;7769:42;;7858:2;7847:9;7843:18;7830:32;7820:42;;7913:3;7902:9;7898:19;7885:33;7941:18;7933:6;7930:30;7927:50;;;7973:1;7970;7963:12;7927:50;7996:49;8037:7;8028:6;8017:9;8013:22;7996:49;:::i;8468:380::-;8547:1;8543:12;;;;8590;;;8611:61;;8665:4;8657:6;8653:17;8643:27;;8611:61;8718:2;8710:6;8707:14;8687:18;8684:38;8681:161;;;8764:10;8759:3;8755:20;8752:1;8745:31;8799:4;8796:1;8789:15;8827:4;8824:1;8817:15;8681:161;;8468:380;;;:::o;9682:127::-;9743:10;9738:3;9734:20;9731:1;9724:31;9774:4;9771:1;9764:15;9798:4;9795:1;9788:15;9814:127;9875:10;9870:3;9866:20;9863:1;9856:31;9906:4;9903:1;9896:15;9930:4;9927:1;9920:15;9946:135;9985:3;-1:-1:-1;;10006:17:171;;10003:43;;;10026:18;;:::i;:::-;-1:-1:-1;10073:1:171;10062:13;;9946:135::o;11315:401::-;11517:2;11499:21;;;11556:2;11536:18;;;11529:30;11595:34;11590:2;11575:18;;11568:62;-1:-1:-1;;;11661:2:171;11646:18;;11639:35;11706:3;11691:19;;11315:401::o;11721:406::-;11923:2;11905:21;;;11962:2;11942:18;;;11935:30;12001:34;11996:2;11981:18;;11974:62;-1:-1:-1;;;12067:2:171;12052:18;;12045:40;12117:3;12102:19;;11721:406::o;12132:128::-;12172:3;12203:1;12199:6;12196:1;12193:13;12190:39;;;12209:18;;:::i;:::-;-1:-1:-1;12245:9:171;;12132:128::o;12265:465::-;12522:2;12511:9;12504:21;12485:4;12548:56;12600:2;12589:9;12585:18;12577:6;12548:56;:::i;:::-;12652:9;12644:6;12640:22;12635:2;12624:9;12620:18;12613:50;12680:44;12717:6;12709;12680:44;:::i;:::-;12672:52;12265:465;-1:-1:-1;;;;;12265:465:171:o;12988:827::-;-1:-1:-1;;;;;13385:15:171;;;13367:34;;13437:15;;13432:2;13417:18;;13410:43;13347:3;13484:2;13469:18;;13462:31;;;13310:4;;13516:57;;13553:19;;13545:6;13516:57;:::i;:::-;13621:9;13613:6;13609:22;13604:2;13593:9;13589:18;13582:50;13655:44;13692:6;13684;13655:44;:::i;:::-;13641:58;;13748:9;13740:6;13736:22;13730:3;13719:9;13715:19;13708:51;13776:33;13802:6;13794;13776:33;:::i;:::-;13768:41;12988:827;-1:-1:-1;;;;;;;;12988:827:171:o;13820:249::-;13889:6;13942:2;13930:9;13921:7;13917:23;13913:32;13910:52;;;13958:1;13955;13948:12;13910:52;13990:9;13984:16;14009:30;14033:5;14009:30;:::i;14074:179::-;14109:3;14151:1;14133:16;14130:23;14127:120;;;14197:1;14194;14191;14176:23;-1:-1:-1;14234:1:171;14228:8;14223:3;14219:18;14127:120;14074:179;:::o;14258:671::-;14297:3;14339:4;14321:16;14318:26;14315:39;;;14258:671;:::o;14315:39::-;14381:2;14375:9;-1:-1:-1;;14446:16:171;14442:25;;14439:1;14375:9;14418:50;14497:4;14491:11;14521:16;14556:18;14627:2;14620:4;14612:6;14608:17;14605:25;14600:2;14592:6;14589:14;14586:45;14583:58;;;14634:5;;;;;14258:671;:::o;14583:58::-;14671:6;14665:4;14661:17;14650:28;;14707:3;14701:10;14734:2;14726:6;14723:14;14720:27;;;14740:5;;;;;;14258:671;:::o;14720:27::-;14824:2;14805:16;14799:4;14795:27;14791:36;14784:4;14775:6;14770:3;14766:16;14762:27;14759:69;14756:82;;;14831:5;;;;;;14258:671;:::o;14756:82::-;14847:57;14898:4;14889:6;14881;14877:19;14873:30;14867:4;14847:57;:::i;:::-;-1:-1:-1;14920:3:171;;14258:671;-1:-1:-1;;;;;14258:671:171:o;15355:404::-;15557:2;15539:21;;;15596:2;15576:18;;;15569:30;15635:34;15630:2;15615:18;;15608:62;-1:-1:-1;;;15701:2:171;15686:18;;15679:38;15749:3;15734:19;;15355:404::o;15764:561::-;-1:-1:-1;;;;;16061:15:171;;;16043:34;;16113:15;;16108:2;16093:18;;16086:43;16160:2;16145:18;;16138:34;;;16203:2;16188:18;;16181:34;;;16023:3;16246;16231:19;;16224:32;;;15986:4;;16273:46;;16299:19;;16291:6;16273:46;:::i;:::-;16265:54;15764:561;-1:-1:-1;;;;;;;15764:561:171:o",
  "language": "Solidity",
  "natspec": {
    "details": "Implementation of the basic standard multi-token. See https://eips.ethereum.org/EIPS/eip-1155 Originally based on code by Enjin: https://github.com/enjin/erc-1155 _Available since v3.1._",
    "kind": "dev",
    "methods": {
      "balanceOf(address,uint256)": {
        "details": "See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address."
      },
      "balanceOfBatch(address[],uint256[])": {
        "details": "See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length."
      },
      "constructor": {
        "details": "See {_setURI}."
      },
      "isApprovedForAll(address,address)": {
        "details": "See {IERC1155-isApprovedForAll}."
      },
      "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
        "details": "See {IERC1155-safeBatchTransferFrom}."
      },
      "safeTransferFrom(address,address,uint256,uint256,bytes)": {
        "details": "See {IERC1155-safeTransferFrom}."
      },
      "setApprovalForAll(address,bool)": {
        "details": "See {IERC1155-setApprovalForAll}."
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}."
      },
      "uri(uint256)": {
        "details": "See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\{id\\}` substring with the actual token type ID."
      }
    },
    "version": 1
  },
  "offset": [
    494,
    15025
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x87 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4E1273F4 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x10A JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x12A JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x13D JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0x179 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH3 0xFDD58E EQ PUSH2 0x8C JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xB2 JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0xD5 JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0xF5 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9F PUSH2 0x9A CALLDATASIZE PUSH1 0x4 PUSH2 0xBA9 JUMP JUMPDEST PUSH2 0x18C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC5 PUSH2 0xC0 CALLDATASIZE PUSH1 0x4 PUSH2 0xBEC JUMP JUMPDEST PUSH2 0x223 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xA9 JUMP JUMPDEST PUSH2 0xE8 PUSH2 0xE3 CALLDATASIZE PUSH1 0x4 PUSH2 0xC10 JUMP JUMPDEST PUSH2 0x275 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA9 SWAP2 SWAP1 PUSH2 0xC76 JUMP JUMPDEST PUSH2 0x108 PUSH2 0x103 CALLDATASIZE PUSH1 0x4 PUSH2 0xDD5 JUMP JUMPDEST PUSH2 0x309 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x11D PUSH2 0x118 CALLDATASIZE PUSH1 0x4 PUSH2 0xE7F JUMP JUMPDEST PUSH2 0x3A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA9 SWAP2 SWAP1 PUSH2 0xF85 JUMP JUMPDEST PUSH2 0x108 PUSH2 0x138 CALLDATASIZE PUSH1 0x4 PUSH2 0xF98 JUMP JUMPDEST PUSH2 0x4CA JUMP JUMPDEST PUSH2 0xC5 PUSH2 0x14B CALLDATASIZE PUSH1 0x4 PUSH2 0xFD4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x108 PUSH2 0x187 CALLDATASIZE PUSH1 0x4 PUSH2 0x1007 JUMP JUMPDEST PUSH2 0x5A1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1FD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2062616C616E636520717565727920666F7220746865207A PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x65726F2061646472657373 PUSH1 0xA8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 SWAP1 SWAP5 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x6CDB3D13 PUSH1 0xE1 SHL EQ DUP1 PUSH2 0x254 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x3A24D07 PUSH1 0xE2 SHL EQ JUMPDEST DUP1 PUSH2 0x26F JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x284 SWAP1 PUSH2 0x106C JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2B0 SWAP1 PUSH2 0x106C JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2FD JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2D2 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2FD JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2E0 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND CALLER EQ DUP1 PUSH2 0x325 JUMPI POP PUSH2 0x325 DUP6 CALLER PUSH2 0x14B JUMP JUMPDEST PUSH2 0x38C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x32 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E736665722063616C6C6572206973206E6F7420 PUSH1 0x44 DUP3 ADD MSTORE PUSH18 0x1BDDDB995C881B9BDC88185C1C1C9BDD9959 PUSH1 0x72 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1F4 JUMP JUMPDEST PUSH2 0x399 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x628 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x405 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A206163636F756E747320616E6420696473206C656E677468 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x40DAD2E6DAC2E8C6D PUSH1 0xBB SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1F4 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x421 JUMPI PUSH2 0x421 PUSH2 0xC89 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x44A JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x4C2 JUMPI PUSH2 0x495 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x46E JUMPI PUSH2 0x46E PUSH2 0x10A7 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x488 JUMPI PUSH2 0x488 PUSH2 0x10A7 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x18C JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x4A7 JUMPI PUSH2 0x4A7 PUSH2 0x10A7 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH2 0x4BB DUP2 PUSH2 0x10D3 JUMP JUMPDEST SWAP1 POP PUSH2 0x450 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND EQ ISZERO PUSH2 0x535 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2073657474696E6720617070726F76616C20737461747573 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x103337B91039B2B633 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1F4 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD SWAP1 DUP2 MSTORE SWAP2 SWAP3 SWAP2 PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND CALLER EQ DUP1 PUSH2 0x5BD JUMPI POP PUSH2 0x5BD DUP6 CALLER PUSH2 0x14B JUMP JUMPDEST PUSH2 0x61B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2063616C6C6572206973206E6F74206F776E6572206E6F72 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x8185C1C1C9BDD9959 PUSH1 0xBA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1F4 JUMP JUMPDEST PUSH2 0x399 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x805 JUMP JUMPDEST DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x68A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2069647320616E6420616D6F756E7473206C656E67746820 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0xDAD2E6DAC2E8C6D PUSH1 0xC3 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1F4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x6B0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F4 SWAP1 PUSH2 0x10EE JUMP JUMPDEST CALLER PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x797 JUMPI PUSH1 0x0 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x6D1 JUMPI PUSH2 0x6D1 PUSH2 0x10A7 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x6EF JUMPI PUSH2 0x6EF PUSH2 0x10A7 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x0 DUP5 DUP2 MSTORE DUP1 DUP4 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 AND DUP4 MSTORE SWAP1 SWAP4 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 SLOAD SWAP1 SWAP2 POP DUP2 DUP2 LT ISZERO PUSH2 0x73F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F4 SWAP1 PUSH2 0x1133 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 DUP2 AND DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP1 DUP12 AND DUP3 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x77C SWAP1 DUP5 SWAP1 PUSH2 0x117D JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP POP DUP1 PUSH2 0x790 SWAP1 PUSH2 0x10D3 JUMP JUMPDEST SWAP1 POP PUSH2 0x6B4 JUMP JUMPDEST POP DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0x7E7 SWAP3 SWAP2 SWAP1 PUSH2 0x1195 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x7FD DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x92B JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x82B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F4 SWAP1 PUSH2 0x10EE JUMP JUMPDEST CALLER PUSH2 0x844 DUP2 DUP8 DUP8 PUSH2 0x83B DUP9 PUSH2 0xA87 JUMP JUMPDEST PUSH2 0x399 DUP9 PUSH2 0xA87 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP4 DUP2 LT ISZERO PUSH2 0x885 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F4 SWAP1 PUSH2 0x1133 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 DUP2 AND DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP8 DUP6 SUB SWAP1 SSTORE SWAP1 DUP9 AND DUP3 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP7 SWAP3 SWAP1 PUSH2 0x8C2 SWAP1 DUP5 SWAP1 PUSH2 0x117D JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD DUP7 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP10 AND SWAP3 DUP11 DUP3 AND SWAP3 SWAP2 DUP7 AND SWAP2 PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x922 DUP3 DUP9 DUP9 DUP9 DUP9 DUP9 PUSH2 0xAD2 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0x7FD JUMPI PUSH1 0x40 MLOAD PUSH4 0xBC197C81 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xBC197C81 SWAP1 PUSH2 0x96F SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x11C3 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x9AA JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x9A7 SWAP2 DUP2 ADD SWAP1 PUSH2 0x1221 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xA57 JUMPI PUSH2 0x9B6 PUSH2 0x123E JUMP JUMPDEST DUP1 PUSH4 0x8C379A0 EQ ISZERO PUSH2 0x9F0 JUMPI POP PUSH2 0x9CB PUSH2 0x125A JUMP JUMPDEST DUP1 PUSH2 0x9D6 JUMPI POP PUSH2 0x9F2 JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F4 SWAP2 SWAP1 PUSH2 0xC76 JUMP JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x34 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F206E6F6E2045524331313535 PUSH1 0x44 DUP3 ADD MSTORE PUSH20 0x2932B1B2B4BB32B91034B6B83632B6B2B73A32B9 PUSH1 0x61 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1F4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xBC197C81 PUSH1 0xE0 SHL EQ PUSH2 0x922 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F4 SWAP1 PUSH2 0x12E4 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE PUSH1 0x60 SWAP2 PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x20 DUP1 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP DUP3 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xAC1 JUMPI PUSH2 0xAC1 PUSH2 0x10A7 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0x7FD JUMPI PUSH1 0x40 MLOAD PUSH4 0xF23A6E61 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xF23A6E61 SWAP1 PUSH2 0xB16 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x132C JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xB51 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xB4E SWAP2 DUP2 ADD SWAP1 PUSH2 0x1221 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xB5D JUMPI PUSH2 0x9B6 PUSH2 0x123E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xF23A6E61 PUSH1 0xE0 SHL EQ PUSH2 0x922 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F4 SWAP1 PUSH2 0x12E4 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xBA4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xBBC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xBC5 DUP4 PUSH2 0xB8D JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0xBE9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xBFE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xC09 DUP2 PUSH2 0xBD3 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC22 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xC4F JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0xC33 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0xC61 JUMPI PUSH1 0x0 PUSH1 0x20 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0xC09 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xC29 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0xCC5 JUMPI PUSH2 0xCC5 PUSH2 0xC89 JUMP JUMPDEST PUSH1 0x40 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xCE6 JUMPI PUSH2 0xCE6 PUSH2 0xC89 JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xD01 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0xD0E DUP3 PUSH2 0xCCC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD1B DUP3 DUP3 PUSH2 0xC9F JUMP JUMPDEST DUP4 DUP2 MSTORE PUSH1 0x5 SWAP4 SWAP1 SWAP4 SHL DUP6 ADD DUP3 ADD SWAP3 DUP3 DUP2 ADD SWAP2 POP DUP7 DUP5 GT ISZERO PUSH2 0xD3B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0xD56 JUMPI DUP1 CALLDATALOAD DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0xD3F JUMP JUMPDEST POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xD72 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xD8C JUMPI PUSH2 0xD8C PUSH2 0xC89 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xDA3 PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 PUSH2 0xC9F JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0xDB8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP2 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0xDED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDF6 DUP7 PUSH2 0xB8D JUMP JUMPDEST SWAP5 POP PUSH2 0xE04 PUSH1 0x20 DUP8 ADD PUSH2 0xB8D JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xE21 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE2D DUP10 DUP4 DUP11 ADD PUSH2 0xCF0 JUMP JUMPDEST SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0xE43 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE4F DUP10 DUP4 DUP11 ADD PUSH2 0xCF0 JUMP JUMPDEST SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0xE65 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xE72 DUP9 DUP3 DUP10 ADD PUSH2 0xD61 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE92 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xEAA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xEBE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0xECB DUP3 PUSH2 0xCCC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xED8 DUP3 DUP3 PUSH2 0xC9F JUMP JUMPDEST DUP4 DUP2 MSTORE PUSH1 0x5 SWAP4 SWAP1 SWAP4 SHL DUP6 ADD DUP3 ADD SWAP3 DUP3 DUP2 ADD SWAP2 POP DUP10 DUP5 GT ISZERO PUSH2 0xEF8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP5 DUP3 ADD SWAP5 JUMPDEST DUP4 DUP7 LT ISZERO PUSH2 0xF1D JUMPI PUSH2 0xF0E DUP7 PUSH2 0xB8D JUMP JUMPDEST DUP3 MSTORE SWAP5 DUP3 ADD SWAP5 SWAP1 DUP3 ADD SWAP1 PUSH2 0xEFD JUMP JUMPDEST SWAP7 POP POP DUP7 ADD CALLDATALOAD SWAP3 POP POP DUP1 DUP3 GT ISZERO PUSH2 0xF33 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xF40 DUP6 DUP3 DUP7 ADD PUSH2 0xCF0 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xF7A JUMPI DUP2 MLOAD DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0xF5E JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0xC09 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xF4A JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xFAB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xFB4 DUP4 PUSH2 0xB8D JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xFC9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xFE7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xFF0 DUP4 PUSH2 0xB8D JUMP JUMPDEST SWAP2 POP PUSH2 0xFFE PUSH1 0x20 DUP5 ADD PUSH2 0xB8D JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x101F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1028 DUP7 PUSH2 0xB8D JUMP JUMPDEST SWAP5 POP PUSH2 0x1036 PUSH1 0x20 DUP8 ADD PUSH2 0xB8D JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD SWAP2 POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1060 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE72 DUP9 DUP3 DUP10 ADD PUSH2 0xD61 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1080 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x10A1 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x10E7 JUMPI PUSH2 0x10E7 PUSH2 0x10BD JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x25 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F20746865207A65726F206164 PUSH1 0x40 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2A SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A20696E73756666696369656E742062616C616E636520666F PUSH1 0x40 DUP3 ADD MSTORE PUSH10 0x39103A3930B739B332B9 PUSH1 0xB1 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x1190 JUMPI PUSH2 0x1190 PUSH2 0x10BD JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 PUSH2 0x11A8 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0xF4A JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x11BA DUP2 DUP6 PUSH2 0xF4A JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x40 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x11EF SWAP1 DUP4 ADD DUP7 PUSH2 0xF4A JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x1201 DUP2 DUP7 PUSH2 0xF4A JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0x80 DUP5 ADD MSTORE PUSH2 0x1215 DUP2 DUP6 PUSH2 0xC29 JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1233 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xC09 DUP2 PUSH2 0xBD3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 RETURNDATASIZE GT ISZERO PUSH2 0x1257 JUMPI PUSH1 0x4 PUSH1 0x0 DUP1 RETURNDATACOPY POP PUSH1 0x0 MLOAD PUSH1 0xE0 SHR JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x44 RETURNDATASIZE LT ISZERO PUSH2 0x1268 JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x3 NOT RETURNDATASIZE DUP2 ADD PUSH1 0x4 DUP4 RETURNDATACOPY DUP2 MLOAD RETURNDATASIZE PUSH8 0xFFFFFFFFFFFFFFFF DUP2 PUSH1 0x24 DUP5 ADD GT DUP2 DUP5 GT OR ISZERO PUSH2 0x1298 JUMPI POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP3 DUP6 ADD SWAP2 POP DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH2 0x12B0 JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP5 RETURNDATASIZE DUP8 ADD ADD PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x12CA JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH2 0x12D9 PUSH1 0x20 DUP3 DUP7 ADD ADD DUP8 PUSH2 0xC9F JUMP JUMPDEST POP SWAP1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x28 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A204552433131353552656365697665722072656A65637465 PUSH1 0x40 DUP3 ADD MSTORE PUSH8 0x6420746F6B656E73 PUSH1 0xC0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0xA0 PUSH1 0x80 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x1366 SWAP1 DUP4 ADD DUP5 PUSH2 0xC29 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCC 0xD9 0xBB PUSH21 0xC4987414B3AE9DC715B96DE484E4EE5B6CE3486656 0xE6 0xD5 0xCC XOR 0xB2 BYTE EXTCODESIZE PUSH5 0x736F6C6343 STOP ADDMOD 0xC STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        494,
        15025
      ],
      "op": "PUSH1",
      "path": "98",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        494,
        15025
      ],
      "op": "PUSH1",
      "path": "98",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        494,
        15025
      ],
      "op": "MSTORE",
      "path": "98"
    },
    "5": {
      "fn": null,
      "offset": [
        494,
        15025
      ],
      "op": "CALLVALUE",
      "path": "98"
    },
    "6": {
      "fn": null,
      "offset": [
        494,
        15025
      ],
      "op": "DUP1",
      "path": "98"
    },
    "7": {
      "fn": null,
      "offset": [
        494,
        15025
      ],
      "op": "ISZERO",
      "path": "98"
    },
    "8": {
      "fn": null,
      "offset": [
        494,
        15025
      ],
      "op": "PUSH2",
      "path": "98",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        494,
        15025
      ],
      "op": "JUMPI",
      "path": "98"
    },
    "12": {
      "fn": null,
      "offset": [
        494,
        15025
      ],
      "op": "PUSH1",
      "path": "98",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        494,
        15025
      ],
      "op": "DUP1",
      "path": "98"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        494,
        15025
      ],
      "op": "REVERT",
      "path": "98"
    },
    "16": {
      "fn": null,
      "offset": [
        494,
        15025
      ],
      "op": "JUMPDEST",
      "path": "98"
    },
    "17": {
      "fn": null,
      "offset": [
        494,
        15025
      ],
      "op": "POP",
      "path": "98"
    },
    "18": {
      "fn": null,
      "offset": [
        494,
        15025
      ],
      "op": "PUSH1",
      "path": "98",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        494,
        15025
      ],
      "op": "CALLDATASIZE",
      "path": "98"
    },
    "21": {
      "fn": null,
      "offset": [
        494,
        15025
      ],
      "op": "LT",
      "path": "98"
    },
    "22": {
      "fn": null,
      "offset": [
        494,
        15025
      ],
      "op": "PUSH2",
      "path": "98",
      "value": "0x87"
    },
    "25": {
      "fn": null,
      "offset": [
        494,
        15025
      ],
      "op": "JUMPI",
      "path": "98"
    },
    "26": {
      "fn": null,
      "offset": [
        494,
        15025
      ],
      "op": "PUSH1",
      "path": "98",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        494,
        15025
      ],
      "op": "CALLDATALOAD",
      "path": "98"
    },
    "29": {
      "fn": null,
      "offset": [
        494,
        15025
      ],
      "op": "PUSH1",
      "path": "98",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        494,
        15025
      ],
      "op": "SHR",
      "path": "98"
    },
    "32": {
      "fn": null,
      "offset": [
        494,
        15025
      ],
      "op": "DUP1",
      "path": "98"
    },
    "33": {
      "fn": null,
      "offset": [
        494,
        15025
      ],
      "op": "PUSH4",
      "path": "98",
      "value": "0x4E1273F4"
    },
    "38": {
      "fn": null,
      "offset": [
        494,
        15025
      ],
      "op": "GT",
      "path": "98"
    },
    "39": {
      "fn": null,
      "offset": [
        494,
        15025
      ],
      "op": "PUSH2",
      "path": "98",
      "value": "0x5B"
    },
    "42": {
      "fn": null,
      "offset": [
        494,
        15025
      ],
      "op": "JUMPI",
      "path": "98"
    },
    "43": {
      "fn": null,
      "offset": [
        494,
        15025
      ],
      "op": "DUP1",
      "path": "98"
    },
    "44": {
      "fn": null,
      "offset": [
        494,
        15025
      ],
      "op": "PUSH4",
      "path": "98",
      "value": "0x4E1273F4"
    },
    "49": {
      "fn": null,
      "offset": [
        494,
        15025
      ],
      "op": "EQ",
      "path": "98"
    },
    "50": {
      "fn": null,
      "offset": [
        494,
        15025
      ],
      "op": "PUSH2",
      "path": "98",
      "value": "0x10A"
    },
    "53": {
      "fn": null,
      "offset": [
        494,
        15025
      ],
      "op": "JUMPI",
      "path": "98"
    },
    "54": {
      "fn": null,
      "offset": [
        494,
        15025
      ],
      "op": "DUP1",
      "path": "98"
    },
    "55": {
      "fn": null,
      "offset": [
        494,
        15025
      ],
      "op": "PUSH4",
      "path": "98",
      "value": "0xA22CB465"
    },
    "60": {
      "fn": null,
      "offset": [
        494,
        15025
      ],
      "op": "EQ",
      "path": "98"
    },
    "61": {
      "fn": null,
      "offset": [
        494,
        15025
      ],
      "op": "PUSH2",
      "path": "98",
      "value": "0x12A"
    },
    "64": {
      "fn": null,
      "offset": [
        494,
        15025
      ],
      "op": "JUMPI",
      "path": "98"
    },
    "65": {
      "fn": null,
      "offset": [
        494,
        15025
      ],
      "op": "DUP1",
      "path": "98"
    },
    "66": {
      "fn": null,
      "offset": [
        494,
        15025
      ],
      "op": "PUSH4",
      "path": "98",
      "value": "0xE985E9C5"
    },
    "71": {
      "fn": null,
      "offset": [
        494,
        15025
      ],
      "op": "EQ",
      "path": "98"
    },
    "72": {
      "fn": null,
      "offset": [
        494,
        15025
      ],
      "op": "PUSH2",
      "path": "98",
      "value": "0x13D"
    },
    "75": {
      "fn": null,
      "offset": [
        494,
        15025
      ],
      "op": "JUMPI",
      "path": "98"
    },
    "76": {
      "fn": null,
      "offset": [
        494,
        15025
      ],
      "op": "DUP1",
      "path": "98"
    },
    "77": {
      "fn": null,
      "offset": [
        494,
        15025
      ],
      "op": "PUSH4",
      "path": "98",
      "value": "0xF242432A"
    },
    "82": {
      "fn": null,
      "offset": [
        494,
        15025
      ],
      "op": "EQ",
      "path": "98"
    },
    "83": {
      "fn": null,
      "offset": [
        494,
        15025
      ],
      "op": "PUSH2",
      "path": "98",
      "value": "0x179"
    },
    "86": {
      "fn": null,
      "offset": [
        494,
        15025
      ],
      "op": "JUMPI",
      "path": "98"
    },
    "87": {
      "fn": null,
      "offset": [
        494,
        15025
      ],
      "op": "PUSH1",
      "path": "98",
      "value": "0x0"
    },
    "89": {
      "fn": null,
      "offset": [
        494,
        15025
      ],
      "op": "DUP1",
      "path": "98"
    },
    "90": {
      "fn": null,
      "offset": [
        494,
        15025
      ],
      "op": "REVERT",
      "path": "98"
    },
    "91": {
      "fn": null,
      "offset": [
        494,
        15025
      ],
      "op": "JUMPDEST",
      "path": "98"
    },
    "92": {
      "fn": null,
      "offset": [
        494,
        15025
      ],
      "op": "DUP1",
      "path": "98"
    },
    "93": {
      "fn": null,
      "offset": [
        494,
        15025
      ],
      "op": "PUSH3",
      "path": "98",
      "value": "0xFDD58E"
    },
    "97": {
      "fn": null,
      "offset": [
        494,
        15025
      ],
      "op": "EQ",
      "path": "98"
    },
    "98": {
      "fn": null,
      "offset": [
        494,
        15025
      ],
      "op": "PUSH2",
      "path": "98",
      "value": "0x8C"
    },
    "101": {
      "fn": null,
      "offset": [
        494,
        15025
      ],
      "op": "JUMPI",
      "path": "98"
    },
    "102": {
      "fn": null,
      "offset": [
        494,
        15025
      ],
      "op": "DUP1",
      "path": "98"
    },
    "103": {
      "fn": null,
      "offset": [
        494,
        15025
      ],
      "op": "PUSH4",
      "path": "98",
      "value": "0x1FFC9A7"
    },
    "108": {
      "fn": null,
      "offset": [
        494,
        15025
      ],
      "op": "EQ",
      "path": "98"
    },
    "109": {
      "fn": null,
      "offset": [
        494,
        15025
      ],
      "op": "PUSH2",
      "path": "98",
      "value": "0xB2"
    },
    "112": {
      "fn": null,
      "offset": [
        494,
        15025
      ],
      "op": "JUMPI",
      "path": "98"
    },
    "113": {
      "fn": null,
      "offset": [
        494,
        15025
      ],
      "op": "DUP1",
      "path": "98"
    },
    "114": {
      "fn": null,
      "offset": [
        494,
        15025
      ],
      "op": "PUSH4",
      "path": "98",
      "value": "0xE89341C"
    },
    "119": {
      "fn": null,
      "offset": [
        494,
        15025
      ],
      "op": "EQ",
      "path": "98"
    },
    "120": {
      "fn": null,
      "offset": [
        494,
        15025
      ],
      "op": "PUSH2",
      "path": "98",
      "value": "0xD5"
    },
    "123": {
      "fn": null,
      "offset": [
        494,
        15025
      ],
      "op": "JUMPI",
      "path": "98"
    },
    "124": {
      "fn": null,
      "offset": [
        494,
        15025
      ],
      "op": "DUP1",
      "path": "98"
    },
    "125": {
      "fn": null,
      "offset": [
        494,
        15025
      ],
      "op": "PUSH4",
      "path": "98",
      "value": "0x2EB2C2D6"
    },
    "130": {
      "fn": null,
      "offset": [
        494,
        15025
      ],
      "op": "EQ",
      "path": "98"
    },
    "131": {
      "fn": null,
      "offset": [
        494,
        15025
      ],
      "op": "PUSH2",
      "path": "98",
      "value": "0xF5"
    },
    "134": {
      "fn": null,
      "offset": [
        494,
        15025
      ],
      "op": "JUMPI",
      "path": "98"
    },
    "135": {
      "fn": null,
      "offset": [
        494,
        15025
      ],
      "op": "JUMPDEST",
      "path": "98"
    },
    "136": {
      "fn": null,
      "offset": [
        494,
        15025
      ],
      "op": "PUSH1",
      "path": "98",
      "value": "0x0"
    },
    "138": {
      "fn": null,
      "offset": [
        494,
        15025
      ],
      "op": "DUP1",
      "path": "98"
    },
    "139": {
      "first_revert": true,
      "fn": null,
      "offset": [
        494,
        15025
      ],
      "op": "REVERT",
      "path": "98"
    },
    "140": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2109,
        2337
      ],
      "op": "JUMPDEST",
      "path": "98"
    },
    "141": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2109,
        2337
      ],
      "op": "PUSH2",
      "path": "98",
      "value": "0x9F"
    },
    "144": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2109,
        2337
      ],
      "op": "PUSH2",
      "path": "98",
      "value": "0x9A"
    },
    "147": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2109,
        2337
      ],
      "op": "CALLDATASIZE",
      "path": "98"
    },
    "148": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2109,
        2337
      ],
      "op": "PUSH1",
      "path": "98",
      "value": "0x4"
    },
    "150": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2109,
        2337
      ],
      "op": "PUSH2",
      "path": "98",
      "value": "0xBA9"
    },
    "153": {
      "fn": "ERC1155.balanceOf",
      "jump": "i",
      "offset": [
        2109,
        2337
      ],
      "op": "JUMP",
      "path": "98"
    },
    "154": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2109,
        2337
      ],
      "op": "JUMPDEST",
      "path": "98"
    },
    "155": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2109,
        2337
      ],
      "op": "PUSH2",
      "path": "98",
      "value": "0x18C"
    },
    "158": {
      "fn": "ERC1155.balanceOf",
      "jump": "i",
      "offset": [
        2109,
        2337
      ],
      "op": "JUMP",
      "path": "98"
    },
    "159": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2109,
        2337
      ],
      "op": "JUMPDEST",
      "path": "98"
    },
    "160": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2109,
        2337
      ],
      "op": "PUSH1",
      "path": "98",
      "value": "0x40"
    },
    "162": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2109,
        2337
      ],
      "op": "MLOAD",
      "path": "98"
    },
    "163": {
      "op": "SWAP1"
    },
    "164": {
      "op": "DUP2"
    },
    "165": {
      "op": "MSTORE"
    },
    "166": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "168": {
      "op": "ADD"
    },
    "169": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2109,
        2337
      ],
      "op": "JUMPDEST",
      "path": "98"
    },
    "170": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2109,
        2337
      ],
      "op": "PUSH1",
      "path": "98",
      "value": "0x40"
    },
    "172": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2109,
        2337
      ],
      "op": "MLOAD",
      "path": "98"
    },
    "173": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2109,
        2337
      ],
      "op": "DUP1",
      "path": "98"
    },
    "174": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2109,
        2337
      ],
      "op": "SWAP2",
      "path": "98"
    },
    "175": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2109,
        2337
      ],
      "op": "SUB",
      "path": "98"
    },
    "176": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2109,
        2337
      ],
      "op": "SWAP1",
      "path": "98"
    },
    "177": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2109,
        2337
      ],
      "op": "RETURN",
      "path": "98"
    },
    "178": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1160,
        1465
      ],
      "op": "JUMPDEST",
      "path": "98"
    },
    "179": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1160,
        1465
      ],
      "op": "PUSH2",
      "path": "98",
      "value": "0xC5"
    },
    "182": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1160,
        1465
      ],
      "op": "PUSH2",
      "path": "98",
      "value": "0xC0"
    },
    "185": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1160,
        1465
      ],
      "op": "CALLDATASIZE",
      "path": "98"
    },
    "186": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1160,
        1465
      ],
      "op": "PUSH1",
      "path": "98",
      "value": "0x4"
    },
    "188": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1160,
        1465
      ],
      "op": "PUSH2",
      "path": "98",
      "value": "0xBEC"
    },
    "191": {
      "fn": "ERC1155.supportsInterface",
      "jump": "i",
      "offset": [
        1160,
        1465
      ],
      "op": "JUMP",
      "path": "98"
    },
    "192": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1160,
        1465
      ],
      "op": "JUMPDEST",
      "path": "98"
    },
    "193": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1160,
        1465
      ],
      "op": "PUSH2",
      "path": "98",
      "value": "0x223"
    },
    "196": {
      "fn": "ERC1155.supportsInterface",
      "jump": "i",
      "offset": [
        1160,
        1465
      ],
      "op": "JUMP",
      "path": "98"
    },
    "197": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1160,
        1465
      ],
      "op": "JUMPDEST",
      "path": "98"
    },
    "198": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1160,
        1465
      ],
      "op": "PUSH1",
      "path": "98",
      "value": "0x40"
    },
    "200": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1160,
        1465
      ],
      "op": "MLOAD",
      "path": "98"
    },
    "201": {
      "op": "SWAP1"
    },
    "202": {
      "op": "ISZERO"
    },
    "203": {
      "op": "ISZERO"
    },
    "204": {
      "op": "DUP2"
    },
    "205": {
      "op": "MSTORE"
    },
    "206": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "208": {
      "op": "ADD"
    },
    "209": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1160,
        1465
      ],
      "op": "PUSH2",
      "path": "98",
      "value": "0xA9"
    },
    "212": {
      "op": "JUMP"
    },
    "213": {
      "fn": "ERC1155.uri",
      "offset": [
        1864,
        1967
      ],
      "op": "JUMPDEST",
      "path": "98"
    },
    "214": {
      "fn": "ERC1155.uri",
      "offset": [
        1864,
        1967
      ],
      "op": "PUSH2",
      "path": "98",
      "value": "0xE8"
    },
    "217": {
      "fn": "ERC1155.uri",
      "offset": [
        1864,
        1967
      ],
      "op": "PUSH2",
      "path": "98",
      "value": "0xE3"
    },
    "220": {
      "fn": "ERC1155.uri",
      "offset": [
        1864,
        1967
      ],
      "op": "CALLDATASIZE",
      "path": "98"
    },
    "221": {
      "fn": "ERC1155.uri",
      "offset": [
        1864,
        1967
      ],
      "op": "PUSH1",
      "path": "98",
      "value": "0x4"
    },
    "223": {
      "fn": "ERC1155.uri",
      "offset": [
        1864,
        1967
      ],
      "op": "PUSH2",
      "path": "98",
      "value": "0xC10"
    },
    "226": {
      "fn": "ERC1155.uri",
      "jump": "i",
      "offset": [
        1864,
        1967
      ],
      "op": "JUMP",
      "path": "98"
    },
    "227": {
      "fn": "ERC1155.uri",
      "offset": [
        1864,
        1967
      ],
      "op": "JUMPDEST",
      "path": "98"
    },
    "228": {
      "fn": "ERC1155.uri",
      "offset": [
        1864,
        1967
      ],
      "op": "PUSH2",
      "path": "98",
      "value": "0x275"
    },
    "231": {
      "fn": "ERC1155.uri",
      "jump": "i",
      "offset": [
        1864,
        1967
      ],
      "op": "JUMP",
      "path": "98"
    },
    "232": {
      "fn": "ERC1155.uri",
      "offset": [
        1864,
        1967
      ],
      "op": "JUMPDEST",
      "path": "98"
    },
    "233": {
      "fn": "ERC1155.uri",
      "offset": [
        1864,
        1967
      ],
      "op": "PUSH1",
      "path": "98",
      "value": "0x40"
    },
    "235": {
      "fn": "ERC1155.uri",
      "offset": [
        1864,
        1967
      ],
      "op": "MLOAD",
      "path": "98"
    },
    "236": {
      "fn": "ERC1155.uri",
      "offset": [
        1864,
        1967
      ],
      "op": "PUSH2",
      "path": "98",
      "value": "0xA9"
    },
    "239": {
      "fn": "ERC1155.uri",
      "offset": [
        1864,
        1967
      ],
      "op": "SWAP2",
      "path": "98"
    },
    "240": {
      "fn": "ERC1155.uri",
      "offset": [
        1864,
        1967
      ],
      "op": "SWAP1",
      "path": "98"
    },
    "241": {
      "fn": "ERC1155.uri",
      "offset": [
        1864,
        1967
      ],
      "op": "PUSH2",
      "path": "98",
      "value": "0xC76"
    },
    "244": {
      "fn": "ERC1155.uri",
      "jump": "i",
      "offset": [
        1864,
        1967
      ],
      "op": "JUMP",
      "path": "98"
    },
    "245": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4137,
        4567
      ],
      "op": "JUMPDEST",
      "path": "98"
    },
    "246": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4137,
        4567
      ],
      "op": "PUSH2",
      "path": "98",
      "value": "0x108"
    },
    "249": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4137,
        4567
      ],
      "op": "PUSH2",
      "path": "98",
      "value": "0x103"
    },
    "252": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4137,
        4567
      ],
      "op": "CALLDATASIZE",
      "path": "98"
    },
    "253": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4137,
        4567
      ],
      "op": "PUSH1",
      "path": "98",
      "value": "0x4"
    },
    "255": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4137,
        4567
      ],
      "op": "PUSH2",
      "path": "98",
      "value": "0xDD5"
    },
    "258": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "jump": "i",
      "offset": [
        4137,
        4567
      ],
      "op": "JUMP",
      "path": "98"
    },
    "259": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4137,
        4567
      ],
      "op": "JUMPDEST",
      "path": "98"
    },
    "260": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4137,
        4567
      ],
      "op": "PUSH2",
      "path": "98",
      "value": "0x309"
    },
    "263": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "jump": "i",
      "offset": [
        4137,
        4567
      ],
      "op": "JUMP",
      "path": "98"
    },
    "264": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4137,
        4567
      ],
      "op": "JUMPDEST",
      "path": "98"
    },
    "265": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4137,
        4567
      ],
      "op": "STOP",
      "path": "98"
    },
    "266": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2494,
        3002
      ],
      "op": "JUMPDEST",
      "path": "98"
    },
    "267": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2494,
        3002
      ],
      "op": "PUSH2",
      "path": "98",
      "value": "0x11D"
    },
    "270": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2494,
        3002
      ],
      "op": "PUSH2",
      "path": "98",
      "value": "0x118"
    },
    "273": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2494,
        3002
      ],
      "op": "CALLDATASIZE",
      "path": "98"
    },
    "274": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2494,
        3002
      ],
      "op": "PUSH1",
      "path": "98",
      "value": "0x4"
    },
    "276": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2494,
        3002
      ],
      "op": "PUSH2",
      "path": "98",
      "value": "0xE7F"
    },
    "279": {
      "fn": "ERC1155.balanceOfBatch",
      "jump": "i",
      "offset": [
        2494,
        3002
      ],
      "op": "JUMP",
      "path": "98"
    },
    "280": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2494,
        3002
      ],
      "op": "JUMPDEST",
      "path": "98"
    },
    "281": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2494,
        3002
      ],
      "op": "PUSH2",
      "path": "98",
      "value": "0x3A0"
    },
    "284": {
      "fn": "ERC1155.balanceOfBatch",
      "jump": "i",
      "offset": [
        2494,
        3002
      ],
      "op": "JUMP",
      "path": "98"
    },
    "285": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2494,
        3002
      ],
      "op": "JUMPDEST",
      "path": "98"
    },
    "286": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2494,
        3002
      ],
      "op": "PUSH1",
      "path": "98",
      "value": "0x40"
    },
    "288": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2494,
        3002
      ],
      "op": "MLOAD",
      "path": "98"
    },
    "289": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2494,
        3002
      ],
      "op": "PUSH2",
      "path": "98",
      "value": "0xA9"
    },
    "292": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2494,
        3002
      ],
      "op": "SWAP2",
      "path": "98"
    },
    "293": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2494,
        3002
      ],
      "op": "SWAP1",
      "path": "98"
    },
    "294": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2494,
        3002
      ],
      "op": "PUSH2",
      "path": "98",
      "value": "0xF85"
    },
    "297": {
      "fn": "ERC1155.balanceOfBatch",
      "jump": "i",
      "offset": [
        2494,
        3002
      ],
      "op": "JUMP",
      "path": "98"
    },
    "298": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3070,
        3376
      ],
      "op": "JUMPDEST",
      "path": "98"
    },
    "299": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3070,
        3376
      ],
      "op": "PUSH2",
      "path": "98",
      "value": "0x108"
    },
    "302": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3070,
        3376
      ],
      "op": "PUSH2",
      "path": "98",
      "value": "0x138"
    },
    "305": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3070,
        3376
      ],
      "op": "CALLDATASIZE",
      "path": "98"
    },
    "306": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3070,
        3376
      ],
      "op": "PUSH1",
      "path": "98",
      "value": "0x4"
    },
    "308": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3070,
        3376
      ],
      "op": "PUSH2",
      "path": "98",
      "value": "0xF98"
    },
    "311": {
      "fn": "ERC1155.setApprovalForAll",
      "jump": "i",
      "offset": [
        3070,
        3376
      ],
      "op": "JUMP",
      "path": "98"
    },
    "312": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3070,
        3376
      ],
      "op": "JUMPDEST",
      "path": "98"
    },
    "313": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3070,
        3376
      ],
      "op": "PUSH2",
      "path": "98",
      "value": "0x4CA"
    },
    "316": {
      "fn": "ERC1155.setApprovalForAll",
      "jump": "i",
      "offset": [
        3070,
        3376
      ],
      "op": "JUMP",
      "path": "98"
    },
    "317": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3443,
        3609
      ],
      "op": "JUMPDEST",
      "path": "98"
    },
    "318": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3443,
        3609
      ],
      "op": "PUSH2",
      "path": "98",
      "value": "0xC5"
    },
    "321": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3443,
        3609
      ],
      "op": "PUSH2",
      "path": "98",
      "value": "0x14B"
    },
    "324": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3443,
        3609
      ],
      "op": "CALLDATASIZE",
      "path": "98"
    },
    "325": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3443,
        3609
      ],
      "op": "PUSH1",
      "path": "98",
      "value": "0x4"
    },
    "327": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3443,
        3609
      ],
      "op": "PUSH2",
      "path": "98",
      "value": "0xFD4"
    },
    "330": {
      "fn": "ERC1155.isApprovedForAll",
      "jump": "i",
      "offset": [
        3443,
        3609
      ],
      "op": "JUMP",
      "path": "98"
    },
    "331": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3443,
        3609
      ],
      "op": "JUMPDEST",
      "path": "98"
    },
    "332": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "334": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "336": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "338": {
      "op": "SHL"
    },
    "339": {
      "op": "SUB"
    },
    "340": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3565,
        3592
      ],
      "op": "SWAP2",
      "path": "98",
      "statement": 0
    },
    "341": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3565,
        3592
      ],
      "op": "DUP3",
      "path": "98"
    },
    "342": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3565,
        3592
      ],
      "op": "AND",
      "path": "98"
    },
    "343": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3542,
        3546
      ],
      "op": "PUSH1",
      "path": "98",
      "value": "0x0"
    },
    "345": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3565,
        3592
      ],
      "op": "SWAP1",
      "path": "98"
    },
    "346": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3565,
        3592
      ],
      "op": "DUP2",
      "path": "98"
    },
    "347": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3565,
        3592
      ],
      "op": "MSTORE",
      "path": "98"
    },
    "348": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3565,
        3583
      ],
      "op": "PUSH1",
      "path": "98",
      "value": "0x1"
    },
    "350": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3565,
        3592
      ],
      "op": "PUSH1",
      "path": "98",
      "value": "0x20"
    },
    "352": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3565,
        3592
      ],
      "op": "SWAP1",
      "path": "98"
    },
    "353": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3565,
        3592
      ],
      "op": "DUP2",
      "path": "98"
    },
    "354": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3565,
        3592
      ],
      "op": "MSTORE",
      "path": "98"
    },
    "355": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3565,
        3592
      ],
      "op": "PUSH1",
      "path": "98",
      "value": "0x40"
    },
    "357": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3565,
        3592
      ],
      "op": "DUP1",
      "path": "98"
    },
    "358": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3565,
        3592
      ],
      "op": "DUP4",
      "path": "98"
    },
    "359": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3565,
        3592
      ],
      "op": "KECCAK256",
      "path": "98"
    },
    "360": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3565,
        3602
      ],
      "op": "SWAP4",
      "path": "98"
    },
    "361": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3565,
        3602
      ],
      "op": "SWAP1",
      "path": "98"
    },
    "362": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3565,
        3602
      ],
      "op": "SWAP5",
      "path": "98"
    },
    "363": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3565,
        3602
      ],
      "op": "AND",
      "path": "98"
    },
    "364": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3565,
        3602
      ],
      "op": "DUP3",
      "path": "98"
    },
    "365": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3565,
        3602
      ],
      "op": "MSTORE",
      "path": "98"
    },
    "366": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3565,
        3602
      ],
      "op": "SWAP2",
      "path": "98"
    },
    "367": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3565,
        3602
      ],
      "op": "SWAP1",
      "path": "98"
    },
    "368": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3565,
        3602
      ],
      "op": "SWAP2",
      "path": "98"
    },
    "369": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3565,
        3602
      ],
      "op": "MSTORE",
      "path": "98"
    },
    "370": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3565,
        3602
      ],
      "op": "KECCAK256",
      "path": "98"
    },
    "371": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3565,
        3602
      ],
      "op": "SLOAD",
      "path": "98"
    },
    "372": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3565,
        3602
      ],
      "op": "PUSH1",
      "path": "98",
      "value": "0xFF"
    },
    "374": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3565,
        3602
      ],
      "op": "AND",
      "path": "98"
    },
    "375": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3565,
        3602
      ],
      "op": "SWAP1",
      "path": "98"
    },
    "376": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3443,
        3609
      ],
      "op": "JUMP",
      "path": "98"
    },
    "377": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3676,
        4065
      ],
      "op": "JUMPDEST",
      "path": "98"
    },
    "378": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3676,
        4065
      ],
      "op": "PUSH2",
      "path": "98",
      "value": "0x108"
    },
    "381": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3676,
        4065
      ],
      "op": "PUSH2",
      "path": "98",
      "value": "0x187"
    },
    "384": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3676,
        4065
      ],
      "op": "CALLDATASIZE",
      "path": "98"
    },
    "385": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3676,
        4065
      ],
      "op": "PUSH1",
      "path": "98",
      "value": "0x4"
    },
    "387": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3676,
        4065
      ],
      "op": "PUSH2",
      "path": "98",
      "value": "0x1007"
    },
    "390": {
      "fn": "ERC1155.safeTransferFrom",
      "jump": "i",
      "offset": [
        3676,
        4065
      ],
      "op": "JUMP",
      "path": "98"
    },
    "391": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3676,
        4065
      ],
      "op": "JUMPDEST",
      "path": "98"
    },
    "392": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3676,
        4065
      ],
      "op": "PUSH2",
      "path": "98",
      "value": "0x5A1"
    },
    "395": {
      "fn": "ERC1155.safeTransferFrom",
      "jump": "i",
      "offset": [
        3676,
        4065
      ],
      "op": "JUMP",
      "path": "98"
    },
    "396": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2109,
        2337
      ],
      "op": "JUMPDEST",
      "path": "98"
    },
    "397": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2195,
        2202
      ],
      "op": "PUSH1",
      "path": "98",
      "value": "0x0"
    },
    "399": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "401": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "403": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "405": {
      "op": "SHL"
    },
    "406": {
      "op": "SUB"
    },
    "407": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2222,
        2243
      ],
      "op": "DUP4",
      "path": "98",
      "statement": 1
    },
    "408": {
      "branch": 40,
      "fn": "ERC1155.balanceOf",
      "offset": [
        2222,
        2243
      ],
      "op": "AND",
      "path": "98"
    },
    "409": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2214,
        2291
      ],
      "op": "PUSH2",
      "path": "98",
      "value": "0x1FD"
    },
    "412": {
      "branch": 40,
      "fn": "ERC1155.balanceOf",
      "offset": [
        2214,
        2291
      ],
      "op": "JUMPI",
      "path": "98"
    },
    "413": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2214,
        2291
      ],
      "op": "PUSH1",
      "path": "98",
      "value": "0x40"
    },
    "415": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2214,
        2291
      ],
      "op": "MLOAD",
      "path": "98"
    },
    "416": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "420": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "422": {
      "op": "SHL"
    },
    "423": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2214,
        2291
      ],
      "op": "DUP2",
      "path": "98"
    },
    "424": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2214,
        2291
      ],
      "op": "MSTORE",
      "path": "98"
    },
    "425": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "427": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2214,
        2291
      ],
      "op": "PUSH1",
      "path": "98",
      "value": "0x4"
    },
    "429": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2214,
        2291
      ],
      "op": "DUP3",
      "path": "98"
    },
    "430": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2214,
        2291
      ],
      "op": "ADD",
      "path": "98"
    },
    "431": {
      "op": "MSTORE"
    },
    "432": {
      "op": "PUSH1",
      "value": "0x2B"
    },
    "434": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "436": {
      "op": "DUP3"
    },
    "437": {
      "op": "ADD"
    },
    "438": {
      "op": "MSTORE"
    },
    "439": {
      "op": "PUSH32",
      "value": "0x455243313135353A2062616C616E636520717565727920666F7220746865207A"
    },
    "472": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "474": {
      "op": "DUP3"
    },
    "475": {
      "op": "ADD"
    },
    "476": {
      "op": "MSTORE"
    },
    "477": {
      "op": "PUSH11",
      "value": "0x65726F2061646472657373"
    },
    "489": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "491": {
      "op": "SHL"
    },
    "492": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "494": {
      "op": "DUP3"
    },
    "495": {
      "op": "ADD"
    },
    "496": {
      "op": "MSTORE"
    },
    "497": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "499": {
      "op": "ADD"
    },
    "500": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2214,
        2291
      ],
      "op": "JUMPDEST",
      "path": "98"
    },
    "501": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2214,
        2291
      ],
      "op": "PUSH1",
      "path": "98",
      "value": "0x40"
    },
    "503": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2214,
        2291
      ],
      "op": "MLOAD",
      "path": "98"
    },
    "504": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2214,
        2291
      ],
      "op": "DUP1",
      "path": "98"
    },
    "505": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2214,
        2291
      ],
      "op": "SWAP2",
      "path": "98"
    },
    "506": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2214,
        2291
      ],
      "op": "SUB",
      "path": "98"
    },
    "507": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2214,
        2291
      ],
      "op": "SWAP1",
      "path": "98"
    },
    "508": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2214,
        2291
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "98"
    },
    "509": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2214,
        2291
      ],
      "op": "JUMPDEST",
      "path": "98"
    },
    "510": {
      "op": "POP"
    },
    "511": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2308,
        2317
      ],
      "op": "PUSH1",
      "path": "98",
      "statement": 2,
      "value": "0x0"
    },
    "513": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2308,
        2321
      ],
      "op": "SWAP1",
      "path": "98"
    },
    "514": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2308,
        2321
      ],
      "op": "DUP2",
      "path": "98"
    },
    "515": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2308,
        2321
      ],
      "op": "MSTORE",
      "path": "98"
    },
    "516": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2308,
        2321
      ],
      "op": "PUSH1",
      "path": "98",
      "value": "0x20"
    },
    "518": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2308,
        2321
      ],
      "op": "DUP2",
      "path": "98"
    },
    "519": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2308,
        2321
      ],
      "op": "DUP2",
      "path": "98"
    },
    "520": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2308,
        2321
      ],
      "op": "MSTORE",
      "path": "98"
    },
    "521": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2308,
        2321
      ],
      "op": "PUSH1",
      "path": "98",
      "value": "0x40"
    },
    "523": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2308,
        2321
      ],
      "op": "DUP1",
      "path": "98"
    },
    "524": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2308,
        2321
      ],
      "op": "DUP4",
      "path": "98"
    },
    "525": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2308,
        2321
      ],
      "op": "KECCAK256",
      "path": "98"
    },
    "526": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "528": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "530": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "532": {
      "op": "SHL"
    },
    "533": {
      "op": "SUB"
    },
    "534": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2308,
        2330
      ],
      "op": "SWAP5",
      "path": "98"
    },
    "535": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2308,
        2330
      ],
      "op": "SWAP1",
      "path": "98"
    },
    "536": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2308,
        2330
      ],
      "op": "SWAP5",
      "path": "98"
    },
    "537": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2308,
        2330
      ],
      "op": "AND",
      "path": "98"
    },
    "538": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2308,
        2330
      ],
      "op": "DUP4",
      "path": "98"
    },
    "539": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2308,
        2330
      ],
      "op": "MSTORE",
      "path": "98"
    },
    "540": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2308,
        2330
      ],
      "op": "SWAP3",
      "path": "98"
    },
    "541": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2308,
        2330
      ],
      "op": "SWAP1",
      "path": "98"
    },
    "542": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2308,
        2330
      ],
      "op": "MSTORE",
      "path": "98"
    },
    "543": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2308,
        2330
      ],
      "op": "KECCAK256",
      "path": "98"
    },
    "544": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2308,
        2330
      ],
      "op": "SLOAD",
      "path": "98"
    },
    "545": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2308,
        2330
      ],
      "op": "SWAP1",
      "path": "98"
    },
    "546": {
      "fn": "ERC1155.balanceOf",
      "jump": "o",
      "offset": [
        2109,
        2337
      ],
      "op": "JUMP",
      "path": "98"
    },
    "547": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1160,
        1465
      ],
      "op": "JUMPDEST",
      "path": "98"
    },
    "548": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1262,
        1266
      ],
      "op": "PUSH1",
      "path": "98",
      "value": "0x0"
    },
    "550": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "552": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "554": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "556": {
      "op": "SHL"
    },
    "557": {
      "op": "SUB"
    },
    "558": {
      "op": "NOT"
    },
    "559": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1297,
        1338
      ],
      "op": "DUP3",
      "path": "98",
      "statement": 3
    },
    "560": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1297,
        1338
      ],
      "op": "AND",
      "path": "98"
    },
    "561": {
      "op": "PUSH4",
      "value": "0x6CDB3D13"
    },
    "566": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "568": {
      "op": "SHL"
    },
    "569": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1297,
        1338
      ],
      "op": "EQ",
      "path": "98"
    },
    "570": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1297,
        1338
      ],
      "op": "DUP1",
      "path": "98"
    },
    "571": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1297,
        1406
      ],
      "op": "PUSH2",
      "path": "98",
      "value": "0x254"
    },
    "574": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1297,
        1406
      ],
      "op": "JUMPI",
      "path": "98"
    },
    "575": {
      "op": "POP"
    },
    "576": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "578": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "580": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "582": {
      "op": "SHL"
    },
    "583": {
      "op": "SUB"
    },
    "584": {
      "op": "NOT"
    },
    "585": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1354,
        1406
      ],
      "op": "DUP3",
      "path": "98"
    },
    "586": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1354,
        1406
      ],
      "op": "AND",
      "path": "98"
    },
    "587": {
      "op": "PUSH4",
      "value": "0x3A24D07"
    },
    "592": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "594": {
      "op": "SHL"
    },
    "595": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1354,
        1406
      ],
      "op": "EQ",
      "path": "98"
    },
    "596": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1297,
        1406
      ],
      "op": "JUMPDEST",
      "path": "98"
    },
    "597": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1297,
        1458
      ],
      "op": "DUP1",
      "path": "98"
    },
    "598": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1297,
        1458
      ],
      "op": "PUSH2",
      "path": "98",
      "value": "0x26F"
    },
    "601": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1297,
        1458
      ],
      "op": "JUMPI",
      "path": "98"
    },
    "602": {
      "op": "POP"
    },
    "603": {
      "op": "PUSH4",
      "value": "0x1FFC9A7"
    },
    "608": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "610": {
      "op": "SHL"
    },
    "611": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "613": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "615": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "617": {
      "op": "SHL"
    },
    "618": {
      "op": "SUB"
    },
    "619": {
      "op": "NOT"
    },
    "620": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        871,
        911
      ],
      "op": "DUP4",
      "path": "156",
      "statement": 4
    },
    "621": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        871,
        911
      ],
      "op": "AND",
      "path": "156"
    },
    "622": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        871,
        911
      ],
      "op": "EQ",
      "path": "156"
    },
    "623": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1422,
        1458
      ],
      "op": "JUMPDEST",
      "path": "98"
    },
    "624": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1278,
        1458
      ],
      "op": "SWAP3",
      "path": "98"
    },
    "625": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1160,
        1465
      ],
      "op": "SWAP2",
      "path": "98"
    },
    "626": {
      "op": "POP"
    },
    "627": {
      "op": "POP"
    },
    "628": {
      "fn": "ERC1155.supportsInterface",
      "jump": "o",
      "offset": [
        1160,
        1465
      ],
      "op": "JUMP",
      "path": "98"
    },
    "629": {
      "fn": "ERC1155.uri",
      "offset": [
        1864,
        1967
      ],
      "op": "JUMPDEST",
      "path": "98"
    },
    "630": {
      "fn": "ERC1155.uri",
      "offset": [
        1924,
        1937
      ],
      "op": "PUSH1",
      "path": "98",
      "value": "0x60"
    },
    "632": {
      "fn": "ERC1155.uri",
      "offset": [
        1956,
        1960
      ],
      "op": "PUSH1",
      "path": "98",
      "statement": 5,
      "value": "0x2"
    },
    "634": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "DUP1",
      "path": "98"
    },
    "635": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "SLOAD",
      "path": "98"
    },
    "636": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "PUSH2",
      "path": "98",
      "value": "0x284"
    },
    "639": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "SWAP1",
      "path": "98"
    },
    "640": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "PUSH2",
      "path": "98",
      "value": "0x106C"
    },
    "643": {
      "fn": "ERC1155.uri",
      "jump": "i",
      "offset": [
        1949,
        1960
      ],
      "op": "JUMP",
      "path": "98"
    },
    "644": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "JUMPDEST",
      "path": "98"
    },
    "645": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "DUP1",
      "path": "98"
    },
    "646": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "PUSH1",
      "path": "98",
      "value": "0x1F"
    },
    "648": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "ADD",
      "path": "98"
    },
    "649": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "PUSH1",
      "path": "98",
      "value": "0x20"
    },
    "651": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "DUP1",
      "path": "98"
    },
    "652": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "SWAP2",
      "path": "98"
    },
    "653": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "DIV",
      "path": "98"
    },
    "654": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "MUL",
      "path": "98"
    },
    "655": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "PUSH1",
      "path": "98",
      "value": "0x20"
    },
    "657": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "ADD",
      "path": "98"
    },
    "658": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "PUSH1",
      "path": "98",
      "value": "0x40"
    },
    "660": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "MLOAD",
      "path": "98"
    },
    "661": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "SWAP1",
      "path": "98"
    },
    "662": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "DUP2",
      "path": "98"
    },
    "663": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "ADD",
      "path": "98"
    },
    "664": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "PUSH1",
      "path": "98",
      "value": "0x40"
    },
    "666": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "MSTORE",
      "path": "98"
    },
    "667": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "DUP1",
      "path": "98"
    },
    "668": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "SWAP3",
      "path": "98"
    },
    "669": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "SWAP2",
      "path": "98"
    },
    "670": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "SWAP1",
      "path": "98"
    },
    "671": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "DUP2",
      "path": "98"
    },
    "672": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "DUP2",
      "path": "98"
    },
    "673": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "MSTORE",
      "path": "98"
    },
    "674": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "PUSH1",
      "path": "98",
      "value": "0x20"
    },
    "676": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "ADD",
      "path": "98"
    },
    "677": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "DUP3",
      "path": "98"
    },
    "678": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "DUP1",
      "path": "98"
    },
    "679": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "SLOAD",
      "path": "98"
    },
    "680": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "PUSH2",
      "path": "98",
      "value": "0x2B0"
    },
    "683": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "SWAP1",
      "path": "98"
    },
    "684": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "PUSH2",
      "path": "98",
      "value": "0x106C"
    },
    "687": {
      "fn": "ERC1155.uri",
      "jump": "i",
      "offset": [
        1949,
        1960
      ],
      "op": "JUMP",
      "path": "98"
    },
    "688": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "JUMPDEST",
      "path": "98"
    },
    "689": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "DUP1",
      "path": "98"
    },
    "690": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "ISZERO",
      "path": "98"
    },
    "691": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "PUSH2",
      "path": "98",
      "value": "0x2FD"
    },
    "694": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "JUMPI",
      "path": "98"
    },
    "695": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "DUP1",
      "path": "98"
    },
    "696": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "PUSH1",
      "path": "98",
      "value": "0x1F"
    },
    "698": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "LT",
      "path": "98"
    },
    "699": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "PUSH2",
      "path": "98",
      "value": "0x2D2"
    },
    "702": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "JUMPI",
      "path": "98"
    },
    "703": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "PUSH2",
      "path": "98",
      "value": "0x100"
    },
    "706": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "DUP1",
      "path": "98"
    },
    "707": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "DUP4",
      "path": "98"
    },
    "708": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "SLOAD",
      "path": "98"
    },
    "709": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "DIV",
      "path": "98"
    },
    "710": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "MUL",
      "path": "98"
    },
    "711": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "DUP4",
      "path": "98"
    },
    "712": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "MSTORE",
      "path": "98"
    },
    "713": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "SWAP2",
      "path": "98"
    },
    "714": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "PUSH1",
      "path": "98",
      "value": "0x20"
    },
    "716": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "ADD",
      "path": "98"
    },
    "717": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "SWAP2",
      "path": "98"
    },
    "718": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "PUSH2",
      "path": "98",
      "value": "0x2FD"
    },
    "721": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "JUMP",
      "path": "98"
    },
    "722": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "JUMPDEST",
      "path": "98"
    },
    "723": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "DUP3",
      "path": "98"
    },
    "724": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "ADD",
      "path": "98"
    },
    "725": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "SWAP2",
      "path": "98"
    },
    "726": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "SWAP1",
      "path": "98"
    },
    "727": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "PUSH1",
      "path": "98",
      "value": "0x0"
    },
    "729": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "MSTORE",
      "path": "98"
    },
    "730": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "PUSH1",
      "path": "98",
      "value": "0x20"
    },
    "732": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "PUSH1",
      "path": "98",
      "value": "0x0"
    },
    "734": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "KECCAK256",
      "path": "98"
    },
    "735": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "SWAP1",
      "path": "98"
    },
    "736": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "JUMPDEST",
      "path": "98"
    },
    "737": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "DUP2",
      "path": "98"
    },
    "738": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "SLOAD",
      "path": "98"
    },
    "739": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "DUP2",
      "path": "98"
    },
    "740": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "MSTORE",
      "path": "98"
    },
    "741": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "SWAP1",
      "path": "98"
    },
    "742": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "PUSH1",
      "path": "98",
      "value": "0x1"
    },
    "744": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "ADD",
      "path": "98"
    },
    "745": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "SWAP1",
      "path": "98"
    },
    "746": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "PUSH1",
      "path": "98",
      "value": "0x20"
    },
    "748": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "ADD",
      "path": "98"
    },
    "749": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "DUP1",
      "path": "98"
    },
    "750": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "DUP4",
      "path": "98"
    },
    "751": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "GT",
      "path": "98"
    },
    "752": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "PUSH2",
      "path": "98",
      "value": "0x2E0"
    },
    "755": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "JUMPI",
      "path": "98"
    },
    "756": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "DUP3",
      "path": "98"
    },
    "757": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "SWAP1",
      "path": "98"
    },
    "758": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "SUB",
      "path": "98"
    },
    "759": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "PUSH1",
      "path": "98",
      "value": "0x1F"
    },
    "761": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "AND",
      "path": "98"
    },
    "762": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "DUP3",
      "path": "98"
    },
    "763": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "ADD",
      "path": "98"
    },
    "764": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "SWAP2",
      "path": "98"
    },
    "765": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "JUMPDEST",
      "path": "98"
    },
    "766": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "POP",
      "path": "98"
    },
    "767": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "POP",
      "path": "98"
    },
    "768": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "POP",
      "path": "98"
    },
    "769": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "POP",
      "path": "98"
    },
    "770": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "POP",
      "path": "98"
    },
    "771": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "SWAP1",
      "path": "98"
    },
    "772": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "POP",
      "path": "98"
    },
    "773": {
      "fn": "ERC1155.uri",
      "offset": [
        1864,
        1967
      ],
      "op": "SWAP2",
      "path": "98"
    },
    "774": {
      "fn": "ERC1155.uri",
      "offset": [
        1864,
        1967
      ],
      "op": "SWAP1",
      "path": "98"
    },
    "775": {
      "fn": "ERC1155.uri",
      "offset": [
        1864,
        1967
      ],
      "op": "POP",
      "path": "98"
    },
    "776": {
      "fn": "ERC1155.uri",
      "jump": "o",
      "offset": [
        1864,
        1967
      ],
      "op": "JUMP",
      "path": "98"
    },
    "777": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4137,
        4567
      ],
      "op": "JUMPDEST",
      "path": "98"
    },
    "778": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "780": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "782": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "784": {
      "op": "SHL"
    },
    "785": {
      "op": "SUB"
    },
    "786": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4362,
        4382
      ],
      "op": "DUP6",
      "path": "98",
      "statement": 6
    },
    "787": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4362,
        4382
      ],
      "op": "AND",
      "path": "98"
    },
    "788": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "143",
      "statement": 7
    },
    "789": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4362,
        4382
      ],
      "op": "EQ",
      "path": "98"
    },
    "790": {
      "branch": 41,
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4362,
        4382
      ],
      "op": "DUP1",
      "path": "98"
    },
    "791": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4362,
        4422
      ],
      "op": "PUSH2",
      "path": "98",
      "value": "0x325"
    },
    "794": {
      "branch": 41,
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4362,
        4422
      ],
      "op": "JUMPI",
      "path": "98"
    },
    "795": {
      "op": "POP"
    },
    "796": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4386,
        4422
      ],
      "op": "PUSH2",
      "path": "98",
      "value": "0x325"
    },
    "799": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4403,
        4407
      ],
      "op": "DUP6",
      "path": "98"
    },
    "800": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "143"
    },
    "801": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3443,
        3609
      ],
      "op": "PUSH2",
      "path": "98",
      "value": "0x14B"
    },
    "804": {
      "fn": "ERC1155.isApprovedForAll",
      "jump": "i",
      "offset": [
        3443,
        3609
      ],
      "op": "JUMP",
      "path": "98"
    },
    "805": {
      "branch": 42,
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4386,
        4422
      ],
      "op": "JUMPDEST",
      "path": "98"
    },
    "806": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4341,
        4498
      ],
      "op": "PUSH2",
      "path": "98",
      "value": "0x38C"
    },
    "809": {
      "branch": 42,
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4341,
        4498
      ],
      "op": "JUMPI",
      "path": "98"
    },
    "810": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4341,
        4498
      ],
      "op": "PUSH1",
      "path": "98",
      "value": "0x40"
    },
    "812": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4341,
        4498
      ],
      "op": "MLOAD",
      "path": "98"
    },
    "813": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "817": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "819": {
      "op": "SHL"
    },
    "820": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4341,
        4498
      ],
      "op": "DUP2",
      "path": "98"
    },
    "821": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4341,
        4498
      ],
      "op": "MSTORE",
      "path": "98"
    },
    "822": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "824": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4341,
        4498
      ],
      "op": "PUSH1",
      "path": "98",
      "value": "0x4"
    },
    "826": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4341,
        4498
      ],
      "op": "DUP3",
      "path": "98"
    },
    "827": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4341,
        4498
      ],
      "op": "ADD",
      "path": "98"
    },
    "828": {
      "op": "MSTORE"
    },
    "829": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "831": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "833": {
      "op": "DUP3"
    },
    "834": {
      "op": "ADD"
    },
    "835": {
      "op": "MSTORE"
    },
    "836": {
      "op": "PUSH32",
      "value": "0x455243313135353A207472616E736665722063616C6C6572206973206E6F7420"
    },
    "869": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "871": {
      "op": "DUP3"
    },
    "872": {
      "op": "ADD"
    },
    "873": {
      "op": "MSTORE"
    },
    "874": {
      "op": "PUSH18",
      "value": "0x1BDDDB995C881B9BDC88185C1C1C9BDD9959"
    },
    "893": {
      "op": "PUSH1",
      "value": "0x72"
    },
    "895": {
      "op": "SHL"
    },
    "896": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "898": {
      "op": "DUP3"
    },
    "899": {
      "op": "ADD"
    },
    "900": {
      "op": "MSTORE"
    },
    "901": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "903": {
      "op": "ADD"
    },
    "904": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4341,
        4498
      ],
      "op": "PUSH2",
      "path": "98",
      "value": "0x1F4"
    },
    "907": {
      "op": "JUMP"
    },
    "908": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4341,
        4498
      ],
      "op": "JUMPDEST",
      "path": "98"
    },
    "909": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4508,
        4560
      ],
      "op": "PUSH2",
      "path": "98",
      "statement": 8,
      "value": "0x399"
    },
    "912": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4531,
        4535
      ],
      "op": "DUP6",
      "path": "98"
    },
    "913": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4537,
        4539
      ],
      "op": "DUP6",
      "path": "98"
    },
    "914": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4541,
        4544
      ],
      "op": "DUP6",
      "path": "98"
    },
    "915": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4546,
        4553
      ],
      "op": "DUP6",
      "path": "98"
    },
    "916": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4555,
        4559
      ],
      "op": "DUP6",
      "path": "98"
    },
    "917": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4508,
        4530
      ],
      "op": "PUSH2",
      "path": "98",
      "value": "0x628"
    },
    "920": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "jump": "i",
      "offset": [
        4508,
        4560
      ],
      "op": "JUMP",
      "path": "98"
    },
    "921": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4508,
        4560
      ],
      "op": "JUMPDEST",
      "path": "98"
    },
    "922": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4137,
        4567
      ],
      "op": "POP",
      "path": "98"
    },
    "923": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4137,
        4567
      ],
      "op": "POP",
      "path": "98"
    },
    "924": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4137,
        4567
      ],
      "op": "POP",
      "path": "98"
    },
    "925": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4137,
        4567
      ],
      "op": "POP",
      "path": "98"
    },
    "926": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4137,
        4567
      ],
      "op": "POP",
      "path": "98"
    },
    "927": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "jump": "o",
      "offset": [
        4137,
        4567
      ],
      "op": "JUMP",
      "path": "98"
    },
    "928": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2494,
        3002
      ],
      "op": "JUMPDEST",
      "path": "98"
    },
    "929": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2645,
        2661
      ],
      "op": "PUSH1",
      "path": "98",
      "value": "0x60"
    },
    "931": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2704,
        2707
      ],
      "op": "DUP2",
      "path": "98",
      "statement": 9
    },
    "932": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2704,
        2714
      ],
      "op": "MLOAD",
      "path": "98"
    },
    "933": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2685,
        2693
      ],
      "op": "DUP4",
      "path": "98"
    },
    "934": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2685,
        2700
      ],
      "op": "MLOAD",
      "path": "98"
    },
    "935": {
      "branch": 43,
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2685,
        2714
      ],
      "op": "EQ",
      "path": "98"
    },
    "936": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2677,
        2760
      ],
      "op": "PUSH2",
      "path": "98",
      "value": "0x405"
    },
    "939": {
      "branch": 43,
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2677,
        2760
      ],
      "op": "JUMPI",
      "path": "98"
    },
    "940": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2677,
        2760
      ],
      "op": "PUSH1",
      "path": "98",
      "value": "0x40"
    },
    "942": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2677,
        2760
      ],
      "op": "MLOAD",
      "path": "98"
    },
    "943": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "947": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "949": {
      "op": "SHL"
    },
    "950": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2677,
        2760
      ],
      "op": "DUP2",
      "path": "98"
    },
    "951": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2677,
        2760
      ],
      "op": "MSTORE",
      "path": "98"
    },
    "952": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "954": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2677,
        2760
      ],
      "op": "PUSH1",
      "path": "98",
      "value": "0x4"
    },
    "956": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2677,
        2760
      ],
      "op": "DUP3",
      "path": "98"
    },
    "957": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2677,
        2760
      ],
      "op": "ADD",
      "path": "98"
    },
    "958": {
      "op": "MSTORE"
    },
    "959": {
      "op": "PUSH1",
      "value": "0x29"
    },
    "961": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "963": {
      "op": "DUP3"
    },
    "964": {
      "op": "ADD"
    },
    "965": {
      "op": "MSTORE"
    },
    "966": {
      "op": "PUSH32",
      "value": "0x455243313135353A206163636F756E747320616E6420696473206C656E677468"
    },
    "999": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1001": {
      "op": "DUP3"
    },
    "1002": {
      "op": "ADD"
    },
    "1003": {
      "op": "MSTORE"
    },
    "1004": {
      "op": "PUSH9",
      "value": "0x40DAD2E6DAC2E8C6D"
    },
    "1014": {
      "op": "PUSH1",
      "value": "0xBB"
    },
    "1016": {
      "op": "SHL"
    },
    "1017": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1019": {
      "op": "DUP3"
    },
    "1020": {
      "op": "ADD"
    },
    "1021": {
      "op": "MSTORE"
    },
    "1022": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1024": {
      "op": "ADD"
    },
    "1025": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2677,
        2760
      ],
      "op": "PUSH2",
      "path": "98",
      "value": "0x1F4"
    },
    "1028": {
      "op": "JUMP"
    },
    "1029": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2677,
        2760
      ],
      "op": "JUMPDEST",
      "path": "98"
    },
    "1030": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2771,
        2801
      ],
      "op": "PUSH1",
      "path": "98",
      "value": "0x0"
    },
    "1032": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2818,
        2826
      ],
      "op": "DUP4",
      "path": "98"
    },
    "1033": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2818,
        2833
      ],
      "op": "MLOAD",
      "path": "98"
    },
    "1034": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2804,
        2834
      ],
      "op": "PUSH8",
      "path": "98",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "1043": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2804,
        2834
      ],
      "op": "DUP2",
      "path": "98"
    },
    "1044": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2804,
        2834
      ],
      "op": "GT",
      "path": "98"
    },
    "1045": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2804,
        2834
      ],
      "op": "ISZERO",
      "path": "98"
    },
    "1046": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2804,
        2834
      ],
      "op": "PUSH2",
      "path": "98",
      "value": "0x421"
    },
    "1049": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2804,
        2834
      ],
      "op": "JUMPI",
      "path": "98"
    },
    "1050": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2804,
        2834
      ],
      "op": "PUSH2",
      "path": "98",
      "value": "0x421"
    },
    "1053": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2804,
        2834
      ],
      "op": "PUSH2",
      "path": "98",
      "value": "0xC89"
    },
    "1056": {
      "fn": "ERC1155.balanceOfBatch",
      "jump": "i",
      "offset": [
        2804,
        2834
      ],
      "op": "JUMP",
      "path": "98"
    },
    "1057": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2804,
        2834
      ],
      "op": "JUMPDEST",
      "path": "98"
    },
    "1058": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2804,
        2834
      ],
      "op": "PUSH1",
      "path": "98",
      "value": "0x40"
    },
    "1060": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2804,
        2834
      ],
      "op": "MLOAD",
      "path": "98"
    },
    "1061": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2804,
        2834
      ],
      "op": "SWAP1",
      "path": "98"
    },
    "1062": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2804,
        2834
      ],
      "op": "DUP1",
      "path": "98"
    },
    "1063": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2804,
        2834
      ],
      "op": "DUP3",
      "path": "98"
    },
    "1064": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2804,
        2834
      ],
      "op": "MSTORE",
      "path": "98"
    },
    "1065": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2804,
        2834
      ],
      "op": "DUP1",
      "path": "98"
    },
    "1066": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2804,
        2834
      ],
      "op": "PUSH1",
      "path": "98",
      "value": "0x20"
    },
    "1068": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2804,
        2834
      ],
      "op": "MUL",
      "path": "98"
    },
    "1069": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2804,
        2834
      ],
      "op": "PUSH1",
      "path": "98",
      "value": "0x20"
    },
    "1071": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2804,
        2834
      ],
      "op": "ADD",
      "path": "98"
    },
    "1072": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2804,
        2834
      ],
      "op": "DUP3",
      "path": "98"
    },
    "1073": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2804,
        2834
      ],
      "op": "ADD",
      "path": "98"
    },
    "1074": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2804,
        2834
      ],
      "op": "PUSH1",
      "path": "98",
      "value": "0x40"
    },
    "1076": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2804,
        2834
      ],
      "op": "MSTORE",
      "path": "98"
    },
    "1077": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2804,
        2834
      ],
      "op": "DUP1",
      "path": "98"
    },
    "1078": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2804,
        2834
      ],
      "op": "ISZERO",
      "path": "98"
    },
    "1079": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2804,
        2834
      ],
      "op": "PUSH2",
      "path": "98",
      "value": "0x44A"
    },
    "1082": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2804,
        2834
      ],
      "op": "JUMPI",
      "path": "98"
    },
    "1083": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2804,
        2834
      ],
      "op": "DUP2",
      "path": "98"
    },
    "1084": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2804,
        2834
      ],
      "op": "PUSH1",
      "path": "98",
      "value": "0x20"
    },
    "1086": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2804,
        2834
      ],
      "op": "ADD",
      "path": "98"
    },
    "1087": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2804,
        2834
      ],
      "op": "PUSH1",
      "path": "98",
      "value": "0x20"
    },
    "1089": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2804,
        2834
      ],
      "op": "DUP3",
      "path": "98"
    },
    "1090": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2804,
        2834
      ],
      "op": "MUL",
      "path": "98"
    },
    "1091": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2804,
        2834
      ],
      "op": "DUP1",
      "path": "98"
    },
    "1092": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2804,
        2834
      ],
      "op": "CALLDATASIZE",
      "path": "98"
    },
    "1093": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2804,
        2834
      ],
      "op": "DUP4",
      "path": "98"
    },
    "1094": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2804,
        2834
      ],
      "op": "CALLDATACOPY",
      "path": "98"
    },
    "1095": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2804,
        2834
      ],
      "op": "ADD",
      "path": "98"
    },
    "1096": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2804,
        2834
      ],
      "op": "SWAP1",
      "path": "98"
    },
    "1097": {
      "op": "POP"
    },
    "1098": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2804,
        2834
      ],
      "op": "JUMPDEST",
      "path": "98"
    },
    "1099": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2804,
        2834
      ],
      "op": "POP",
      "path": "98"
    },
    "1100": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2771,
        2834
      ],
      "op": "SWAP1",
      "path": "98"
    },
    "1101": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2771,
        2834
      ],
      "op": "POP",
      "path": "98"
    },
    "1102": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2850,
        2859
      ],
      "op": "PUSH1",
      "path": "98",
      "value": "0x0"
    },
    "1104": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2845,
        2965
      ],
      "op": "JUMPDEST",
      "path": "98"
    },
    "1105": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2869,
        2877
      ],
      "op": "DUP5",
      "path": "98"
    },
    "1106": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2869,
        2884
      ],
      "op": "MLOAD",
      "path": "98"
    },
    "1107": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2865,
        2866
      ],
      "op": "DUP2",
      "path": "98"
    },
    "1108": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2865,
        2884
      ],
      "op": "LT",
      "path": "98"
    },
    "1109": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2845,
        2965
      ],
      "op": "ISZERO",
      "path": "98"
    },
    "1110": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2845,
        2965
      ],
      "op": "PUSH2",
      "path": "98",
      "value": "0x4C2"
    },
    "1113": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2845,
        2965
      ],
      "op": "JUMPI",
      "path": "98"
    },
    "1114": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2924,
        2954
      ],
      "op": "PUSH2",
      "path": "98",
      "statement": 10,
      "value": "0x495"
    },
    "1117": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2934,
        2942
      ],
      "op": "DUP6",
      "path": "98"
    },
    "1118": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2943,
        2944
      ],
      "op": "DUP3",
      "path": "98"
    },
    "1119": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2934,
        2945
      ],
      "op": "DUP2",
      "path": "98"
    },
    "1120": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2934,
        2945
      ],
      "op": "MLOAD",
      "path": "98"
    },
    "1121": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2934,
        2945
      ],
      "op": "DUP2",
      "path": "98"
    },
    "1122": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2934,
        2945
      ],
      "op": "LT",
      "path": "98"
    },
    "1123": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2934,
        2945
      ],
      "op": "PUSH2",
      "path": "98",
      "value": "0x46E"
    },
    "1126": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2934,
        2945
      ],
      "op": "JUMPI",
      "path": "98"
    },
    "1127": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2934,
        2945
      ],
      "op": "PUSH2",
      "path": "98",
      "value": "0x46E"
    },
    "1130": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2934,
        2945
      ],
      "op": "PUSH2",
      "path": "98",
      "value": "0x10A7"
    },
    "1133": {
      "fn": "ERC1155.balanceOfBatch",
      "jump": "i",
      "offset": [
        2934,
        2945
      ],
      "op": "JUMP",
      "path": "98"
    },
    "1134": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2934,
        2945
      ],
      "op": "JUMPDEST",
      "path": "98"
    },
    "1135": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2934,
        2945
      ],
      "op": "PUSH1",
      "path": "98",
      "value": "0x20"
    },
    "1137": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2934,
        2945
      ],
      "op": "MUL",
      "path": "98"
    },
    "1138": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2934,
        2945
      ],
      "op": "PUSH1",
      "path": "98",
      "value": "0x20"
    },
    "1140": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2934,
        2945
      ],
      "op": "ADD",
      "path": "98"
    },
    "1141": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2934,
        2945
      ],
      "op": "ADD",
      "path": "98"
    },
    "1142": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2934,
        2945
      ],
      "op": "MLOAD",
      "path": "98"
    },
    "1143": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2947,
        2950
      ],
      "op": "DUP6",
      "path": "98"
    },
    "1144": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2951,
        2952
      ],
      "op": "DUP4",
      "path": "98"
    },
    "1145": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2947,
        2953
      ],
      "op": "DUP2",
      "path": "98"
    },
    "1146": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2947,
        2953
      ],
      "op": "MLOAD",
      "path": "98"
    },
    "1147": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2947,
        2953
      ],
      "op": "DUP2",
      "path": "98"
    },
    "1148": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2947,
        2953
      ],
      "op": "LT",
      "path": "98"
    },
    "1149": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2947,
        2953
      ],
      "op": "PUSH2",
      "path": "98",
      "value": "0x488"
    },
    "1152": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2947,
        2953
      ],
      "op": "JUMPI",
      "path": "98"
    },
    "1153": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2947,
        2953
      ],
      "op": "PUSH2",
      "path": "98",
      "value": "0x488"
    },
    "1156": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2947,
        2953
      ],
      "op": "PUSH2",
      "path": "98",
      "value": "0x10A7"
    },
    "1159": {
      "fn": "ERC1155.balanceOfBatch",
      "jump": "i",
      "offset": [
        2947,
        2953
      ],
      "op": "JUMP",
      "path": "98"
    },
    "1160": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2947,
        2953
      ],
      "op": "JUMPDEST",
      "path": "98"
    },
    "1161": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2947,
        2953
      ],
      "op": "PUSH1",
      "path": "98",
      "value": "0x20"
    },
    "1163": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2947,
        2953
      ],
      "op": "MUL",
      "path": "98"
    },
    "1164": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2947,
        2953
      ],
      "op": "PUSH1",
      "path": "98",
      "value": "0x20"
    },
    "1166": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2947,
        2953
      ],
      "op": "ADD",
      "path": "98"
    },
    "1167": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2947,
        2953
      ],
      "op": "ADD",
      "path": "98"
    },
    "1168": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2947,
        2953
      ],
      "op": "MLOAD",
      "path": "98"
    },
    "1169": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2924,
        2933
      ],
      "op": "PUSH2",
      "path": "98",
      "value": "0x18C"
    },
    "1172": {
      "fn": "ERC1155.balanceOfBatch",
      "jump": "i",
      "offset": [
        2924,
        2954
      ],
      "op": "JUMP",
      "path": "98"
    },
    "1173": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2924,
        2954
      ],
      "op": "JUMPDEST",
      "path": "98"
    },
    "1174": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2905,
        2918
      ],
      "op": "DUP3",
      "path": "98"
    },
    "1175": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2919,
        2920
      ],
      "op": "DUP3",
      "path": "98"
    },
    "1176": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2905,
        2921
      ],
      "op": "DUP2",
      "path": "98"
    },
    "1177": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2905,
        2921
      ],
      "op": "MLOAD",
      "path": "98"
    },
    "1178": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2905,
        2921
      ],
      "op": "DUP2",
      "path": "98"
    },
    "1179": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2905,
        2921
      ],
      "op": "LT",
      "path": "98"
    },
    "1180": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2905,
        2921
      ],
      "op": "PUSH2",
      "path": "98",
      "value": "0x4A7"
    },
    "1183": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2905,
        2921
      ],
      "op": "JUMPI",
      "path": "98"
    },
    "1184": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2905,
        2921
      ],
      "op": "PUSH2",
      "path": "98",
      "value": "0x4A7"
    },
    "1187": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2905,
        2921
      ],
      "op": "PUSH2",
      "path": "98",
      "value": "0x10A7"
    },
    "1190": {
      "fn": "ERC1155.balanceOfBatch",
      "jump": "i",
      "offset": [
        2905,
        2921
      ],
      "op": "JUMP",
      "path": "98"
    },
    "1191": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2905,
        2921
      ],
      "op": "JUMPDEST",
      "path": "98"
    },
    "1192": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2905,
        2921
      ],
      "op": "PUSH1",
      "path": "98",
      "value": "0x20"
    },
    "1194": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2905,
        2921
      ],
      "op": "SWAP1",
      "path": "98"
    },
    "1195": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2905,
        2921
      ],
      "op": "DUP2",
      "path": "98"
    },
    "1196": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2905,
        2921
      ],
      "op": "MUL",
      "path": "98"
    },
    "1197": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2905,
        2921
      ],
      "op": "SWAP2",
      "path": "98"
    },
    "1198": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2905,
        2921
      ],
      "op": "SWAP1",
      "path": "98"
    },
    "1199": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2905,
        2921
      ],
      "op": "SWAP2",
      "path": "98"
    },
    "1200": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2905,
        2921
      ],
      "op": "ADD",
      "path": "98"
    },
    "1201": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2905,
        2921
      ],
      "op": "ADD",
      "path": "98"
    },
    "1202": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2905,
        2954
      ],
      "op": "MSTORE",
      "path": "98"
    },
    "1203": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2886,
        2889
      ],
      "op": "PUSH2",
      "path": "98",
      "statement": 11,
      "value": "0x4BB"
    },
    "1206": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2886,
        2889
      ],
      "op": "DUP2",
      "path": "98"
    },
    "1207": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2886,
        2889
      ],
      "op": "PUSH2",
      "path": "98",
      "value": "0x10D3"
    },
    "1210": {
      "fn": "ERC1155.balanceOfBatch",
      "jump": "i",
      "offset": [
        2886,
        2889
      ],
      "op": "JUMP",
      "path": "98"
    },
    "1211": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2886,
        2889
      ],
      "op": "JUMPDEST",
      "path": "98"
    },
    "1212": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2886,
        2889
      ],
      "op": "SWAP1",
      "path": "98"
    },
    "1213": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2886,
        2889
      ],
      "op": "POP",
      "path": "98"
    },
    "1214": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2845,
        2965
      ],
      "op": "PUSH2",
      "path": "98",
      "value": "0x450"
    },
    "1217": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2845,
        2965
      ],
      "op": "JUMP",
      "path": "98"
    },
    "1218": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2845,
        2965
      ],
      "op": "JUMPDEST",
      "path": "98"
    },
    "1219": {
      "op": "POP"
    },
    "1220": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2982,
        2995
      ],
      "op": "SWAP4",
      "path": "98",
      "statement": 12
    },
    "1221": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2494,
        3002
      ],
      "op": "SWAP3",
      "path": "98"
    },
    "1222": {
      "op": "POP"
    },
    "1223": {
      "op": "POP"
    },
    "1224": {
      "op": "POP"
    },
    "1225": {
      "fn": "ERC1155.balanceOfBatch",
      "jump": "o",
      "offset": [
        2494,
        3002
      ],
      "op": "JUMP",
      "path": "98"
    },
    "1226": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3070,
        3376
      ],
      "op": "JUMPDEST",
      "path": "98"
    },
    "1227": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "143"
    },
    "1228": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1230": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1232": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1234": {
      "op": "SHL"
    },
    "1235": {
      "op": "SUB"
    },
    "1236": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3172,
        3196
      ],
      "op": "DUP4",
      "path": "98",
      "statement": 13
    },
    "1237": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3172,
        3196
      ],
      "op": "AND",
      "path": "98"
    },
    "1238": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3172,
        3196
      ],
      "op": "EQ",
      "path": "98"
    },
    "1239": {
      "branch": 44,
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3172,
        3196
      ],
      "op": "ISZERO",
      "path": "98"
    },
    "1240": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3164,
        3242
      ],
      "op": "PUSH2",
      "path": "98",
      "value": "0x535"
    },
    "1243": {
      "branch": 44,
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3164,
        3242
      ],
      "op": "JUMPI",
      "path": "98"
    },
    "1244": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3164,
        3242
      ],
      "op": "PUSH1",
      "path": "98",
      "value": "0x40"
    },
    "1246": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3164,
        3242
      ],
      "op": "MLOAD",
      "path": "98"
    },
    "1247": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1251": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1253": {
      "op": "SHL"
    },
    "1254": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3164,
        3242
      ],
      "op": "DUP2",
      "path": "98"
    },
    "1255": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3164,
        3242
      ],
      "op": "MSTORE",
      "path": "98"
    },
    "1256": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1258": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3164,
        3242
      ],
      "op": "PUSH1",
      "path": "98",
      "value": "0x4"
    },
    "1260": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3164,
        3242
      ],
      "op": "DUP3",
      "path": "98"
    },
    "1261": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3164,
        3242
      ],
      "op": "ADD",
      "path": "98"
    },
    "1262": {
      "op": "MSTORE"
    },
    "1263": {
      "op": "PUSH1",
      "value": "0x29"
    },
    "1265": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1267": {
      "op": "DUP3"
    },
    "1268": {
      "op": "ADD"
    },
    "1269": {
      "op": "MSTORE"
    },
    "1270": {
      "op": "PUSH32",
      "value": "0x455243313135353A2073657474696E6720617070726F76616C20737461747573"
    },
    "1303": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1305": {
      "op": "DUP3"
    },
    "1306": {
      "op": "ADD"
    },
    "1307": {
      "op": "MSTORE"
    },
    "1308": {
      "op": "PUSH9",
      "value": "0x103337B91039B2B633"
    },
    "1318": {
      "op": "PUSH1",
      "value": "0xB9"
    },
    "1320": {
      "op": "SHL"
    },
    "1321": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1323": {
      "op": "DUP3"
    },
    "1324": {
      "op": "ADD"
    },
    "1325": {
      "op": "MSTORE"
    },
    "1326": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1328": {
      "op": "ADD"
    },
    "1329": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3164,
        3242
      ],
      "op": "PUSH2",
      "path": "98",
      "value": "0x1F4"
    },
    "1332": {
      "op": "JUMP"
    },
    "1333": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3164,
        3242
      ],
      "op": "JUMPDEST",
      "path": "98"
    },
    "1334": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "143"
    },
    "1335": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3253,
        3285
      ],
      "op": "PUSH1",
      "path": "98",
      "statement": 14,
      "value": "0x0"
    },
    "1337": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3253,
        3285
      ],
      "op": "DUP2",
      "path": "98"
    },
    "1338": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3253,
        3285
      ],
      "op": "DUP2",
      "path": "98"
    },
    "1339": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3253,
        3285
      ],
      "op": "MSTORE",
      "path": "98"
    },
    "1340": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3253,
        3271
      ],
      "op": "PUSH1",
      "path": "98",
      "value": "0x1"
    },
    "1342": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3253,
        3285
      ],
      "op": "PUSH1",
      "path": "98",
      "value": "0x20"
    },
    "1344": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3253,
        3285
      ],
      "op": "SWAP1",
      "path": "98"
    },
    "1345": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3253,
        3285
      ],
      "op": "DUP2",
      "path": "98"
    },
    "1346": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3253,
        3285
      ],
      "op": "MSTORE",
      "path": "98"
    },
    "1347": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3253,
        3285
      ],
      "op": "PUSH1",
      "path": "98",
      "value": "0x40"
    },
    "1349": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3253,
        3285
      ],
      "op": "DUP1",
      "path": "98"
    },
    "1350": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3253,
        3285
      ],
      "op": "DUP4",
      "path": "98"
    },
    "1351": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3253,
        3285
      ],
      "op": "KECCAK256",
      "path": "98"
    },
    "1352": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1354": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1356": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1358": {
      "op": "SHL"
    },
    "1359": {
      "op": "SUB"
    },
    "1360": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3253,
        3295
      ],
      "op": "DUP8",
      "path": "98"
    },
    "1361": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3253,
        3295
      ],
      "op": "AND",
      "path": "98"
    },
    "1362": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3253,
        3295
      ],
      "op": "DUP1",
      "path": "98"
    },
    "1363": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3253,
        3295
      ],
      "op": "DUP6",
      "path": "98"
    },
    "1364": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3253,
        3295
      ],
      "op": "MSTORE",
      "path": "98"
    },
    "1365": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3253,
        3295
      ],
      "op": "SWAP1",
      "path": "98"
    },
    "1366": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3253,
        3295
      ],
      "op": "DUP4",
      "path": "98"
    },
    "1367": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3253,
        3295
      ],
      "op": "MSTORE",
      "path": "98"
    },
    "1368": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3253,
        3295
      ],
      "op": "SWAP3",
      "path": "98"
    },
    "1369": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3253,
        3295
      ],
      "op": "DUP2",
      "path": "98"
    },
    "1370": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3253,
        3295
      ],
      "op": "SWAP1",
      "path": "98"
    },
    "1371": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3253,
        3295
      ],
      "op": "KECCAK256",
      "path": "98"
    },
    "1372": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3253,
        3306
      ],
      "op": "DUP1",
      "path": "98"
    },
    "1373": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3253,
        3306
      ],
      "op": "SLOAD",
      "path": "98"
    },
    "1374": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1376": {
      "op": "NOT"
    },
    "1377": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3253,
        3306
      ],
      "op": "AND",
      "path": "98"
    },
    "1378": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3253,
        3306
      ],
      "op": "DUP7",
      "path": "98"
    },
    "1379": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3253,
        3306
      ],
      "op": "ISZERO",
      "path": "98"
    },
    "1380": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3253,
        3306
      ],
      "op": "ISZERO",
      "path": "98"
    },
    "1381": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3253,
        3306
      ],
      "op": "SWAP1",
      "path": "98"
    },
    "1382": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3253,
        3306
      ],
      "op": "DUP2",
      "path": "98"
    },
    "1383": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3253,
        3306
      ],
      "op": "OR",
      "path": "98"
    },
    "1384": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3253,
        3306
      ],
      "op": "SWAP1",
      "path": "98"
    },
    "1385": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3253,
        3306
      ],
      "op": "SWAP2",
      "path": "98"
    },
    "1386": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3253,
        3306
      ],
      "op": "SSTORE",
      "path": "98"
    },
    "1387": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3321,
        3369
      ],
      "op": "SWAP1",
      "path": "98",
      "statement": 15
    },
    "1388": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3321,
        3369
      ],
      "op": "MLOAD",
      "path": "98"
    },
    "1389": {
      "op": "SWAP1"
    },
    "1390": {
      "op": "DUP2"
    },
    "1391": {
      "op": "MSTORE"
    },
    "1392": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3253,
        3295
      ],
      "op": "SWAP2",
      "path": "98"
    },
    "1393": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3253,
        3295
      ],
      "op": "SWAP3",
      "path": "98"
    },
    "1394": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "SWAP2",
      "path": "143"
    },
    "1395": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3321,
        3369
      ],
      "op": "PUSH32",
      "path": "98",
      "value": "0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
    },
    "1428": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3321,
        3369
      ],
      "op": "SWAP2",
      "path": "98"
    },
    "1429": {
      "op": "ADD"
    },
    "1430": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3321,
        3369
      ],
      "op": "PUSH1",
      "path": "98",
      "value": "0x40"
    },
    "1432": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3321,
        3369
      ],
      "op": "MLOAD",
      "path": "98"
    },
    "1433": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3321,
        3369
      ],
      "op": "DUP1",
      "path": "98"
    },
    "1434": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3321,
        3369
      ],
      "op": "SWAP2",
      "path": "98"
    },
    "1435": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3321,
        3369
      ],
      "op": "SUB",
      "path": "98"
    },
    "1436": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3321,
        3369
      ],
      "op": "SWAP1",
      "path": "98"
    },
    "1437": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3321,
        3369
      ],
      "op": "LOG3",
      "path": "98"
    },
    "1438": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3070,
        3376
      ],
      "op": "POP",
      "path": "98"
    },
    "1439": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3070,
        3376
      ],
      "op": "POP",
      "path": "98"
    },
    "1440": {
      "fn": "ERC1155.setApprovalForAll",
      "jump": "o",
      "offset": [
        3070,
        3376
      ],
      "op": "JUMP",
      "path": "98"
    },
    "1441": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3676,
        4065
      ],
      "op": "JUMPDEST",
      "path": "98"
    },
    "1442": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1444": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1446": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1448": {
      "op": "SHL"
    },
    "1449": {
      "op": "SUB"
    },
    "1450": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3876,
        3896
      ],
      "op": "DUP6",
      "path": "98",
      "statement": 16
    },
    "1451": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3876,
        3896
      ],
      "op": "AND",
      "path": "98"
    },
    "1452": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "143"
    },
    "1453": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3876,
        3896
      ],
      "op": "EQ",
      "path": "98"
    },
    "1454": {
      "branch": 45,
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3876,
        3896
      ],
      "op": "DUP1",
      "path": "98"
    },
    "1455": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3876,
        3936
      ],
      "op": "PUSH2",
      "path": "98",
      "value": "0x5BD"
    },
    "1458": {
      "branch": 45,
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3876,
        3936
      ],
      "op": "JUMPI",
      "path": "98"
    },
    "1459": {
      "op": "POP"
    },
    "1460": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3900,
        3936
      ],
      "op": "PUSH2",
      "path": "98",
      "value": "0x5BD"
    },
    "1463": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3917,
        3921
      ],
      "op": "DUP6",
      "path": "98"
    },
    "1464": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "143"
    },
    "1465": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3443,
        3609
      ],
      "op": "PUSH2",
      "path": "98",
      "value": "0x14B"
    },
    "1468": {
      "fn": "ERC1155.isApprovedForAll",
      "jump": "i",
      "offset": [
        3443,
        3609
      ],
      "op": "JUMP",
      "path": "98"
    },
    "1469": {
      "branch": 46,
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3900,
        3936
      ],
      "op": "JUMPDEST",
      "path": "98"
    },
    "1470": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3855,
        4003
      ],
      "op": "PUSH2",
      "path": "98",
      "value": "0x61B"
    },
    "1473": {
      "branch": 46,
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3855,
        4003
      ],
      "op": "JUMPI",
      "path": "98"
    },
    "1474": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3855,
        4003
      ],
      "op": "PUSH1",
      "path": "98",
      "value": "0x40"
    },
    "1476": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3855,
        4003
      ],
      "op": "MLOAD",
      "path": "98"
    },
    "1477": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1481": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1483": {
      "op": "SHL"
    },
    "1484": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3855,
        4003
      ],
      "op": "DUP2",
      "path": "98"
    },
    "1485": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3855,
        4003
      ],
      "op": "MSTORE",
      "path": "98"
    },
    "1486": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1488": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3855,
        4003
      ],
      "op": "PUSH1",
      "path": "98",
      "value": "0x4"
    },
    "1490": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3855,
        4003
      ],
      "op": "DUP3",
      "path": "98"
    },
    "1491": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3855,
        4003
      ],
      "op": "ADD",
      "path": "98"
    },
    "1492": {
      "op": "MSTORE"
    },
    "1493": {
      "op": "PUSH1",
      "value": "0x29"
    },
    "1495": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1497": {
      "op": "DUP3"
    },
    "1498": {
      "op": "ADD"
    },
    "1499": {
      "op": "MSTORE"
    },
    "1500": {
      "op": "PUSH32",
      "value": "0x455243313135353A2063616C6C6572206973206E6F74206F776E6572206E6F72"
    },
    "1533": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1535": {
      "op": "DUP3"
    },
    "1536": {
      "op": "ADD"
    },
    "1537": {
      "op": "MSTORE"
    },
    "1538": {
      "op": "PUSH9",
      "value": "0x8185C1C1C9BDD9959"
    },
    "1548": {
      "op": "PUSH1",
      "value": "0xBA"
    },
    "1550": {
      "op": "SHL"
    },
    "1551": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1553": {
      "op": "DUP3"
    },
    "1554": {
      "op": "ADD"
    },
    "1555": {
      "op": "MSTORE"
    },
    "1556": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1558": {
      "op": "ADD"
    },
    "1559": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3855,
        4003
      ],
      "op": "PUSH2",
      "path": "98",
      "value": "0x1F4"
    },
    "1562": {
      "op": "JUMP"
    },
    "1563": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3855,
        4003
      ],
      "op": "JUMPDEST",
      "path": "98"
    },
    "1564": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4013,
        4058
      ],
      "op": "PUSH2",
      "path": "98",
      "statement": 17,
      "value": "0x399"
    },
    "1567": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4031,
        4035
      ],
      "op": "DUP6",
      "path": "98"
    },
    "1568": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4037,
        4039
      ],
      "op": "DUP6",
      "path": "98"
    },
    "1569": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4041,
        4043
      ],
      "op": "DUP6",
      "path": "98"
    },
    "1570": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4045,
        4051
      ],
      "op": "DUP6",
      "path": "98"
    },
    "1571": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4053,
        4057
      ],
      "op": "DUP6",
      "path": "98"
    },
    "1572": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4013,
        4030
      ],
      "op": "PUSH2",
      "path": "98",
      "value": "0x805"
    },
    "1575": {
      "fn": "ERC1155.safeTransferFrom",
      "jump": "i",
      "offset": [
        4013,
        4058
      ],
      "op": "JUMP",
      "path": "98"
    },
    "1576": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6160,
        7205
      ],
      "op": "JUMPDEST",
      "path": "98"
    },
    "1577": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6380,
        6387
      ],
      "op": "DUP2",
      "path": "98",
      "statement": 18
    },
    "1578": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6380,
        6394
      ],
      "op": "MLOAD",
      "path": "98"
    },
    "1579": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6366,
        6369
      ],
      "op": "DUP4",
      "path": "98"
    },
    "1580": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6366,
        6376
      ],
      "op": "MLOAD",
      "path": "98"
    },
    "1581": {
      "branch": 47,
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6366,
        6394
      ],
      "op": "EQ",
      "path": "98"
    },
    "1582": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6358,
        6439
      ],
      "op": "PUSH2",
      "path": "98",
      "value": "0x68A"
    },
    "1585": {
      "branch": 47,
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6358,
        6439
      ],
      "op": "JUMPI",
      "path": "98"
    },
    "1586": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6358,
        6439
      ],
      "op": "PUSH1",
      "path": "98",
      "value": "0x40"
    },
    "1588": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6358,
        6439
      ],
      "op": "MLOAD",
      "path": "98"
    },
    "1589": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1593": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1595": {
      "op": "SHL"
    },
    "1596": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6358,
        6439
      ],
      "op": "DUP2",
      "path": "98"
    },
    "1597": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6358,
        6439
      ],
      "op": "MSTORE",
      "path": "98"
    },
    "1598": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1600": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6358,
        6439
      ],
      "op": "PUSH1",
      "path": "98",
      "value": "0x4"
    },
    "1602": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6358,
        6439
      ],
      "op": "DUP3",
      "path": "98"
    },
    "1603": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6358,
        6439
      ],
      "op": "ADD",
      "path": "98"
    },
    "1604": {
      "op": "MSTORE"
    },
    "1605": {
      "op": "PUSH1",
      "value": "0x28"
    },
    "1607": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1609": {
      "op": "DUP3"
    },
    "1610": {
      "op": "ADD"
    },
    "1611": {
      "op": "MSTORE"
    },
    "1612": {
      "op": "PUSH32",
      "value": "0x455243313135353A2069647320616E6420616D6F756E7473206C656E67746820"
    },
    "1645": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1647": {
      "op": "DUP3"
    },
    "1648": {
      "op": "ADD"
    },
    "1649": {
      "op": "MSTORE"
    },
    "1650": {
      "op": "PUSH8",
      "value": "0xDAD2E6DAC2E8C6D"
    },
    "1659": {
      "op": "PUSH1",
      "value": "0xC3"
    },
    "1661": {
      "op": "SHL"
    },
    "1662": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1664": {
      "op": "DUP3"
    },
    "1665": {
      "op": "ADD"
    },
    "1666": {
      "op": "MSTORE"
    },
    "1667": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1669": {
      "op": "ADD"
    },
    "1670": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6358,
        6439
      ],
      "op": "PUSH2",
      "path": "98",
      "value": "0x1F4"
    },
    "1673": {
      "op": "JUMP"
    },
    "1674": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6358,
        6439
      ],
      "op": "JUMPDEST",
      "path": "98"
    },
    "1675": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1677": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1679": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1681": {
      "op": "SHL"
    },
    "1682": {
      "op": "SUB"
    },
    "1683": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6457,
        6473
      ],
      "op": "DUP5",
      "path": "98",
      "statement": 19
    },
    "1684": {
      "branch": 48,
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6457,
        6473
      ],
      "op": "AND",
      "path": "98"
    },
    "1685": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6449,
        6515
      ],
      "op": "PUSH2",
      "path": "98",
      "value": "0x6B0"
    },
    "1688": {
      "branch": 48,
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6449,
        6515
      ],
      "op": "JUMPI",
      "path": "98"
    },
    "1689": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6449,
        6515
      ],
      "op": "PUSH1",
      "path": "98",
      "value": "0x40"
    },
    "1691": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6449,
        6515
      ],
      "op": "MLOAD",
      "path": "98"
    },
    "1692": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1696": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1698": {
      "op": "SHL"
    },
    "1699": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6449,
        6515
      ],
      "op": "DUP2",
      "path": "98"
    },
    "1700": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6449,
        6515
      ],
      "op": "MSTORE",
      "path": "98"
    },
    "1701": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6449,
        6515
      ],
      "op": "PUSH1",
      "path": "98",
      "value": "0x4"
    },
    "1703": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6449,
        6515
      ],
      "op": "ADD",
      "path": "98"
    },
    "1704": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6449,
        6515
      ],
      "op": "PUSH2",
      "path": "98",
      "value": "0x1F4"
    },
    "1707": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6449,
        6515
      ],
      "op": "SWAP1",
      "path": "98"
    },
    "1708": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6449,
        6515
      ],
      "op": "PUSH2",
      "path": "98",
      "value": "0x10EE"
    },
    "1711": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "jump": "i",
      "offset": [
        6449,
        6515
      ],
      "op": "JUMP",
      "path": "98"
    },
    "1712": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6449,
        6515
      ],
      "op": "JUMPDEST",
      "path": "98"
    },
    "1713": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "143"
    },
    "1714": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6526,
        6542
      ],
      "op": "PUSH1",
      "path": "98",
      "value": "0x0"
    },
    "1716": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6639,
        7050
      ],
      "op": "JUMPDEST",
      "path": "98"
    },
    "1717": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6663,
        6666
      ],
      "op": "DUP5",
      "path": "98"
    },
    "1718": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6663,
        6673
      ],
      "op": "MLOAD",
      "path": "98"
    },
    "1719": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6659,
        6660
      ],
      "op": "DUP2",
      "path": "98"
    },
    "1720": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6659,
        6673
      ],
      "op": "LT",
      "path": "98"
    },
    "1721": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6639,
        7050
      ],
      "op": "ISZERO",
      "path": "98"
    },
    "1722": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6639,
        7050
      ],
      "op": "PUSH2",
      "path": "98",
      "value": "0x797"
    },
    "1725": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6639,
        7050
      ],
      "op": "JUMPI",
      "path": "98"
    },
    "1726": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6694,
        6704
      ],
      "op": "PUSH1",
      "path": "98",
      "value": "0x0"
    },
    "1728": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6707,
        6710
      ],
      "op": "DUP6",
      "path": "98"
    },
    "1729": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6711,
        6712
      ],
      "op": "DUP3",
      "path": "98"
    },
    "1730": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6707,
        6713
      ],
      "op": "DUP2",
      "path": "98"
    },
    "1731": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6707,
        6713
      ],
      "op": "MLOAD",
      "path": "98"
    },
    "1732": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6707,
        6713
      ],
      "op": "DUP2",
      "path": "98"
    },
    "1733": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6707,
        6713
      ],
      "op": "LT",
      "path": "98"
    },
    "1734": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6707,
        6713
      ],
      "op": "PUSH2",
      "path": "98",
      "value": "0x6D1"
    },
    "1737": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6707,
        6713
      ],
      "op": "JUMPI",
      "path": "98"
    },
    "1738": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6707,
        6713
      ],
      "op": "PUSH2",
      "path": "98",
      "value": "0x6D1"
    },
    "1741": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6707,
        6713
      ],
      "op": "PUSH2",
      "path": "98",
      "value": "0x10A7"
    },
    "1744": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "jump": "i",
      "offset": [
        6707,
        6713
      ],
      "op": "JUMP",
      "path": "98"
    },
    "1745": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6707,
        6713
      ],
      "op": "JUMPDEST",
      "path": "98"
    },
    "1746": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6707,
        6713
      ],
      "op": "PUSH1",
      "path": "98",
      "value": "0x20"
    },
    "1748": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6707,
        6713
      ],
      "op": "MUL",
      "path": "98"
    },
    "1749": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6707,
        6713
      ],
      "op": "PUSH1",
      "path": "98",
      "value": "0x20"
    },
    "1751": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6707,
        6713
      ],
      "op": "ADD",
      "path": "98"
    },
    "1752": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6707,
        6713
      ],
      "op": "ADD",
      "path": "98"
    },
    "1753": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6707,
        6713
      ],
      "op": "MLOAD",
      "path": "98"
    },
    "1754": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6694,
        6713
      ],
      "op": "SWAP1",
      "path": "98"
    },
    "1755": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6694,
        6713
      ],
      "op": "POP",
      "path": "98"
    },
    "1756": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6727,
        6741
      ],
      "op": "PUSH1",
      "path": "98",
      "value": "0x0"
    },
    "1758": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6744,
        6751
      ],
      "op": "DUP6",
      "path": "98"
    },
    "1759": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6752,
        6753
      ],
      "op": "DUP4",
      "path": "98"
    },
    "1760": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6744,
        6754
      ],
      "op": "DUP2",
      "path": "98"
    },
    "1761": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6744,
        6754
      ],
      "op": "MLOAD",
      "path": "98"
    },
    "1762": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6744,
        6754
      ],
      "op": "DUP2",
      "path": "98"
    },
    "1763": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6744,
        6754
      ],
      "op": "LT",
      "path": "98"
    },
    "1764": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6744,
        6754
      ],
      "op": "PUSH2",
      "path": "98",
      "value": "0x6EF"
    },
    "1767": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6744,
        6754
      ],
      "op": "JUMPI",
      "path": "98"
    },
    "1768": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6744,
        6754
      ],
      "op": "PUSH2",
      "path": "98",
      "value": "0x6EF"
    },
    "1771": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6744,
        6754
      ],
      "op": "PUSH2",
      "path": "98",
      "value": "0x10A7"
    },
    "1774": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "jump": "i",
      "offset": [
        6744,
        6754
      ],
      "op": "JUMP",
      "path": "98"
    },
    "1775": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6744,
        6754
      ],
      "op": "JUMPDEST",
      "path": "98"
    },
    "1776": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6744,
        6754
      ],
      "op": "PUSH1",
      "path": "98",
      "value": "0x20"
    },
    "1778": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6744,
        6754
      ],
      "op": "SWAP1",
      "path": "98"
    },
    "1779": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6744,
        6754
      ],
      "op": "DUP2",
      "path": "98"
    },
    "1780": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6744,
        6754
      ],
      "op": "MUL",
      "path": "98"
    },
    "1781": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6744,
        6754
      ],
      "op": "SWAP2",
      "path": "98"
    },
    "1782": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6744,
        6754
      ],
      "op": "SWAP1",
      "path": "98"
    },
    "1783": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6744,
        6754
      ],
      "op": "SWAP2",
      "path": "98"
    },
    "1784": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6744,
        6754
      ],
      "op": "ADD",
      "path": "98"
    },
    "1785": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6744,
        6754
      ],
      "op": "DUP2",
      "path": "98"
    },
    "1786": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6744,
        6754
      ],
      "op": "ADD",
      "path": "98"
    },
    "1787": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6744,
        6754
      ],
      "op": "MLOAD",
      "path": "98"
    },
    "1788": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6769,
        6788
      ],
      "op": "PUSH1",
      "path": "98",
      "value": "0x0"
    },
    "1790": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6791,
        6804
      ],
      "op": "DUP5",
      "path": "98"
    },
    "1791": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6791,
        6804
      ],
      "op": "DUP2",
      "path": "98"
    },
    "1792": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6791,
        6804
      ],
      "op": "MSTORE",
      "path": "98"
    },
    "1793": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6791,
        6804
      ],
      "op": "DUP1",
      "path": "98"
    },
    "1794": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6791,
        6804
      ],
      "op": "DUP4",
      "path": "98"
    },
    "1795": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6791,
        6804
      ],
      "op": "MSTORE",
      "path": "98"
    },
    "1796": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6791,
        6804
      ],
      "op": "PUSH1",
      "path": "98",
      "value": "0x40"
    },
    "1798": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6791,
        6804
      ],
      "op": "DUP1",
      "path": "98"
    },
    "1799": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6791,
        6804
      ],
      "op": "DUP3",
      "path": "98"
    },
    "1800": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6791,
        6804
      ],
      "op": "KECCAK256",
      "path": "98"
    },
    "1801": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1803": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1805": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1807": {
      "op": "SHL"
    },
    "1808": {
      "op": "SUB"
    },
    "1809": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6791,
        6810
      ],
      "op": "DUP15",
      "path": "98"
    },
    "1810": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6791,
        6810
      ],
      "op": "AND",
      "path": "98"
    },
    "1811": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6791,
        6810
      ],
      "op": "DUP4",
      "path": "98"
    },
    "1812": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6791,
        6810
      ],
      "op": "MSTORE",
      "path": "98"
    },
    "1813": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6791,
        6810
      ],
      "op": "SWAP1",
      "path": "98"
    },
    "1814": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6791,
        6810
      ],
      "op": "SWAP4",
      "path": "98"
    },
    "1815": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6791,
        6810
      ],
      "op": "MSTORE",
      "path": "98"
    },
    "1816": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6791,
        6810
      ],
      "op": "SWAP2",
      "path": "98"
    },
    "1817": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6791,
        6810
      ],
      "op": "SWAP1",
      "path": "98"
    },
    "1818": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6791,
        6810
      ],
      "op": "SWAP2",
      "path": "98"
    },
    "1819": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6791,
        6810
      ],
      "op": "KECCAK256",
      "path": "98"
    },
    "1820": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6791,
        6810
      ],
      "op": "SLOAD",
      "path": "98"
    },
    "1821": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6744,
        6754
      ],
      "op": "SWAP1",
      "path": "98"
    },
    "1822": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6744,
        6754
      ],
      "op": "SWAP2",
      "path": "98"
    },
    "1823": {
      "op": "POP"
    },
    "1824": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6832,
        6853
      ],
      "op": "DUP2",
      "path": "98",
      "statement": 20
    },
    "1825": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6832,
        6853
      ],
      "op": "DUP2",
      "path": "98"
    },
    "1826": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6832,
        6853
      ],
      "op": "LT",
      "path": "98"
    },
    "1827": {
      "branch": 49,
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6832,
        6853
      ],
      "op": "ISZERO",
      "path": "98"
    },
    "1828": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6824,
        6900
      ],
      "op": "PUSH2",
      "path": "98",
      "value": "0x73F"
    },
    "1831": {
      "branch": 49,
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6824,
        6900
      ],
      "op": "JUMPI",
      "path": "98"
    },
    "1832": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6824,
        6900
      ],
      "op": "PUSH1",
      "path": "98",
      "value": "0x40"
    },
    "1834": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6824,
        6900
      ],
      "op": "MLOAD",
      "path": "98"
    },
    "1835": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1839": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1841": {
      "op": "SHL"
    },
    "1842": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6824,
        6900
      ],
      "op": "DUP2",
      "path": "98"
    },
    "1843": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6824,
        6900
      ],
      "op": "MSTORE",
      "path": "98"
    },
    "1844": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6824,
        6900
      ],
      "op": "PUSH1",
      "path": "98",
      "value": "0x4"
    },
    "1846": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6824,
        6900
      ],
      "op": "ADD",
      "path": "98"
    },
    "1847": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6824,
        6900
      ],
      "op": "PUSH2",
      "path": "98",
      "value": "0x1F4"
    },
    "1850": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6824,
        6900
      ],
      "op": "SWAP1",
      "path": "98"
    },
    "1851": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6824,
        6900
      ],
      "op": "PUSH2",
      "path": "98",
      "value": "0x1133"
    },
    "1854": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "jump": "i",
      "offset": [
        6824,
        6900
      ],
      "op": "JUMP",
      "path": "98"
    },
    "1855": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6824,
        6900
      ],
      "op": "JUMPDEST",
      "path": "98"
    },
    "1856": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6942,
        6951
      ],
      "op": "PUSH1",
      "path": "98",
      "statement": 21,
      "value": "0x0"
    },
    "1858": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6942,
        6955
      ],
      "op": "DUP4",
      "path": "98"
    },
    "1859": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6942,
        6955
      ],
      "op": "DUP2",
      "path": "98"
    },
    "1860": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6942,
        6955
      ],
      "op": "MSTORE",
      "path": "98"
    },
    "1861": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6942,
        6955
      ],
      "op": "PUSH1",
      "path": "98",
      "value": "0x20"
    },
    "1863": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6942,
        6955
      ],
      "op": "DUP2",
      "path": "98"
    },
    "1864": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6942,
        6955
      ],
      "op": "DUP2",
      "path": "98"
    },
    "1865": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6942,
        6955
      ],
      "op": "MSTORE",
      "path": "98"
    },
    "1866": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6942,
        6955
      ],
      "op": "PUSH1",
      "path": "98",
      "value": "0x40"
    },
    "1868": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6942,
        6955
      ],
      "op": "DUP1",
      "path": "98"
    },
    "1869": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6942,
        6955
      ],
      "op": "DUP4",
      "path": "98"
    },
    "1870": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6942,
        6955
      ],
      "op": "KECCAK256",
      "path": "98"
    },
    "1871": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1873": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1875": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1877": {
      "op": "SHL"
    },
    "1878": {
      "op": "SUB"
    },
    "1879": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6942,
        6961
      ],
      "op": "DUP15",
      "path": "98"
    },
    "1880": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6942,
        6961
      ],
      "op": "DUP2",
      "path": "98"
    },
    "1881": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6942,
        6961
      ],
      "op": "AND",
      "path": "98"
    },
    "1882": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6942,
        6961
      ],
      "op": "DUP6",
      "path": "98"
    },
    "1883": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6942,
        6961
      ],
      "op": "MSTORE",
      "path": "98"
    },
    "1884": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6942,
        6961
      ],
      "op": "SWAP3",
      "path": "98"
    },
    "1885": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6942,
        6961
      ],
      "op": "MSTORE",
      "path": "98"
    },
    "1886": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6942,
        6961
      ],
      "op": "DUP1",
      "path": "98"
    },
    "1887": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6942,
        6961
      ],
      "op": "DUP4",
      "path": "98"
    },
    "1888": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6942,
        6961
      ],
      "op": "KECCAK256",
      "path": "98"
    },
    "1889": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6964,
        6984
      ],
      "op": "DUP6",
      "path": "98"
    },
    "1890": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6964,
        6984
      ],
      "op": "DUP6",
      "path": "98"
    },
    "1891": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6964,
        6984
      ],
      "op": "SUB",
      "path": "98"
    },
    "1892": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6942,
        6984
      ],
      "op": "SWAP1",
      "path": "98"
    },
    "1893": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6942,
        6984
      ],
      "op": "SSTORE",
      "path": "98"
    },
    "1894": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7012,
        7029
      ],
      "op": "SWAP1",
      "path": "98",
      "statement": 22
    },
    "1895": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7012,
        7029
      ],
      "op": "DUP12",
      "path": "98"
    },
    "1896": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7012,
        7029
      ],
      "op": "AND",
      "path": "98"
    },
    "1897": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7012,
        7029
      ],
      "op": "DUP3",
      "path": "98"
    },
    "1898": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7012,
        7029
      ],
      "op": "MSTORE",
      "path": "98"
    },
    "1899": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7012,
        7029
      ],
      "op": "DUP2",
      "path": "98"
    },
    "1900": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7012,
        7029
      ],
      "op": "KECCAK256",
      "path": "98"
    },
    "1901": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7012,
        7039
      ],
      "op": "DUP1",
      "path": "98"
    },
    "1902": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7012,
        7039
      ],
      "op": "SLOAD",
      "path": "98"
    },
    "1903": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6964,
        6984
      ],
      "op": "DUP5",
      "path": "98"
    },
    "1904": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6964,
        6984
      ],
      "op": "SWAP3",
      "path": "98"
    },
    "1905": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6942,
        6951
      ],
      "op": "SWAP1",
      "path": "98"
    },
    "1906": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7012,
        7039
      ],
      "op": "PUSH2",
      "path": "98",
      "value": "0x77C"
    },
    "1909": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7012,
        7039
      ],
      "op": "SWAP1",
      "path": "98"
    },
    "1910": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6964,
        6984
      ],
      "op": "DUP5",
      "path": "98"
    },
    "1911": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6964,
        6984
      ],
      "op": "SWAP1",
      "path": "98"
    },
    "1912": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7012,
        7039
      ],
      "op": "PUSH2",
      "path": "98",
      "value": "0x117D"
    },
    "1915": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "jump": "i",
      "offset": [
        7012,
        7039
      ],
      "op": "JUMP",
      "path": "98"
    },
    "1916": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7012,
        7039
      ],
      "op": "JUMPDEST",
      "path": "98"
    },
    "1917": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7012,
        7039
      ],
      "op": "SWAP3",
      "path": "98"
    },
    "1918": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7012,
        7039
      ],
      "op": "POP",
      "path": "98"
    },
    "1919": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7012,
        7039
      ],
      "op": "POP",
      "path": "98"
    },
    "1920": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7012,
        7039
      ],
      "op": "DUP2",
      "path": "98"
    },
    "1921": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7012,
        7039
      ],
      "op": "SWAP1",
      "path": "98"
    },
    "1922": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7012,
        7039
      ],
      "op": "SSTORE",
      "path": "98"
    },
    "1923": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7012,
        7039
      ],
      "op": "POP",
      "path": "98"
    },
    "1924": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6680,
        7050
      ],
      "op": "POP",
      "path": "98"
    },
    "1925": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6680,
        7050
      ],
      "op": "POP",
      "path": "98"
    },
    "1926": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6680,
        7050
      ],
      "op": "POP",
      "path": "98"
    },
    "1927": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6675,
        6678
      ],
      "op": "DUP1",
      "path": "98",
      "statement": 23
    },
    "1928": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6675,
        6678
      ],
      "op": "PUSH2",
      "path": "98",
      "value": "0x790"
    },
    "1931": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6675,
        6678
      ],
      "op": "SWAP1",
      "path": "98"
    },
    "1932": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6675,
        6678
      ],
      "op": "PUSH2",
      "path": "98",
      "value": "0x10D3"
    },
    "1935": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "jump": "i",
      "offset": [
        6675,
        6678
      ],
      "op": "JUMP",
      "path": "98"
    },
    "1936": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6675,
        6678
      ],
      "op": "JUMPDEST",
      "path": "98"
    },
    "1937": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6675,
        6678
      ],
      "op": "SWAP1",
      "path": "98"
    },
    "1938": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6675,
        6678
      ],
      "op": "POP",
      "path": "98"
    },
    "1939": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6639,
        7050
      ],
      "op": "PUSH2",
      "path": "98",
      "value": "0x6B4"
    },
    "1942": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6639,
        7050
      ],
      "op": "JUMP",
      "path": "98"
    },
    "1943": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6639,
        7050
      ],
      "op": "JUMPDEST",
      "path": "98"
    },
    "1944": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6639,
        7050
      ],
      "op": "POP",
      "path": "98"
    },
    "1945": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7095,
        7097
      ],
      "op": "DUP5",
      "path": "98",
      "statement": 24
    },
    "1946": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1948": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1950": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1952": {
      "op": "SHL"
    },
    "1953": {
      "op": "SUB"
    },
    "1954": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7065,
        7112
      ],
      "op": "AND",
      "path": "98"
    },
    "1955": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7089,
        7093
      ],
      "op": "DUP7",
      "path": "98"
    },
    "1956": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1958": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1960": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1962": {
      "op": "SHL"
    },
    "1963": {
      "op": "SUB"
    },
    "1964": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7065,
        7112
      ],
      "op": "AND",
      "path": "98"
    },
    "1965": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7079,
        7087
      ],
      "op": "DUP3",
      "path": "98"
    },
    "1966": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1968": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1970": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1972": {
      "op": "SHL"
    },
    "1973": {
      "op": "SUB"
    },
    "1974": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7065,
        7112
      ],
      "op": "AND",
      "path": "98"
    },
    "1975": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7065,
        7112
      ],
      "op": "PUSH32",
      "path": "98",
      "value": "0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB"
    },
    "2008": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7099,
        7102
      ],
      "op": "DUP8",
      "path": "98"
    },
    "2009": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7104,
        7111
      ],
      "op": "DUP8",
      "path": "98"
    },
    "2010": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7065,
        7112
      ],
      "op": "PUSH1",
      "path": "98",
      "value": "0x40"
    },
    "2012": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7065,
        7112
      ],
      "op": "MLOAD",
      "path": "98"
    },
    "2013": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7065,
        7112
      ],
      "op": "PUSH2",
      "path": "98",
      "value": "0x7E7"
    },
    "2016": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7065,
        7112
      ],
      "op": "SWAP3",
      "path": "98"
    },
    "2017": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7065,
        7112
      ],
      "op": "SWAP2",
      "path": "98"
    },
    "2018": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7065,
        7112
      ],
      "op": "SWAP1",
      "path": "98"
    },
    "2019": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7065,
        7112
      ],
      "op": "PUSH2",
      "path": "98",
      "value": "0x1195"
    },
    "2022": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "jump": "i",
      "offset": [
        7065,
        7112
      ],
      "op": "JUMP",
      "path": "98"
    },
    "2023": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7065,
        7112
      ],
      "op": "JUMPDEST",
      "path": "98"
    },
    "2024": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7065,
        7112
      ],
      "op": "PUSH1",
      "path": "98",
      "value": "0x40"
    },
    "2026": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7065,
        7112
      ],
      "op": "MLOAD",
      "path": "98"
    },
    "2027": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7065,
        7112
      ],
      "op": "DUP1",
      "path": "98"
    },
    "2028": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7065,
        7112
      ],
      "op": "SWAP2",
      "path": "98"
    },
    "2029": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7065,
        7112
      ],
      "op": "SUB",
      "path": "98"
    },
    "2030": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7065,
        7112
      ],
      "op": "SWAP1",
      "path": "98"
    },
    "2031": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7065,
        7112
      ],
      "op": "LOG4",
      "path": "98"
    },
    "2032": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7123,
        7198
      ],
      "op": "PUSH2",
      "path": "98",
      "statement": 25,
      "value": "0x7FD"
    },
    "2035": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7159,
        7167
      ],
      "op": "DUP2",
      "path": "98"
    },
    "2036": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7169,
        7173
      ],
      "op": "DUP8",
      "path": "98"
    },
    "2037": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7175,
        7177
      ],
      "op": "DUP8",
      "path": "98"
    },
    "2038": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7179,
        7182
      ],
      "op": "DUP8",
      "path": "98"
    },
    "2039": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7184,
        7191
      ],
      "op": "DUP8",
      "path": "98"
    },
    "2040": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7193,
        7197
      ],
      "op": "DUP8",
      "path": "98"
    },
    "2041": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7123,
        7158
      ],
      "op": "PUSH2",
      "path": "98",
      "value": "0x92B"
    },
    "2044": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "jump": "i",
      "offset": [
        7123,
        7198
      ],
      "op": "JUMP",
      "path": "98"
    },
    "2045": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7123,
        7198
      ],
      "op": "JUMPDEST",
      "path": "98"
    },
    "2046": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6348,
        7205
      ],
      "op": "POP",
      "path": "98"
    },
    "2047": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6160,
        7205
      ],
      "op": "POP",
      "path": "98"
    },
    "2048": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6160,
        7205
      ],
      "op": "POP",
      "path": "98"
    },
    "2049": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6160,
        7205
      ],
      "op": "POP",
      "path": "98"
    },
    "2050": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6160,
        7205
      ],
      "op": "POP",
      "path": "98"
    },
    "2051": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6160,
        7205
      ],
      "op": "POP",
      "path": "98"
    },
    "2052": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "jump": "o",
      "offset": [
        6160,
        7205
      ],
      "op": "JUMP",
      "path": "98"
    },
    "2053": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5017,
        5814
      ],
      "op": "JUMPDEST",
      "path": "98"
    },
    "2054": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2056": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2058": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2060": {
      "op": "SHL"
    },
    "2061": {
      "op": "SUB"
    },
    "2062": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5198,
        5214
      ],
      "op": "DUP5",
      "path": "98",
      "statement": 26
    },
    "2063": {
      "branch": 50,
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5198,
        5214
      ],
      "op": "AND",
      "path": "98"
    },
    "2064": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5190,
        5256
      ],
      "op": "PUSH2",
      "path": "98",
      "value": "0x82B"
    },
    "2067": {
      "branch": 50,
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5190,
        5256
      ],
      "op": "JUMPI",
      "path": "98"
    },
    "2068": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5190,
        5256
      ],
      "op": "PUSH1",
      "path": "98",
      "value": "0x40"
    },
    "2070": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5190,
        5256
      ],
      "op": "MLOAD",
      "path": "98"
    },
    "2071": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2075": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2077": {
      "op": "SHL"
    },
    "2078": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5190,
        5256
      ],
      "op": "DUP2",
      "path": "98"
    },
    "2079": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5190,
        5256
      ],
      "op": "MSTORE",
      "path": "98"
    },
    "2080": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5190,
        5256
      ],
      "op": "PUSH1",
      "path": "98",
      "value": "0x4"
    },
    "2082": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5190,
        5256
      ],
      "op": "ADD",
      "path": "98"
    },
    "2083": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5190,
        5256
      ],
      "op": "PUSH2",
      "path": "98",
      "value": "0x1F4"
    },
    "2086": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5190,
        5256
      ],
      "op": "SWAP1",
      "path": "98"
    },
    "2087": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5190,
        5256
      ],
      "op": "PUSH2",
      "path": "98",
      "value": "0x10EE"
    },
    "2090": {
      "fn": "ERC1155._safeTransferFrom",
      "jump": "i",
      "offset": [
        5190,
        5256
      ],
      "op": "JUMP",
      "path": "98"
    },
    "2091": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5190,
        5256
      ],
      "op": "JUMPDEST",
      "path": "98"
    },
    "2092": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "143"
    },
    "2093": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5309,
        5405
      ],
      "op": "PUSH2",
      "path": "98",
      "statement": 27,
      "value": "0x844"
    },
    "2096": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "DUP2",
      "path": "143"
    },
    "2097": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5340,
        5344
      ],
      "op": "DUP8",
      "path": "98"
    },
    "2098": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5346,
        5348
      ],
      "op": "DUP8",
      "path": "98"
    },
    "2099": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5350,
        5371
      ],
      "op": "PUSH2",
      "path": "98",
      "value": "0x83B"
    },
    "2102": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5368,
        5370
      ],
      "op": "DUP9",
      "path": "98"
    },
    "2103": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5350,
        5367
      ],
      "op": "PUSH2",
      "path": "98",
      "value": "0xA87"
    },
    "2106": {
      "fn": "ERC1155._safeTransferFrom",
      "jump": "i",
      "offset": [
        5350,
        5371
      ],
      "op": "JUMP",
      "path": "98"
    },
    "2107": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5350,
        5371
      ],
      "op": "JUMPDEST",
      "path": "98"
    },
    "2108": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5373,
        5398
      ],
      "op": "PUSH2",
      "path": "98",
      "value": "0x399"
    },
    "2111": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5391,
        5397
      ],
      "op": "DUP9",
      "path": "98"
    },
    "2112": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5373,
        5390
      ],
      "op": "PUSH2",
      "path": "98",
      "value": "0xA87"
    },
    "2115": {
      "fn": "ERC1155._safeTransferFrom",
      "jump": "i",
      "offset": [
        5373,
        5398
      ],
      "op": "JUMP",
      "path": "98"
    },
    "2116": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5309,
        5405
      ],
      "op": "JUMPDEST",
      "path": "98"
    },
    "2117": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5416,
        5435
      ],
      "op": "PUSH1",
      "path": "98",
      "value": "0x0"
    },
    "2119": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5438,
        5451
      ],
      "op": "DUP5",
      "path": "98"
    },
    "2120": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5438,
        5451
      ],
      "op": "DUP2",
      "path": "98"
    },
    "2121": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5438,
        5451
      ],
      "op": "MSTORE",
      "path": "98"
    },
    "2122": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5438,
        5451
      ],
      "op": "PUSH1",
      "path": "98",
      "value": "0x20"
    },
    "2124": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5438,
        5451
      ],
      "op": "DUP2",
      "path": "98"
    },
    "2125": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5438,
        5451
      ],
      "op": "DUP2",
      "path": "98"
    },
    "2126": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5438,
        5451
      ],
      "op": "MSTORE",
      "path": "98"
    },
    "2127": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5438,
        5451
      ],
      "op": "PUSH1",
      "path": "98",
      "value": "0x40"
    },
    "2129": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5438,
        5451
      ],
      "op": "DUP1",
      "path": "98"
    },
    "2130": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5438,
        5451
      ],
      "op": "DUP4",
      "path": "98"
    },
    "2131": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5438,
        5451
      ],
      "op": "KECCAK256",
      "path": "98"
    },
    "2132": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2134": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2136": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2138": {
      "op": "SHL"
    },
    "2139": {
      "op": "SUB"
    },
    "2140": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5438,
        5457
      ],
      "op": "DUP11",
      "path": "98"
    },
    "2141": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5438,
        5457
      ],
      "op": "AND",
      "path": "98"
    },
    "2142": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5438,
        5457
      ],
      "op": "DUP5",
      "path": "98"
    },
    "2143": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5438,
        5457
      ],
      "op": "MSTORE",
      "path": "98"
    },
    "2144": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5438,
        5457
      ],
      "op": "SWAP1",
      "path": "98"
    },
    "2145": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5438,
        5457
      ],
      "op": "SWAP2",
      "path": "98"
    },
    "2146": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5438,
        5457
      ],
      "op": "MSTORE",
      "path": "98"
    },
    "2147": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5438,
        5457
      ],
      "op": "SWAP1",
      "path": "98"
    },
    "2148": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5438,
        5457
      ],
      "op": "KECCAK256",
      "path": "98"
    },
    "2149": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5438,
        5457
      ],
      "op": "SLOAD",
      "path": "98"
    },
    "2150": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5475,
        5496
      ],
      "op": "DUP4",
      "path": "98",
      "statement": 28
    },
    "2151": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5475,
        5496
      ],
      "op": "DUP2",
      "path": "98"
    },
    "2152": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5475,
        5496
      ],
      "op": "LT",
      "path": "98"
    },
    "2153": {
      "branch": 51,
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5475,
        5496
      ],
      "op": "ISZERO",
      "path": "98"
    },
    "2154": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5467,
        5543
      ],
      "op": "PUSH2",
      "path": "98",
      "value": "0x885"
    },
    "2157": {
      "branch": 51,
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5467,
        5543
      ],
      "op": "JUMPI",
      "path": "98"
    },
    "2158": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5467,
        5543
      ],
      "op": "PUSH1",
      "path": "98",
      "value": "0x40"
    },
    "2160": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5467,
        5543
      ],
      "op": "MLOAD",
      "path": "98"
    },
    "2161": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2165": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2167": {
      "op": "SHL"
    },
    "2168": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5467,
        5543
      ],
      "op": "DUP2",
      "path": "98"
    },
    "2169": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5467,
        5543
      ],
      "op": "MSTORE",
      "path": "98"
    },
    "2170": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5467,
        5543
      ],
      "op": "PUSH1",
      "path": "98",
      "value": "0x4"
    },
    "2172": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5467,
        5543
      ],
      "op": "ADD",
      "path": "98"
    },
    "2173": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5467,
        5543
      ],
      "op": "PUSH2",
      "path": "98",
      "value": "0x1F4"
    },
    "2176": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5467,
        5543
      ],
      "op": "SWAP1",
      "path": "98"
    },
    "2177": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5467,
        5543
      ],
      "op": "PUSH2",
      "path": "98",
      "value": "0x1133"
    },
    "2180": {
      "fn": "ERC1155._safeTransferFrom",
      "jump": "i",
      "offset": [
        5467,
        5543
      ],
      "op": "JUMP",
      "path": "98"
    },
    "2181": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5467,
        5543
      ],
      "op": "JUMPDEST",
      "path": "98"
    },
    "2182": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5577,
        5586
      ],
      "op": "PUSH1",
      "path": "98",
      "statement": 29,
      "value": "0x0"
    },
    "2184": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5577,
        5590
      ],
      "op": "DUP6",
      "path": "98"
    },
    "2185": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5577,
        5590
      ],
      "op": "DUP2",
      "path": "98"
    },
    "2186": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5577,
        5590
      ],
      "op": "MSTORE",
      "path": "98"
    },
    "2187": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5577,
        5590
      ],
      "op": "PUSH1",
      "path": "98",
      "value": "0x20"
    },
    "2189": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5577,
        5590
      ],
      "op": "DUP2",
      "path": "98"
    },
    "2190": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5577,
        5590
      ],
      "op": "DUP2",
      "path": "98"
    },
    "2191": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5577,
        5590
      ],
      "op": "MSTORE",
      "path": "98"
    },
    "2192": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5577,
        5590
      ],
      "op": "PUSH1",
      "path": "98",
      "value": "0x40"
    },
    "2194": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5577,
        5590
      ],
      "op": "DUP1",
      "path": "98"
    },
    "2195": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5577,
        5590
      ],
      "op": "DUP4",
      "path": "98"
    },
    "2196": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5577,
        5590
      ],
      "op": "KECCAK256",
      "path": "98"
    },
    "2197": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2199": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2201": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2203": {
      "op": "SHL"
    },
    "2204": {
      "op": "SUB"
    },
    "2205": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5577,
        5596
      ],
      "op": "DUP12",
      "path": "98"
    },
    "2206": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5577,
        5596
      ],
      "op": "DUP2",
      "path": "98"
    },
    "2207": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5577,
        5596
      ],
      "op": "AND",
      "path": "98"
    },
    "2208": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5577,
        5596
      ],
      "op": "DUP6",
      "path": "98"
    },
    "2209": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5577,
        5596
      ],
      "op": "MSTORE",
      "path": "98"
    },
    "2210": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5577,
        5596
      ],
      "op": "SWAP3",
      "path": "98"
    },
    "2211": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5577,
        5596
      ],
      "op": "MSTORE",
      "path": "98"
    },
    "2212": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5577,
        5596
      ],
      "op": "DUP1",
      "path": "98"
    },
    "2213": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5577,
        5596
      ],
      "op": "DUP4",
      "path": "98"
    },
    "2214": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5577,
        5596
      ],
      "op": "KECCAK256",
      "path": "98"
    },
    "2215": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5599,
        5619
      ],
      "op": "DUP8",
      "path": "98"
    },
    "2216": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5599,
        5619
      ],
      "op": "DUP6",
      "path": "98"
    },
    "2217": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5599,
        5619
      ],
      "op": "SUB",
      "path": "98"
    },
    "2218": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5577,
        5619
      ],
      "op": "SWAP1",
      "path": "98"
    },
    "2219": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5577,
        5619
      ],
      "op": "SSTORE",
      "path": "98"
    },
    "2220": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5639,
        5656
      ],
      "op": "SWAP1",
      "path": "98",
      "statement": 30
    },
    "2221": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5639,
        5656
      ],
      "op": "DUP9",
      "path": "98"
    },
    "2222": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5639,
        5656
      ],
      "op": "AND",
      "path": "98"
    },
    "2223": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5639,
        5656
      ],
      "op": "DUP3",
      "path": "98"
    },
    "2224": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5639,
        5656
      ],
      "op": "MSTORE",
      "path": "98"
    },
    "2225": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5639,
        5656
      ],
      "op": "DUP2",
      "path": "98"
    },
    "2226": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5639,
        5656
      ],
      "op": "KECCAK256",
      "path": "98"
    },
    "2227": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5639,
        5666
      ],
      "op": "DUP1",
      "path": "98"
    },
    "2228": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5639,
        5666
      ],
      "op": "SLOAD",
      "path": "98"
    },
    "2229": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5599,
        5619
      ],
      "op": "DUP7",
      "path": "98"
    },
    "2230": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5599,
        5619
      ],
      "op": "SWAP3",
      "path": "98"
    },
    "2231": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5577,
        5586
      ],
      "op": "SWAP1",
      "path": "98"
    },
    "2232": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5639,
        5666
      ],
      "op": "PUSH2",
      "path": "98",
      "value": "0x8C2"
    },
    "2235": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5639,
        5666
      ],
      "op": "SWAP1",
      "path": "98"
    },
    "2236": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5599,
        5619
      ],
      "op": "DUP5",
      "path": "98"
    },
    "2237": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5599,
        5619
      ],
      "op": "SWAP1",
      "path": "98"
    },
    "2238": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5639,
        5666
      ],
      "op": "PUSH2",
      "path": "98",
      "value": "0x117D"
    },
    "2241": {
      "fn": "ERC1155._safeTransferFrom",
      "jump": "i",
      "offset": [
        5639,
        5666
      ],
      "op": "JUMP",
      "path": "98"
    },
    "2242": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5639,
        5666
      ],
      "op": "JUMPDEST",
      "path": "98"
    },
    "2243": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5639,
        5666
      ],
      "op": "SWAP1",
      "path": "98"
    },
    "2244": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5639,
        5666
      ],
      "op": "SWAP2",
      "path": "98"
    },
    "2245": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5639,
        5666
      ],
      "op": "SSTORE",
      "path": "98"
    },
    "2246": {
      "op": "POP"
    },
    "2247": {
      "op": "POP"
    },
    "2248": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5682,
        5728
      ],
      "op": "PUSH1",
      "path": "98",
      "statement": 31,
      "value": "0x40"
    },
    "2250": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5682,
        5728
      ],
      "op": "DUP1",
      "path": "98"
    },
    "2251": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5682,
        5728
      ],
      "op": "MLOAD",
      "path": "98"
    },
    "2252": {
      "op": "DUP7"
    },
    "2253": {
      "op": "DUP2"
    },
    "2254": {
      "op": "MSTORE"
    },
    "2255": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2257": {
      "op": "DUP2"
    },
    "2258": {
      "op": "ADD"
    },
    "2259": {
      "op": "DUP7"
    },
    "2260": {
      "op": "SWAP1"
    },
    "2261": {
      "op": "MSTORE"
    },
    "2262": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2264": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2266": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2268": {
      "op": "SHL"
    },
    "2269": {
      "op": "SUB"
    },
    "2270": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5682,
        5728
      ],
      "op": "DUP1",
      "path": "98"
    },
    "2271": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5682,
        5728
      ],
      "op": "DUP10",
      "path": "98"
    },
    "2272": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5682,
        5728
      ],
      "op": "AND",
      "path": "98"
    },
    "2273": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5682,
        5728
      ],
      "op": "SWAP3",
      "path": "98"
    },
    "2274": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5682,
        5728
      ],
      "op": "DUP11",
      "path": "98"
    },
    "2275": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5682,
        5728
      ],
      "op": "DUP3",
      "path": "98"
    },
    "2276": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5682,
        5728
      ],
      "op": "AND",
      "path": "98"
    },
    "2277": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5682,
        5728
      ],
      "op": "SWAP3",
      "path": "98"
    },
    "2278": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5682,
        5728
      ],
      "op": "SWAP2",
      "path": "98"
    },
    "2279": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5682,
        5728
      ],
      "op": "DUP7",
      "path": "98"
    },
    "2280": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5682,
        5728
      ],
      "op": "AND",
      "path": "98"
    },
    "2281": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5682,
        5728
      ],
      "op": "SWAP2",
      "path": "98"
    },
    "2282": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5682,
        5728
      ],
      "op": "PUSH32",
      "path": "98",
      "value": "0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62"
    },
    "2315": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5682,
        5728
      ],
      "op": "SWAP2",
      "path": "98"
    },
    "2316": {
      "op": "ADD"
    },
    "2317": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5682,
        5728
      ],
      "op": "PUSH1",
      "path": "98",
      "value": "0x40"
    },
    "2319": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5682,
        5728
      ],
      "op": "MLOAD",
      "path": "98"
    },
    "2320": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5682,
        5728
      ],
      "op": "DUP1",
      "path": "98"
    },
    "2321": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5682,
        5728
      ],
      "op": "SWAP2",
      "path": "98"
    },
    "2322": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5682,
        5728
      ],
      "op": "SUB",
      "path": "98"
    },
    "2323": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5682,
        5728
      ],
      "op": "SWAP1",
      "path": "98"
    },
    "2324": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5682,
        5728
      ],
      "op": "LOG4",
      "path": "98"
    },
    "2325": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5739,
        5807
      ],
      "op": "PUSH2",
      "path": "98",
      "statement": 32,
      "value": "0x922"
    },
    "2328": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5770,
        5778
      ],
      "op": "DUP3",
      "path": "98"
    },
    "2329": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5780,
        5784
      ],
      "op": "DUP9",
      "path": "98"
    },
    "2330": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5786,
        5788
      ],
      "op": "DUP9",
      "path": "98"
    },
    "2331": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5790,
        5792
      ],
      "op": "DUP9",
      "path": "98"
    },
    "2332": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5794,
        5800
      ],
      "op": "DUP9",
      "path": "98"
    },
    "2333": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5802,
        5806
      ],
      "op": "DUP9",
      "path": "98"
    },
    "2334": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5739,
        5769
      ],
      "op": "PUSH2",
      "path": "98",
      "value": "0xAD2"
    },
    "2337": {
      "fn": "ERC1155._safeTransferFrom",
      "jump": "i",
      "offset": [
        5739,
        5807
      ],
      "op": "JUMP",
      "path": "98"
    },
    "2338": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5739,
        5807
      ],
      "op": "JUMPDEST",
      "path": "98"
    },
    "2339": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5180,
        5814
      ],
      "op": "POP",
      "path": "98"
    },
    "2340": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5180,
        5814
      ],
      "op": "POP",
      "path": "98"
    },
    "2341": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5017,
        5814
      ],
      "op": "POP",
      "path": "98"
    },
    "2342": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5017,
        5814
      ],
      "op": "POP",
      "path": "98"
    },
    "2343": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5017,
        5814
      ],
      "op": "POP",
      "path": "98"
    },
    "2344": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5017,
        5814
      ],
      "op": "POP",
      "path": "98"
    },
    "2345": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5017,
        5814
      ],
      "op": "POP",
      "path": "98"
    },
    "2346": {
      "fn": "ERC1155._safeTransferFrom",
      "jump": "o",
      "offset": [
        5017,
        5814
      ],
      "op": "JUMP",
      "path": "98"
    },
    "2347": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14028,
        14824
      ],
      "op": "JUMPDEST",
      "path": "98"
    },
    "2348": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2350": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2352": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2354": {
      "op": "SHL"
    },
    "2355": {
      "op": "SUB"
    },
    "2356": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14260,
        14273
      ],
      "op": "DUP5",
      "path": "98"
    },
    "2357": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14260,
        14273
      ],
      "op": "AND",
      "path": "98"
    },
    "2358": {
      "fn": "Address.isContract",
      "offset": [
        1034,
        1054
      ],
      "op": "EXTCODESIZE",
      "path": "141"
    },
    "2359": {
      "fn": "Address.isContract",
      "offset": [
        1080,
        1088
      ],
      "op": "ISZERO",
      "path": "141",
      "statement": 33
    },
    "2360": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14256,
        14818
      ],
      "op": "PUSH2",
      "path": "98",
      "value": "0x7FD"
    },
    "2363": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14256,
        14818
      ],
      "op": "JUMPI",
      "path": "98"
    },
    "2364": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14295,
        14374
      ],
      "op": "PUSH1",
      "path": "98",
      "value": "0x40"
    },
    "2366": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14295,
        14374
      ],
      "op": "MLOAD",
      "path": "98"
    },
    "2367": {
      "op": "PUSH4",
      "value": "0xBC197C81"
    },
    "2372": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2374": {
      "op": "SHL"
    },
    "2375": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14295,
        14374
      ],
      "op": "DUP2",
      "path": "98"
    },
    "2376": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14295,
        14374
      ],
      "op": "MSTORE",
      "path": "98"
    },
    "2377": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2379": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2381": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2383": {
      "op": "SHL"
    },
    "2384": {
      "op": "SUB"
    },
    "2385": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14295,
        14338
      ],
      "op": "DUP6",
      "path": "98"
    },
    "2386": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14295,
        14338
      ],
      "op": "AND",
      "path": "98"
    },
    "2387": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14295,
        14338
      ],
      "op": "SWAP1",
      "path": "98"
    },
    "2388": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14295,
        14338
      ],
      "op": "PUSH4",
      "path": "98",
      "value": "0xBC197C81"
    },
    "2393": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14295,
        14338
      ],
      "op": "SWAP1",
      "path": "98"
    },
    "2394": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14295,
        14374
      ],
      "op": "PUSH2",
      "path": "98",
      "value": "0x96F"
    },
    "2397": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14295,
        14374
      ],
      "op": "SWAP1",
      "path": "98"
    },
    "2398": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14339,
        14347
      ],
      "op": "DUP10",
      "path": "98"
    },
    "2399": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14339,
        14347
      ],
      "op": "SWAP1",
      "path": "98"
    },
    "2400": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14349,
        14353
      ],
      "op": "DUP10",
      "path": "98"
    },
    "2401": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14349,
        14353
      ],
      "op": "SWAP1",
      "path": "98"
    },
    "2402": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14355,
        14358
      ],
      "op": "DUP9",
      "path": "98"
    },
    "2403": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14355,
        14358
      ],
      "op": "SWAP1",
      "path": "98"
    },
    "2404": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14360,
        14367
      ],
      "op": "DUP9",
      "path": "98"
    },
    "2405": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14360,
        14367
      ],
      "op": "SWAP1",
      "path": "98"
    },
    "2406": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14369,
        14373
      ],
      "op": "DUP9",
      "path": "98"
    },
    "2407": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14369,
        14373
      ],
      "op": "SWAP1",
      "path": "98"
    },
    "2408": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14295,
        14374
      ],
      "op": "PUSH1",
      "path": "98",
      "value": "0x4"
    },
    "2410": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14295,
        14374
      ],
      "op": "ADD",
      "path": "98"
    },
    "2411": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14295,
        14374
      ],
      "op": "PUSH2",
      "path": "98",
      "value": "0x11C3"
    },
    "2414": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "jump": "i",
      "offset": [
        14295,
        14374
      ],
      "op": "JUMP",
      "path": "98"
    },
    "2415": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14295,
        14374
      ],
      "op": "JUMPDEST",
      "path": "98"
    },
    "2416": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14295,
        14374
      ],
      "op": "PUSH1",
      "path": "98",
      "value": "0x20"
    },
    "2418": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14295,
        14374
      ],
      "op": "PUSH1",
      "path": "98",
      "value": "0x40"
    },
    "2420": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14295,
        14374
      ],
      "op": "MLOAD",
      "path": "98"
    },
    "2421": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14295,
        14374
      ],
      "op": "DUP1",
      "path": "98"
    },
    "2422": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14295,
        14374
      ],
      "op": "DUP4",
      "path": "98"
    },
    "2423": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14295,
        14374
      ],
      "op": "SUB",
      "path": "98"
    },
    "2424": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14295,
        14374
      ],
      "op": "DUP2",
      "path": "98"
    },
    "2425": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14295,
        14374
      ],
      "op": "PUSH1",
      "path": "98",
      "value": "0x0"
    },
    "2427": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14295,
        14374
      ],
      "op": "DUP8",
      "path": "98"
    },
    "2428": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14295,
        14374
      ],
      "op": "GAS",
      "path": "98"
    },
    "2429": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14295,
        14374
      ],
      "op": "CALL",
      "path": "98"
    },
    "2430": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14295,
        14374
      ],
      "op": "SWAP3",
      "path": "98"
    },
    "2431": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14295,
        14374
      ],
      "op": "POP",
      "path": "98"
    },
    "2432": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14295,
        14374
      ],
      "op": "POP",
      "path": "98"
    },
    "2433": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14295,
        14374
      ],
      "op": "POP",
      "path": "98"
    },
    "2434": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14295,
        14374
      ],
      "op": "DUP1",
      "path": "98"
    },
    "2435": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14295,
        14374
      ],
      "op": "ISZERO",
      "path": "98"
    },
    "2436": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14295,
        14374
      ],
      "op": "PUSH2",
      "path": "98",
      "value": "0x9AA"
    },
    "2439": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14295,
        14374
      ],
      "op": "JUMPI",
      "path": "98"
    },
    "2440": {
      "op": "POP"
    },
    "2441": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14295,
        14374
      ],
      "op": "PUSH1",
      "path": "98",
      "value": "0x40"
    },
    "2443": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14295,
        14374
      ],
      "op": "DUP1",
      "path": "98"
    },
    "2444": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14295,
        14374
      ],
      "op": "MLOAD",
      "path": "98"
    },
    "2445": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14295,
        14374
      ],
      "op": "PUSH1",
      "path": "98",
      "value": "0x1F"
    },
    "2447": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14295,
        14374
      ],
      "op": "RETURNDATASIZE",
      "path": "98"
    },
    "2448": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14295,
        14374
      ],
      "op": "SWAP1",
      "path": "98"
    },
    "2449": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14295,
        14374
      ],
      "op": "DUP2",
      "path": "98"
    },
    "2450": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14295,
        14374
      ],
      "op": "ADD",
      "path": "98"
    },
    "2451": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2453": {
      "op": "NOT"
    },
    "2454": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14295,
        14374
      ],
      "op": "AND",
      "path": "98"
    },
    "2455": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14295,
        14374
      ],
      "op": "DUP3",
      "path": "98"
    },
    "2456": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14295,
        14374
      ],
      "op": "ADD",
      "path": "98"
    },
    "2457": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14295,
        14374
      ],
      "op": "SWAP1",
      "path": "98"
    },
    "2458": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14295,
        14374
      ],
      "op": "SWAP3",
      "path": "98"
    },
    "2459": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14295,
        14374
      ],
      "op": "MSTORE",
      "path": "98"
    },
    "2460": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14295,
        14374
      ],
      "op": "PUSH2",
      "path": "98",
      "value": "0x9A7"
    },
    "2463": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14295,
        14374
      ],
      "op": "SWAP2",
      "path": "98"
    },
    "2464": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14295,
        14374
      ],
      "op": "DUP2",
      "path": "98"
    },
    "2465": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14295,
        14374
      ],
      "op": "ADD",
      "path": "98"
    },
    "2466": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14295,
        14374
      ],
      "op": "SWAP1",
      "path": "98"
    },
    "2467": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14295,
        14374
      ],
      "op": "PUSH2",
      "path": "98",
      "value": "0x1221"
    },
    "2470": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "jump": "i",
      "offset": [
        14295,
        14374
      ],
      "op": "JUMP",
      "path": "98"
    },
    "2471": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14295,
        14374
      ],
      "op": "JUMPDEST",
      "path": "98"
    },
    "2472": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14295,
        14374
      ],
      "op": "PUSH1",
      "path": "98",
      "value": "0x1"
    },
    "2474": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14295,
        14374
      ],
      "op": "JUMPDEST",
      "path": "98"
    },
    "2475": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14808
      ],
      "op": "PUSH2",
      "path": "98",
      "value": "0xA57"
    },
    "2478": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14808
      ],
      "op": "JUMPI",
      "path": "98"
    },
    "2479": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14808
      ],
      "op": "PUSH2",
      "path": "98",
      "value": "0x9B6"
    },
    "2482": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14808
      ],
      "op": "PUSH2",
      "path": "98",
      "value": "0x123E"
    },
    "2485": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "jump": "i",
      "offset": [
        14291,
        14808
      ],
      "op": "JUMP",
      "path": "98"
    },
    "2486": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14808
      ],
      "op": "JUMPDEST",
      "path": "98"
    },
    "2487": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14808
      ],
      "op": "DUP1",
      "path": "98"
    },
    "2488": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14808
      ],
      "op": "PUSH4",
      "path": "98",
      "value": "0x8C379A0"
    },
    "2493": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14808
      ],
      "op": "EQ",
      "path": "98"
    },
    "2494": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14808
      ],
      "op": "ISZERO",
      "path": "98"
    },
    "2495": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14808
      ],
      "op": "PUSH2",
      "path": "98",
      "value": "0x9F0"
    },
    "2498": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14808
      ],
      "op": "JUMPI",
      "path": "98"
    },
    "2499": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14808
      ],
      "op": "POP",
      "path": "98"
    },
    "2500": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14808
      ],
      "op": "PUSH2",
      "path": "98",
      "value": "0x9CB"
    },
    "2503": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14808
      ],
      "op": "PUSH2",
      "path": "98",
      "value": "0x125A"
    },
    "2506": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "jump": "i",
      "offset": [
        14291,
        14808
      ],
      "op": "JUMP",
      "path": "98"
    },
    "2507": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14808
      ],
      "op": "JUMPDEST",
      "path": "98"
    },
    "2508": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14808
      ],
      "op": "DUP1",
      "path": "98"
    },
    "2509": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14808
      ],
      "op": "PUSH2",
      "path": "98",
      "value": "0x9D6"
    },
    "2512": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14808
      ],
      "op": "JUMPI",
      "path": "98"
    },
    "2513": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14808
      ],
      "op": "POP",
      "path": "98"
    },
    "2514": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14808
      ],
      "op": "PUSH2",
      "path": "98",
      "value": "0x9F2"
    },
    "2517": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14808
      ],
      "op": "JUMP",
      "path": "98"
    },
    "2518": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14808
      ],
      "op": "JUMPDEST",
      "path": "98"
    },
    "2519": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14684,
        14690
      ],
      "op": "DUP1",
      "path": "98",
      "statement": 34
    },
    "2520": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14677,
        14691
      ],
      "op": "PUSH1",
      "path": "98",
      "value": "0x40"
    },
    "2522": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14677,
        14691
      ],
      "op": "MLOAD",
      "path": "98"
    },
    "2523": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2527": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2529": {
      "op": "SHL"
    },
    "2530": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14677,
        14691
      ],
      "op": "DUP2",
      "path": "98"
    },
    "2531": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14677,
        14691
      ],
      "op": "MSTORE",
      "path": "98"
    },
    "2532": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14677,
        14691
      ],
      "op": "PUSH1",
      "path": "98",
      "value": "0x4"
    },
    "2534": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14677,
        14691
      ],
      "op": "ADD",
      "path": "98"
    },
    "2535": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14677,
        14691
      ],
      "op": "PUSH2",
      "path": "98",
      "value": "0x1F4"
    },
    "2538": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14677,
        14691
      ],
      "op": "SWAP2",
      "path": "98"
    },
    "2539": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14677,
        14691
      ],
      "op": "SWAP1",
      "path": "98"
    },
    "2540": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14677,
        14691
      ],
      "op": "PUSH2",
      "path": "98",
      "value": "0xC76"
    },
    "2543": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "jump": "i",
      "offset": [
        14677,
        14691
      ],
      "op": "JUMP",
      "path": "98"
    },
    "2544": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14808
      ],
      "op": "JUMPDEST",
      "path": "98"
    },
    "2545": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14808
      ],
      "op": "POP",
      "path": "98"
    },
    "2546": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14808
      ],
      "op": "JUMPDEST",
      "path": "98"
    },
    "2547": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14731,
        14793
      ],
      "op": "PUSH1",
      "path": "98",
      "statement": 35,
      "value": "0x40"
    },
    "2549": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14731,
        14793
      ],
      "op": "MLOAD",
      "path": "98"
    },
    "2550": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2554": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2556": {
      "op": "SHL"
    },
    "2557": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14731,
        14793
      ],
      "op": "DUP2",
      "path": "98"
    },
    "2558": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14731,
        14793
      ],
      "op": "MSTORE",
      "path": "98"
    },
    "2559": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2561": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14731,
        14793
      ],
      "op": "PUSH1",
      "path": "98",
      "value": "0x4"
    },
    "2563": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14731,
        14793
      ],
      "op": "DUP3",
      "path": "98"
    },
    "2564": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14731,
        14793
      ],
      "op": "ADD",
      "path": "98"
    },
    "2565": {
      "op": "MSTORE"
    },
    "2566": {
      "op": "PUSH1",
      "value": "0x34"
    },
    "2568": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2570": {
      "op": "DUP3"
    },
    "2571": {
      "op": "ADD"
    },
    "2572": {
      "op": "MSTORE"
    },
    "2573": {
      "op": "PUSH32",
      "value": "0x455243313135353A207472616E7366657220746F206E6F6E2045524331313535"
    },
    "2606": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2608": {
      "op": "DUP3"
    },
    "2609": {
      "op": "ADD"
    },
    "2610": {
      "op": "MSTORE"
    },
    "2611": {
      "op": "PUSH20",
      "value": "0x2932B1B2B4BB32B91034B6B83632B6B2B73A32B9"
    },
    "2632": {
      "op": "PUSH1",
      "value": "0x61"
    },
    "2634": {
      "op": "SHL"
    },
    "2635": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2637": {
      "op": "DUP3"
    },
    "2638": {
      "op": "ADD"
    },
    "2639": {
      "op": "MSTORE"
    },
    "2640": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2642": {
      "op": "ADD"
    },
    "2643": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14731,
        14793
      ],
      "op": "PUSH2",
      "path": "98",
      "value": "0x1F4"
    },
    "2646": {
      "op": "JUMP"
    },
    "2647": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14808
      ],
      "op": "JUMPDEST",
      "path": "98"
    },
    "2648": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2650": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2652": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2654": {
      "op": "SHL"
    },
    "2655": {
      "op": "SUB"
    },
    "2656": {
      "op": "NOT"
    },
    "2657": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14453,
        14517
      ],
      "op": "DUP2",
      "path": "98"
    },
    "2658": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14453,
        14517
      ],
      "op": "AND",
      "path": "98"
    },
    "2659": {
      "op": "PUSH4",
      "value": "0xBC197C81"
    },
    "2664": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2666": {
      "op": "SHL"
    },
    "2667": {
      "branch": 52,
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14453,
        14517
      ],
      "op": "EQ",
      "path": "98"
    },
    "2668": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14449,
        14610
      ],
      "op": "PUSH2",
      "path": "98",
      "value": "0x922"
    },
    "2671": {
      "branch": 52,
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14449,
        14610
      ],
      "op": "JUMPI",
      "path": "98"
    },
    "2672": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14541,
        14591
      ],
      "op": "PUSH1",
      "path": "98",
      "statement": 36,
      "value": "0x40"
    },
    "2674": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14541,
        14591
      ],
      "op": "MLOAD",
      "path": "98"
    },
    "2675": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2679": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2681": {
      "op": "SHL"
    },
    "2682": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14541,
        14591
      ],
      "op": "DUP2",
      "path": "98"
    },
    "2683": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14541,
        14591
      ],
      "op": "MSTORE",
      "path": "98"
    },
    "2684": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14541,
        14591
      ],
      "op": "PUSH1",
      "path": "98",
      "value": "0x4"
    },
    "2686": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14541,
        14591
      ],
      "op": "ADD",
      "path": "98"
    },
    "2687": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14541,
        14591
      ],
      "op": "PUSH2",
      "path": "98",
      "value": "0x1F4"
    },
    "2690": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14541,
        14591
      ],
      "op": "SWAP1",
      "path": "98"
    },
    "2691": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14541,
        14591
      ],
      "op": "PUSH2",
      "path": "98",
      "value": "0x12E4"
    },
    "2694": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "jump": "i",
      "offset": [
        14541,
        14591
      ],
      "op": "JUMP",
      "path": "98"
    },
    "2695": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14830,
        15023
      ],
      "op": "JUMPDEST",
      "path": "98"
    },
    "2696": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14949,
        14965
      ],
      "op": "PUSH1",
      "path": "98",
      "value": "0x40"
    },
    "2698": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14949,
        14965
      ],
      "op": "DUP1",
      "path": "98"
    },
    "2699": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14949,
        14965
      ],
      "op": "MLOAD",
      "path": "98"
    },
    "2700": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14963,
        14964
      ],
      "op": "PUSH1",
      "path": "98",
      "value": "0x1"
    },
    "2702": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14949,
        14965
      ],
      "op": "DUP1",
      "path": "98"
    },
    "2703": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14949,
        14965
      ],
      "op": "DUP3",
      "path": "98"
    },
    "2704": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14949,
        14965
      ],
      "op": "MSTORE",
      "path": "98"
    },
    "2705": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14949,
        14965
      ],
      "op": "DUP2",
      "path": "98"
    },
    "2706": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14949,
        14965
      ],
      "op": "DUP4",
      "path": "98"
    },
    "2707": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14949,
        14965
      ],
      "op": "ADD",
      "path": "98"
    },
    "2708": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14949,
        14965
      ],
      "op": "SWAP1",
      "path": "98"
    },
    "2709": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14949,
        14965
      ],
      "op": "SWAP3",
      "path": "98"
    },
    "2710": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14949,
        14965
      ],
      "op": "MSTORE",
      "path": "98"
    },
    "2711": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14896,
        14912
      ],
      "op": "PUSH1",
      "path": "98",
      "value": "0x60"
    },
    "2713": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14896,
        14912
      ],
      "op": "SWAP2",
      "path": "98"
    },
    "2714": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14924,
        14946
      ],
      "op": "PUSH1",
      "path": "98",
      "value": "0x0"
    },
    "2716": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14924,
        14946
      ],
      "op": "SWAP2",
      "path": "98"
    },
    "2717": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14949,
        14965
      ],
      "op": "SWAP1",
      "path": "98"
    },
    "2718": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14949,
        14965
      ],
      "op": "PUSH1",
      "path": "98",
      "value": "0x20"
    },
    "2720": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14949,
        14965
      ],
      "op": "DUP1",
      "path": "98"
    },
    "2721": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14949,
        14965
      ],
      "op": "DUP4",
      "path": "98"
    },
    "2722": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14949,
        14965
      ],
      "op": "ADD",
      "path": "98"
    },
    "2723": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14949,
        14965
      ],
      "op": "SWAP1",
      "path": "98"
    },
    "2724": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14949,
        14965
      ],
      "op": "DUP1",
      "path": "98"
    },
    "2725": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14949,
        14965
      ],
      "op": "CALLDATASIZE",
      "path": "98"
    },
    "2726": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14949,
        14965
      ],
      "op": "DUP4",
      "path": "98"
    },
    "2727": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14949,
        14965
      ],
      "op": "CALLDATACOPY",
      "path": "98"
    },
    "2728": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14949,
        14965
      ],
      "op": "ADD",
      "path": "98"
    },
    "2729": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14949,
        14965
      ],
      "op": "SWAP1",
      "path": "98"
    },
    "2730": {
      "op": "POP"
    },
    "2731": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14949,
        14965
      ],
      "op": "POP",
      "path": "98"
    },
    "2732": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14924,
        14965
      ],
      "op": "SWAP1",
      "path": "98"
    },
    "2733": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14924,
        14965
      ],
      "op": "POP",
      "path": "98"
    },
    "2734": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14986,
        14993
      ],
      "op": "DUP3",
      "path": "98",
      "statement": 37
    },
    "2735": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14975,
        14980
      ],
      "op": "DUP2",
      "path": "98"
    },
    "2736": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14981,
        14982
      ],
      "op": "PUSH1",
      "path": "98",
      "value": "0x0"
    },
    "2738": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14975,
        14983
      ],
      "op": "DUP2",
      "path": "98"
    },
    "2739": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14975,
        14983
      ],
      "op": "MLOAD",
      "path": "98"
    },
    "2740": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14975,
        14983
      ],
      "op": "DUP2",
      "path": "98"
    },
    "2741": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14975,
        14983
      ],
      "op": "LT",
      "path": "98"
    },
    "2742": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14975,
        14983
      ],
      "op": "PUSH2",
      "path": "98",
      "value": "0xAC1"
    },
    "2745": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14975,
        14983
      ],
      "op": "JUMPI",
      "path": "98"
    },
    "2746": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14975,
        14983
      ],
      "op": "PUSH2",
      "path": "98",
      "value": "0xAC1"
    },
    "2749": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14975,
        14983
      ],
      "op": "PUSH2",
      "path": "98",
      "value": "0x10A7"
    },
    "2752": {
      "fn": "ERC1155._asSingletonArray",
      "jump": "i",
      "offset": [
        14975,
        14983
      ],
      "op": "JUMP",
      "path": "98"
    },
    "2753": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14975,
        14983
      ],
      "op": "JUMPDEST",
      "path": "98"
    },
    "2754": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14975,
        14983
      ],
      "op": "PUSH1",
      "path": "98",
      "value": "0x20"
    },
    "2756": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14975,
        14983
      ],
      "op": "SWAP1",
      "path": "98"
    },
    "2757": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14975,
        14983
      ],
      "op": "DUP2",
      "path": "98"
    },
    "2758": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14975,
        14983
      ],
      "op": "MUL",
      "path": "98"
    },
    "2759": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14975,
        14983
      ],
      "op": "SWAP2",
      "path": "98"
    },
    "2760": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14975,
        14983
      ],
      "op": "SWAP1",
      "path": "98"
    },
    "2761": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14975,
        14983
      ],
      "op": "SWAP2",
      "path": "98"
    },
    "2762": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14975,
        14983
      ],
      "op": "ADD",
      "path": "98"
    },
    "2763": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14975,
        14983
      ],
      "op": "ADD",
      "path": "98"
    },
    "2764": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14975,
        14993
      ],
      "op": "MSTORE",
      "path": "98"
    },
    "2765": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        15011,
        15016
      ],
      "op": "SWAP3",
      "path": "98",
      "statement": 38
    },
    "2766": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14830,
        15023
      ],
      "op": "SWAP2",
      "path": "98"
    },
    "2767": {
      "op": "POP"
    },
    "2768": {
      "op": "POP"
    },
    "2769": {
      "fn": "ERC1155._asSingletonArray",
      "jump": "o",
      "offset": [
        14830,
        15023
      ],
      "op": "JUMP",
      "path": "98"
    },
    "2770": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13293,
        14022
      ],
      "op": "JUMPDEST",
      "path": "98"
    },
    "2771": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2773": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2775": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2777": {
      "op": "SHL"
    },
    "2778": {
      "op": "SUB"
    },
    "2779": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13500,
        13513
      ],
      "op": "DUP5",
      "path": "98"
    },
    "2780": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13500,
        13513
      ],
      "op": "AND",
      "path": "98"
    },
    "2781": {
      "fn": "Address.isContract",
      "offset": [
        1034,
        1054
      ],
      "op": "EXTCODESIZE",
      "path": "141"
    },
    "2782": {
      "fn": "Address.isContract",
      "offset": [
        1080,
        1088
      ],
      "op": "ISZERO",
      "path": "141"
    },
    "2783": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13496,
        14016
      ],
      "op": "PUSH2",
      "path": "98",
      "value": "0x7FD"
    },
    "2786": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13496,
        14016
      ],
      "op": "JUMPI",
      "path": "98"
    },
    "2787": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "PUSH1",
      "path": "98",
      "value": "0x40"
    },
    "2789": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "MLOAD",
      "path": "98"
    },
    "2790": {
      "op": "PUSH4",
      "value": "0xF23A6E61"
    },
    "2795": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2797": {
      "op": "SHL"
    },
    "2798": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "DUP2",
      "path": "98"
    },
    "2799": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "MSTORE",
      "path": "98"
    },
    "2800": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2802": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2804": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2806": {
      "op": "SHL"
    },
    "2807": {
      "op": "SUB"
    },
    "2808": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13573
      ],
      "op": "DUP6",
      "path": "98"
    },
    "2809": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13573
      ],
      "op": "AND",
      "path": "98"
    },
    "2810": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13573
      ],
      "op": "SWAP1",
      "path": "98"
    },
    "2811": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13573
      ],
      "op": "PUSH4",
      "path": "98",
      "value": "0xF23A6E61"
    },
    "2816": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13573
      ],
      "op": "SWAP1",
      "path": "98"
    },
    "2817": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "PUSH2",
      "path": "98",
      "value": "0xB16"
    },
    "2820": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "SWAP1",
      "path": "98"
    },
    "2821": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13574,
        13582
      ],
      "op": "DUP10",
      "path": "98"
    },
    "2822": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13574,
        13582
      ],
      "op": "SWAP1",
      "path": "98"
    },
    "2823": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13584,
        13588
      ],
      "op": "DUP10",
      "path": "98"
    },
    "2824": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13584,
        13588
      ],
      "op": "SWAP1",
      "path": "98"
    },
    "2825": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13590,
        13592
      ],
      "op": "DUP9",
      "path": "98"
    },
    "2826": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13590,
        13592
      ],
      "op": "SWAP1",
      "path": "98"
    },
    "2827": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13594,
        13600
      ],
      "op": "DUP9",
      "path": "98"
    },
    "2828": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13594,
        13600
      ],
      "op": "SWAP1",
      "path": "98"
    },
    "2829": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13602,
        13606
      ],
      "op": "DUP9",
      "path": "98"
    },
    "2830": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13602,
        13606
      ],
      "op": "SWAP1",
      "path": "98"
    },
    "2831": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "PUSH1",
      "path": "98",
      "value": "0x4"
    },
    "2833": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "ADD",
      "path": "98"
    },
    "2834": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "PUSH2",
      "path": "98",
      "value": "0x132C"
    },
    "2837": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "jump": "i",
      "offset": [
        13535,
        13607
      ],
      "op": "JUMP",
      "path": "98"
    },
    "2838": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "JUMPDEST",
      "path": "98"
    },
    "2839": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "PUSH1",
      "path": "98",
      "value": "0x20"
    },
    "2841": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "PUSH1",
      "path": "98",
      "value": "0x40"
    },
    "2843": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "MLOAD",
      "path": "98"
    },
    "2844": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "DUP1",
      "path": "98"
    },
    "2845": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "DUP4",
      "path": "98"
    },
    "2846": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "SUB",
      "path": "98"
    },
    "2847": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "DUP2",
      "path": "98"
    },
    "2848": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "PUSH1",
      "path": "98",
      "value": "0x0"
    },
    "2850": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "DUP8",
      "path": "98"
    },
    "2851": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "GAS",
      "path": "98"
    },
    "2852": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "CALL",
      "path": "98"
    },
    "2853": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "SWAP3",
      "path": "98"
    },
    "2854": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "POP",
      "path": "98"
    },
    "2855": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "POP",
      "path": "98"
    },
    "2856": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "POP",
      "path": "98"
    },
    "2857": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "DUP1",
      "path": "98"
    },
    "2858": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "ISZERO",
      "path": "98"
    },
    "2859": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "PUSH2",
      "path": "98",
      "value": "0xB51"
    },
    "2862": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "JUMPI",
      "path": "98"
    },
    "2863": {
      "op": "POP"
    },
    "2864": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "PUSH1",
      "path": "98",
      "value": "0x40"
    },
    "2866": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "DUP1",
      "path": "98"
    },
    "2867": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "MLOAD",
      "path": "98"
    },
    "2868": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "PUSH1",
      "path": "98",
      "value": "0x1F"
    },
    "2870": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "RETURNDATASIZE",
      "path": "98"
    },
    "2871": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "SWAP1",
      "path": "98"
    },
    "2872": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "DUP2",
      "path": "98"
    },
    "2873": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "ADD",
      "path": "98"
    },
    "2874": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2876": {
      "op": "NOT"
    },
    "2877": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "AND",
      "path": "98"
    },
    "2878": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "DUP3",
      "path": "98"
    },
    "2879": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "ADD",
      "path": "98"
    },
    "2880": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "SWAP1",
      "path": "98"
    },
    "2881": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "SWAP3",
      "path": "98"
    },
    "2882": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "MSTORE",
      "path": "98"
    },
    "2883": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "PUSH2",
      "path": "98",
      "value": "0xB4E"
    },
    "2886": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "SWAP2",
      "path": "98"
    },
    "2887": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "DUP2",
      "path": "98"
    },
    "2888": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "ADD",
      "path": "98"
    },
    "2889": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "SWAP1",
      "path": "98"
    },
    "2890": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "PUSH2",
      "path": "98",
      "value": "0x1221"
    },
    "2893": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "jump": "i",
      "offset": [
        13535,
        13607
      ],
      "op": "JUMP",
      "path": "98"
    },
    "2894": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "JUMPDEST",
      "path": "98"
    },
    "2895": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "PUSH1",
      "path": "98",
      "value": "0x1"
    },
    "2897": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "JUMPDEST",
      "path": "98"
    },
    "2898": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13531,
        14006
      ],
      "op": "PUSH2",
      "path": "98",
      "value": "0xB5D"
    },
    "2901": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13531,
        14006
      ],
      "op": "JUMPI",
      "path": "98"
    },
    "2902": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13531,
        14006
      ],
      "op": "PUSH2",
      "path": "98",
      "value": "0x9B6"
    },
    "2905": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13531,
        14006
      ],
      "op": "PUSH2",
      "path": "98",
      "value": "0x123E"
    },
    "2908": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "jump": "i",
      "offset": [
        13531,
        14006
      ],
      "op": "JUMP",
      "path": "98"
    },
    "2909": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13531,
        14006
      ],
      "op": "JUMPDEST",
      "path": "98"
    },
    "2910": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2912": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2914": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2916": {
      "op": "SHL"
    },
    "2917": {
      "op": "SUB"
    },
    "2918": {
      "op": "NOT"
    },
    "2919": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13656,
        13715
      ],
      "op": "DUP2",
      "path": "98"
    },
    "2920": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13656,
        13715
      ],
      "op": "AND",
      "path": "98"
    },
    "2921": {
      "op": "PUSH4",
      "value": "0xF23A6E61"
    },
    "2926": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2928": {
      "op": "SHL"
    },
    "2929": {
      "branch": 53,
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13656,
        13715
      ],
      "op": "EQ",
      "path": "98"
    },
    "2930": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13652,
        13808
      ],
      "op": "PUSH2",
      "path": "98",
      "value": "0x922"
    },
    "2933": {
      "branch": 53,
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13652,
        13808
      ],
      "op": "JUMPI",
      "path": "98"
    },
    "2934": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13739,
        13789
      ],
      "op": "PUSH1",
      "path": "98",
      "statement": 39,
      "value": "0x40"
    },
    "2936": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13739,
        13789
      ],
      "op": "MLOAD",
      "path": "98"
    },
    "2937": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2941": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2943": {
      "op": "SHL"
    },
    "2944": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13739,
        13789
      ],
      "op": "DUP2",
      "path": "98"
    },
    "2945": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13739,
        13789
      ],
      "op": "MSTORE",
      "path": "98"
    },
    "2946": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13739,
        13789
      ],
      "op": "PUSH1",
      "path": "98",
      "value": "0x4"
    },
    "2948": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13739,
        13789
      ],
      "op": "ADD",
      "path": "98"
    },
    "2949": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13739,
        13789
      ],
      "op": "PUSH2",
      "path": "98",
      "value": "0x1F4"
    },
    "2952": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13739,
        13789
      ],
      "op": "SWAP1",
      "path": "98"
    },
    "2953": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13739,
        13789
      ],
      "op": "PUSH2",
      "path": "98",
      "value": "0x12E4"
    },
    "2956": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "jump": "i",
      "offset": [
        13739,
        13789
      ],
      "op": "JUMP",
      "path": "98"
    },
    "2957": {
      "op": "JUMPDEST"
    },
    "2958": {
      "op": "DUP1"
    },
    "2959": {
      "op": "CALLDATALOAD"
    },
    "2960": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2962": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2964": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2966": {
      "op": "SHL"
    },
    "2967": {
      "op": "SUB"
    },
    "2968": {
      "op": "DUP2"
    },
    "2969": {
      "op": "AND"
    },
    "2970": {
      "op": "DUP2"
    },
    "2971": {
      "op": "EQ"
    },
    "2972": {
      "op": "PUSH2",
      "value": "0xBA4"
    },
    "2975": {
      "op": "JUMPI"
    },
    "2976": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2978": {
      "op": "DUP1"
    },
    "2979": {
      "op": "REVERT"
    },
    "2980": {
      "op": "JUMPDEST"
    },
    "2981": {
      "op": "SWAP2"
    },
    "2982": {
      "op": "SWAP1"
    },
    "2983": {
      "op": "POP"
    },
    "2984": {
      "jump": "o",
      "op": "JUMP"
    },
    "2985": {
      "op": "JUMPDEST"
    },
    "2986": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2988": {
      "op": "DUP1"
    },
    "2989": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2991": {
      "op": "DUP4"
    },
    "2992": {
      "op": "DUP6"
    },
    "2993": {
      "op": "SUB"
    },
    "2994": {
      "op": "SLT"
    },
    "2995": {
      "op": "ISZERO"
    },
    "2996": {
      "op": "PUSH2",
      "value": "0xBBC"
    },
    "2999": {
      "op": "JUMPI"
    },
    "3000": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3002": {
      "op": "DUP1"
    },
    "3003": {
      "op": "REVERT"
    },
    "3004": {
      "op": "JUMPDEST"
    },
    "3005": {
      "op": "PUSH2",
      "value": "0xBC5"
    },
    "3008": {
      "op": "DUP4"
    },
    "3009": {
      "op": "PUSH2",
      "value": "0xB8D"
    },
    "3012": {
      "jump": "i",
      "op": "JUMP"
    },
    "3013": {
      "op": "JUMPDEST"
    },
    "3014": {
      "op": "SWAP5"
    },
    "3015": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3017": {
      "op": "SWAP4"
    },
    "3018": {
      "op": "SWAP1"
    },
    "3019": {
      "op": "SWAP4"
    },
    "3020": {
      "op": "ADD"
    },
    "3021": {
      "op": "CALLDATALOAD"
    },
    "3022": {
      "op": "SWAP4"
    },
    "3023": {
      "op": "POP"
    },
    "3024": {
      "op": "POP"
    },
    "3025": {
      "op": "POP"
    },
    "3026": {
      "jump": "o",
      "op": "JUMP"
    },
    "3027": {
      "op": "JUMPDEST"
    },
    "3028": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3030": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3032": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3034": {
      "op": "SHL"
    },
    "3035": {
      "op": "SUB"
    },
    "3036": {
      "op": "NOT"
    },
    "3037": {
      "op": "DUP2"
    },
    "3038": {
      "op": "AND"
    },
    "3039": {
      "op": "DUP2"
    },
    "3040": {
      "op": "EQ"
    },
    "3041": {
      "op": "PUSH2",
      "value": "0xBE9"
    },
    "3044": {
      "op": "JUMPI"
    },
    "3045": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3047": {
      "op": "DUP1"
    },
    "3048": {
      "op": "REVERT"
    },
    "3049": {
      "op": "JUMPDEST"
    },
    "3050": {
      "op": "POP"
    },
    "3051": {
      "jump": "o",
      "op": "JUMP"
    },
    "3052": {
      "op": "JUMPDEST"
    },
    "3053": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3055": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3057": {
      "op": "DUP3"
    },
    "3058": {
      "op": "DUP5"
    },
    "3059": {
      "op": "SUB"
    },
    "3060": {
      "op": "SLT"
    },
    "3061": {
      "op": "ISZERO"
    },
    "3062": {
      "op": "PUSH2",
      "value": "0xBFE"
    },
    "3065": {
      "op": "JUMPI"
    },
    "3066": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3068": {
      "op": "DUP1"
    },
    "3069": {
      "op": "REVERT"
    },
    "3070": {
      "op": "JUMPDEST"
    },
    "3071": {
      "op": "DUP2"
    },
    "3072": {
      "op": "CALLDATALOAD"
    },
    "3073": {
      "op": "PUSH2",
      "value": "0xC09"
    },
    "3076": {
      "op": "DUP2"
    },
    "3077": {
      "op": "PUSH2",
      "value": "0xBD3"
    },
    "3080": {
      "jump": "i",
      "op": "JUMP"
    },
    "3081": {
      "op": "JUMPDEST"
    },
    "3082": {
      "op": "SWAP4"
    },
    "3083": {
      "op": "SWAP3"
    },
    "3084": {
      "op": "POP"
    },
    "3085": {
      "op": "POP"
    },
    "3086": {
      "op": "POP"
    },
    "3087": {
      "jump": "o",
      "op": "JUMP"
    },
    "3088": {
      "op": "JUMPDEST"
    },
    "3089": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3091": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3093": {
      "op": "DUP3"
    },
    "3094": {
      "op": "DUP5"
    },
    "3095": {
      "op": "SUB"
    },
    "3096": {
      "op": "SLT"
    },
    "3097": {
      "op": "ISZERO"
    },
    "3098": {
      "op": "PUSH2",
      "value": "0xC22"
    },
    "3101": {
      "op": "JUMPI"
    },
    "3102": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3104": {
      "op": "DUP1"
    },
    "3105": {
      "op": "REVERT"
    },
    "3106": {
      "op": "JUMPDEST"
    },
    "3107": {
      "op": "POP"
    },
    "3108": {
      "op": "CALLDATALOAD"
    },
    "3109": {
      "op": "SWAP2"
    },
    "3110": {
      "op": "SWAP1"
    },
    "3111": {
      "op": "POP"
    },
    "3112": {
      "jump": "o",
      "op": "JUMP"
    },
    "3113": {
      "op": "JUMPDEST"
    },
    "3114": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3116": {
      "op": "DUP2"
    },
    "3117": {
      "op": "MLOAD"
    },
    "3118": {
      "op": "DUP1"
    },
    "3119": {
      "op": "DUP5"
    },
    "3120": {
      "op": "MSTORE"
    },
    "3121": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3123": {
      "op": "JUMPDEST"
    },
    "3124": {
      "op": "DUP2"
    },
    "3125": {
      "op": "DUP2"
    },
    "3126": {
      "op": "LT"
    },
    "3127": {
      "op": "ISZERO"
    },
    "3128": {
      "op": "PUSH2",
      "value": "0xC4F"
    },
    "3131": {
      "op": "JUMPI"
    },
    "3132": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3134": {
      "op": "DUP2"
    },
    "3135": {
      "op": "DUP6"
    },
    "3136": {
      "op": "ADD"
    },
    "3137": {
      "op": "DUP2"
    },
    "3138": {
      "op": "ADD"
    },
    "3139": {
      "op": "MLOAD"
    },
    "3140": {
      "op": "DUP7"
    },
    "3141": {
      "op": "DUP4"
    },
    "3142": {
      "op": "ADD"
    },
    "3143": {
      "op": "DUP3"
    },
    "3144": {
      "op": "ADD"
    },
    "3145": {
      "op": "MSTORE"
    },
    "3146": {
      "op": "ADD"
    },
    "3147": {
      "op": "PUSH2",
      "value": "0xC33"
    },
    "3150": {
      "op": "JUMP"
    },
    "3151": {
      "op": "JUMPDEST"
    },
    "3152": {
      "op": "DUP2"
    },
    "3153": {
      "op": "DUP2"
    },
    "3154": {
      "op": "GT"
    },
    "3155": {
      "op": "ISZERO"
    },
    "3156": {
      "op": "PUSH2",
      "value": "0xC61"
    },
    "3159": {
      "op": "JUMPI"
    },
    "3160": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3162": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3164": {
      "op": "DUP4"
    },
    "3165": {
      "op": "DUP8"
    },
    "3166": {
      "op": "ADD"
    },
    "3167": {
      "op": "ADD"
    },
    "3168": {
      "op": "MSTORE"
    },
    "3169": {
      "op": "JUMPDEST"
    },
    "3170": {
      "op": "POP"
    },
    "3171": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3173": {
      "op": "ADD"
    },
    "3174": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3176": {
      "op": "NOT"
    },
    "3177": {
      "op": "AND"
    },
    "3178": {
      "op": "SWAP3"
    },
    "3179": {
      "op": "SWAP1"
    },
    "3180": {
      "op": "SWAP3"
    },
    "3181": {
      "op": "ADD"
    },
    "3182": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3184": {
      "op": "ADD"
    },
    "3185": {
      "op": "SWAP3"
    },
    "3186": {
      "op": "SWAP2"
    },
    "3187": {
      "op": "POP"
    },
    "3188": {
      "op": "POP"
    },
    "3189": {
      "jump": "o",
      "op": "JUMP"
    },
    "3190": {
      "op": "JUMPDEST"
    },
    "3191": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3193": {
      "op": "DUP2"
    },
    "3194": {
      "op": "MSTORE"
    },
    "3195": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3197": {
      "op": "PUSH2",
      "value": "0xC09"
    },
    "3200": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3202": {
      "op": "DUP4"
    },
    "3203": {
      "op": "ADD"
    },
    "3204": {
      "op": "DUP5"
    },
    "3205": {
      "op": "PUSH2",
      "value": "0xC29"
    },
    "3208": {
      "jump": "i",
      "op": "JUMP"
    },
    "3209": {
      "op": "JUMPDEST"
    },
    "3210": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "3215": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3217": {
      "op": "SHL"
    },
    "3218": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3220": {
      "op": "MSTORE"
    },
    "3221": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "3223": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "3225": {
      "op": "MSTORE"
    },
    "3226": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3228": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3230": {
      "op": "REVERT"
    },
    "3231": {
      "op": "JUMPDEST"
    },
    "3232": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3234": {
      "op": "DUP3"
    },
    "3235": {
      "op": "ADD"
    },
    "3236": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3238": {
      "op": "NOT"
    },
    "3239": {
      "op": "AND"
    },
    "3240": {
      "op": "DUP2"
    },
    "3241": {
      "op": "ADD"
    },
    "3242": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "3251": {
      "op": "DUP2"
    },
    "3252": {
      "op": "GT"
    },
    "3253": {
      "op": "DUP3"
    },
    "3254": {
      "op": "DUP3"
    },
    "3255": {
      "op": "LT"
    },
    "3256": {
      "op": "OR"
    },
    "3257": {
      "op": "ISZERO"
    },
    "3258": {
      "op": "PUSH2",
      "value": "0xCC5"
    },
    "3261": {
      "op": "JUMPI"
    },
    "3262": {
      "op": "PUSH2",
      "value": "0xCC5"
    },
    "3265": {
      "op": "PUSH2",
      "value": "0xC89"
    },
    "3268": {
      "jump": "i",
      "op": "JUMP"
    },
    "3269": {
      "op": "JUMPDEST"
    },
    "3270": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3272": {
      "op": "MSTORE"
    },
    "3273": {
      "op": "POP"
    },
    "3274": {
      "op": "POP"
    },
    "3275": {
      "jump": "o",
      "op": "JUMP"
    },
    "3276": {
      "op": "JUMPDEST"
    },
    "3277": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3279": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "3288": {
      "op": "DUP3"
    },
    "3289": {
      "op": "GT"
    },
    "3290": {
      "op": "ISZERO"
    },
    "3291": {
      "op": "PUSH2",
      "value": "0xCE6"
    },
    "3294": {
      "op": "JUMPI"
    },
    "3295": {
      "op": "PUSH2",
      "value": "0xCE6"
    },
    "3298": {
      "op": "PUSH2",
      "value": "0xC89"
    },
    "3301": {
      "jump": "i",
      "op": "JUMP"
    },
    "3302": {
      "op": "JUMPDEST"
    },
    "3303": {
      "op": "POP"
    },
    "3304": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "3306": {
      "op": "SHL"
    },
    "3307": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3309": {
      "op": "ADD"
    },
    "3310": {
      "op": "SWAP1"
    },
    "3311": {
      "jump": "o",
      "op": "JUMP"
    },
    "3312": {
      "op": "JUMPDEST"
    },
    "3313": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3315": {
      "op": "DUP3"
    },
    "3316": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3318": {
      "op": "DUP4"
    },
    "3319": {
      "op": "ADD"
    },
    "3320": {
      "op": "SLT"
    },
    "3321": {
      "op": "PUSH2",
      "value": "0xD01"
    },
    "3324": {
      "op": "JUMPI"
    },
    "3325": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3327": {
      "op": "DUP1"
    },
    "3328": {
      "op": "REVERT"
    },
    "3329": {
      "op": "JUMPDEST"
    },
    "3330": {
      "op": "DUP2"
    },
    "3331": {
      "op": "CALLDATALOAD"
    },
    "3332": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3334": {
      "op": "PUSH2",
      "value": "0xD0E"
    },
    "3337": {
      "op": "DUP3"
    },
    "3338": {
      "op": "PUSH2",
      "value": "0xCCC"
    },
    "3341": {
      "jump": "i",
      "op": "JUMP"
    },
    "3342": {
      "op": "JUMPDEST"
    },
    "3343": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3345": {
      "op": "MLOAD"
    },
    "3346": {
      "op": "PUSH2",
      "value": "0xD1B"
    },
    "3349": {
      "op": "DUP3"
    },
    "3350": {
      "op": "DUP3"
    },
    "3351": {
      "op": "PUSH2",
      "value": "0xC9F"
    },
    "3354": {
      "jump": "i",
      "op": "JUMP"
    },
    "3355": {
      "op": "JUMPDEST"
    },
    "3356": {
      "op": "DUP4"
    },
    "3357": {
      "op": "DUP2"
    },
    "3358": {
      "op": "MSTORE"
    },
    "3359": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "3361": {
      "op": "SWAP4"
    },
    "3362": {
      "op": "SWAP1"
    },
    "3363": {
      "op": "SWAP4"
    },
    "3364": {
      "op": "SHL"
    },
    "3365": {
      "op": "DUP6"
    },
    "3366": {
      "op": "ADD"
    },
    "3367": {
      "op": "DUP3"
    },
    "3368": {
      "op": "ADD"
    },
    "3369": {
      "op": "SWAP3"
    },
    "3370": {
      "op": "DUP3"
    },
    "3371": {
      "op": "DUP2"
    },
    "3372": {
      "op": "ADD"
    },
    "3373": {
      "op": "SWAP2"
    },
    "3374": {
      "op": "POP"
    },
    "3375": {
      "op": "DUP7"
    },
    "3376": {
      "op": "DUP5"
    },
    "3377": {
      "op": "GT"
    },
    "3378": {
      "op": "ISZERO"
    },
    "3379": {
      "op": "PUSH2",
      "value": "0xD3B"
    },
    "3382": {
      "op": "JUMPI"
    },
    "3383": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3385": {
      "op": "DUP1"
    },
    "3386": {
      "op": "REVERT"
    },
    "3387": {
      "op": "JUMPDEST"
    },
    "3388": {
      "op": "DUP3"
    },
    "3389": {
      "op": "DUP7"
    },
    "3390": {
      "op": "ADD"
    },
    "3391": {
      "op": "JUMPDEST"
    },
    "3392": {
      "op": "DUP5"
    },
    "3393": {
      "op": "DUP2"
    },
    "3394": {
      "op": "LT"
    },
    "3395": {
      "op": "ISZERO"
    },
    "3396": {
      "op": "PUSH2",
      "value": "0xD56"
    },
    "3399": {
      "op": "JUMPI"
    },
    "3400": {
      "op": "DUP1"
    },
    "3401": {
      "op": "CALLDATALOAD"
    },
    "3402": {
      "op": "DUP4"
    },
    "3403": {
      "op": "MSTORE"
    },
    "3404": {
      "op": "SWAP2"
    },
    "3405": {
      "op": "DUP4"
    },
    "3406": {
      "op": "ADD"
    },
    "3407": {
      "op": "SWAP2"
    },
    "3408": {
      "op": "DUP4"
    },
    "3409": {
      "op": "ADD"
    },
    "3410": {
      "op": "PUSH2",
      "value": "0xD3F"
    },
    "3413": {
      "op": "JUMP"
    },
    "3414": {
      "op": "JUMPDEST"
    },
    "3415": {
      "op": "POP"
    },
    "3416": {
      "op": "SWAP7"
    },
    "3417": {
      "op": "SWAP6"
    },
    "3418": {
      "op": "POP"
    },
    "3419": {
      "op": "POP"
    },
    "3420": {
      "op": "POP"
    },
    "3421": {
      "op": "POP"
    },
    "3422": {
      "op": "POP"
    },
    "3423": {
      "op": "POP"
    },
    "3424": {
      "jump": "o",
      "op": "JUMP"
    },
    "3425": {
      "op": "JUMPDEST"
    },
    "3426": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3428": {
      "op": "DUP3"
    },
    "3429": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3431": {
      "op": "DUP4"
    },
    "3432": {
      "op": "ADD"
    },
    "3433": {
      "op": "SLT"
    },
    "3434": {
      "op": "PUSH2",
      "value": "0xD72"
    },
    "3437": {
      "op": "JUMPI"
    },
    "3438": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3440": {
      "op": "DUP1"
    },
    "3441": {
      "op": "REVERT"
    },
    "3442": {
      "op": "JUMPDEST"
    },
    "3443": {
      "op": "DUP2"
    },
    "3444": {
      "op": "CALLDATALOAD"
    },
    "3445": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "3454": {
      "op": "DUP2"
    },
    "3455": {
      "op": "GT"
    },
    "3456": {
      "op": "ISZERO"
    },
    "3457": {
      "op": "PUSH2",
      "value": "0xD8C"
    },
    "3460": {
      "op": "JUMPI"
    },
    "3461": {
      "op": "PUSH2",
      "value": "0xD8C"
    },
    "3464": {
      "op": "PUSH2",
      "value": "0xC89"
    },
    "3467": {
      "jump": "i",
      "op": "JUMP"
    },
    "3468": {
      "op": "JUMPDEST"
    },
    "3469": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3471": {
      "op": "MLOAD"
    },
    "3472": {
      "op": "PUSH2",
      "value": "0xDA3"
    },
    "3475": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3477": {
      "op": "DUP4"
    },
    "3478": {
      "op": "ADD"
    },
    "3479": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3481": {
      "op": "NOT"
    },
    "3482": {
      "op": "AND"
    },
    "3483": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3485": {
      "op": "ADD"
    },
    "3486": {
      "op": "DUP3"
    },
    "3487": {
      "op": "PUSH2",
      "value": "0xC9F"
    },
    "3490": {
      "jump": "i",
      "op": "JUMP"
    },
    "3491": {
      "op": "JUMPDEST"
    },
    "3492": {
      "op": "DUP2"
    },
    "3493": {
      "op": "DUP2"
    },
    "3494": {
      "op": "MSTORE"
    },
    "3495": {
      "op": "DUP5"
    },
    "3496": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3498": {
      "op": "DUP4"
    },
    "3499": {
      "op": "DUP7"
    },
    "3500": {
      "op": "ADD"
    },
    "3501": {
      "op": "ADD"
    },
    "3502": {
      "op": "GT"
    },
    "3503": {
      "op": "ISZERO"
    },
    "3504": {
      "op": "PUSH2",
      "value": "0xDB8"
    },
    "3507": {
      "op": "JUMPI"
    },
    "3508": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3510": {
      "op": "DUP1"
    },
    "3511": {
      "op": "REVERT"
    },
    "3512": {
      "op": "JUMPDEST"
    },
    "3513": {
      "op": "DUP2"
    },
    "3514": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3516": {
      "op": "DUP6"
    },
    "3517": {
      "op": "ADD"
    },
    "3518": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3520": {
      "op": "DUP4"
    },
    "3521": {
      "op": "ADD"
    },
    "3522": {
      "op": "CALLDATACOPY"
    },
    "3523": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3525": {
      "op": "SWAP2"
    },
    "3526": {
      "op": "DUP2"
    },
    "3527": {
      "op": "ADD"
    },
    "3528": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3530": {
      "op": "ADD"
    },
    "3531": {
      "op": "SWAP2"
    },
    "3532": {
      "op": "SWAP1"
    },
    "3533": {
      "op": "SWAP2"
    },
    "3534": {
      "op": "MSTORE"
    },
    "3535": {
      "op": "SWAP4"
    },
    "3536": {
      "op": "SWAP3"
    },
    "3537": {
      "op": "POP"
    },
    "3538": {
      "op": "POP"
    },
    "3539": {
      "op": "POP"
    },
    "3540": {
      "jump": "o",
      "op": "JUMP"
    },
    "3541": {
      "op": "JUMPDEST"
    },
    "3542": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3544": {
      "op": "DUP1"
    },
    "3545": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3547": {
      "op": "DUP1"
    },
    "3548": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3550": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3552": {
      "op": "DUP7"
    },
    "3553": {
      "op": "DUP9"
    },
    "3554": {
      "op": "SUB"
    },
    "3555": {
      "op": "SLT"
    },
    "3556": {
      "op": "ISZERO"
    },
    "3557": {
      "op": "PUSH2",
      "value": "0xDED"
    },
    "3560": {
      "op": "JUMPI"
    },
    "3561": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3563": {
      "op": "DUP1"
    },
    "3564": {
      "op": "REVERT"
    },
    "3565": {
      "op": "JUMPDEST"
    },
    "3566": {
      "op": "PUSH2",
      "value": "0xDF6"
    },
    "3569": {
      "op": "DUP7"
    },
    "3570": {
      "op": "PUSH2",
      "value": "0xB8D"
    },
    "3573": {
      "jump": "i",
      "op": "JUMP"
    },
    "3574": {
      "op": "JUMPDEST"
    },
    "3575": {
      "op": "SWAP5"
    },
    "3576": {
      "op": "POP"
    },
    "3577": {
      "op": "PUSH2",
      "value": "0xE04"
    },
    "3580": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3582": {
      "op": "DUP8"
    },
    "3583": {
      "op": "ADD"
    },
    "3584": {
      "op": "PUSH2",
      "value": "0xB8D"
    },
    "3587": {
      "jump": "i",
      "op": "JUMP"
    },
    "3588": {
      "op": "JUMPDEST"
    },
    "3589": {
      "op": "SWAP4"
    },
    "3590": {
      "op": "POP"
    },
    "3591": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3593": {
      "op": "DUP7"
    },
    "3594": {
      "op": "ADD"
    },
    "3595": {
      "op": "CALLDATALOAD"
    },
    "3596": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "3605": {
      "op": "DUP1"
    },
    "3606": {
      "op": "DUP3"
    },
    "3607": {
      "op": "GT"
    },
    "3608": {
      "op": "ISZERO"
    },
    "3609": {
      "op": "PUSH2",
      "value": "0xE21"
    },
    "3612": {
      "op": "JUMPI"
    },
    "3613": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3615": {
      "op": "DUP1"
    },
    "3616": {
      "op": "REVERT"
    },
    "3617": {
      "op": "JUMPDEST"
    },
    "3618": {
      "op": "PUSH2",
      "value": "0xE2D"
    },
    "3621": {
      "op": "DUP10"
    },
    "3622": {
      "op": "DUP4"
    },
    "3623": {
      "op": "DUP11"
    },
    "3624": {
      "op": "ADD"
    },
    "3625": {
      "op": "PUSH2",
      "value": "0xCF0"
    },
    "3628": {
      "jump": "i",
      "op": "JUMP"
    },
    "3629": {
      "op": "JUMPDEST"
    },
    "3630": {
      "op": "SWAP5"
    },
    "3631": {
      "op": "POP"
    },
    "3632": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3634": {
      "op": "DUP9"
    },
    "3635": {
      "op": "ADD"
    },
    "3636": {
      "op": "CALLDATALOAD"
    },
    "3637": {
      "op": "SWAP2"
    },
    "3638": {
      "op": "POP"
    },
    "3639": {
      "op": "DUP1"
    },
    "3640": {
      "op": "DUP3"
    },
    "3641": {
      "op": "GT"
    },
    "3642": {
      "op": "ISZERO"
    },
    "3643": {
      "op": "PUSH2",
      "value": "0xE43"
    },
    "3646": {
      "op": "JUMPI"
    },
    "3647": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3649": {
      "op": "DUP1"
    },
    "3650": {
      "op": "REVERT"
    },
    "3651": {
      "op": "JUMPDEST"
    },
    "3652": {
      "op": "PUSH2",
      "value": "0xE4F"
    },
    "3655": {
      "op": "DUP10"
    },
    "3656": {
      "op": "DUP4"
    },
    "3657": {
      "op": "DUP11"
    },
    "3658": {
      "op": "ADD"
    },
    "3659": {
      "op": "PUSH2",
      "value": "0xCF0"
    },
    "3662": {
      "jump": "i",
      "op": "JUMP"
    },
    "3663": {
      "op": "JUMPDEST"
    },
    "3664": {
      "op": "SWAP4"
    },
    "3665": {
      "op": "POP"
    },
    "3666": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3668": {
      "op": "DUP9"
    },
    "3669": {
      "op": "ADD"
    },
    "3670": {
      "op": "CALLDATALOAD"
    },
    "3671": {
      "op": "SWAP2"
    },
    "3672": {
      "op": "POP"
    },
    "3673": {
      "op": "DUP1"
    },
    "3674": {
      "op": "DUP3"
    },
    "3675": {
      "op": "GT"
    },
    "3676": {
      "op": "ISZERO"
    },
    "3677": {
      "op": "PUSH2",
      "value": "0xE65"
    },
    "3680": {
      "op": "JUMPI"
    },
    "3681": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3683": {
      "op": "DUP1"
    },
    "3684": {
      "op": "REVERT"
    },
    "3685": {
      "op": "JUMPDEST"
    },
    "3686": {
      "op": "POP"
    },
    "3687": {
      "op": "PUSH2",
      "value": "0xE72"
    },
    "3690": {
      "op": "DUP9"
    },
    "3691": {
      "op": "DUP3"
    },
    "3692": {
      "op": "DUP10"
    },
    "3693": {
      "op": "ADD"
    },
    "3694": {
      "op": "PUSH2",
      "value": "0xD61"
    },
    "3697": {
      "jump": "i",
      "op": "JUMP"
    },
    "3698": {
      "op": "JUMPDEST"
    },
    "3699": {
      "op": "SWAP2"
    },
    "3700": {
      "op": "POP"
    },
    "3701": {
      "op": "POP"
    },
    "3702": {
      "op": "SWAP3"
    },
    "3703": {
      "op": "SWAP6"
    },
    "3704": {
      "op": "POP"
    },
    "3705": {
      "op": "SWAP3"
    },
    "3706": {
      "op": "SWAP6"
    },
    "3707": {
      "op": "SWAP1"
    },
    "3708": {
      "op": "SWAP4"
    },
    "3709": {
      "op": "POP"
    },
    "3710": {
      "jump": "o",
      "op": "JUMP"
    },
    "3711": {
      "op": "JUMPDEST"
    },
    "3712": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3714": {
      "op": "DUP1"
    },
    "3715": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3717": {
      "op": "DUP4"
    },
    "3718": {
      "op": "DUP6"
    },
    "3719": {
      "op": "SUB"
    },
    "3720": {
      "op": "SLT"
    },
    "3721": {
      "op": "ISZERO"
    },
    "3722": {
      "op": "PUSH2",
      "value": "0xE92"
    },
    "3725": {
      "op": "JUMPI"
    },
    "3726": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3728": {
      "op": "DUP1"
    },
    "3729": {
      "op": "REVERT"
    },
    "3730": {
      "op": "JUMPDEST"
    },
    "3731": {
      "op": "DUP3"
    },
    "3732": {
      "op": "CALLDATALOAD"
    },
    "3733": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "3742": {
      "op": "DUP1"
    },
    "3743": {
      "op": "DUP3"
    },
    "3744": {
      "op": "GT"
    },
    "3745": {
      "op": "ISZERO"
    },
    "3746": {
      "op": "PUSH2",
      "value": "0xEAA"
    },
    "3749": {
      "op": "JUMPI"
    },
    "3750": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3752": {
      "op": "DUP1"
    },
    "3753": {
      "op": "REVERT"
    },
    "3754": {
      "op": "JUMPDEST"
    },
    "3755": {
      "op": "DUP2"
    },
    "3756": {
      "op": "DUP6"
    },
    "3757": {
      "op": "ADD"
    },
    "3758": {
      "op": "SWAP2"
    },
    "3759": {
      "op": "POP"
    },
    "3760": {
      "op": "DUP6"
    },
    "3761": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3763": {
      "op": "DUP4"
    },
    "3764": {
      "op": "ADD"
    },
    "3765": {
      "op": "SLT"
    },
    "3766": {
      "op": "PUSH2",
      "value": "0xEBE"
    },
    "3769": {
      "op": "JUMPI"
    },
    "3770": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3772": {
      "op": "DUP1"
    },
    "3773": {
      "op": "REVERT"
    },
    "3774": {
      "op": "JUMPDEST"
    },
    "3775": {
      "op": "DUP2"
    },
    "3776": {
      "op": "CALLDATALOAD"
    },
    "3777": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3779": {
      "op": "PUSH2",
      "value": "0xECB"
    },
    "3782": {
      "op": "DUP3"
    },
    "3783": {
      "op": "PUSH2",
      "value": "0xCCC"
    },
    "3786": {
      "jump": "i",
      "op": "JUMP"
    },
    "3787": {
      "op": "JUMPDEST"
    },
    "3788": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3790": {
      "op": "MLOAD"
    },
    "3791": {
      "op": "PUSH2",
      "value": "0xED8"
    },
    "3794": {
      "op": "DUP3"
    },
    "3795": {
      "op": "DUP3"
    },
    "3796": {
      "op": "PUSH2",
      "value": "0xC9F"
    },
    "3799": {
      "jump": "i",
      "op": "JUMP"
    },
    "3800": {
      "op": "JUMPDEST"
    },
    "3801": {
      "op": "DUP4"
    },
    "3802": {
      "op": "DUP2"
    },
    "3803": {
      "op": "MSTORE"
    },
    "3804": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "3806": {
      "op": "SWAP4"
    },
    "3807": {
      "op": "SWAP1"
    },
    "3808": {
      "op": "SWAP4"
    },
    "3809": {
      "op": "SHL"
    },
    "3810": {
      "op": "DUP6"
    },
    "3811": {
      "op": "ADD"
    },
    "3812": {
      "op": "DUP3"
    },
    "3813": {
      "op": "ADD"
    },
    "3814": {
      "op": "SWAP3"
    },
    "3815": {
      "op": "DUP3"
    },
    "3816": {
      "op": "DUP2"
    },
    "3817": {
      "op": "ADD"
    },
    "3818": {
      "op": "SWAP2"
    },
    "3819": {
      "op": "POP"
    },
    "3820": {
      "op": "DUP10"
    },
    "3821": {
      "op": "DUP5"
    },
    "3822": {
      "op": "GT"
    },
    "3823": {
      "op": "ISZERO"
    },
    "3824": {
      "op": "PUSH2",
      "value": "0xEF8"
    },
    "3827": {
      "op": "JUMPI"
    },
    "3828": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3830": {
      "op": "DUP1"
    },
    "3831": {
      "op": "REVERT"
    },
    "3832": {
      "op": "JUMPDEST"
    },
    "3833": {
      "op": "SWAP5"
    },
    "3834": {
      "op": "DUP3"
    },
    "3835": {
      "op": "ADD"
    },
    "3836": {
      "op": "SWAP5"
    },
    "3837": {
      "op": "JUMPDEST"
    },
    "3838": {
      "op": "DUP4"
    },
    "3839": {
      "op": "DUP7"
    },
    "3840": {
      "op": "LT"
    },
    "3841": {
      "op": "ISZERO"
    },
    "3842": {
      "op": "PUSH2",
      "value": "0xF1D"
    },
    "3845": {
      "op": "JUMPI"
    },
    "3846": {
      "op": "PUSH2",
      "value": "0xF0E"
    },
    "3849": {
      "op": "DUP7"
    },
    "3850": {
      "op": "PUSH2",
      "value": "0xB8D"
    },
    "3853": {
      "jump": "i",
      "op": "JUMP"
    },
    "3854": {
      "op": "JUMPDEST"
    },
    "3855": {
      "op": "DUP3"
    },
    "3856": {
      "op": "MSTORE"
    },
    "3857": {
      "op": "SWAP5"
    },
    "3858": {
      "op": "DUP3"
    },
    "3859": {
      "op": "ADD"
    },
    "3860": {
      "op": "SWAP5"
    },
    "3861": {
      "op": "SWAP1"
    },
    "3862": {
      "op": "DUP3"
    },
    "3863": {
      "op": "ADD"
    },
    "3864": {
      "op": "SWAP1"
    },
    "3865": {
      "op": "PUSH2",
      "value": "0xEFD"
    },
    "3868": {
      "op": "JUMP"
    },
    "3869": {
      "op": "JUMPDEST"
    },
    "3870": {
      "op": "SWAP7"
    },
    "3871": {
      "op": "POP"
    },
    "3872": {
      "op": "POP"
    },
    "3873": {
      "op": "DUP7"
    },
    "3874": {
      "op": "ADD"
    },
    "3875": {
      "op": "CALLDATALOAD"
    },
    "3876": {
      "op": "SWAP3"
    },
    "3877": {
      "op": "POP"
    },
    "3878": {
      "op": "POP"
    },
    "3879": {
      "op": "DUP1"
    },
    "3880": {
      "op": "DUP3"
    },
    "3881": {
      "op": "GT"
    },
    "3882": {
      "op": "ISZERO"
    },
    "3883": {
      "op": "PUSH2",
      "value": "0xF33"
    },
    "3886": {
      "op": "JUMPI"
    },
    "3887": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3889": {
      "op": "DUP1"
    },
    "3890": {
      "op": "REVERT"
    },
    "3891": {
      "op": "JUMPDEST"
    },
    "3892": {
      "op": "POP"
    },
    "3893": {
      "op": "PUSH2",
      "value": "0xF40"
    },
    "3896": {
      "op": "DUP6"
    },
    "3897": {
      "op": "DUP3"
    },
    "3898": {
      "op": "DUP7"
    },
    "3899": {
      "op": "ADD"
    },
    "3900": {
      "op": "PUSH2",
      "value": "0xCF0"
    },
    "3903": {
      "jump": "i",
      "op": "JUMP"
    },
    "3904": {
      "op": "JUMPDEST"
    },
    "3905": {
      "op": "SWAP2"
    },
    "3906": {
      "op": "POP"
    },
    "3907": {
      "op": "POP"
    },
    "3908": {
      "op": "SWAP3"
    },
    "3909": {
      "op": "POP"
    },
    "3910": {
      "op": "SWAP3"
    },
    "3911": {
      "op": "SWAP1"
    },
    "3912": {
      "op": "POP"
    },
    "3913": {
      "jump": "o",
      "op": "JUMP"
    },
    "3914": {
      "op": "JUMPDEST"
    },
    "3915": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3917": {
      "op": "DUP2"
    },
    "3918": {
      "op": "MLOAD"
    },
    "3919": {
      "op": "DUP1"
    },
    "3920": {
      "op": "DUP5"
    },
    "3921": {
      "op": "MSTORE"
    },
    "3922": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3924": {
      "op": "DUP1"
    },
    "3925": {
      "op": "DUP6"
    },
    "3926": {
      "op": "ADD"
    },
    "3927": {
      "op": "SWAP5"
    },
    "3928": {
      "op": "POP"
    },
    "3929": {
      "op": "DUP1"
    },
    "3930": {
      "op": "DUP5"
    },
    "3931": {
      "op": "ADD"
    },
    "3932": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3934": {
      "op": "JUMPDEST"
    },
    "3935": {
      "op": "DUP4"
    },
    "3936": {
      "op": "DUP2"
    },
    "3937": {
      "op": "LT"
    },
    "3938": {
      "op": "ISZERO"
    },
    "3939": {
      "op": "PUSH2",
      "value": "0xF7A"
    },
    "3942": {
      "op": "JUMPI"
    },
    "3943": {
      "op": "DUP2"
    },
    "3944": {
      "op": "MLOAD"
    },
    "3945": {
      "op": "DUP8"
    },
    "3946": {
      "op": "MSTORE"
    },
    "3947": {
      "op": "SWAP6"
    },
    "3948": {
      "op": "DUP3"
    },
    "3949": {
      "op": "ADD"
    },
    "3950": {
      "op": "SWAP6"
    },
    "3951": {
      "op": "SWAP1"
    },
    "3952": {
      "op": "DUP3"
    },
    "3953": {
      "op": "ADD"
    },
    "3954": {
      "op": "SWAP1"
    },
    "3955": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3957": {
      "op": "ADD"
    },
    "3958": {
      "op": "PUSH2",
      "value": "0xF5E"
    },
    "3961": {
      "op": "JUMP"
    },
    "3962": {
      "op": "JUMPDEST"
    },
    "3963": {
      "op": "POP"
    },
    "3964": {
      "op": "SWAP5"
    },
    "3965": {
      "op": "SWAP6"
    },
    "3966": {
      "op": "SWAP5"
    },
    "3967": {
      "op": "POP"
    },
    "3968": {
      "op": "POP"
    },
    "3969": {
      "op": "POP"
    },
    "3970": {
      "op": "POP"
    },
    "3971": {
      "op": "POP"
    },
    "3972": {
      "jump": "o",
      "op": "JUMP"
    },
    "3973": {
      "op": "JUMPDEST"
    },
    "3974": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3976": {
      "op": "DUP2"
    },
    "3977": {
      "op": "MSTORE"
    },
    "3978": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3980": {
      "op": "PUSH2",
      "value": "0xC09"
    },
    "3983": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3985": {
      "op": "DUP4"
    },
    "3986": {
      "op": "ADD"
    },
    "3987": {
      "op": "DUP5"
    },
    "3988": {
      "op": "PUSH2",
      "value": "0xF4A"
    },
    "3991": {
      "jump": "i",
      "op": "JUMP"
    },
    "3992": {
      "op": "JUMPDEST"
    },
    "3993": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3995": {
      "op": "DUP1"
    },
    "3996": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3998": {
      "op": "DUP4"
    },
    "3999": {
      "op": "DUP6"
    },
    "4000": {
      "op": "SUB"
    },
    "4001": {
      "op": "SLT"
    },
    "4002": {
      "op": "ISZERO"
    },
    "4003": {
      "op": "PUSH2",
      "value": "0xFAB"
    },
    "4006": {
      "op": "JUMPI"
    },
    "4007": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4009": {
      "op": "DUP1"
    },
    "4010": {
      "op": "REVERT"
    },
    "4011": {
      "op": "JUMPDEST"
    },
    "4012": {
      "op": "PUSH2",
      "value": "0xFB4"
    },
    "4015": {
      "op": "DUP4"
    },
    "4016": {
      "op": "PUSH2",
      "value": "0xB8D"
    },
    "4019": {
      "jump": "i",
      "op": "JUMP"
    },
    "4020": {
      "op": "JUMPDEST"
    },
    "4021": {
      "op": "SWAP2"
    },
    "4022": {
      "op": "POP"
    },
    "4023": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4025": {
      "op": "DUP4"
    },
    "4026": {
      "op": "ADD"
    },
    "4027": {
      "op": "CALLDATALOAD"
    },
    "4028": {
      "op": "DUP1"
    },
    "4029": {
      "op": "ISZERO"
    },
    "4030": {
      "op": "ISZERO"
    },
    "4031": {
      "op": "DUP2"
    },
    "4032": {
      "op": "EQ"
    },
    "4033": {
      "op": "PUSH2",
      "value": "0xFC9"
    },
    "4036": {
      "op": "JUMPI"
    },
    "4037": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4039": {
      "op": "DUP1"
    },
    "4040": {
      "op": "REVERT"
    },
    "4041": {
      "op": "JUMPDEST"
    },
    "4042": {
      "op": "DUP1"
    },
    "4043": {
      "op": "SWAP2"
    },
    "4044": {
      "op": "POP"
    },
    "4045": {
      "op": "POP"
    },
    "4046": {
      "op": "SWAP3"
    },
    "4047": {
      "op": "POP"
    },
    "4048": {
      "op": "SWAP3"
    },
    "4049": {
      "op": "SWAP1"
    },
    "4050": {
      "op": "POP"
    },
    "4051": {
      "jump": "o",
      "op": "JUMP"
    },
    "4052": {
      "op": "JUMPDEST"
    },
    "4053": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4055": {
      "op": "DUP1"
    },
    "4056": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4058": {
      "op": "DUP4"
    },
    "4059": {
      "op": "DUP6"
    },
    "4060": {
      "op": "SUB"
    },
    "4061": {
      "op": "SLT"
    },
    "4062": {
      "op": "ISZERO"
    },
    "4063": {
      "op": "PUSH2",
      "value": "0xFE7"
    },
    "4066": {
      "op": "JUMPI"
    },
    "4067": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4069": {
      "op": "DUP1"
    },
    "4070": {
      "op": "REVERT"
    },
    "4071": {
      "op": "JUMPDEST"
    },
    "4072": {
      "op": "PUSH2",
      "value": "0xFF0"
    },
    "4075": {
      "op": "DUP4"
    },
    "4076": {
      "op": "PUSH2",
      "value": "0xB8D"
    },
    "4079": {
      "jump": "i",
      "op": "JUMP"
    },
    "4080": {
      "op": "JUMPDEST"
    },
    "4081": {
      "op": "SWAP2"
    },
    "4082": {
      "op": "POP"
    },
    "4083": {
      "op": "PUSH2",
      "value": "0xFFE"
    },
    "4086": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4088": {
      "op": "DUP5"
    },
    "4089": {
      "op": "ADD"
    },
    "4090": {
      "op": "PUSH2",
      "value": "0xB8D"
    },
    "4093": {
      "jump": "i",
      "op": "JUMP"
    },
    "4094": {
      "op": "JUMPDEST"
    },
    "4095": {
      "op": "SWAP1"
    },
    "4096": {
      "op": "POP"
    },
    "4097": {
      "op": "SWAP3"
    },
    "4098": {
      "op": "POP"
    },
    "4099": {
      "op": "SWAP3"
    },
    "4100": {
      "op": "SWAP1"
    },
    "4101": {
      "op": "POP"
    },
    "4102": {
      "jump": "o",
      "op": "JUMP"
    },
    "4103": {
      "op": "JUMPDEST"
    },
    "4104": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4106": {
      "op": "DUP1"
    },
    "4107": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4109": {
      "op": "DUP1"
    },
    "4110": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4112": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4114": {
      "op": "DUP7"
    },
    "4115": {
      "op": "DUP9"
    },
    "4116": {
      "op": "SUB"
    },
    "4117": {
      "op": "SLT"
    },
    "4118": {
      "op": "ISZERO"
    },
    "4119": {
      "op": "PUSH2",
      "value": "0x101F"
    },
    "4122": {
      "op": "JUMPI"
    },
    "4123": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4125": {
      "op": "DUP1"
    },
    "4126": {
      "op": "REVERT"
    },
    "4127": {
      "op": "JUMPDEST"
    },
    "4128": {
      "op": "PUSH2",
      "value": "0x1028"
    },
    "4131": {
      "op": "DUP7"
    },
    "4132": {
      "op": "PUSH2",
      "value": "0xB8D"
    },
    "4135": {
      "jump": "i",
      "op": "JUMP"
    },
    "4136": {
      "op": "JUMPDEST"
    },
    "4137": {
      "op": "SWAP5"
    },
    "4138": {
      "op": "POP"
    },
    "4139": {
      "op": "PUSH2",
      "value": "0x1036"
    },
    "4142": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4144": {
      "op": "DUP8"
    },
    "4145": {
      "op": "ADD"
    },
    "4146": {
      "op": "PUSH2",
      "value": "0xB8D"
    },
    "4149": {
      "jump": "i",
      "op": "JUMP"
    },
    "4150": {
      "op": "JUMPDEST"
    },
    "4151": {
      "op": "SWAP4"
    },
    "4152": {
      "op": "POP"
    },
    "4153": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4155": {
      "op": "DUP7"
    },
    "4156": {
      "op": "ADD"
    },
    "4157": {
      "op": "CALLDATALOAD"
    },
    "4158": {
      "op": "SWAP3"
    },
    "4159": {
      "op": "POP"
    },
    "4160": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4162": {
      "op": "DUP7"
    },
    "4163": {
      "op": "ADD"
    },
    "4164": {
      "op": "CALLDATALOAD"
    },
    "4165": {
      "op": "SWAP2"
    },
    "4166": {
      "op": "POP"
    },
    "4167": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4169": {
      "op": "DUP7"
    },
    "4170": {
      "op": "ADD"
    },
    "4171": {
      "op": "CALLDATALOAD"
    },
    "4172": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "4181": {
      "op": "DUP2"
    },
    "4182": {
      "op": "GT"
    },
    "4183": {
      "op": "ISZERO"
    },
    "4184": {
      "op": "PUSH2",
      "value": "0x1060"
    },
    "4187": {
      "op": "JUMPI"
    },
    "4188": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4190": {
      "op": "DUP1"
    },
    "4191": {
      "op": "REVERT"
    },
    "4192": {
      "op": "JUMPDEST"
    },
    "4193": {
      "op": "PUSH2",
      "value": "0xE72"
    },
    "4196": {
      "op": "DUP9"
    },
    "4197": {
      "op": "DUP3"
    },
    "4198": {
      "op": "DUP10"
    },
    "4199": {
      "op": "ADD"
    },
    "4200": {
      "op": "PUSH2",
      "value": "0xD61"
    },
    "4203": {
      "jump": "i",
      "op": "JUMP"
    },
    "4204": {
      "op": "JUMPDEST"
    },
    "4205": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4207": {
      "op": "DUP2"
    },
    "4208": {
      "op": "DUP2"
    },
    "4209": {
      "op": "SHR"
    },
    "4210": {
      "op": "SWAP1"
    },
    "4211": {
      "op": "DUP3"
    },
    "4212": {
      "op": "AND"
    },
    "4213": {
      "op": "DUP1"
    },
    "4214": {
      "op": "PUSH2",
      "value": "0x1080"
    },
    "4217": {
      "op": "JUMPI"
    },
    "4218": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "4220": {
      "op": "DUP3"
    },
    "4221": {
      "op": "AND"
    },
    "4222": {
      "op": "SWAP2"
    },
    "4223": {
      "op": "POP"
    },
    "4224": {
      "op": "JUMPDEST"
    },
    "4225": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4227": {
      "op": "DUP3"
    },
    "4228": {
      "op": "LT"
    },
    "4229": {
      "op": "DUP2"
    },
    "4230": {
      "op": "EQ"
    },
    "4231": {
      "op": "ISZERO"
    },
    "4232": {
      "op": "PUSH2",
      "value": "0x10A1"
    },
    "4235": {
      "op": "JUMPI"
    },
    "4236": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4241": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4243": {
      "op": "SHL"
    },
    "4244": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4246": {
      "op": "MSTORE"
    },
    "4247": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "4249": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4251": {
      "op": "MSTORE"
    },
    "4252": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4254": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4256": {
      "op": "REVERT"
    },
    "4257": {
      "op": "JUMPDEST"
    },
    "4258": {
      "op": "POP"
    },
    "4259": {
      "op": "SWAP2"
    },
    "4260": {
      "op": "SWAP1"
    },
    "4261": {
      "op": "POP"
    },
    "4262": {
      "jump": "o",
      "op": "JUMP"
    },
    "4263": {
      "op": "JUMPDEST"
    },
    "4264": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4269": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4271": {
      "op": "SHL"
    },
    "4272": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4274": {
      "op": "MSTORE"
    },
    "4275": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "4277": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4279": {
      "op": "MSTORE"
    },
    "4280": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4282": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4284": {
      "op": "REVERT"
    },
    "4285": {
      "op": "JUMPDEST"
    },
    "4286": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4291": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4293": {
      "op": "SHL"
    },
    "4294": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4296": {
      "op": "MSTORE"
    },
    "4297": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "4299": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4301": {
      "op": "MSTORE"
    },
    "4302": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4304": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4306": {
      "op": "REVERT"
    },
    "4307": {
      "op": "JUMPDEST"
    },
    "4308": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4310": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4312": {
      "op": "NOT"
    },
    "4313": {
      "op": "DUP3"
    },
    "4314": {
      "op": "EQ"
    },
    "4315": {
      "op": "ISZERO"
    },
    "4316": {
      "op": "PUSH2",
      "value": "0x10E7"
    },
    "4319": {
      "op": "JUMPI"
    },
    "4320": {
      "op": "PUSH2",
      "value": "0x10E7"
    },
    "4323": {
      "op": "PUSH2",
      "value": "0x10BD"
    },
    "4326": {
      "jump": "i",
      "op": "JUMP"
    },
    "4327": {
      "op": "JUMPDEST"
    },
    "4328": {
      "op": "POP"
    },
    "4329": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4331": {
      "op": "ADD"
    },
    "4332": {
      "op": "SWAP1"
    },
    "4333": {
      "jump": "o",
      "op": "JUMP"
    },
    "4334": {
      "op": "JUMPDEST"
    },
    "4335": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4337": {
      "op": "DUP1"
    },
    "4338": {
      "op": "DUP3"
    },
    "4339": {
      "op": "MSTORE"
    },
    "4340": {
      "op": "PUSH1",
      "value": "0x25"
    },
    "4342": {
      "op": "SWAP1"
    },
    "4343": {
      "op": "DUP3"
    },
    "4344": {
      "op": "ADD"
    },
    "4345": {
      "op": "MSTORE"
    },
    "4346": {
      "op": "PUSH32",
      "value": "0x455243313135353A207472616E7366657220746F20746865207A65726F206164"
    },
    "4379": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4381": {
      "op": "DUP3"
    },
    "4382": {
      "op": "ADD"
    },
    "4383": {
      "op": "MSTORE"
    },
    "4384": {
      "op": "PUSH5",
      "value": "0x6472657373"
    },
    "4390": {
      "op": "PUSH1",
      "value": "0xD8"
    },
    "4392": {
      "op": "SHL"
    },
    "4393": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4395": {
      "op": "DUP3"
    },
    "4396": {
      "op": "ADD"
    },
    "4397": {
      "op": "MSTORE"
    },
    "4398": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4400": {
      "op": "ADD"
    },
    "4401": {
      "op": "SWAP1"
    },
    "4402": {
      "jump": "o",
      "op": "JUMP"
    },
    "4403": {
      "op": "JUMPDEST"
    },
    "4404": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4406": {
      "op": "DUP1"
    },
    "4407": {
      "op": "DUP3"
    },
    "4408": {
      "op": "MSTORE"
    },
    "4409": {
      "op": "PUSH1",
      "value": "0x2A"
    },
    "4411": {
      "op": "SWAP1"
    },
    "4412": {
      "op": "DUP3"
    },
    "4413": {
      "op": "ADD"
    },
    "4414": {
      "op": "MSTORE"
    },
    "4415": {
      "op": "PUSH32",
      "value": "0x455243313135353A20696E73756666696369656E742062616C616E636520666F"
    },
    "4448": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4450": {
      "op": "DUP3"
    },
    "4451": {
      "op": "ADD"
    },
    "4452": {
      "op": "MSTORE"
    },
    "4453": {
      "op": "PUSH10",
      "value": "0x39103A3930B739B332B9"
    },
    "4464": {
      "op": "PUSH1",
      "value": "0xB1"
    },
    "4466": {
      "op": "SHL"
    },
    "4467": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4469": {
      "op": "DUP3"
    },
    "4470": {
      "op": "ADD"
    },
    "4471": {
      "op": "MSTORE"
    },
    "4472": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4474": {
      "op": "ADD"
    },
    "4475": {
      "op": "SWAP1"
    },
    "4476": {
      "jump": "o",
      "op": "JUMP"
    },
    "4477": {
      "op": "JUMPDEST"
    },
    "4478": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4480": {
      "op": "DUP3"
    },
    "4481": {
      "op": "NOT"
    },
    "4482": {
      "op": "DUP3"
    },
    "4483": {
      "op": "GT"
    },
    "4484": {
      "op": "ISZERO"
    },
    "4485": {
      "op": "PUSH2",
      "value": "0x1190"
    },
    "4488": {
      "op": "JUMPI"
    },
    "4489": {
      "op": "PUSH2",
      "value": "0x1190"
    },
    "4492": {
      "op": "PUSH2",
      "value": "0x10BD"
    },
    "4495": {
      "jump": "i",
      "op": "JUMP"
    },
    "4496": {
      "op": "JUMPDEST"
    },
    "4497": {
      "op": "POP"
    },
    "4498": {
      "op": "ADD"
    },
    "4499": {
      "op": "SWAP1"
    },
    "4500": {
      "jump": "o",
      "op": "JUMP"
    },
    "4501": {
      "op": "JUMPDEST"
    },
    "4502": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4504": {
      "op": "DUP2"
    },
    "4505": {
      "op": "MSTORE"
    },
    "4506": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4508": {
      "op": "PUSH2",
      "value": "0x11A8"
    },
    "4511": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4513": {
      "op": "DUP4"
    },
    "4514": {
      "op": "ADD"
    },
    "4515": {
      "op": "DUP6"
    },
    "4516": {
      "op": "PUSH2",
      "value": "0xF4A"
    },
    "4519": {
      "jump": "i",
      "op": "JUMP"
    },
    "4520": {
      "op": "JUMPDEST"
    },
    "4521": {
      "op": "DUP3"
    },
    "4522": {
      "op": "DUP2"
    },
    "4523": {
      "op": "SUB"
    },
    "4524": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4526": {
      "op": "DUP5"
    },
    "4527": {
      "op": "ADD"
    },
    "4528": {
      "op": "MSTORE"
    },
    "4529": {
      "op": "PUSH2",
      "value": "0x11BA"
    },
    "4532": {
      "op": "DUP2"
    },
    "4533": {
      "op": "DUP6"
    },
    "4534": {
      "op": "PUSH2",
      "value": "0xF4A"
    },
    "4537": {
      "jump": "i",
      "op": "JUMP"
    },
    "4538": {
      "op": "JUMPDEST"
    },
    "4539": {
      "op": "SWAP6"
    },
    "4540": {
      "op": "SWAP5"
    },
    "4541": {
      "op": "POP"
    },
    "4542": {
      "op": "POP"
    },
    "4543": {
      "op": "POP"
    },
    "4544": {
      "op": "POP"
    },
    "4545": {
      "op": "POP"
    },
    "4546": {
      "jump": "o",
      "op": "JUMP"
    },
    "4547": {
      "op": "JUMPDEST"
    },
    "4548": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4550": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4552": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4554": {
      "op": "SHL"
    },
    "4555": {
      "op": "SUB"
    },
    "4556": {
      "op": "DUP7"
    },
    "4557": {
      "op": "DUP2"
    },
    "4558": {
      "op": "AND"
    },
    "4559": {
      "op": "DUP3"
    },
    "4560": {
      "op": "MSTORE"
    },
    "4561": {
      "op": "DUP6"
    },
    "4562": {
      "op": "AND"
    },
    "4563": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4565": {
      "op": "DUP3"
    },
    "4566": {
      "op": "ADD"
    },
    "4567": {
      "op": "MSTORE"
    },
    "4568": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4570": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4572": {
      "op": "DUP3"
    },
    "4573": {
      "op": "ADD"
    },
    "4574": {
      "op": "DUP2"
    },
    "4575": {
      "op": "SWAP1"
    },
    "4576": {
      "op": "MSTORE"
    },
    "4577": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4579": {
      "op": "SWAP1"
    },
    "4580": {
      "op": "PUSH2",
      "value": "0x11EF"
    },
    "4583": {
      "op": "SWAP1"
    },
    "4584": {
      "op": "DUP4"
    },
    "4585": {
      "op": "ADD"
    },
    "4586": {
      "op": "DUP7"
    },
    "4587": {
      "op": "PUSH2",
      "value": "0xF4A"
    },
    "4590": {
      "jump": "i",
      "op": "JUMP"
    },
    "4591": {
      "op": "JUMPDEST"
    },
    "4592": {
      "op": "DUP3"
    },
    "4593": {
      "op": "DUP2"
    },
    "4594": {
      "op": "SUB"
    },
    "4595": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4597": {
      "op": "DUP5"
    },
    "4598": {
      "op": "ADD"
    },
    "4599": {
      "op": "MSTORE"
    },
    "4600": {
      "op": "PUSH2",
      "value": "0x1201"
    },
    "4603": {
      "op": "DUP2"
    },
    "4604": {
      "op": "DUP7"
    },
    "4605": {
      "op": "PUSH2",
      "value": "0xF4A"
    },
    "4608": {
      "jump": "i",
      "op": "JUMP"
    },
    "4609": {
      "op": "JUMPDEST"
    },
    "4610": {
      "op": "SWAP1"
    },
    "4611": {
      "op": "POP"
    },
    "4612": {
      "op": "DUP3"
    },
    "4613": {
      "op": "DUP2"
    },
    "4614": {
      "op": "SUB"
    },
    "4615": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4617": {
      "op": "DUP5"
    },
    "4618": {
      "op": "ADD"
    },
    "4619": {
      "op": "MSTORE"
    },
    "4620": {
      "op": "PUSH2",
      "value": "0x1215"
    },
    "4623": {
      "op": "DUP2"
    },
    "4624": {
      "op": "DUP6"
    },
    "4625": {
      "op": "PUSH2",
      "value": "0xC29"
    },
    "4628": {
      "jump": "i",
      "op": "JUMP"
    },
    "4629": {
      "op": "JUMPDEST"
    },
    "4630": {
      "op": "SWAP9"
    },
    "4631": {
      "op": "SWAP8"
    },
    "4632": {
      "op": "POP"
    },
    "4633": {
      "op": "POP"
    },
    "4634": {
      "op": "POP"
    },
    "4635": {
      "op": "POP"
    },
    "4636": {
      "op": "POP"
    },
    "4637": {
      "op": "POP"
    },
    "4638": {
      "op": "POP"
    },
    "4639": {
      "op": "POP"
    },
    "4640": {
      "jump": "o",
      "op": "JUMP"
    },
    "4641": {
      "op": "JUMPDEST"
    },
    "4642": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4644": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4646": {
      "op": "DUP3"
    },
    "4647": {
      "op": "DUP5"
    },
    "4648": {
      "op": "SUB"
    },
    "4649": {
      "op": "SLT"
    },
    "4650": {
      "op": "ISZERO"
    },
    "4651": {
      "op": "PUSH2",
      "value": "0x1233"
    },
    "4654": {
      "op": "JUMPI"
    },
    "4655": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4657": {
      "op": "DUP1"
    },
    "4658": {
      "op": "REVERT"
    },
    "4659": {
      "op": "JUMPDEST"
    },
    "4660": {
      "op": "DUP2"
    },
    "4661": {
      "op": "MLOAD"
    },
    "4662": {
      "op": "PUSH2",
      "value": "0xC09"
    },
    "4665": {
      "op": "DUP2"
    },
    "4666": {
      "op": "PUSH2",
      "value": "0xBD3"
    },
    "4669": {
      "jump": "i",
      "op": "JUMP"
    },
    "4670": {
      "op": "JUMPDEST"
    },
    "4671": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4673": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "4675": {
      "op": "RETURNDATASIZE"
    },
    "4676": {
      "op": "GT"
    },
    "4677": {
      "op": "ISZERO"
    },
    "4678": {
      "op": "PUSH2",
      "value": "0x1257"
    },
    "4681": {
      "op": "JUMPI"
    },
    "4682": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4684": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4686": {
      "op": "DUP1"
    },
    "4687": {
      "op": "RETURNDATACOPY"
    },
    "4688": {
      "op": "POP"
    },
    "4689": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4691": {
      "op": "MLOAD"
    },
    "4692": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4694": {
      "op": "SHR"
    },
    "4695": {
      "op": "JUMPDEST"
    },
    "4696": {
      "op": "SWAP1"
    },
    "4697": {
      "jump": "o",
      "op": "JUMP"
    },
    "4698": {
      "op": "JUMPDEST"
    },
    "4699": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4701": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4703": {
      "op": "RETURNDATASIZE"
    },
    "4704": {
      "op": "LT"
    },
    "4705": {
      "op": "ISZERO"
    },
    "4706": {
      "op": "PUSH2",
      "value": "0x1268"
    },
    "4709": {
      "op": "JUMPI"
    },
    "4710": {
      "op": "SWAP1"
    },
    "4711": {
      "jump": "o",
      "op": "JUMP"
    },
    "4712": {
      "op": "JUMPDEST"
    },
    "4713": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4715": {
      "op": "MLOAD"
    },
    "4716": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "4718": {
      "op": "NOT"
    },
    "4719": {
      "op": "RETURNDATASIZE"
    },
    "4720": {
      "op": "DUP2"
    },
    "4721": {
      "op": "ADD"
    },
    "4722": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4724": {
      "op": "DUP4"
    },
    "4725": {
      "op": "RETURNDATACOPY"
    },
    "4726": {
      "op": "DUP2"
    },
    "4727": {
      "op": "MLOAD"
    },
    "4728": {
      "op": "RETURNDATASIZE"
    },
    "4729": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "4738": {
      "op": "DUP2"
    },
    "4739": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4741": {
      "op": "DUP5"
    },
    "4742": {
      "op": "ADD"
    },
    "4743": {
      "op": "GT"
    },
    "4744": {
      "op": "DUP2"
    },
    "4745": {
      "op": "DUP5"
    },
    "4746": {
      "op": "GT"
    },
    "4747": {
      "op": "OR"
    },
    "4748": {
      "op": "ISZERO"
    },
    "4749": {
      "op": "PUSH2",
      "value": "0x1298"
    },
    "4752": {
      "op": "JUMPI"
    },
    "4753": {
      "op": "POP"
    },
    "4754": {
      "op": "POP"
    },
    "4755": {
      "op": "POP"
    },
    "4756": {
      "op": "POP"
    },
    "4757": {
      "op": "POP"
    },
    "4758": {
      "op": "SWAP1"
    },
    "4759": {
      "jump": "o",
      "op": "JUMP"
    },
    "4760": {
      "op": "JUMPDEST"
    },
    "4761": {
      "op": "DUP3"
    },
    "4762": {
      "op": "DUP6"
    },
    "4763": {
      "op": "ADD"
    },
    "4764": {
      "op": "SWAP2"
    },
    "4765": {
      "op": "POP"
    },
    "4766": {
      "op": "DUP2"
    },
    "4767": {
      "op": "MLOAD"
    },
    "4768": {
      "op": "DUP2"
    },
    "4769": {
      "op": "DUP2"
    },
    "4770": {
      "op": "GT"
    },
    "4771": {
      "op": "ISZERO"
    },
    "4772": {
      "op": "PUSH2",
      "value": "0x12B0"
    },
    "4775": {
      "op": "JUMPI"
    },
    "4776": {
      "op": "POP"
    },
    "4777": {
      "op": "POP"
    },
    "4778": {
      "op": "POP"
    },
    "4779": {
      "op": "POP"
    },
    "4780": {
      "op": "POP"
    },
    "4781": {
      "op": "POP"
    },
    "4782": {
      "op": "SWAP1"
    },
    "4783": {
      "jump": "o",
      "op": "JUMP"
    },
    "4784": {
      "op": "JUMPDEST"
    },
    "4785": {
      "op": "DUP5"
    },
    "4786": {
      "op": "RETURNDATASIZE"
    },
    "4787": {
      "op": "DUP8"
    },
    "4788": {
      "op": "ADD"
    },
    "4789": {
      "op": "ADD"
    },
    "4790": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4792": {
      "op": "DUP3"
    },
    "4793": {
      "op": "DUP6"
    },
    "4794": {
      "op": "ADD"
    },
    "4795": {
      "op": "ADD"
    },
    "4796": {
      "op": "GT"
    },
    "4797": {
      "op": "ISZERO"
    },
    "4798": {
      "op": "PUSH2",
      "value": "0x12CA"
    },
    "4801": {
      "op": "JUMPI"
    },
    "4802": {
      "op": "POP"
    },
    "4803": {
      "op": "POP"
    },
    "4804": {
      "op": "POP"
    },
    "4805": {
      "op": "POP"
    },
    "4806": {
      "op": "POP"
    },
    "4807": {
      "op": "POP"
    },
    "4808": {
      "op": "SWAP1"
    },
    "4809": {
      "jump": "o",
      "op": "JUMP"
    },
    "4810": {
      "op": "JUMPDEST"
    },
    "4811": {
      "op": "PUSH2",
      "value": "0x12D9"
    },
    "4814": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4816": {
      "op": "DUP3"
    },
    "4817": {
      "op": "DUP7"
    },
    "4818": {
      "op": "ADD"
    },
    "4819": {
      "op": "ADD"
    },
    "4820": {
      "op": "DUP8"
    },
    "4821": {
      "op": "PUSH2",
      "value": "0xC9F"
    },
    "4824": {
      "jump": "i",
      "op": "JUMP"
    },
    "4825": {
      "op": "JUMPDEST"
    },
    "4826": {
      "op": "POP"
    },
    "4827": {
      "op": "SWAP1"
    },
    "4828": {
      "op": "SWAP6"
    },
    "4829": {
      "op": "SWAP5"
    },
    "4830": {
      "op": "POP"
    },
    "4831": {
      "op": "POP"
    },
    "4832": {
      "op": "POP"
    },
    "4833": {
      "op": "POP"
    },
    "4834": {
      "op": "POP"
    },
    "4835": {
      "jump": "o",
      "op": "JUMP"
    },
    "4836": {
      "op": "JUMPDEST"
    },
    "4837": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4839": {
      "op": "DUP1"
    },
    "4840": {
      "op": "DUP3"
    },
    "4841": {
      "op": "MSTORE"
    },
    "4842": {
      "op": "PUSH1",
      "value": "0x28"
    },
    "4844": {
      "op": "SWAP1"
    },
    "4845": {
      "op": "DUP3"
    },
    "4846": {
      "op": "ADD"
    },
    "4847": {
      "op": "MSTORE"
    },
    "4848": {
      "op": "PUSH32",
      "value": "0x455243313135353A204552433131353552656365697665722072656A65637465"
    },
    "4881": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4883": {
      "op": "DUP3"
    },
    "4884": {
      "op": "ADD"
    },
    "4885": {
      "op": "MSTORE"
    },
    "4886": {
      "op": "PUSH8",
      "value": "0x6420746F6B656E73"
    },
    "4895": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "4897": {
      "op": "SHL"
    },
    "4898": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4900": {
      "op": "DUP3"
    },
    "4901": {
      "op": "ADD"
    },
    "4902": {
      "op": "MSTORE"
    },
    "4903": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4905": {
      "op": "ADD"
    },
    "4906": {
      "op": "SWAP1"
    },
    "4907": {
      "jump": "o",
      "op": "JUMP"
    },
    "4908": {
      "op": "JUMPDEST"
    },
    "4909": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4911": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4913": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4915": {
      "op": "SHL"
    },
    "4916": {
      "op": "SUB"
    },
    "4917": {
      "op": "DUP7"
    },
    "4918": {
      "op": "DUP2"
    },
    "4919": {
      "op": "AND"
    },
    "4920": {
      "op": "DUP3"
    },
    "4921": {
      "op": "MSTORE"
    },
    "4922": {
      "op": "DUP6"
    },
    "4923": {
      "op": "AND"
    },
    "4924": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4926": {
      "op": "DUP3"
    },
    "4927": {
      "op": "ADD"
    },
    "4928": {
      "op": "MSTORE"
    },
    "4929": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4931": {
      "op": "DUP2"
    },
    "4932": {
      "op": "ADD"
    },
    "4933": {
      "op": "DUP5"
    },
    "4934": {
      "op": "SWAP1"
    },
    "4935": {
      "op": "MSTORE"
    },
    "4936": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4938": {
      "op": "DUP2"
    },
    "4939": {
      "op": "ADD"
    },
    "4940": {
      "op": "DUP4"
    },
    "4941": {
      "op": "SWAP1"
    },
    "4942": {
      "op": "MSTORE"
    },
    "4943": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4945": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4947": {
      "op": "DUP3"
    },
    "4948": {
      "op": "ADD"
    },
    "4949": {
      "op": "DUP2"
    },
    "4950": {
      "op": "SWAP1"
    },
    "4951": {
      "op": "MSTORE"
    },
    "4952": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4954": {
      "op": "SWAP1"
    },
    "4955": {
      "op": "PUSH2",
      "value": "0x1366"
    },
    "4958": {
      "op": "SWAP1"
    },
    "4959": {
      "op": "DUP4"
    },
    "4960": {
      "op": "ADD"
    },
    "4961": {
      "op": "DUP5"
    },
    "4962": {
      "op": "PUSH2",
      "value": "0xC29"
    },
    "4965": {
      "jump": "i",
      "op": "JUMP"
    },
    "4966": {
      "op": "JUMPDEST"
    },
    "4967": {
      "op": "SWAP8"
    },
    "4968": {
      "op": "SWAP7"
    },
    "4969": {
      "op": "POP"
    },
    "4970": {
      "op": "POP"
    },
    "4971": {
      "op": "POP"
    },
    "4972": {
      "op": "POP"
    },
    "4973": {
      "op": "POP"
    },
    "4974": {
      "op": "POP"
    },
    "4975": {
      "op": "POP"
    },
    "4976": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "1d97ad0262fa6dc5ff60f7015f3180f6b5add79a",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"./IERC1155.sol\";\nimport \"./IERC1155Receiver.sol\";\nimport \"./extensions/IERC1155MetadataURI.sol\";\nimport \"../../utils/Address.sol\";\nimport \"../../utils/Context.sol\";\nimport \"../../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Implementation of the basic standard multi-token.\n * See https://eips.ethereum.org/EIPS/eip-1155\n * Originally based on code by Enjin: https://github.com/enjin/erc-1155\n *\n * _Available since v3.1._\n */\ncontract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {\n    using Address for address;\n\n    // Mapping from token ID to account balances\n    mapping(uint256 => mapping(address => uint256)) private _balances;\n\n    // Mapping from account to operator approvals\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\n\n    // Used as the URI for all token types by relying on ID substitution, e.g. https://token-cdn-domain/{id}.json\n    string private _uri;\n\n    /**\n     * @dev See {_setURI}.\n     */\n    constructor(string memory uri_) {\n        _setURI(uri_);\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC1155).interfaceId ||\n            interfaceId == type(IERC1155MetadataURI).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC1155MetadataURI-uri}.\n     *\n     * This implementation returns the same URI for *all* token types. It relies\n     * on the token type ID substitution mechanism\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n     *\n     * Clients calling this function must replace the `\\{id\\}` substring with the\n     * actual token type ID.\n     */\n    function uri(uint256) public view virtual override returns (string memory) {\n        return _uri;\n    }\n\n    /**\n     * @dev See {IERC1155-balanceOf}.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function balanceOf(address account, uint256 id) public view virtual override returns (uint256) {\n        require(account != address(0), \"ERC1155: balance query for the zero address\");\n        return _balances[id][account];\n    }\n\n    /**\n     * @dev See {IERC1155-balanceOfBatch}.\n     *\n     * Requirements:\n     *\n     * - `accounts` and `ids` must have the same length.\n     */\n    function balanceOfBatch(address[] memory accounts, uint256[] memory ids)\n        public\n        view\n        virtual\n        override\n        returns (uint256[] memory)\n    {\n        require(accounts.length == ids.length, \"ERC1155: accounts and ids length mismatch\");\n\n        uint256[] memory batchBalances = new uint256[](accounts.length);\n\n        for (uint256 i = 0; i < accounts.length; ++i) {\n            batchBalances[i] = balanceOf(accounts[i], ids[i]);\n        }\n\n        return batchBalances;\n    }\n\n    /**\n     * @dev See {IERC1155-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual override {\n        require(_msgSender() != operator, \"ERC1155: setting approval status for self\");\n\n        _operatorApprovals[_msgSender()][operator] = approved;\n        emit ApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC1155-isApprovedForAll}.\n     */\n    function isApprovedForAll(address account, address operator) public view virtual override returns (bool) {\n        return _operatorApprovals[account][operator];\n    }\n\n    /**\n     * @dev See {IERC1155-safeTransferFrom}.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes memory data\n    ) public virtual override {\n        require(\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\n            \"ERC1155: caller is not owner nor approved\"\n        );\n        _safeTransferFrom(from, to, id, amount, data);\n    }\n\n    /**\n     * @dev See {IERC1155-safeBatchTransferFrom}.\n     */\n    function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) public virtual override {\n        require(\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\n            \"ERC1155: transfer caller is not owner nor approved\"\n        );\n        _safeBatchTransferFrom(from, to, ids, amounts, data);\n    }\n\n    /**\n     * @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `from` must have a balance of tokens of type `id` of at least `amount`.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function _safeTransferFrom(\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes memory data\n    ) internal virtual {\n        require(to != address(0), \"ERC1155: transfer to the zero address\");\n\n        address operator = _msgSender();\n\n        _beforeTokenTransfer(operator, from, to, _asSingletonArray(id), _asSingletonArray(amount), data);\n\n        uint256 fromBalance = _balances[id][from];\n        require(fromBalance >= amount, \"ERC1155: insufficient balance for transfer\");\n        unchecked {\n            _balances[id][from] = fromBalance - amount;\n        }\n        _balances[id][to] += amount;\n\n        emit TransferSingle(operator, from, to, id, amount);\n\n        _doSafeTransferAcceptanceCheck(operator, from, to, id, amount, data);\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_safeTransferFrom}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     */\n    function _safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) internal virtual {\n        require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\");\n        require(to != address(0), \"ERC1155: transfer to the zero address\");\n\n        address operator = _msgSender();\n\n        _beforeTokenTransfer(operator, from, to, ids, amounts, data);\n\n        for (uint256 i = 0; i < ids.length; ++i) {\n            uint256 id = ids[i];\n            uint256 amount = amounts[i];\n\n            uint256 fromBalance = _balances[id][from];\n            require(fromBalance >= amount, \"ERC1155: insufficient balance for transfer\");\n            unchecked {\n                _balances[id][from] = fromBalance - amount;\n            }\n            _balances[id][to] += amount;\n        }\n\n        emit TransferBatch(operator, from, to, ids, amounts);\n\n        _doSafeBatchTransferAcceptanceCheck(operator, from, to, ids, amounts, data);\n    }\n\n    /**\n     * @dev Sets a new URI for all token types, by relying on the token type ID\n     * substitution mechanism\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n     *\n     * By this mechanism, any occurrence of the `\\{id\\}` substring in either the\n     * URI or any of the amounts in the JSON file at said URI will be replaced by\n     * clients with the token type ID.\n     *\n     * For example, the `https://token-cdn-domain/\\{id\\}.json` URI would be\n     * interpreted by clients as\n     * `https://token-cdn-domain/000000000000000000000000000000000000000000000000000000000004cce0.json`\n     * for token type ID 0x4cce0.\n     *\n     * See {uri}.\n     *\n     * Because these URIs cannot be meaningfully represented by the {URI} event,\n     * this function emits no events.\n     */\n    function _setURI(string memory newuri) internal virtual {\n        _uri = newuri;\n    }\n\n    /**\n     * @dev Creates `amount` tokens of token type `id`, and assigns them to `account`.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     * - If `account` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function _mint(\n        address account,\n        uint256 id,\n        uint256 amount,\n        bytes memory data\n    ) internal virtual {\n        require(account != address(0), \"ERC1155: mint to the zero address\");\n\n        address operator = _msgSender();\n\n        _beforeTokenTransfer(operator, address(0), account, _asSingletonArray(id), _asSingletonArray(amount), data);\n\n        _balances[id][account] += amount;\n        emit TransferSingle(operator, address(0), account, id, amount);\n\n        _doSafeTransferAcceptanceCheck(operator, address(0), account, id, amount, data);\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_mint}.\n     *\n     * Requirements:\n     *\n     * - `ids` and `amounts` must have the same length.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     */\n    function _mintBatch(\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) internal virtual {\n        require(to != address(0), \"ERC1155: mint to the zero address\");\n        require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\");\n\n        address operator = _msgSender();\n\n        _beforeTokenTransfer(operator, address(0), to, ids, amounts, data);\n\n        for (uint256 i = 0; i < ids.length; i++) {\n            _balances[ids[i]][to] += amounts[i];\n        }\n\n        emit TransferBatch(operator, address(0), to, ids, amounts);\n\n        _doSafeBatchTransferAcceptanceCheck(operator, address(0), to, ids, amounts, data);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens of token type `id` from `account`\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens of token type `id`.\n     */\n    function _burn(\n        address account,\n        uint256 id,\n        uint256 amount\n    ) internal virtual {\n        require(account != address(0), \"ERC1155: burn from the zero address\");\n\n        address operator = _msgSender();\n\n        _beforeTokenTransfer(operator, account, address(0), _asSingletonArray(id), _asSingletonArray(amount), \"\");\n\n        uint256 accountBalance = _balances[id][account];\n        require(accountBalance >= amount, \"ERC1155: burn amount exceeds balance\");\n        unchecked {\n            _balances[id][account] = accountBalance - amount;\n        }\n\n        emit TransferSingle(operator, account, address(0), id, amount);\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_burn}.\n     *\n     * Requirements:\n     *\n     * - `ids` and `amounts` must have the same length.\n     */\n    function _burnBatch(\n        address account,\n        uint256[] memory ids,\n        uint256[] memory amounts\n    ) internal virtual {\n        require(account != address(0), \"ERC1155: burn from the zero address\");\n        require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\");\n\n        address operator = _msgSender();\n\n        _beforeTokenTransfer(operator, account, address(0), ids, amounts, \"\");\n\n        for (uint256 i = 0; i < ids.length; i++) {\n            uint256 id = ids[i];\n            uint256 amount = amounts[i];\n\n            uint256 accountBalance = _balances[id][account];\n            require(accountBalance >= amount, \"ERC1155: burn amount exceeds balance\");\n            unchecked {\n                _balances[id][account] = accountBalance - amount;\n            }\n        }\n\n        emit TransferBatch(operator, account, address(0), ids, amounts);\n    }\n\n    /**\n     * @dev Hook that is called before any token transfer. This includes minting\n     * and burning, as well as batched variants.\n     *\n     * The same hook is called on both single and batched variants. For single\n     * transfers, the length of the `id` and `amount` arrays will be 1.\n     *\n     * Calling conditions (for each `id` and `amount` pair):\n     *\n     * - When `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * of token type `id` will be  transferred to `to`.\n     * - When `from` is zero, `amount` tokens of token type `id` will be minted\n     * for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens of token type `id`\n     * will be burned.\n     * - `from` and `to` are never both zero.\n     * - `ids` and `amounts` have the same, non-zero length.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(\n        address operator,\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) internal virtual {}\n\n    function _doSafeTransferAcceptanceCheck(\n        address operator,\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes memory data\n    ) private {\n        if (to.isContract()) {\n            try IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) returns (bytes4 response) {\n                if (response != IERC1155Receiver(to).onERC1155Received.selector) {\n                    revert(\"ERC1155: ERC1155Receiver rejected tokens\");\n                }\n            } catch Error(string memory reason) {\n                revert(reason);\n            } catch {\n                revert(\"ERC1155: transfer to non ERC1155Receiver implementer\");\n            }\n        }\n    }\n\n    function _doSafeBatchTransferAcceptanceCheck(\n        address operator,\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) private {\n        if (to.isContract()) {\n            try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) returns (\n                bytes4 response\n            ) {\n                if (response != IERC1155Receiver(to).onERC1155BatchReceived.selector) {\n                    revert(\"ERC1155: ERC1155Receiver rejected tokens\");\n                }\n            } catch Error(string memory reason) {\n                revert(reason);\n            } catch {\n                revert(\"ERC1155: transfer to non ERC1155Receiver implementer\");\n            }\n        }\n    }\n\n    function _asSingletonArray(uint256 element) private pure returns (uint256[] memory) {\n        uint256[] memory array = new uint256[](1);\n        array[0] = element;\n\n        return array;\n    }\n}\n",
  "sourceMap": "494:14531:98:-:0;;;1031:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1073:13;1081:4;1073:7;:13::i;:::-;1031:62;494:14531;;8028:86;8094:13;;;;:4;;:13;;;;;:::i;:::-;;8028:86;:::o;494:14531::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;494:14531:98;;;-1:-1:-1;494:14531:98;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:127:171;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:1087;226:6;257:2;300;288:9;279:7;275:23;271:32;268:52;;;316:1;313;306:12;268:52;343:16;;-1:-1:-1;;;;;408:14:171;;;405:34;;;435:1;432;425:12;405:34;473:6;462:9;458:22;448:32;;518:7;511:4;507:2;503:13;499:27;489:55;;540:1;537;530:12;489:55;569:2;563:9;591:2;587;584:10;581:36;;;597:18;;:::i;:::-;672:2;666:9;640:2;726:13;;-1:-1:-1;;722:22:171;;;746:2;718:31;714:40;702:53;;;770:18;;;790:22;;;767:46;764:72;;;816:18;;:::i;:::-;856:10;852:2;845:22;891:2;883:6;876:18;931:7;926:2;921;917;913:11;909:20;906:33;903:53;;;952:1;949;942:12;903:53;974:1;965:10;;984:129;998:2;995:1;992:9;984:129;;;1086:10;;;1082:19;;1076:26;1055:14;;;1051:23;;1044:59;1009:10;;;;984:129;;;1131:2;1128:1;1125:9;1122:80;;;1190:1;1185:2;1180;1172:6;1168:15;1164:24;1157:35;1122:80;1221:6;146:1087;-1:-1:-1;;;;;;;;146:1087:171:o;1238:380::-;1317:1;1313:12;;;;1360;;;1381:61;;1435:4;1427:6;1423:17;1413:27;;1381:61;1488:2;1480:6;1477:14;1457:18;1454:38;1451:161;;;1534:10;1529:3;1525:20;1522:1;1515:31;1569:4;1566:1;1559:15;1597:4;1594:1;1587:15;1451:161;;1238:380;;;:::o;:::-;494:14531:98;;;;;;",
  "sourcePath": "contracts/openzeppelin/contracts/token/ERC1155/ERC1155.sol",
  "type": "contract"
}