{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "enableReturn",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "enableApprove",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "BalanceOf",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "TotalSupply",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "fee",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "onFlashLoan",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "109": "contracts/openzeppelin/contracts/token/ERC20/IERC20.sol",
    "141": "contracts/openzeppelin/contracts/utils/Address.sol",
    "51": "contracts/openzeppelin/contracts/mocks/ERC3156FlashBorrowerMock.sol",
    "7": "contracts/openzeppelin/contracts/interfaces/IERC3156.sol"
  },
  "ast": {
    "absolutePath": "contracts/openzeppelin/contracts/mocks/ERC3156FlashBorrowerMock.sol",
    "exportedSymbols": {
      "Address": [
        17544
      ],
      "ERC3156FlashBorrowerMock": [
        4552
      ],
      "IERC20": [
        11916
      ],
      "IERC3156FlashBorrower": [
        1840
      ],
      "IERC3156FlashLender": [
        1875
      ]
    },
    "id": 4553,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 4422,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:51"
      },
      {
        "absolutePath": "contracts/openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "../token/ERC20/IERC20.sol",
        "id": 4423,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 4553,
        "sourceUnit": 11917,
        "src": "58:35:51",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/openzeppelin/contracts/interfaces/IERC3156.sol",
        "file": "../interfaces/IERC3156.sol",
        "id": 4424,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 4553,
        "sourceUnit": 1876,
        "src": "94:36:51",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/openzeppelin/contracts/utils/Address.sol",
        "file": "../utils/Address.sol",
        "id": 4425,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 4553,
        "sourceUnit": 17545,
        "src": "131:30:51",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 4427,
              "name": "IERC3156FlashBorrower",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1840,
              "src": "662:21:51"
            },
            "id": 4428,
            "nodeType": "InheritanceSpecifier",
            "src": "662:21:51"
          }
        ],
        "canonicalName": "ERC3156FlashBorrowerMock",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 4426,
          "nodeType": "StructuredDocumentation",
          "src": "163:461:51",
          "text": " @dev WARNING: this IERC3156FlashBorrower mock implementation is for testing purposes ONLY.\n Writing a secure flash lock borrower is not an easy task, and should be done with the utmost care.\n This is not an example of how it should be done, and no pattern present in this mock should be considered secure.\n Following best practices, always have your contract properly audited before using them to manipulate important funds on\n live networks."
        },
        "fullyImplemented": true,
        "id": 4552,
        "linearizedBaseContracts": [
          4552,
          1840
        ],
        "name": "ERC3156FlashBorrowerMock",
        "nameLocation": "634:24:51",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "id": 4433,
            "mutability": "constant",
            "name": "_RETURN_VALUE",
            "nameLocation": "716:13:51",
            "nodeType": "VariableDeclaration",
            "scope": 4552,
            "src": "690:87:51",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 4429,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "690:7:51",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "45524333313536466c617368426f72726f7765722e6f6e466c6173684c6f616e",
                  "id": 4431,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "742:34:51",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_439148f0bbc682ca079e46d6e2c2f0c1e3b820f1a291b069d8882abf8cf18dd9",
                    "typeString": "literal_string \"ERC3156FlashBorrower.onFlashLoan\""
                  },
                  "value": "ERC3156FlashBorrower.onFlashLoan"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_439148f0bbc682ca079e46d6e2c2f0c1e3b820f1a291b069d8882abf8cf18dd9",
                    "typeString": "literal_string \"ERC3156FlashBorrower.onFlashLoan\""
                  }
                ],
                "id": 4430,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": -8,
                "src": "732:9:51",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 4432,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "732:45:51",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 4435,
            "mutability": "immutable",
            "name": "_enableApprove",
            "nameLocation": "799:14:51",
            "nodeType": "VariableDeclaration",
            "scope": 4552,
            "src": "784:29:51",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 4434,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "784:4:51",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 4437,
            "mutability": "immutable",
            "name": "_enableReturn",
            "nameLocation": "834:13:51",
            "nodeType": "VariableDeclaration",
            "scope": 4552,
            "src": "819:28:51",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 4436,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "819:4:51",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "id": 4445,
            "name": "BalanceOf",
            "nameLocation": "860:9:51",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 4444,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4439,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "878:5:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 4445,
                  "src": "870:13:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4438,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "870:7:51",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4441,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "893:7:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 4445,
                  "src": "885:15:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4440,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "885:7:51",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4443,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "910:5:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 4445,
                  "src": "902:13:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4442,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "902:7:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "869:47:51"
            },
            "src": "854:63:51"
          },
          {
            "anonymous": false,
            "id": 4451,
            "name": "TotalSupply",
            "nameLocation": "928:11:51",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 4450,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4447,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "948:5:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 4451,
                  "src": "940:13:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4446,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "940:7:51",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4449,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "963:5:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 4451,
                  "src": "955:13:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4448,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "955:7:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "939:30:51"
            },
            "src": "922:48:51"
          },
          {
            "body": {
              "id": 4466,
              "nodeType": "Block",
              "src": "1027:85:51",
              "statements": [
                {
                  "expression": {
                    "id": 4460,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 4458,
                      "name": "_enableApprove",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4435,
                      "src": "1037:14:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 4459,
                      "name": "enableApprove",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4455,
                      "src": "1054:13:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "1037:30:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 4461,
                  "nodeType": "ExpressionStatement",
                  "src": "1037:30:51"
                },
                {
                  "expression": {
                    "id": 4464,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 4462,
                      "name": "_enableReturn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4437,
                      "src": "1077:13:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 4463,
                      "name": "enableReturn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4453,
                      "src": "1093:12:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "1077:28:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 4465,
                  "nodeType": "ExpressionStatement",
                  "src": "1077:28:51"
                }
              ]
            },
            "id": 4467,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4456,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4453,
                  "mutability": "mutable",
                  "name": "enableReturn",
                  "nameLocation": "993:12:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 4467,
                  "src": "988:17:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 4452,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "988:4:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4455,
                  "mutability": "mutable",
                  "name": "enableApprove",
                  "nameLocation": "1012:13:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 4467,
                  "src": "1007:18:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 4454,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1007:4:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "987:39:51"
            },
            "returnParameters": {
              "id": 4457,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1027:0:51"
            },
            "scope": 4552,
            "src": "976:136:51",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1839
            ],
            "body": {
              "id": 4550,
              "nodeType": "Block",
              "src": "1307:516:51",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 4487,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 4484,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1325:3:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 4485,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1325:10:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 4486,
                          "name": "token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4471,
                          "src": "1339:5:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1325:19:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 4483,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1317:7:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 4488,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1317:28:51",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4489,
                  "nodeType": "ExpressionStatement",
                  "src": "1317:28:51"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 4491,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4471,
                        "src": "1371:5:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 4494,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "1386:4:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC3156FlashBorrowerMock_$4552",
                              "typeString": "contract ERC3156FlashBorrowerMock"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC3156FlashBorrowerMock_$4552",
                              "typeString": "contract ERC3156FlashBorrowerMock"
                            }
                          ],
                          "id": 4493,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1378:7:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 4492,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1378:7:51",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 4495,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1378:13:51",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 4502,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "1425:4:51",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ERC3156FlashBorrowerMock_$4552",
                                  "typeString": "contract ERC3156FlashBorrowerMock"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_ERC3156FlashBorrowerMock_$4552",
                                  "typeString": "contract ERC3156FlashBorrowerMock"
                                }
                              ],
                              "id": 4501,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1417:7:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 4500,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1417:7:51",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 4503,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1417:13:51",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "id": 4497,
                                "name": "token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4471,
                                "src": "1400:5:51",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 4496,
                              "name": "IERC20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11916,
                              "src": "1393:6:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC20_$11916_$",
                                "typeString": "type(contract IERC20)"
                              }
                            },
                            "id": 4498,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1393:13:51",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$11916",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 4499,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 11855,
                          "src": "1393:23:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 4504,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1393:38:51",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 4490,
                      "name": "BalanceOf",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4445,
                      "src": "1361:9:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 4505,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1361:71:51",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4506,
                  "nodeType": "EmitStatement",
                  "src": "1356:76:51"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 4508,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4471,
                        "src": "1459:5:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "arguments": [
                              {
                                "id": 4510,
                                "name": "token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4471,
                                "src": "1473:5:51",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 4509,
                              "name": "IERC20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11916,
                              "src": "1466:6:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC20_$11916_$",
                                "typeString": "type(contract IERC20)"
                              }
                            },
                            "id": 4511,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1466:13:51",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$11916",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 4512,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "totalSupply",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 11847,
                          "src": "1466:25:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                            "typeString": "function () view external returns (uint256)"
                          }
                        },
                        "id": 4513,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1466:27:51",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 4507,
                      "name": "TotalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4451,
                      "src": "1447:11:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 4514,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1447:47:51",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4515,
                  "nodeType": "EmitStatement",
                  "src": "1442:52:51"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 4519,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 4516,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4477,
                        "src": "1509:4:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      },
                      "id": 4517,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "1509:11:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 4518,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1523:1:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1509:15:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 4528,
                  "nodeType": "IfStatement",
                  "src": "1505:155:51",
                  "trueBody": {
                    "id": 4527,
                    "nodeType": "Block",
                    "src": "1526:134:51",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 4523,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4471,
                              "src": "1637:5:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 4524,
                              "name": "data",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4477,
                              "src": "1644:4:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_calldata_ptr",
                                "typeString": "bytes calldata"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_bytes_calldata_ptr",
                                "typeString": "bytes calldata"
                              }
                            ],
                            "expression": {
                              "id": 4520,
                              "name": "Address",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 17544,
                              "src": "1616:7:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_Address_$17544_$",
                                "typeString": "type(library Address)"
                              }
                            },
                            "id": 4522,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "functionCall",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 17319,
                            "src": "1616:20:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function (address,bytes memory) returns (bytes memory)"
                            }
                          },
                          "id": 4525,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1616:33:51",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "id": 4526,
                        "nodeType": "ExpressionStatement",
                        "src": "1616:33:51"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "id": 4529,
                    "name": "_enableApprove",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 4435,
                    "src": "1674:14:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 4541,
                  "nodeType": "IfStatement",
                  "src": "1670:87:51",
                  "trueBody": {
                    "id": 4540,
                    "nodeType": "Block",
                    "src": "1690:67:51",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 4534,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4471,
                              "src": "1726:5:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 4537,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 4535,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4473,
                                "src": "1733:6:51",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "+",
                              "rightExpression": {
                                "id": 4536,
                                "name": "fee",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4475,
                                "src": "1742:3:51",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "1733:12:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 4531,
                                  "name": "token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4471,
                                  "src": "1711:5:51",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 4530,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 11916,
                                "src": "1704:6:51",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$11916_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 4532,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1704:13:51",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$11916",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 4533,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "approve",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 11885,
                            "src": "1704:21:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) external returns (bool)"
                            }
                          },
                          "id": 4538,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1704:42:51",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 4539,
                        "nodeType": "ExpressionStatement",
                        "src": "1704:42:51"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "condition": {
                      "id": 4542,
                      "name": "_enableReturn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4437,
                      "src": "1774:13:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 4546,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1814:1:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 4545,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1806:7:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_bytes32_$",
                          "typeString": "type(bytes32)"
                        },
                        "typeName": {
                          "id": 4544,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "1806:7:51",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 4547,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1806:10:51",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 4548,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "1774:42:51",
                    "trueExpression": {
                      "id": 4543,
                      "name": "_RETURN_VALUE",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4433,
                      "src": "1790:13:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 4482,
                  "id": 4549,
                  "nodeType": "Return",
                  "src": "1767:49:51"
                }
              ]
            },
            "functionSelector": "23e30c8b",
            "id": 4551,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "onFlashLoan",
            "nameLocation": "1127:11:51",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 4479,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1280:8:51"
            },
            "parameters": {
              "id": 4478,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4469,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4551,
                  "src": "1148:7:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4468,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1148:7:51",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4471,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "1187:5:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 4551,
                  "src": "1179:13:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4470,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1179:7:51",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4473,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1210:6:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 4551,
                  "src": "1202:14:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4472,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1202:7:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4475,
                  "mutability": "mutable",
                  "name": "fee",
                  "nameLocation": "1234:3:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 4551,
                  "src": "1226:11:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4474,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1226:7:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4477,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "1262:4:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 4551,
                  "src": "1247:19:51",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 4476,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1247:5:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1138:134:51"
            },
            "returnParameters": {
              "id": 4482,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4481,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4551,
                  "src": "1298:7:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 4480,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1298:7:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1297:9:51"
            },
            "scope": 4552,
            "src": "1118:705:51",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 4553,
        "src": "625:1200:51",
        "usedErrors": []
      }
    ],
    "src": "33:1793:51"
  },
  "bytecode": "60c060405234801561001057600080fd5b5060405161075538038061075583398101604081905261002f91610053565b1515608052151560a052610086565b8051801515811461004e57600080fd5b919050565b6000806040838503121561006657600080fd5b61006f8361003e565b915061007d6020840161003e565b90509250929050565b60805160a0516106aa6100ab60003960006102c50152600061021401526106aa6000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c806323e30c8b14610030575b600080fd5b61004361003e3660046104ee565b610055565b60405190815260200160405180910390f35b6000336001600160a01b0387161461006c57600080fd5b6040516370a0823160e01b815230600482018190527f6ff2acfcb07917b1e80e53f0fe390b467b1151d15b38730a6e08397799c05a8b918891906001600160a01b038316906370a0823190602401602060405180830381865afa1580156100d7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100fb9190610594565b604080516001600160a01b0394851681529390921660208401529082015260600160405180910390a17f7249fd4c03cce09b30a13d77804b198e2647c0ccd59eadf4de4e7c16099badc586876001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610184573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101a89190610594565b604080516001600160a01b03909316835260208301919091520160405180910390a18115610212576102108684848080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061031c92505050565b505b7f0000000000000000000000000000000000000000000000000000000000000000156102c3576001600160a01b03861663095ea7b38761025287896105ad565b6040516001600160e01b031960e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af115801561029d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102c191906105d3565b505b7f00000000000000000000000000000000000000000000000000000000000000006102ef576000610311565b7f439148f0bbc682ca079e46d6e2c2f0c1e3b820f1a291b069d8882abf8cf18dd95b979650505050505050565b606061035e83836040518060400160405280601e81526020017f416464726573733a206c6f772d6c6576656c2063616c6c206661696c65640000815250610365565b9392505050565b6060610374848460008561037c565b949350505050565b6060824710156103e25760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084015b60405180910390fd5b843b6104305760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016103d9565b600080866001600160a01b0316858760405161044c9190610625565b60006040518083038185875af1925050503d8060008114610489576040519150601f19603f3d011682016040523d82523d6000602084013e61048e565b606091505b5091509150610311828286606083156104a857508161035e565b8251156104b85782518084602001fd5b8160405162461bcd60e51b81526004016103d99190610641565b80356001600160a01b03811681146104e957600080fd5b919050565b60008060008060008060a0878903121561050757600080fd5b610510876104d2565b955061051e602088016104d2565b94506040870135935060608701359250608087013567ffffffffffffffff8082111561054957600080fd5b818901915089601f83011261055d57600080fd5b81358181111561056c57600080fd5b8a602082850101111561057e57600080fd5b6020830194508093505050509295509295509295565b6000602082840312156105a657600080fd5b5051919050565b600082198211156105ce57634e487b7160e01b600052601160045260246000fd5b500190565b6000602082840312156105e557600080fd5b8151801515811461035e57600080fd5b60005b838110156106105781810151838201526020016105f8565b8381111561061f576000848401525b50505050565b600082516106378184602087016105f5565b9190910192915050565b60208152600082518060208401526106608160408501602087016105f5565b601f01601f1916919091016040019291505056fea264697066735822122067946d4a141c84cffbdcd80cb330db30a85f7ef03d47fe51795aaead1728240864736f6c634300080c0033",
  "bytecodeSha1": "fe300399397bd23d5dfaf7548ee880bd25375f36",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.12+commit.f00d7308"
  },
  "contractName": "ERC3156FlashBorrowerMock",
  "coverageMap": {
    "branches": {
      "109": {},
      "141": {
        "Address._verifyCallResult": {
          "18": [
            7124,
            7131,
            false
          ],
          "19": [
            7265,
            7286,
            false
          ]
        },
        "Address.functionCallWithValue": {
          "17": [
            4745,
            4775,
            true
          ]
        }
      },
      "51": {
        "ERC3156FlashBorrowerMock.onFlashLoan": {
          "13": [
            1325,
            1344,
            true
          ],
          "14": [
            1509,
            1524,
            false
          ],
          "15": [
            1674,
            1688,
            false
          ],
          "16": [
            1774,
            1787,
            true
          ]
        }
      },
      "7": {}
    },
    "statements": {
      "109": {},
      "141": {
        "Address._verifyCallResult": {
          "11": [
            7147,
            7164
          ],
          "12": [
            7591,
            7611
          ]
        },
        "Address.functionCall": {
          "6": [
            3165,
            3232
          ],
          "7": [
            3618,
            3677
          ]
        },
        "Address.functionCallWithValue": {
          "8": [
            4737,
            4818
          ],
          "9": [
            4828,
            4888
          ],
          "10": [
            4982,
            5041
          ]
        }
      },
      "51": {
        "ERC3156FlashBorrowerMock.onFlashLoan": {
          "0": [
            1317,
            1345
          ],
          "1": [
            1356,
            1432
          ],
          "2": [
            1442,
            1494
          ],
          "3": [
            1616,
            1649
          ],
          "4": [
            1704,
            1746
          ],
          "5": [
            1767,
            1816
          ]
        }
      },
      "7": {}
    }
  },
  "dependencies": [
    "Address",
    "IERC20",
    "IERC3156FlashBorrower"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b506004361061002b5760003560e01c806323e30c8b14610030575b600080fd5b61004361003e3660046104ee565b610055565b60405190815260200160405180910390f35b6000336001600160a01b0387161461006c57600080fd5b6040516370a0823160e01b815230600482018190527f6ff2acfcb07917b1e80e53f0fe390b467b1151d15b38730a6e08397799c05a8b918891906001600160a01b038316906370a0823190602401602060405180830381865afa1580156100d7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100fb9190610594565b604080516001600160a01b0394851681529390921660208401529082015260600160405180910390a17f7249fd4c03cce09b30a13d77804b198e2647c0ccd59eadf4de4e7c16099badc586876001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610184573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101a89190610594565b604080516001600160a01b03909316835260208301919091520160405180910390a18115610212576102108684848080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061031c92505050565b505b7f0000000000000000000000000000000000000000000000000000000000000000156102c3576001600160a01b03861663095ea7b38761025287896105ad565b6040516001600160e01b031960e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af115801561029d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102c191906105d3565b505b7f00000000000000000000000000000000000000000000000000000000000000006102ef576000610311565b7f439148f0bbc682ca079e46d6e2c2f0c1e3b820f1a291b069d8882abf8cf18dd95b979650505050505050565b606061035e83836040518060400160405280601e81526020017f416464726573733a206c6f772d6c6576656c2063616c6c206661696c65640000815250610365565b9392505050565b6060610374848460008561037c565b949350505050565b6060824710156103e25760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084015b60405180910390fd5b843b6104305760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016103d9565b600080866001600160a01b0316858760405161044c9190610625565b60006040518083038185875af1925050503d8060008114610489576040519150601f19603f3d011682016040523d82523d6000602084013e61048e565b606091505b5091509150610311828286606083156104a857508161035e565b8251156104b85782518084602001fd5b8160405162461bcd60e51b81526004016103d99190610641565b80356001600160a01b03811681146104e957600080fd5b919050565b60008060008060008060a0878903121561050757600080fd5b610510876104d2565b955061051e602088016104d2565b94506040870135935060608701359250608087013567ffffffffffffffff8082111561054957600080fd5b818901915089601f83011261055d57600080fd5b81358181111561056c57600080fd5b8a602082850101111561057e57600080fd5b6020830194508093505050509295509295509295565b6000602082840312156105a657600080fd5b5051919050565b600082198211156105ce57634e487b7160e01b600052601160045260246000fd5b500190565b6000602082840312156105e557600080fd5b8151801515811461035e57600080fd5b60005b838110156106105781810151838201526020016105f8565b8381111561061f576000848401525b50505050565b600082516106378184602087016105f5565b9190910192915050565b60208152600082518060208401526106608160408501602087016105f5565b601f01601f1916919091016040019291505056fea264697066735822122067946d4a141c84cffbdcd80cb330db30a85f7ef03d47fe51795aaead1728240864736f6c634300080c0033",
  "deployedSourceMap": "625:1200:51:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1118:705;;;;;;:::i;:::-;;:::i;:::-;;;1220:25:171;;;1208:2;1193:18;1118:705:51;;;;;;;;1298:7;1325:10;-1:-1:-1;;;;;1325:19:51;;;1317:28;;;;;;1393:38;;-1:-1:-1;;;1393:38:51;;1386:4;1393:38;;;1402:51:171;;;1361:71:51;;1371:5;;1386:4;-1:-1:-1;;;;;1393:23:51;;;;;1375:18:171;;1393:38:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1361:71;;;-1:-1:-1;;;;;1911:15:171;;;1893:34;;1963:15;;;;1958:2;1943:18;;1936:43;1995:18;;;1988:34;1843:2;1828:18;1361:71:51;;;;;;;1447:47;1459:5;1473;-1:-1:-1;;;;;1466:25:51;;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1447:47;;;-1:-1:-1;;;;;2225:32:171;;;2207:51;;2289:2;2274:18;;2267:34;;;;2180:18;1447:47:51;;;;;;;1509:15;;1505:155;;1616:33;1637:5;1644:4;;1616:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1616:20:51;;-1:-1:-1;;;1616:33:51:i;:::-;;1505:155;1674:14;1670:87;;;-1:-1:-1;;;;;1704:21:51;;;1711:5;1733:12;1742:3;1733:6;:12;:::i;:::-;1704:42;;-1:-1:-1;;;;;;1704:42:51;;;;;;;-1:-1:-1;;;;;2225:32:171;;;1704:42:51;;;2207:51:171;2274:18;;;2267:34;2180:18;;1704:42:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1670:87;1774:13;:42;;1814:1;1774:42;;;732:45;1774:42;1767:49;1118:705;-1:-1:-1;;;;;;;1118:705:51:o;3066:173:141:-;3141:12;3172:60;3185:6;3193:4;3172:60;;;;;;;;;;;;;;;;;:12;:60::i;:::-;3165:67;3066:173;-1:-1:-1;;;3066:173:141:o;3461:223::-;3594:12;3625:52;3647:6;3655:4;3661:1;3664:12;3625:21;:52::i;:::-;3618:59;3461:223;-1:-1:-1;;;;3461:223:141:o;4548:500::-;4713:12;4770:5;4745:21;:30;;4737:81;;;;-1:-1:-1;;;4737:81:141;;3026:2:171;4737:81:141;;;3008:21:171;3065:2;3045:18;;;3038:30;3104:34;3084:18;;;3077:62;-1:-1:-1;;;3155:18:171;;;3148:36;3201:19;;4737:81:141;;;;;;;;;1034:20;;4828:60;;;;-1:-1:-1;;;4828:60:141;;3433:2:171;4828:60:141;;;3415:21:171;3472:2;3452:18;;;3445:30;3511:31;3491:18;;;3484:59;3560:18;;4828:60:141;3231:353:171;4828:60:141;4900:12;4914:23;4941:6;-1:-1:-1;;;;;4941:11:141;4960:5;4967:4;4941:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4899:73;;;;4989:52;5007:7;5016:10;5028:12;7096;7124:7;7120:516;;;-1:-1:-1;7154:10:141;7147:17;;7120:516;7265:17;;:21;7261:365;;7459:10;7453:17;7519:15;7506:10;7502:2;7498:19;7491:44;7261:365;7598:12;7591:20;;-1:-1:-1;;;7591:20:141;;;;;;;;:::i;14:173:171:-;82:20;;-1:-1:-1;;;;;131:31:171;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:877::-;298:6;306;314;322;330;338;391:3;379:9;370:7;366:23;362:33;359:53;;;408:1;405;398:12;359:53;431:29;450:9;431:29;:::i;:::-;421:39;;479:38;513:2;502:9;498:18;479:38;:::i;:::-;469:48;;564:2;553:9;549:18;536:32;526:42;;615:2;604:9;600:18;587:32;577:42;;670:3;659:9;655:19;642:33;694:18;735:2;727:6;724:14;721:34;;;751:1;748;741:12;721:34;789:6;778:9;774:22;764:32;;834:7;827:4;823:2;819:13;815:27;805:55;;856:1;853;846:12;805:55;896:2;883:16;922:2;914:6;911:14;908:34;;;938:1;935;928:12;908:34;983:7;978:2;969:6;965:2;961:15;957:24;954:37;951:57;;;1004:1;1001;994:12;951:57;1035:2;1031;1027:11;1017:21;;1057:6;1047:16;;;;;192:877;;;;;;;;:::o;1464:184::-;1534:6;1587:2;1575:9;1566:7;1562:23;1558:32;1555:52;;;1603:1;1600;1593:12;1555:52;-1:-1:-1;1626:16:171;;1464:184;-1:-1:-1;1464:184:171:o;2312:225::-;2352:3;2383:1;2379:6;2376:1;2373:13;2370:136;;;2428:10;2423:3;2419:20;2416:1;2409:31;2463:4;2460:1;2453:15;2491:4;2488:1;2481:15;2370:136;-1:-1:-1;2522:9:171;;2312:225::o;2542:277::-;2609:6;2662:2;2650:9;2641:7;2637:23;2633:32;2630:52;;;2678:1;2675;2668:12;2630:52;2710:9;2704:16;2763:5;2756:13;2749:21;2742:5;2739:32;2729:60;;2785:1;2782;2775:12;3589:258;3661:1;3671:113;3685:6;3682:1;3679:13;3671:113;;;3761:11;;;3755:18;3742:11;;;3735:39;3707:2;3700:10;3671:113;;;3802:6;3799:1;3796:13;3793:48;;;3837:1;3828:6;3823:3;3819:16;3812:27;3793:48;;3589:258;;;:::o;3852:274::-;3981:3;4019:6;4013:13;4035:53;4081:6;4076:3;4069:4;4061:6;4057:17;4035:53;:::i;:::-;4104:16;;;;;3852:274;-1:-1:-1;;3852:274:171:o;4131:383::-;4280:2;4269:9;4262:21;4243:4;4312:6;4306:13;4355:6;4350:2;4339:9;4335:18;4328:34;4371:66;4430:6;4425:2;4414:9;4410:18;4405:2;4397:6;4393:15;4371:66;:::i;:::-;4498:2;4477:15;-1:-1:-1;;4473:29:171;4458:45;;;;4505:2;4454:54;;4131:383;-1:-1:-1;;4131:383:171:o",
  "language": "Solidity",
  "natspec": {
    "details": "WARNING: this IERC3156FlashBorrower mock implementation is for testing purposes ONLY. Writing a secure flash lock borrower is not an easy task, and should be done with the utmost care. This is not an example of how it should be done, and no pattern present in this mock should be considered secure. Following best practices, always have your contract properly audited before using them to manipulate important funds on live networks.",
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "offset": [
    625,
    1825
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x23E30C8B EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x43 PUSH2 0x3E CALLDATASIZE PUSH1 0x4 PUSH2 0x4EE JUMP JUMPDEST PUSH2 0x55 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND EQ PUSH2 0x6C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH32 0x6FF2ACFCB07917B1E80E53F0FE390B467B1151D15B38730A6E08397799C05A8B SWAP2 DUP9 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xD7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xFB SWAP2 SWAP1 PUSH2 0x594 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND DUP2 MSTORE SWAP4 SWAP1 SWAP3 AND PUSH1 0x20 DUP5 ADD MSTORE SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH32 0x7249FD4C03CCE09B30A13D77804B198E2647C0CCD59EADF4DE4E7C16099BADC5 DUP7 DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x18160DDD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x184 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1A8 SWAP2 SWAP1 PUSH2 0x594 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 DUP2 ISZERO PUSH2 0x212 JUMPI PUSH2 0x210 DUP7 DUP5 DUP5 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH2 0x31C SWAP3 POP POP POP JUMP JUMPDEST POP JUMPDEST PUSH32 0x0 ISZERO PUSH2 0x2C3 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH4 0x95EA7B3 DUP8 PUSH2 0x252 DUP8 DUP10 PUSH2 0x5AD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x29D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2C1 SWAP2 SWAP1 PUSH2 0x5D3 JUMP JUMPDEST POP JUMPDEST PUSH32 0x0 PUSH2 0x2EF JUMPI PUSH1 0x0 PUSH2 0x311 JUMP JUMPDEST PUSH32 0x439148F0BBC682CA079E46D6E2C2F0C1E3B820F1A291B069D8882ABF8CF18DD9 JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x35E DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x416464726573733A206C6F772D6C6576656C2063616C6C206661696C65640000 DUP2 MSTORE POP PUSH2 0x365 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x374 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x37C JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x3E2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x1C8818D85B1B PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 EXTCODESIZE PUSH2 0x430 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3D9 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x44C SWAP2 SWAP1 PUSH2 0x625 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x489 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x48E JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x311 DUP3 DUP3 DUP7 PUSH1 0x60 DUP4 ISZERO PUSH2 0x4A8 JUMPI POP DUP2 PUSH2 0x35E JUMP JUMPDEST DUP3 MLOAD ISZERO PUSH2 0x4B8 JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3D9 SWAP2 SWAP1 PUSH2 0x641 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x4E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xA0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x507 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x510 DUP8 PUSH2 0x4D2 JUMP JUMPDEST SWAP6 POP PUSH2 0x51E PUSH1 0x20 DUP9 ADD PUSH2 0x4D2 JUMP JUMPDEST SWAP5 POP PUSH1 0x40 DUP8 ADD CALLDATALOAD SWAP4 POP PUSH1 0x60 DUP8 ADD CALLDATALOAD SWAP3 POP PUSH1 0x80 DUP8 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x549 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP10 ADD SWAP2 POP DUP10 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x55D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x56C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP11 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x57E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP5 POP DUP1 SWAP4 POP POP POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x5CE JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x35E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x610 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x5F8 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x61F JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x637 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x5F5 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x660 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x5F5 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH8 0x946D4A141C84CFFB 0xDC 0xD8 0xC 0xB3 ADDRESS 0xDB ADDRESS 0xA8 0x5F PUSH31 0xF03D47FE51795AAEAD1728240864736F6C634300080C003300000000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        625,
        1825
      ],
      "op": "PUSH1",
      "path": "51",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        625,
        1825
      ],
      "op": "PUSH1",
      "path": "51",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        625,
        1825
      ],
      "op": "MSTORE",
      "path": "51"
    },
    "5": {
      "fn": null,
      "offset": [
        625,
        1825
      ],
      "op": "CALLVALUE",
      "path": "51"
    },
    "6": {
      "fn": null,
      "offset": [
        625,
        1825
      ],
      "op": "DUP1",
      "path": "51"
    },
    "7": {
      "fn": null,
      "offset": [
        625,
        1825
      ],
      "op": "ISZERO",
      "path": "51"
    },
    "8": {
      "fn": null,
      "offset": [
        625,
        1825
      ],
      "op": "PUSH2",
      "path": "51",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        625,
        1825
      ],
      "op": "JUMPI",
      "path": "51"
    },
    "12": {
      "fn": null,
      "offset": [
        625,
        1825
      ],
      "op": "PUSH1",
      "path": "51",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        625,
        1825
      ],
      "op": "DUP1",
      "path": "51"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        625,
        1825
      ],
      "op": "REVERT",
      "path": "51"
    },
    "16": {
      "fn": null,
      "offset": [
        625,
        1825
      ],
      "op": "JUMPDEST",
      "path": "51"
    },
    "17": {
      "fn": null,
      "offset": [
        625,
        1825
      ],
      "op": "POP",
      "path": "51"
    },
    "18": {
      "fn": null,
      "offset": [
        625,
        1825
      ],
      "op": "PUSH1",
      "path": "51",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        625,
        1825
      ],
      "op": "CALLDATASIZE",
      "path": "51"
    },
    "21": {
      "fn": null,
      "offset": [
        625,
        1825
      ],
      "op": "LT",
      "path": "51"
    },
    "22": {
      "fn": null,
      "offset": [
        625,
        1825
      ],
      "op": "PUSH2",
      "path": "51",
      "value": "0x2B"
    },
    "25": {
      "fn": null,
      "offset": [
        625,
        1825
      ],
      "op": "JUMPI",
      "path": "51"
    },
    "26": {
      "fn": null,
      "offset": [
        625,
        1825
      ],
      "op": "PUSH1",
      "path": "51",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        625,
        1825
      ],
      "op": "CALLDATALOAD",
      "path": "51"
    },
    "29": {
      "fn": null,
      "offset": [
        625,
        1825
      ],
      "op": "PUSH1",
      "path": "51",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        625,
        1825
      ],
      "op": "SHR",
      "path": "51"
    },
    "32": {
      "fn": null,
      "offset": [
        625,
        1825
      ],
      "op": "DUP1",
      "path": "51"
    },
    "33": {
      "fn": null,
      "offset": [
        625,
        1825
      ],
      "op": "PUSH4",
      "path": "51",
      "value": "0x23E30C8B"
    },
    "38": {
      "fn": null,
      "offset": [
        625,
        1825
      ],
      "op": "EQ",
      "path": "51"
    },
    "39": {
      "fn": null,
      "offset": [
        625,
        1825
      ],
      "op": "PUSH2",
      "path": "51",
      "value": "0x30"
    },
    "42": {
      "fn": null,
      "offset": [
        625,
        1825
      ],
      "op": "JUMPI",
      "path": "51"
    },
    "43": {
      "fn": null,
      "offset": [
        625,
        1825
      ],
      "op": "JUMPDEST",
      "path": "51"
    },
    "44": {
      "fn": null,
      "offset": [
        625,
        1825
      ],
      "op": "PUSH1",
      "path": "51",
      "value": "0x0"
    },
    "46": {
      "fn": null,
      "offset": [
        625,
        1825
      ],
      "op": "DUP1",
      "path": "51"
    },
    "47": {
      "first_revert": true,
      "fn": null,
      "offset": [
        625,
        1825
      ],
      "op": "REVERT",
      "path": "51"
    },
    "48": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1118,
        1823
      ],
      "op": "JUMPDEST",
      "path": "51"
    },
    "49": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1118,
        1823
      ],
      "op": "PUSH2",
      "path": "51",
      "value": "0x43"
    },
    "52": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1118,
        1823
      ],
      "op": "PUSH2",
      "path": "51",
      "value": "0x3E"
    },
    "55": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1118,
        1823
      ],
      "op": "CALLDATASIZE",
      "path": "51"
    },
    "56": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1118,
        1823
      ],
      "op": "PUSH1",
      "path": "51",
      "value": "0x4"
    },
    "58": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1118,
        1823
      ],
      "op": "PUSH2",
      "path": "51",
      "value": "0x4EE"
    },
    "61": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "jump": "i",
      "offset": [
        1118,
        1823
      ],
      "op": "JUMP",
      "path": "51"
    },
    "62": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1118,
        1823
      ],
      "op": "JUMPDEST",
      "path": "51"
    },
    "63": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1118,
        1823
      ],
      "op": "PUSH2",
      "path": "51",
      "value": "0x55"
    },
    "66": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "jump": "i",
      "offset": [
        1118,
        1823
      ],
      "op": "JUMP",
      "path": "51"
    },
    "67": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1118,
        1823
      ],
      "op": "JUMPDEST",
      "path": "51"
    },
    "68": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1118,
        1823
      ],
      "op": "PUSH1",
      "path": "51",
      "value": "0x40"
    },
    "70": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1118,
        1823
      ],
      "op": "MLOAD",
      "path": "51"
    },
    "71": {
      "op": "SWAP1"
    },
    "72": {
      "op": "DUP2"
    },
    "73": {
      "op": "MSTORE"
    },
    "74": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "76": {
      "op": "ADD"
    },
    "77": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1118,
        1823
      ],
      "op": "PUSH1",
      "path": "51",
      "value": "0x40"
    },
    "79": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1118,
        1823
      ],
      "op": "MLOAD",
      "path": "51"
    },
    "80": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1118,
        1823
      ],
      "op": "DUP1",
      "path": "51"
    },
    "81": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1118,
        1823
      ],
      "op": "SWAP2",
      "path": "51"
    },
    "82": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1118,
        1823
      ],
      "op": "SUB",
      "path": "51"
    },
    "83": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1118,
        1823
      ],
      "op": "SWAP1",
      "path": "51"
    },
    "84": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1118,
        1823
      ],
      "op": "RETURN",
      "path": "51"
    },
    "85": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1118,
        1823
      ],
      "op": "JUMPDEST",
      "path": "51"
    },
    "86": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1298,
        1305
      ],
      "op": "PUSH1",
      "path": "51",
      "value": "0x0"
    },
    "88": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1325,
        1335
      ],
      "op": "CALLER",
      "path": "51",
      "statement": 0
    },
    "89": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "91": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "93": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "95": {
      "op": "SHL"
    },
    "96": {
      "op": "SUB"
    },
    "97": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1325,
        1344
      ],
      "op": "DUP8",
      "path": "51"
    },
    "98": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1325,
        1344
      ],
      "op": "AND",
      "path": "51"
    },
    "99": {
      "branch": 13,
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1325,
        1344
      ],
      "op": "EQ",
      "path": "51"
    },
    "100": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1317,
        1345
      ],
      "op": "PUSH2",
      "path": "51",
      "value": "0x6C"
    },
    "103": {
      "branch": 13,
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1317,
        1345
      ],
      "op": "JUMPI",
      "path": "51"
    },
    "104": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1317,
        1345
      ],
      "op": "PUSH1",
      "path": "51",
      "value": "0x0"
    },
    "106": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1317,
        1345
      ],
      "op": "DUP1",
      "path": "51"
    },
    "107": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1317,
        1345
      ],
      "op": "REVERT",
      "path": "51"
    },
    "108": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1317,
        1345
      ],
      "op": "JUMPDEST",
      "path": "51"
    },
    "109": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1393,
        1431
      ],
      "op": "PUSH1",
      "path": "51",
      "statement": 1,
      "value": "0x40"
    },
    "111": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1393,
        1431
      ],
      "op": "MLOAD",
      "path": "51"
    },
    "112": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "117": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "119": {
      "op": "SHL"
    },
    "120": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1393,
        1431
      ],
      "op": "DUP2",
      "path": "51"
    },
    "121": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1393,
        1431
      ],
      "op": "MSTORE",
      "path": "51"
    },
    "122": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1386,
        1390
      ],
      "op": "ADDRESS",
      "path": "51"
    },
    "123": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1393,
        1431
      ],
      "op": "PUSH1",
      "path": "51",
      "value": "0x4"
    },
    "125": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1393,
        1431
      ],
      "op": "DUP3",
      "path": "51"
    },
    "126": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1393,
        1431
      ],
      "op": "ADD",
      "path": "51"
    },
    "127": {
      "op": "DUP2"
    },
    "128": {
      "op": "SWAP1"
    },
    "129": {
      "op": "MSTORE"
    },
    "130": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1361,
        1432
      ],
      "op": "PUSH32",
      "path": "51",
      "value": "0x6FF2ACFCB07917B1E80E53F0FE390B467B1151D15B38730A6E08397799C05A8B"
    },
    "163": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1361,
        1432
      ],
      "op": "SWAP2",
      "path": "51"
    },
    "164": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1371,
        1376
      ],
      "op": "DUP9",
      "path": "51"
    },
    "165": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1371,
        1376
      ],
      "op": "SWAP2",
      "path": "51"
    },
    "166": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1386,
        1390
      ],
      "op": "SWAP1",
      "path": "51"
    },
    "167": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "169": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "171": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "173": {
      "op": "SHL"
    },
    "174": {
      "op": "SUB"
    },
    "175": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1393,
        1416
      ],
      "op": "DUP4",
      "path": "51"
    },
    "176": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1393,
        1416
      ],
      "op": "AND",
      "path": "51"
    },
    "177": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1393,
        1416
      ],
      "op": "SWAP1",
      "path": "51"
    },
    "178": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1393,
        1416
      ],
      "op": "PUSH4",
      "path": "51",
      "value": "0x70A08231"
    },
    "183": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1393,
        1416
      ],
      "op": "SWAP1",
      "path": "51"
    },
    "184": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "186": {
      "op": "ADD"
    },
    "187": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1393,
        1431
      ],
      "op": "PUSH1",
      "path": "51",
      "value": "0x20"
    },
    "189": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1393,
        1431
      ],
      "op": "PUSH1",
      "path": "51",
      "value": "0x40"
    },
    "191": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1393,
        1431
      ],
      "op": "MLOAD",
      "path": "51"
    },
    "192": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1393,
        1431
      ],
      "op": "DUP1",
      "path": "51"
    },
    "193": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1393,
        1431
      ],
      "op": "DUP4",
      "path": "51"
    },
    "194": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1393,
        1431
      ],
      "op": "SUB",
      "path": "51"
    },
    "195": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1393,
        1431
      ],
      "op": "DUP2",
      "path": "51"
    },
    "196": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1393,
        1431
      ],
      "op": "DUP7",
      "path": "51"
    },
    "197": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1393,
        1431
      ],
      "op": "GAS",
      "path": "51"
    },
    "198": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1393,
        1431
      ],
      "op": "STATICCALL",
      "path": "51"
    },
    "199": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1393,
        1431
      ],
      "op": "ISZERO",
      "path": "51"
    },
    "200": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1393,
        1431
      ],
      "op": "DUP1",
      "path": "51"
    },
    "201": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1393,
        1431
      ],
      "op": "ISZERO",
      "path": "51"
    },
    "202": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1393,
        1431
      ],
      "op": "PUSH2",
      "path": "51",
      "value": "0xD7"
    },
    "205": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1393,
        1431
      ],
      "op": "JUMPI",
      "path": "51"
    },
    "206": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1393,
        1431
      ],
      "op": "RETURNDATASIZE",
      "path": "51"
    },
    "207": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1393,
        1431
      ],
      "op": "PUSH1",
      "path": "51",
      "value": "0x0"
    },
    "209": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1393,
        1431
      ],
      "op": "DUP1",
      "path": "51"
    },
    "210": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1393,
        1431
      ],
      "op": "RETURNDATACOPY",
      "path": "51"
    },
    "211": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1393,
        1431
      ],
      "op": "RETURNDATASIZE",
      "path": "51"
    },
    "212": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1393,
        1431
      ],
      "op": "PUSH1",
      "path": "51",
      "value": "0x0"
    },
    "214": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1393,
        1431
      ],
      "op": "REVERT",
      "path": "51"
    },
    "215": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1393,
        1431
      ],
      "op": "JUMPDEST",
      "path": "51"
    },
    "216": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1393,
        1431
      ],
      "op": "POP",
      "path": "51"
    },
    "217": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1393,
        1431
      ],
      "op": "POP",
      "path": "51"
    },
    "218": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1393,
        1431
      ],
      "op": "POP",
      "path": "51"
    },
    "219": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1393,
        1431
      ],
      "op": "POP",
      "path": "51"
    },
    "220": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1393,
        1431
      ],
      "op": "PUSH1",
      "path": "51",
      "value": "0x40"
    },
    "222": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1393,
        1431
      ],
      "op": "MLOAD",
      "path": "51"
    },
    "223": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1393,
        1431
      ],
      "op": "RETURNDATASIZE",
      "path": "51"
    },
    "224": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1393,
        1431
      ],
      "op": "PUSH1",
      "path": "51",
      "value": "0x1F"
    },
    "226": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1393,
        1431
      ],
      "op": "NOT",
      "path": "51"
    },
    "227": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1393,
        1431
      ],
      "op": "PUSH1",
      "path": "51",
      "value": "0x1F"
    },
    "229": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1393,
        1431
      ],
      "op": "DUP3",
      "path": "51"
    },
    "230": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1393,
        1431
      ],
      "op": "ADD",
      "path": "51"
    },
    "231": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1393,
        1431
      ],
      "op": "AND",
      "path": "51"
    },
    "232": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1393,
        1431
      ],
      "op": "DUP3",
      "path": "51"
    },
    "233": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1393,
        1431
      ],
      "op": "ADD",
      "path": "51"
    },
    "234": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1393,
        1431
      ],
      "op": "DUP1",
      "path": "51"
    },
    "235": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1393,
        1431
      ],
      "op": "PUSH1",
      "path": "51",
      "value": "0x40"
    },
    "237": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1393,
        1431
      ],
      "op": "MSTORE",
      "path": "51"
    },
    "238": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1393,
        1431
      ],
      "op": "POP",
      "path": "51"
    },
    "239": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1393,
        1431
      ],
      "op": "DUP2",
      "path": "51"
    },
    "240": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1393,
        1431
      ],
      "op": "ADD",
      "path": "51"
    },
    "241": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1393,
        1431
      ],
      "op": "SWAP1",
      "path": "51"
    },
    "242": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1393,
        1431
      ],
      "op": "PUSH2",
      "path": "51",
      "value": "0xFB"
    },
    "245": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1393,
        1431
      ],
      "op": "SWAP2",
      "path": "51"
    },
    "246": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1393,
        1431
      ],
      "op": "SWAP1",
      "path": "51"
    },
    "247": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1393,
        1431
      ],
      "op": "PUSH2",
      "path": "51",
      "value": "0x594"
    },
    "250": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "jump": "i",
      "offset": [
        1393,
        1431
      ],
      "op": "JUMP",
      "path": "51"
    },
    "251": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1393,
        1431
      ],
      "op": "JUMPDEST",
      "path": "51"
    },
    "252": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1361,
        1432
      ],
      "op": "PUSH1",
      "path": "51",
      "value": "0x40"
    },
    "254": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1361,
        1432
      ],
      "op": "DUP1",
      "path": "51"
    },
    "255": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1361,
        1432
      ],
      "op": "MLOAD",
      "path": "51"
    },
    "256": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "258": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "260": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "262": {
      "op": "SHL"
    },
    "263": {
      "op": "SUB"
    },
    "264": {
      "op": "SWAP5"
    },
    "265": {
      "op": "DUP6"
    },
    "266": {
      "op": "AND"
    },
    "267": {
      "op": "DUP2"
    },
    "268": {
      "op": "MSTORE"
    },
    "269": {
      "op": "SWAP4"
    },
    "270": {
      "op": "SWAP1"
    },
    "271": {
      "op": "SWAP3"
    },
    "272": {
      "op": "AND"
    },
    "273": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "275": {
      "op": "DUP5"
    },
    "276": {
      "op": "ADD"
    },
    "277": {
      "op": "MSTORE"
    },
    "278": {
      "op": "SWAP1"
    },
    "279": {
      "op": "DUP3"
    },
    "280": {
      "op": "ADD"
    },
    "281": {
      "op": "MSTORE"
    },
    "282": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "284": {
      "op": "ADD"
    },
    "285": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1361,
        1432
      ],
      "op": "PUSH1",
      "path": "51",
      "value": "0x40"
    },
    "287": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1361,
        1432
      ],
      "op": "MLOAD",
      "path": "51"
    },
    "288": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1361,
        1432
      ],
      "op": "DUP1",
      "path": "51"
    },
    "289": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1361,
        1432
      ],
      "op": "SWAP2",
      "path": "51"
    },
    "290": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1361,
        1432
      ],
      "op": "SUB",
      "path": "51"
    },
    "291": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1361,
        1432
      ],
      "op": "SWAP1",
      "path": "51"
    },
    "292": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1361,
        1432
      ],
      "op": "LOG1",
      "path": "51"
    },
    "293": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1447,
        1494
      ],
      "op": "PUSH32",
      "path": "51",
      "statement": 2,
      "value": "0x7249FD4C03CCE09B30A13D77804B198E2647C0CCD59EADF4DE4E7C16099BADC5"
    },
    "326": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1459,
        1464
      ],
      "op": "DUP7",
      "path": "51"
    },
    "327": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1473,
        1478
      ],
      "op": "DUP8",
      "path": "51"
    },
    "328": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "330": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "332": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "334": {
      "op": "SHL"
    },
    "335": {
      "op": "SUB"
    },
    "336": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1466,
        1491
      ],
      "op": "AND",
      "path": "51"
    },
    "337": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1466,
        1491
      ],
      "op": "PUSH4",
      "path": "51",
      "value": "0x18160DDD"
    },
    "342": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1466,
        1493
      ],
      "op": "PUSH1",
      "path": "51",
      "value": "0x40"
    },
    "344": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1466,
        1493
      ],
      "op": "MLOAD",
      "path": "51"
    },
    "345": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1466,
        1493
      ],
      "op": "DUP2",
      "path": "51"
    },
    "346": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1466,
        1493
      ],
      "op": "PUSH4",
      "path": "51",
      "value": "0xFFFFFFFF"
    },
    "351": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1466,
        1493
      ],
      "op": "AND",
      "path": "51"
    },
    "352": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1466,
        1493
      ],
      "op": "PUSH1",
      "path": "51",
      "value": "0xE0"
    },
    "354": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1466,
        1493
      ],
      "op": "SHL",
      "path": "51"
    },
    "355": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1466,
        1493
      ],
      "op": "DUP2",
      "path": "51"
    },
    "356": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1466,
        1493
      ],
      "op": "MSTORE",
      "path": "51"
    },
    "357": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1466,
        1493
      ],
      "op": "PUSH1",
      "path": "51",
      "value": "0x4"
    },
    "359": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1466,
        1493
      ],
      "op": "ADD",
      "path": "51"
    },
    "360": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1466,
        1493
      ],
      "op": "PUSH1",
      "path": "51",
      "value": "0x20"
    },
    "362": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1466,
        1493
      ],
      "op": "PUSH1",
      "path": "51",
      "value": "0x40"
    },
    "364": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1466,
        1493
      ],
      "op": "MLOAD",
      "path": "51"
    },
    "365": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1466,
        1493
      ],
      "op": "DUP1",
      "path": "51"
    },
    "366": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1466,
        1493
      ],
      "op": "DUP4",
      "path": "51"
    },
    "367": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1466,
        1493
      ],
      "op": "SUB",
      "path": "51"
    },
    "368": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1466,
        1493
      ],
      "op": "DUP2",
      "path": "51"
    },
    "369": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1466,
        1493
      ],
      "op": "DUP7",
      "path": "51"
    },
    "370": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1466,
        1493
      ],
      "op": "GAS",
      "path": "51"
    },
    "371": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1466,
        1493
      ],
      "op": "STATICCALL",
      "path": "51"
    },
    "372": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1466,
        1493
      ],
      "op": "ISZERO",
      "path": "51"
    },
    "373": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1466,
        1493
      ],
      "op": "DUP1",
      "path": "51"
    },
    "374": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1466,
        1493
      ],
      "op": "ISZERO",
      "path": "51"
    },
    "375": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1466,
        1493
      ],
      "op": "PUSH2",
      "path": "51",
      "value": "0x184"
    },
    "378": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1466,
        1493
      ],
      "op": "JUMPI",
      "path": "51"
    },
    "379": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1466,
        1493
      ],
      "op": "RETURNDATASIZE",
      "path": "51"
    },
    "380": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1466,
        1493
      ],
      "op": "PUSH1",
      "path": "51",
      "value": "0x0"
    },
    "382": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1466,
        1493
      ],
      "op": "DUP1",
      "path": "51"
    },
    "383": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1466,
        1493
      ],
      "op": "RETURNDATACOPY",
      "path": "51"
    },
    "384": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1466,
        1493
      ],
      "op": "RETURNDATASIZE",
      "path": "51"
    },
    "385": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1466,
        1493
      ],
      "op": "PUSH1",
      "path": "51",
      "value": "0x0"
    },
    "387": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1466,
        1493
      ],
      "op": "REVERT",
      "path": "51"
    },
    "388": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1466,
        1493
      ],
      "op": "JUMPDEST",
      "path": "51"
    },
    "389": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1466,
        1493
      ],
      "op": "POP",
      "path": "51"
    },
    "390": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1466,
        1493
      ],
      "op": "POP",
      "path": "51"
    },
    "391": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1466,
        1493
      ],
      "op": "POP",
      "path": "51"
    },
    "392": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1466,
        1493
      ],
      "op": "POP",
      "path": "51"
    },
    "393": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1466,
        1493
      ],
      "op": "PUSH1",
      "path": "51",
      "value": "0x40"
    },
    "395": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1466,
        1493
      ],
      "op": "MLOAD",
      "path": "51"
    },
    "396": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1466,
        1493
      ],
      "op": "RETURNDATASIZE",
      "path": "51"
    },
    "397": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1466,
        1493
      ],
      "op": "PUSH1",
      "path": "51",
      "value": "0x1F"
    },
    "399": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1466,
        1493
      ],
      "op": "NOT",
      "path": "51"
    },
    "400": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1466,
        1493
      ],
      "op": "PUSH1",
      "path": "51",
      "value": "0x1F"
    },
    "402": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1466,
        1493
      ],
      "op": "DUP3",
      "path": "51"
    },
    "403": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1466,
        1493
      ],
      "op": "ADD",
      "path": "51"
    },
    "404": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1466,
        1493
      ],
      "op": "AND",
      "path": "51"
    },
    "405": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1466,
        1493
      ],
      "op": "DUP3",
      "path": "51"
    },
    "406": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1466,
        1493
      ],
      "op": "ADD",
      "path": "51"
    },
    "407": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1466,
        1493
      ],
      "op": "DUP1",
      "path": "51"
    },
    "408": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1466,
        1493
      ],
      "op": "PUSH1",
      "path": "51",
      "value": "0x40"
    },
    "410": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1466,
        1493
      ],
      "op": "MSTORE",
      "path": "51"
    },
    "411": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1466,
        1493
      ],
      "op": "POP",
      "path": "51"
    },
    "412": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1466,
        1493
      ],
      "op": "DUP2",
      "path": "51"
    },
    "413": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1466,
        1493
      ],
      "op": "ADD",
      "path": "51"
    },
    "414": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1466,
        1493
      ],
      "op": "SWAP1",
      "path": "51"
    },
    "415": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1466,
        1493
      ],
      "op": "PUSH2",
      "path": "51",
      "value": "0x1A8"
    },
    "418": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1466,
        1493
      ],
      "op": "SWAP2",
      "path": "51"
    },
    "419": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1466,
        1493
      ],
      "op": "SWAP1",
      "path": "51"
    },
    "420": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1466,
        1493
      ],
      "op": "PUSH2",
      "path": "51",
      "value": "0x594"
    },
    "423": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "jump": "i",
      "offset": [
        1466,
        1493
      ],
      "op": "JUMP",
      "path": "51"
    },
    "424": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1466,
        1493
      ],
      "op": "JUMPDEST",
      "path": "51"
    },
    "425": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1447,
        1494
      ],
      "op": "PUSH1",
      "path": "51",
      "value": "0x40"
    },
    "427": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1447,
        1494
      ],
      "op": "DUP1",
      "path": "51"
    },
    "428": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1447,
        1494
      ],
      "op": "MLOAD",
      "path": "51"
    },
    "429": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "431": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "433": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "435": {
      "op": "SHL"
    },
    "436": {
      "op": "SUB"
    },
    "437": {
      "op": "SWAP1"
    },
    "438": {
      "op": "SWAP4"
    },
    "439": {
      "op": "AND"
    },
    "440": {
      "op": "DUP4"
    },
    "441": {
      "op": "MSTORE"
    },
    "442": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "444": {
      "op": "DUP4"
    },
    "445": {
      "op": "ADD"
    },
    "446": {
      "op": "SWAP2"
    },
    "447": {
      "op": "SWAP1"
    },
    "448": {
      "op": "SWAP2"
    },
    "449": {
      "op": "MSTORE"
    },
    "450": {
      "op": "ADD"
    },
    "451": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1447,
        1494
      ],
      "op": "PUSH1",
      "path": "51",
      "value": "0x40"
    },
    "453": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1447,
        1494
      ],
      "op": "MLOAD",
      "path": "51"
    },
    "454": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1447,
        1494
      ],
      "op": "DUP1",
      "path": "51"
    },
    "455": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1447,
        1494
      ],
      "op": "SWAP2",
      "path": "51"
    },
    "456": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1447,
        1494
      ],
      "op": "SUB",
      "path": "51"
    },
    "457": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1447,
        1494
      ],
      "op": "SWAP1",
      "path": "51"
    },
    "458": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1447,
        1494
      ],
      "op": "LOG1",
      "path": "51"
    },
    "459": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1509,
        1524
      ],
      "op": "DUP2",
      "path": "51"
    },
    "460": {
      "branch": 14,
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1509,
        1524
      ],
      "op": "ISZERO",
      "path": "51"
    },
    "461": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1505,
        1660
      ],
      "op": "PUSH2",
      "path": "51",
      "value": "0x212"
    },
    "464": {
      "branch": 14,
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1505,
        1660
      ],
      "op": "JUMPI",
      "path": "51"
    },
    "465": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1616,
        1649
      ],
      "op": "PUSH2",
      "path": "51",
      "statement": 3,
      "value": "0x210"
    },
    "468": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1637,
        1642
      ],
      "op": "DUP7",
      "path": "51"
    },
    "469": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1644,
        1648
      ],
      "op": "DUP5",
      "path": "51"
    },
    "470": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1644,
        1648
      ],
      "op": "DUP5",
      "path": "51"
    },
    "471": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1616,
        1649
      ],
      "op": "DUP1",
      "path": "51"
    },
    "472": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1616,
        1649
      ],
      "op": "DUP1",
      "path": "51"
    },
    "473": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1616,
        1649
      ],
      "op": "PUSH1",
      "path": "51",
      "value": "0x1F"
    },
    "475": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1616,
        1649
      ],
      "op": "ADD",
      "path": "51"
    },
    "476": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1616,
        1649
      ],
      "op": "PUSH1",
      "path": "51",
      "value": "0x20"
    },
    "478": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1616,
        1649
      ],
      "op": "DUP1",
      "path": "51"
    },
    "479": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1616,
        1649
      ],
      "op": "SWAP2",
      "path": "51"
    },
    "480": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1616,
        1649
      ],
      "op": "DIV",
      "path": "51"
    },
    "481": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1616,
        1649
      ],
      "op": "MUL",
      "path": "51"
    },
    "482": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1616,
        1649
      ],
      "op": "PUSH1",
      "path": "51",
      "value": "0x20"
    },
    "484": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1616,
        1649
      ],
      "op": "ADD",
      "path": "51"
    },
    "485": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1616,
        1649
      ],
      "op": "PUSH1",
      "path": "51",
      "value": "0x40"
    },
    "487": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1616,
        1649
      ],
      "op": "MLOAD",
      "path": "51"
    },
    "488": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1616,
        1649
      ],
      "op": "SWAP1",
      "path": "51"
    },
    "489": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1616,
        1649
      ],
      "op": "DUP2",
      "path": "51"
    },
    "490": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1616,
        1649
      ],
      "op": "ADD",
      "path": "51"
    },
    "491": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1616,
        1649
      ],
      "op": "PUSH1",
      "path": "51",
      "value": "0x40"
    },
    "493": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1616,
        1649
      ],
      "op": "MSTORE",
      "path": "51"
    },
    "494": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1616,
        1649
      ],
      "op": "DUP1",
      "path": "51"
    },
    "495": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1616,
        1649
      ],
      "op": "SWAP4",
      "path": "51"
    },
    "496": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1616,
        1649
      ],
      "op": "SWAP3",
      "path": "51"
    },
    "497": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1616,
        1649
      ],
      "op": "SWAP2",
      "path": "51"
    },
    "498": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1616,
        1649
      ],
      "op": "SWAP1",
      "path": "51"
    },
    "499": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1616,
        1649
      ],
      "op": "DUP2",
      "path": "51"
    },
    "500": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1616,
        1649
      ],
      "op": "DUP2",
      "path": "51"
    },
    "501": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1616,
        1649
      ],
      "op": "MSTORE",
      "path": "51"
    },
    "502": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1616,
        1649
      ],
      "op": "PUSH1",
      "path": "51",
      "value": "0x20"
    },
    "504": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1616,
        1649
      ],
      "op": "ADD",
      "path": "51"
    },
    "505": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1616,
        1649
      ],
      "op": "DUP4",
      "path": "51"
    },
    "506": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1616,
        1649
      ],
      "op": "DUP4",
      "path": "51"
    },
    "507": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1616,
        1649
      ],
      "op": "DUP1",
      "path": "51"
    },
    "508": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1616,
        1649
      ],
      "op": "DUP3",
      "path": "51"
    },
    "509": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1616,
        1649
      ],
      "op": "DUP5",
      "path": "51"
    },
    "510": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1616,
        1649
      ],
      "op": "CALLDATACOPY",
      "path": "51"
    },
    "511": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1616,
        1649
      ],
      "op": "PUSH1",
      "path": "51",
      "value": "0x0"
    },
    "513": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1616,
        1649
      ],
      "op": "SWAP3",
      "path": "51"
    },
    "514": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1616,
        1649
      ],
      "op": "ADD",
      "path": "51"
    },
    "515": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1616,
        1649
      ],
      "op": "SWAP2",
      "path": "51"
    },
    "516": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1616,
        1649
      ],
      "op": "SWAP1",
      "path": "51"
    },
    "517": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1616,
        1649
      ],
      "op": "SWAP2",
      "path": "51"
    },
    "518": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1616,
        1649
      ],
      "op": "MSTORE",
      "path": "51"
    },
    "519": {
      "op": "POP"
    },
    "520": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1616,
        1636
      ],
      "op": "PUSH2",
      "path": "51",
      "value": "0x31C"
    },
    "523": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1616,
        1636
      ],
      "op": "SWAP3",
      "path": "51"
    },
    "524": {
      "op": "POP"
    },
    "525": {
      "op": "POP"
    },
    "526": {
      "op": "POP"
    },
    "527": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "jump": "i",
      "offset": [
        1616,
        1649
      ],
      "op": "JUMP",
      "path": "51"
    },
    "528": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1616,
        1649
      ],
      "op": "JUMPDEST",
      "path": "51"
    },
    "529": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1616,
        1649
      ],
      "op": "POP",
      "path": "51"
    },
    "530": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1505,
        1660
      ],
      "op": "JUMPDEST",
      "path": "51"
    },
    "531": {
      "branch": 15,
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1674,
        1688
      ],
      "op": "PUSH32",
      "path": "51",
      "value": "0x0"
    },
    "564": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1670,
        1757
      ],
      "op": "ISZERO",
      "path": "51"
    },
    "565": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1670,
        1757
      ],
      "op": "PUSH2",
      "path": "51",
      "value": "0x2C3"
    },
    "568": {
      "branch": 15,
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1670,
        1757
      ],
      "op": "JUMPI",
      "path": "51"
    },
    "569": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "571": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "573": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "575": {
      "op": "SHL"
    },
    "576": {
      "op": "SUB"
    },
    "577": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1704,
        1725
      ],
      "op": "DUP7",
      "path": "51",
      "statement": 4
    },
    "578": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1704,
        1725
      ],
      "op": "AND",
      "path": "51"
    },
    "579": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1704,
        1725
      ],
      "op": "PUSH4",
      "path": "51",
      "value": "0x95EA7B3"
    },
    "584": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1711,
        1716
      ],
      "op": "DUP8",
      "path": "51"
    },
    "585": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1733,
        1745
      ],
      "op": "PUSH2",
      "path": "51",
      "value": "0x252"
    },
    "588": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1742,
        1745
      ],
      "op": "DUP8",
      "path": "51"
    },
    "589": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1733,
        1739
      ],
      "op": "DUP10",
      "path": "51"
    },
    "590": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1733,
        1745
      ],
      "op": "PUSH2",
      "path": "51",
      "value": "0x5AD"
    },
    "593": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "jump": "i",
      "offset": [
        1733,
        1745
      ],
      "op": "JUMP",
      "path": "51"
    },
    "594": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1733,
        1745
      ],
      "op": "JUMPDEST",
      "path": "51"
    },
    "595": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1704,
        1746
      ],
      "op": "PUSH1",
      "path": "51",
      "value": "0x40"
    },
    "597": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1704,
        1746
      ],
      "op": "MLOAD",
      "path": "51"
    },
    "598": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "600": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "602": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "604": {
      "op": "SHL"
    },
    "605": {
      "op": "SUB"
    },
    "606": {
      "op": "NOT"
    },
    "607": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1704,
        1746
      ],
      "op": "PUSH1",
      "path": "51",
      "value": "0xE0"
    },
    "609": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1704,
        1746
      ],
      "op": "DUP6",
      "path": "51"
    },
    "610": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1704,
        1746
      ],
      "op": "SWAP1",
      "path": "51"
    },
    "611": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1704,
        1746
      ],
      "op": "SHL",
      "path": "51"
    },
    "612": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1704,
        1746
      ],
      "op": "AND",
      "path": "51"
    },
    "613": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1704,
        1746
      ],
      "op": "DUP2",
      "path": "51"
    },
    "614": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1704,
        1746
      ],
      "op": "MSTORE",
      "path": "51"
    },
    "615": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "617": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "619": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "621": {
      "op": "SHL"
    },
    "622": {
      "op": "SUB"
    },
    "623": {
      "op": "SWAP1"
    },
    "624": {
      "op": "SWAP3"
    },
    "625": {
      "op": "AND"
    },
    "626": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1704,
        1746
      ],
      "op": "PUSH1",
      "path": "51",
      "value": "0x4"
    },
    "628": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1704,
        1746
      ],
      "op": "DUP4",
      "path": "51"
    },
    "629": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1704,
        1746
      ],
      "op": "ADD",
      "path": "51"
    },
    "630": {
      "op": "MSTORE"
    },
    "631": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "633": {
      "op": "DUP3"
    },
    "634": {
      "op": "ADD"
    },
    "635": {
      "op": "MSTORE"
    },
    "636": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "638": {
      "op": "ADD"
    },
    "639": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1704,
        1746
      ],
      "op": "PUSH1",
      "path": "51",
      "value": "0x20"
    },
    "641": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1704,
        1746
      ],
      "op": "PUSH1",
      "path": "51",
      "value": "0x40"
    },
    "643": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1704,
        1746
      ],
      "op": "MLOAD",
      "path": "51"
    },
    "644": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1704,
        1746
      ],
      "op": "DUP1",
      "path": "51"
    },
    "645": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1704,
        1746
      ],
      "op": "DUP4",
      "path": "51"
    },
    "646": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1704,
        1746
      ],
      "op": "SUB",
      "path": "51"
    },
    "647": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1704,
        1746
      ],
      "op": "DUP2",
      "path": "51"
    },
    "648": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1704,
        1746
      ],
      "op": "PUSH1",
      "path": "51",
      "value": "0x0"
    },
    "650": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1704,
        1746
      ],
      "op": "DUP8",
      "path": "51"
    },
    "651": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1704,
        1746
      ],
      "op": "GAS",
      "path": "51"
    },
    "652": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1704,
        1746
      ],
      "op": "CALL",
      "path": "51"
    },
    "653": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1704,
        1746
      ],
      "op": "ISZERO",
      "path": "51"
    },
    "654": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1704,
        1746
      ],
      "op": "DUP1",
      "path": "51"
    },
    "655": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1704,
        1746
      ],
      "op": "ISZERO",
      "path": "51"
    },
    "656": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1704,
        1746
      ],
      "op": "PUSH2",
      "path": "51",
      "value": "0x29D"
    },
    "659": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1704,
        1746
      ],
      "op": "JUMPI",
      "path": "51"
    },
    "660": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1704,
        1746
      ],
      "op": "RETURNDATASIZE",
      "path": "51"
    },
    "661": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1704,
        1746
      ],
      "op": "PUSH1",
      "path": "51",
      "value": "0x0"
    },
    "663": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1704,
        1746
      ],
      "op": "DUP1",
      "path": "51"
    },
    "664": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1704,
        1746
      ],
      "op": "RETURNDATACOPY",
      "path": "51"
    },
    "665": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1704,
        1746
      ],
      "op": "RETURNDATASIZE",
      "path": "51"
    },
    "666": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1704,
        1746
      ],
      "op": "PUSH1",
      "path": "51",
      "value": "0x0"
    },
    "668": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1704,
        1746
      ],
      "op": "REVERT",
      "path": "51"
    },
    "669": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1704,
        1746
      ],
      "op": "JUMPDEST",
      "path": "51"
    },
    "670": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1704,
        1746
      ],
      "op": "POP",
      "path": "51"
    },
    "671": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1704,
        1746
      ],
      "op": "POP",
      "path": "51"
    },
    "672": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1704,
        1746
      ],
      "op": "POP",
      "path": "51"
    },
    "673": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1704,
        1746
      ],
      "op": "POP",
      "path": "51"
    },
    "674": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1704,
        1746
      ],
      "op": "PUSH1",
      "path": "51",
      "value": "0x40"
    },
    "676": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1704,
        1746
      ],
      "op": "MLOAD",
      "path": "51"
    },
    "677": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1704,
        1746
      ],
      "op": "RETURNDATASIZE",
      "path": "51"
    },
    "678": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1704,
        1746
      ],
      "op": "PUSH1",
      "path": "51",
      "value": "0x1F"
    },
    "680": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1704,
        1746
      ],
      "op": "NOT",
      "path": "51"
    },
    "681": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1704,
        1746
      ],
      "op": "PUSH1",
      "path": "51",
      "value": "0x1F"
    },
    "683": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1704,
        1746
      ],
      "op": "DUP3",
      "path": "51"
    },
    "684": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1704,
        1746
      ],
      "op": "ADD",
      "path": "51"
    },
    "685": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1704,
        1746
      ],
      "op": "AND",
      "path": "51"
    },
    "686": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1704,
        1746
      ],
      "op": "DUP3",
      "path": "51"
    },
    "687": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1704,
        1746
      ],
      "op": "ADD",
      "path": "51"
    },
    "688": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1704,
        1746
      ],
      "op": "DUP1",
      "path": "51"
    },
    "689": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1704,
        1746
      ],
      "op": "PUSH1",
      "path": "51",
      "value": "0x40"
    },
    "691": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1704,
        1746
      ],
      "op": "MSTORE",
      "path": "51"
    },
    "692": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1704,
        1746
      ],
      "op": "POP",
      "path": "51"
    },
    "693": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1704,
        1746
      ],
      "op": "DUP2",
      "path": "51"
    },
    "694": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1704,
        1746
      ],
      "op": "ADD",
      "path": "51"
    },
    "695": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1704,
        1746
      ],
      "op": "SWAP1",
      "path": "51"
    },
    "696": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1704,
        1746
      ],
      "op": "PUSH2",
      "path": "51",
      "value": "0x2C1"
    },
    "699": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1704,
        1746
      ],
      "op": "SWAP2",
      "path": "51"
    },
    "700": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1704,
        1746
      ],
      "op": "SWAP1",
      "path": "51"
    },
    "701": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1704,
        1746
      ],
      "op": "PUSH2",
      "path": "51",
      "value": "0x5D3"
    },
    "704": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "jump": "i",
      "offset": [
        1704,
        1746
      ],
      "op": "JUMP",
      "path": "51"
    },
    "705": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1704,
        1746
      ],
      "op": "JUMPDEST",
      "path": "51"
    },
    "706": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1704,
        1746
      ],
      "op": "POP",
      "path": "51"
    },
    "707": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1670,
        1757
      ],
      "op": "JUMPDEST",
      "path": "51"
    },
    "708": {
      "branch": 16,
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1774,
        1787
      ],
      "op": "PUSH32",
      "path": "51",
      "statement": 5,
      "value": "0x0"
    },
    "741": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1774,
        1816
      ],
      "op": "PUSH2",
      "path": "51",
      "value": "0x2EF"
    },
    "744": {
      "branch": 16,
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1774,
        1816
      ],
      "op": "JUMPI",
      "path": "51"
    },
    "745": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1814,
        1815
      ],
      "op": "PUSH1",
      "path": "51",
      "value": "0x0"
    },
    "747": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1774,
        1816
      ],
      "op": "PUSH2",
      "path": "51",
      "value": "0x311"
    },
    "750": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1774,
        1816
      ],
      "op": "JUMP",
      "path": "51"
    },
    "751": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1774,
        1816
      ],
      "op": "JUMPDEST",
      "path": "51"
    },
    "752": {
      "offset": [
        732,
        777
      ],
      "op": "PUSH32",
      "path": "51",
      "value": "0x439148F0BBC682CA079E46D6E2C2F0C1E3B820F1A291B069D8882ABF8CF18DD9"
    },
    "785": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1774,
        1816
      ],
      "op": "JUMPDEST",
      "path": "51"
    },
    "786": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1767,
        1816
      ],
      "op": "SWAP8",
      "path": "51"
    },
    "787": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1118,
        1823
      ],
      "op": "SWAP7",
      "path": "51"
    },
    "788": {
      "op": "POP"
    },
    "789": {
      "op": "POP"
    },
    "790": {
      "op": "POP"
    },
    "791": {
      "op": "POP"
    },
    "792": {
      "op": "POP"
    },
    "793": {
      "op": "POP"
    },
    "794": {
      "op": "POP"
    },
    "795": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "jump": "o",
      "offset": [
        1118,
        1823
      ],
      "op": "JUMP",
      "path": "51"
    },
    "796": {
      "fn": "Address.functionCall",
      "offset": [
        3066,
        3239
      ],
      "op": "JUMPDEST",
      "path": "141"
    },
    "797": {
      "fn": "Address.functionCall",
      "offset": [
        3141,
        3153
      ],
      "op": "PUSH1",
      "path": "141",
      "value": "0x60"
    },
    "799": {
      "fn": "Address.functionCall",
      "offset": [
        3172,
        3232
      ],
      "op": "PUSH2",
      "path": "141",
      "statement": 6,
      "value": "0x35E"
    },
    "802": {
      "fn": "Address.functionCall",
      "offset": [
        3185,
        3191
      ],
      "op": "DUP4",
      "path": "141"
    },
    "803": {
      "fn": "Address.functionCall",
      "offset": [
        3193,
        3197
      ],
      "op": "DUP4",
      "path": "141"
    },
    "804": {
      "fn": "Address.functionCall",
      "offset": [
        3172,
        3232
      ],
      "op": "PUSH1",
      "path": "141",
      "value": "0x40"
    },
    "806": {
      "fn": "Address.functionCall",
      "offset": [
        3172,
        3232
      ],
      "op": "MLOAD",
      "path": "141"
    },
    "807": {
      "fn": "Address.functionCall",
      "offset": [
        3172,
        3232
      ],
      "op": "DUP1",
      "path": "141"
    },
    "808": {
      "fn": "Address.functionCall",
      "offset": [
        3172,
        3232
      ],
      "op": "PUSH1",
      "path": "141",
      "value": "0x40"
    },
    "810": {
      "fn": "Address.functionCall",
      "offset": [
        3172,
        3232
      ],
      "op": "ADD",
      "path": "141"
    },
    "811": {
      "fn": "Address.functionCall",
      "offset": [
        3172,
        3232
      ],
      "op": "PUSH1",
      "path": "141",
      "value": "0x40"
    },
    "813": {
      "fn": "Address.functionCall",
      "offset": [
        3172,
        3232
      ],
      "op": "MSTORE",
      "path": "141"
    },
    "814": {
      "fn": "Address.functionCall",
      "offset": [
        3172,
        3232
      ],
      "op": "DUP1",
      "path": "141"
    },
    "815": {
      "fn": "Address.functionCall",
      "offset": [
        3172,
        3232
      ],
      "op": "PUSH1",
      "path": "141",
      "value": "0x1E"
    },
    "817": {
      "fn": "Address.functionCall",
      "offset": [
        3172,
        3232
      ],
      "op": "DUP2",
      "path": "141"
    },
    "818": {
      "fn": "Address.functionCall",
      "offset": [
        3172,
        3232
      ],
      "op": "MSTORE",
      "path": "141"
    },
    "819": {
      "fn": "Address.functionCall",
      "offset": [
        3172,
        3232
      ],
      "op": "PUSH1",
      "path": "141",
      "value": "0x20"
    },
    "821": {
      "fn": "Address.functionCall",
      "offset": [
        3172,
        3232
      ],
      "op": "ADD",
      "path": "141"
    },
    "822": {
      "fn": "Address.functionCall",
      "offset": [
        3172,
        3232
      ],
      "op": "PUSH32",
      "path": "141",
      "value": "0x416464726573733A206C6F772D6C6576656C2063616C6C206661696C65640000"
    },
    "855": {
      "fn": "Address.functionCall",
      "offset": [
        3172,
        3232
      ],
      "op": "DUP2",
      "path": "141"
    },
    "856": {
      "fn": "Address.functionCall",
      "offset": [
        3172,
        3232
      ],
      "op": "MSTORE",
      "path": "141"
    },
    "857": {
      "fn": "Address.functionCall",
      "offset": [
        3172,
        3232
      ],
      "op": "POP",
      "path": "141"
    },
    "858": {
      "fn": "Address.functionCall",
      "offset": [
        3172,
        3184
      ],
      "op": "PUSH2",
      "path": "141",
      "value": "0x365"
    },
    "861": {
      "fn": "Address.functionCall",
      "jump": "i",
      "offset": [
        3172,
        3232
      ],
      "op": "JUMP",
      "path": "141"
    },
    "862": {
      "fn": "Address.functionCall",
      "offset": [
        3172,
        3232
      ],
      "op": "JUMPDEST",
      "path": "141"
    },
    "863": {
      "fn": "Address.functionCall",
      "offset": [
        3165,
        3232
      ],
      "op": "SWAP4",
      "path": "141"
    },
    "864": {
      "fn": "Address.functionCall",
      "offset": [
        3066,
        3239
      ],
      "op": "SWAP3",
      "path": "141"
    },
    "865": {
      "op": "POP"
    },
    "866": {
      "op": "POP"
    },
    "867": {
      "op": "POP"
    },
    "868": {
      "fn": "Address.functionCall",
      "jump": "o",
      "offset": [
        3066,
        3239
      ],
      "op": "JUMP",
      "path": "141"
    },
    "869": {
      "fn": "Address.functionCall",
      "offset": [
        3461,
        3684
      ],
      "op": "JUMPDEST",
      "path": "141"
    },
    "870": {
      "fn": "Address.functionCall",
      "offset": [
        3594,
        3606
      ],
      "op": "PUSH1",
      "path": "141",
      "value": "0x60"
    },
    "872": {
      "fn": "Address.functionCall",
      "offset": [
        3625,
        3677
      ],
      "op": "PUSH2",
      "path": "141",
      "statement": 7,
      "value": "0x374"
    },
    "875": {
      "fn": "Address.functionCall",
      "offset": [
        3647,
        3653
      ],
      "op": "DUP5",
      "path": "141"
    },
    "876": {
      "fn": "Address.functionCall",
      "offset": [
        3655,
        3659
      ],
      "op": "DUP5",
      "path": "141"
    },
    "877": {
      "fn": "Address.functionCall",
      "offset": [
        3661,
        3662
      ],
      "op": "PUSH1",
      "path": "141",
      "value": "0x0"
    },
    "879": {
      "fn": "Address.functionCall",
      "offset": [
        3664,
        3676
      ],
      "op": "DUP6",
      "path": "141"
    },
    "880": {
      "fn": "Address.functionCall",
      "offset": [
        3625,
        3646
      ],
      "op": "PUSH2",
      "path": "141",
      "value": "0x37C"
    },
    "883": {
      "fn": "Address.functionCall",
      "jump": "i",
      "offset": [
        3625,
        3677
      ],
      "op": "JUMP",
      "path": "141"
    },
    "884": {
      "fn": "Address.functionCall",
      "offset": [
        3625,
        3677
      ],
      "op": "JUMPDEST",
      "path": "141"
    },
    "885": {
      "fn": "Address.functionCall",
      "offset": [
        3618,
        3677
      ],
      "op": "SWAP5",
      "path": "141"
    },
    "886": {
      "fn": "Address.functionCall",
      "offset": [
        3461,
        3684
      ],
      "op": "SWAP4",
      "path": "141"
    },
    "887": {
      "op": "POP"
    },
    "888": {
      "op": "POP"
    },
    "889": {
      "op": "POP"
    },
    "890": {
      "op": "POP"
    },
    "891": {
      "fn": "Address.functionCall",
      "jump": "o",
      "offset": [
        3461,
        3684
      ],
      "op": "JUMP",
      "path": "141"
    },
    "892": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4548,
        5048
      ],
      "op": "JUMPDEST",
      "path": "141"
    },
    "893": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4713,
        4725
      ],
      "op": "PUSH1",
      "path": "141",
      "value": "0x60"
    },
    "895": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4770,
        4775
      ],
      "op": "DUP3",
      "path": "141",
      "statement": 8
    },
    "896": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4745,
        4766
      ],
      "op": "SELFBALANCE",
      "path": "141"
    },
    "897": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4745,
        4775
      ],
      "op": "LT",
      "path": "141"
    },
    "898": {
      "branch": 17,
      "fn": "Address.functionCallWithValue",
      "offset": [
        4745,
        4775
      ],
      "op": "ISZERO",
      "path": "141"
    },
    "899": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4737,
        4818
      ],
      "op": "PUSH2",
      "path": "141",
      "value": "0x3E2"
    },
    "902": {
      "branch": 17,
      "fn": "Address.functionCallWithValue",
      "offset": [
        4737,
        4818
      ],
      "op": "JUMPI",
      "path": "141"
    },
    "903": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4737,
        4818
      ],
      "op": "PUSH1",
      "path": "141",
      "value": "0x40"
    },
    "905": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4737,
        4818
      ],
      "op": "MLOAD",
      "path": "141"
    },
    "906": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "910": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "912": {
      "op": "SHL"
    },
    "913": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4737,
        4818
      ],
      "op": "DUP2",
      "path": "141"
    },
    "914": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4737,
        4818
      ],
      "op": "MSTORE",
      "path": "141"
    },
    "915": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "917": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4737,
        4818
      ],
      "op": "PUSH1",
      "path": "141",
      "value": "0x4"
    },
    "919": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4737,
        4818
      ],
      "op": "DUP3",
      "path": "141"
    },
    "920": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4737,
        4818
      ],
      "op": "ADD",
      "path": "141"
    },
    "921": {
      "op": "MSTORE"
    },
    "922": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "924": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "926": {
      "op": "DUP3"
    },
    "927": {
      "op": "ADD"
    },
    "928": {
      "op": "MSTORE"
    },
    "929": {
      "op": "PUSH32",
      "value": "0x416464726573733A20696E73756666696369656E742062616C616E636520666F"
    },
    "962": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "964": {
      "op": "DUP3"
    },
    "965": {
      "op": "ADD"
    },
    "966": {
      "op": "MSTORE"
    },
    "967": {
      "op": "PUSH6",
      "value": "0x1C8818D85B1B"
    },
    "974": {
      "op": "PUSH1",
      "value": "0xD2"
    },
    "976": {
      "op": "SHL"
    },
    "977": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "979": {
      "op": "DUP3"
    },
    "980": {
      "op": "ADD"
    },
    "981": {
      "op": "MSTORE"
    },
    "982": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "984": {
      "op": "ADD"
    },
    "985": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4737,
        4818
      ],
      "op": "JUMPDEST",
      "path": "141"
    },
    "986": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4737,
        4818
      ],
      "op": "PUSH1",
      "path": "141",
      "value": "0x40"
    },
    "988": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4737,
        4818
      ],
      "op": "MLOAD",
      "path": "141"
    },
    "989": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4737,
        4818
      ],
      "op": "DUP1",
      "path": "141"
    },
    "990": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4737,
        4818
      ],
      "op": "SWAP2",
      "path": "141"
    },
    "991": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4737,
        4818
      ],
      "op": "SUB",
      "path": "141"
    },
    "992": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4737,
        4818
      ],
      "op": "SWAP1",
      "path": "141"
    },
    "993": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4737,
        4818
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "141"
    },
    "994": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4737,
        4818
      ],
      "op": "JUMPDEST",
      "path": "141"
    },
    "995": {
      "fn": "Address.isContract",
      "offset": [
        1034,
        1054
      ],
      "op": "DUP5",
      "path": "141"
    },
    "996": {
      "fn": "Address.isContract",
      "offset": [
        1034,
        1054
      ],
      "op": "EXTCODESIZE",
      "path": "141"
    },
    "997": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4828,
        4888
      ],
      "op": "PUSH2",
      "path": "141",
      "statement": 9,
      "value": "0x430"
    },
    "1000": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4828,
        4888
      ],
      "op": "JUMPI",
      "path": "141"
    },
    "1001": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4828,
        4888
      ],
      "op": "PUSH1",
      "path": "141",
      "value": "0x40"
    },
    "1003": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4828,
        4888
      ],
      "op": "MLOAD",
      "path": "141"
    },
    "1004": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1008": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1010": {
      "op": "SHL"
    },
    "1011": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4828,
        4888
      ],
      "op": "DUP2",
      "path": "141"
    },
    "1012": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4828,
        4888
      ],
      "op": "MSTORE",
      "path": "141"
    },
    "1013": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1015": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4828,
        4888
      ],
      "op": "PUSH1",
      "path": "141",
      "value": "0x4"
    },
    "1017": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4828,
        4888
      ],
      "op": "DUP3",
      "path": "141"
    },
    "1018": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4828,
        4888
      ],
      "op": "ADD",
      "path": "141"
    },
    "1019": {
      "op": "MSTORE"
    },
    "1020": {
      "op": "PUSH1",
      "value": "0x1D"
    },
    "1022": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1024": {
      "op": "DUP3"
    },
    "1025": {
      "op": "ADD"
    },
    "1026": {
      "op": "MSTORE"
    },
    "1027": {
      "op": "PUSH32",
      "value": "0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000"
    },
    "1060": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1062": {
      "op": "DUP3"
    },
    "1063": {
      "op": "ADD"
    },
    "1064": {
      "op": "MSTORE"
    },
    "1065": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1067": {
      "op": "ADD"
    },
    "1068": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4828,
        4888
      ],
      "op": "PUSH2",
      "path": "141",
      "value": "0x3D9"
    },
    "1071": {
      "op": "JUMP"
    },
    "1072": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4828,
        4888
      ],
      "op": "JUMPDEST",
      "path": "141"
    },
    "1073": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4900,
        4912
      ],
      "op": "PUSH1",
      "path": "141",
      "value": "0x0"
    },
    "1075": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4914,
        4937
      ],
      "op": "DUP1",
      "path": "141"
    },
    "1076": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4947
      ],
      "op": "DUP7",
      "path": "141"
    },
    "1077": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1079": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1081": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1083": {
      "op": "SHL"
    },
    "1084": {
      "op": "SUB"
    },
    "1085": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4952
      ],
      "op": "AND",
      "path": "141"
    },
    "1086": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4960,
        4965
      ],
      "op": "DUP6",
      "path": "141"
    },
    "1087": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4967,
        4971
      ],
      "op": "DUP8",
      "path": "141"
    },
    "1088": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH1",
      "path": "141",
      "value": "0x40"
    },
    "1090": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "MLOAD",
      "path": "141"
    },
    "1091": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH2",
      "path": "141",
      "value": "0x44C"
    },
    "1094": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "SWAP2",
      "path": "141"
    },
    "1095": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "SWAP1",
      "path": "141"
    },
    "1096": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH2",
      "path": "141",
      "value": "0x625"
    },
    "1099": {
      "fn": "Address.functionCallWithValue",
      "jump": "i",
      "offset": [
        4941,
        4972
      ],
      "op": "JUMP",
      "path": "141"
    },
    "1100": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "JUMPDEST",
      "path": "141"
    },
    "1101": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH1",
      "path": "141",
      "value": "0x0"
    },
    "1103": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH1",
      "path": "141",
      "value": "0x40"
    },
    "1105": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "MLOAD",
      "path": "141"
    },
    "1106": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "DUP1",
      "path": "141"
    },
    "1107": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "DUP4",
      "path": "141"
    },
    "1108": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "SUB",
      "path": "141"
    },
    "1109": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "DUP2",
      "path": "141"
    },
    "1110": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "DUP6",
      "path": "141"
    },
    "1111": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "DUP8",
      "path": "141"
    },
    "1112": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "GAS",
      "path": "141"
    },
    "1113": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "CALL",
      "path": "141"
    },
    "1114": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "SWAP3",
      "path": "141"
    },
    "1115": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "POP",
      "path": "141"
    },
    "1116": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "POP",
      "path": "141"
    },
    "1117": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "POP",
      "path": "141"
    },
    "1118": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "RETURNDATASIZE",
      "path": "141"
    },
    "1119": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "DUP1",
      "path": "141"
    },
    "1120": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH1",
      "path": "141",
      "value": "0x0"
    },
    "1122": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "DUP2",
      "path": "141"
    },
    "1123": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "EQ",
      "path": "141"
    },
    "1124": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH2",
      "path": "141",
      "value": "0x489"
    },
    "1127": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "JUMPI",
      "path": "141"
    },
    "1128": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH1",
      "path": "141",
      "value": "0x40"
    },
    "1130": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "MLOAD",
      "path": "141"
    },
    "1131": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "SWAP2",
      "path": "141"
    },
    "1132": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "POP",
      "path": "141"
    },
    "1133": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH1",
      "path": "141",
      "value": "0x1F"
    },
    "1135": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "NOT",
      "path": "141"
    },
    "1136": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH1",
      "path": "141",
      "value": "0x3F"
    },
    "1138": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "RETURNDATASIZE",
      "path": "141"
    },
    "1139": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "ADD",
      "path": "141"
    },
    "1140": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "AND",
      "path": "141"
    },
    "1141": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "DUP3",
      "path": "141"
    },
    "1142": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "ADD",
      "path": "141"
    },
    "1143": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH1",
      "path": "141",
      "value": "0x40"
    },
    "1145": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "MSTORE",
      "path": "141"
    },
    "1146": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "RETURNDATASIZE",
      "path": "141"
    },
    "1147": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "DUP3",
      "path": "141"
    },
    "1148": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "MSTORE",
      "path": "141"
    },
    "1149": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "RETURNDATASIZE",
      "path": "141"
    },
    "1150": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH1",
      "path": "141",
      "value": "0x0"
    },
    "1152": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH1",
      "path": "141",
      "value": "0x20"
    },
    "1154": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "DUP5",
      "path": "141"
    },
    "1155": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "ADD",
      "path": "141"
    },
    "1156": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "RETURNDATACOPY",
      "path": "141"
    },
    "1157": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH2",
      "path": "141",
      "value": "0x48E"
    },
    "1160": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "JUMP",
      "path": "141"
    },
    "1161": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "JUMPDEST",
      "path": "141"
    },
    "1162": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH1",
      "path": "141",
      "value": "0x60"
    },
    "1164": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "SWAP2",
      "path": "141"
    },
    "1165": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "POP",
      "path": "141"
    },
    "1166": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "JUMPDEST",
      "path": "141"
    },
    "1167": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "POP",
      "path": "141"
    },
    "1168": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4899,
        4972
      ],
      "op": "SWAP2",
      "path": "141"
    },
    "1169": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4899,
        4972
      ],
      "op": "POP",
      "path": "141"
    },
    "1170": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4899,
        4972
      ],
      "op": "SWAP2",
      "path": "141"
    },
    "1171": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4899,
        4972
      ],
      "op": "POP",
      "path": "141"
    },
    "1172": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4989,
        5041
      ],
      "op": "PUSH2",
      "path": "141",
      "statement": 10,
      "value": "0x311"
    },
    "1175": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5007,
        5014
      ],
      "op": "DUP3",
      "path": "141"
    },
    "1176": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5016,
        5026
      ],
      "op": "DUP3",
      "path": "141"
    },
    "1177": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5028,
        5040
      ],
      "op": "DUP7",
      "path": "141"
    },
    "1178": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7096,
        7108
      ],
      "op": "PUSH1",
      "path": "141",
      "value": "0x60"
    },
    "1180": {
      "branch": 18,
      "fn": "Address._verifyCallResult",
      "offset": [
        7124,
        7131
      ],
      "op": "DUP4",
      "path": "141"
    },
    "1181": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7120,
        7636
      ],
      "op": "ISZERO",
      "path": "141"
    },
    "1182": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7120,
        7636
      ],
      "op": "PUSH2",
      "path": "141",
      "value": "0x4A8"
    },
    "1185": {
      "branch": 18,
      "fn": "Address._verifyCallResult",
      "offset": [
        7120,
        7636
      ],
      "op": "JUMPI",
      "path": "141"
    },
    "1186": {
      "op": "POP"
    },
    "1187": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7154,
        7164
      ],
      "op": "DUP2",
      "path": "141",
      "statement": 11
    },
    "1188": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7147,
        7164
      ],
      "op": "PUSH2",
      "path": "141",
      "value": "0x35E"
    },
    "1191": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7147,
        7164
      ],
      "op": "JUMP",
      "path": "141"
    },
    "1192": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7120,
        7636
      ],
      "op": "JUMPDEST",
      "path": "141"
    },
    "1193": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7265,
        7282
      ],
      "op": "DUP3",
      "path": "141"
    },
    "1194": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7265,
        7282
      ],
      "op": "MLOAD",
      "path": "141"
    },
    "1195": {
      "branch": 19,
      "fn": "Address._verifyCallResult",
      "offset": [
        7265,
        7286
      ],
      "op": "ISZERO",
      "path": "141"
    },
    "1196": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7261,
        7626
      ],
      "op": "PUSH2",
      "path": "141",
      "value": "0x4B8"
    },
    "1199": {
      "branch": 19,
      "fn": "Address._verifyCallResult",
      "offset": [
        7261,
        7626
      ],
      "op": "JUMPI",
      "path": "141"
    },
    "1200": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7459,
        7469
      ],
      "op": "DUP3",
      "path": "141"
    },
    "1201": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7453,
        7470
      ],
      "op": "MLOAD",
      "path": "141"
    },
    "1202": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7519,
        7534
      ],
      "op": "DUP1",
      "path": "141"
    },
    "1203": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7506,
        7516
      ],
      "op": "DUP5",
      "path": "141"
    },
    "1204": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7502,
        7504
      ],
      "op": "PUSH1",
      "path": "141",
      "value": "0x20"
    },
    "1206": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7498,
        7517
      ],
      "op": "ADD",
      "path": "141"
    },
    "1207": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7491,
        7535
      ],
      "op": "REVERT",
      "path": "141"
    },
    "1208": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7261,
        7626
      ],
      "op": "JUMPDEST",
      "path": "141"
    },
    "1209": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7598,
        7610
      ],
      "op": "DUP2",
      "path": "141",
      "statement": 12
    },
    "1210": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7591,
        7611
      ],
      "op": "PUSH1",
      "path": "141",
      "value": "0x40"
    },
    "1212": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7591,
        7611
      ],
      "op": "MLOAD",
      "path": "141"
    },
    "1213": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1217": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1219": {
      "op": "SHL"
    },
    "1220": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7591,
        7611
      ],
      "op": "DUP2",
      "path": "141"
    },
    "1221": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7591,
        7611
      ],
      "op": "MSTORE",
      "path": "141"
    },
    "1222": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7591,
        7611
      ],
      "op": "PUSH1",
      "path": "141",
      "value": "0x4"
    },
    "1224": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7591,
        7611
      ],
      "op": "ADD",
      "path": "141"
    },
    "1225": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7591,
        7611
      ],
      "op": "PUSH2",
      "path": "141",
      "value": "0x3D9"
    },
    "1228": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7591,
        7611
      ],
      "op": "SWAP2",
      "path": "141"
    },
    "1229": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7591,
        7611
      ],
      "op": "SWAP1",
      "path": "141"
    },
    "1230": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7591,
        7611
      ],
      "op": "PUSH2",
      "path": "141",
      "value": "0x641"
    },
    "1233": {
      "fn": "Address._verifyCallResult",
      "jump": "i",
      "offset": [
        7591,
        7611
      ],
      "op": "JUMP",
      "path": "141"
    },
    "1234": {
      "op": "JUMPDEST"
    },
    "1235": {
      "op": "DUP1"
    },
    "1236": {
      "op": "CALLDATALOAD"
    },
    "1237": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1239": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1241": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1243": {
      "op": "SHL"
    },
    "1244": {
      "op": "SUB"
    },
    "1245": {
      "op": "DUP2"
    },
    "1246": {
      "op": "AND"
    },
    "1247": {
      "op": "DUP2"
    },
    "1248": {
      "op": "EQ"
    },
    "1249": {
      "op": "PUSH2",
      "value": "0x4E9"
    },
    "1252": {
      "op": "JUMPI"
    },
    "1253": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1255": {
      "op": "DUP1"
    },
    "1256": {
      "op": "REVERT"
    },
    "1257": {
      "op": "JUMPDEST"
    },
    "1258": {
      "op": "SWAP2"
    },
    "1259": {
      "op": "SWAP1"
    },
    "1260": {
      "op": "POP"
    },
    "1261": {
      "jump": "o",
      "op": "JUMP"
    },
    "1262": {
      "op": "JUMPDEST"
    },
    "1263": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1265": {
      "op": "DUP1"
    },
    "1266": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1268": {
      "op": "DUP1"
    },
    "1269": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1271": {
      "op": "DUP1"
    },
    "1272": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1274": {
      "op": "DUP8"
    },
    "1275": {
      "op": "DUP10"
    },
    "1276": {
      "op": "SUB"
    },
    "1277": {
      "op": "SLT"
    },
    "1278": {
      "op": "ISZERO"
    },
    "1279": {
      "op": "PUSH2",
      "value": "0x507"
    },
    "1282": {
      "op": "JUMPI"
    },
    "1283": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1285": {
      "op": "DUP1"
    },
    "1286": {
      "op": "REVERT"
    },
    "1287": {
      "op": "JUMPDEST"
    },
    "1288": {
      "op": "PUSH2",
      "value": "0x510"
    },
    "1291": {
      "op": "DUP8"
    },
    "1292": {
      "op": "PUSH2",
      "value": "0x4D2"
    },
    "1295": {
      "jump": "i",
      "op": "JUMP"
    },
    "1296": {
      "op": "JUMPDEST"
    },
    "1297": {
      "op": "SWAP6"
    },
    "1298": {
      "op": "POP"
    },
    "1299": {
      "op": "PUSH2",
      "value": "0x51E"
    },
    "1302": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1304": {
      "op": "DUP9"
    },
    "1305": {
      "op": "ADD"
    },
    "1306": {
      "op": "PUSH2",
      "value": "0x4D2"
    },
    "1309": {
      "jump": "i",
      "op": "JUMP"
    },
    "1310": {
      "op": "JUMPDEST"
    },
    "1311": {
      "op": "SWAP5"
    },
    "1312": {
      "op": "POP"
    },
    "1313": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1315": {
      "op": "DUP8"
    },
    "1316": {
      "op": "ADD"
    },
    "1317": {
      "op": "CALLDATALOAD"
    },
    "1318": {
      "op": "SWAP4"
    },
    "1319": {
      "op": "POP"
    },
    "1320": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1322": {
      "op": "DUP8"
    },
    "1323": {
      "op": "ADD"
    },
    "1324": {
      "op": "CALLDATALOAD"
    },
    "1325": {
      "op": "SWAP3"
    },
    "1326": {
      "op": "POP"
    },
    "1327": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1329": {
      "op": "DUP8"
    },
    "1330": {
      "op": "ADD"
    },
    "1331": {
      "op": "CALLDATALOAD"
    },
    "1332": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "1341": {
      "op": "DUP1"
    },
    "1342": {
      "op": "DUP3"
    },
    "1343": {
      "op": "GT"
    },
    "1344": {
      "op": "ISZERO"
    },
    "1345": {
      "op": "PUSH2",
      "value": "0x549"
    },
    "1348": {
      "op": "JUMPI"
    },
    "1349": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1351": {
      "op": "DUP1"
    },
    "1352": {
      "op": "REVERT"
    },
    "1353": {
      "op": "JUMPDEST"
    },
    "1354": {
      "op": "DUP2"
    },
    "1355": {
      "op": "DUP10"
    },
    "1356": {
      "op": "ADD"
    },
    "1357": {
      "op": "SWAP2"
    },
    "1358": {
      "op": "POP"
    },
    "1359": {
      "op": "DUP10"
    },
    "1360": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1362": {
      "op": "DUP4"
    },
    "1363": {
      "op": "ADD"
    },
    "1364": {
      "op": "SLT"
    },
    "1365": {
      "op": "PUSH2",
      "value": "0x55D"
    },
    "1368": {
      "op": "JUMPI"
    },
    "1369": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1371": {
      "op": "DUP1"
    },
    "1372": {
      "op": "REVERT"
    },
    "1373": {
      "op": "JUMPDEST"
    },
    "1374": {
      "op": "DUP2"
    },
    "1375": {
      "op": "CALLDATALOAD"
    },
    "1376": {
      "op": "DUP2"
    },
    "1377": {
      "op": "DUP2"
    },
    "1378": {
      "op": "GT"
    },
    "1379": {
      "op": "ISZERO"
    },
    "1380": {
      "op": "PUSH2",
      "value": "0x56C"
    },
    "1383": {
      "op": "JUMPI"
    },
    "1384": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1386": {
      "op": "DUP1"
    },
    "1387": {
      "op": "REVERT"
    },
    "1388": {
      "op": "JUMPDEST"
    },
    "1389": {
      "op": "DUP11"
    },
    "1390": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1392": {
      "op": "DUP3"
    },
    "1393": {
      "op": "DUP6"
    },
    "1394": {
      "op": "ADD"
    },
    "1395": {
      "op": "ADD"
    },
    "1396": {
      "op": "GT"
    },
    "1397": {
      "op": "ISZERO"
    },
    "1398": {
      "op": "PUSH2",
      "value": "0x57E"
    },
    "1401": {
      "op": "JUMPI"
    },
    "1402": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1404": {
      "op": "DUP1"
    },
    "1405": {
      "op": "REVERT"
    },
    "1406": {
      "op": "JUMPDEST"
    },
    "1407": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1409": {
      "op": "DUP4"
    },
    "1410": {
      "op": "ADD"
    },
    "1411": {
      "op": "SWAP5"
    },
    "1412": {
      "op": "POP"
    },
    "1413": {
      "op": "DUP1"
    },
    "1414": {
      "op": "SWAP4"
    },
    "1415": {
      "op": "POP"
    },
    "1416": {
      "op": "POP"
    },
    "1417": {
      "op": "POP"
    },
    "1418": {
      "op": "POP"
    },
    "1419": {
      "op": "SWAP3"
    },
    "1420": {
      "op": "SWAP6"
    },
    "1421": {
      "op": "POP"
    },
    "1422": {
      "op": "SWAP3"
    },
    "1423": {
      "op": "SWAP6"
    },
    "1424": {
      "op": "POP"
    },
    "1425": {
      "op": "SWAP3"
    },
    "1426": {
      "op": "SWAP6"
    },
    "1427": {
      "jump": "o",
      "op": "JUMP"
    },
    "1428": {
      "op": "JUMPDEST"
    },
    "1429": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1431": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1433": {
      "op": "DUP3"
    },
    "1434": {
      "op": "DUP5"
    },
    "1435": {
      "op": "SUB"
    },
    "1436": {
      "op": "SLT"
    },
    "1437": {
      "op": "ISZERO"
    },
    "1438": {
      "op": "PUSH2",
      "value": "0x5A6"
    },
    "1441": {
      "op": "JUMPI"
    },
    "1442": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1444": {
      "op": "DUP1"
    },
    "1445": {
      "op": "REVERT"
    },
    "1446": {
      "op": "JUMPDEST"
    },
    "1447": {
      "op": "POP"
    },
    "1448": {
      "op": "MLOAD"
    },
    "1449": {
      "op": "SWAP2"
    },
    "1450": {
      "op": "SWAP1"
    },
    "1451": {
      "op": "POP"
    },
    "1452": {
      "jump": "o",
      "op": "JUMP"
    },
    "1453": {
      "op": "JUMPDEST"
    },
    "1454": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1456": {
      "op": "DUP3"
    },
    "1457": {
      "op": "NOT"
    },
    "1458": {
      "op": "DUP3"
    },
    "1459": {
      "op": "GT"
    },
    "1460": {
      "op": "ISZERO"
    },
    "1461": {
      "op": "PUSH2",
      "value": "0x5CE"
    },
    "1464": {
      "op": "JUMPI"
    },
    "1465": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "1470": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1472": {
      "op": "SHL"
    },
    "1473": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1475": {
      "op": "MSTORE"
    },
    "1476": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "1478": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "1480": {
      "op": "MSTORE"
    },
    "1481": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1483": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1485": {
      "op": "REVERT"
    },
    "1486": {
      "op": "JUMPDEST"
    },
    "1487": {
      "op": "POP"
    },
    "1488": {
      "op": "ADD"
    },
    "1489": {
      "op": "SWAP1"
    },
    "1490": {
      "jump": "o",
      "op": "JUMP"
    },
    "1491": {
      "op": "JUMPDEST"
    },
    "1492": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1494": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1496": {
      "op": "DUP3"
    },
    "1497": {
      "op": "DUP5"
    },
    "1498": {
      "op": "SUB"
    },
    "1499": {
      "op": "SLT"
    },
    "1500": {
      "op": "ISZERO"
    },
    "1501": {
      "op": "PUSH2",
      "value": "0x5E5"
    },
    "1504": {
      "op": "JUMPI"
    },
    "1505": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1507": {
      "op": "DUP1"
    },
    "1508": {
      "op": "REVERT"
    },
    "1509": {
      "op": "JUMPDEST"
    },
    "1510": {
      "op": "DUP2"
    },
    "1511": {
      "op": "MLOAD"
    },
    "1512": {
      "op": "DUP1"
    },
    "1513": {
      "op": "ISZERO"
    },
    "1514": {
      "op": "ISZERO"
    },
    "1515": {
      "op": "DUP2"
    },
    "1516": {
      "op": "EQ"
    },
    "1517": {
      "op": "PUSH2",
      "value": "0x35E"
    },
    "1520": {
      "op": "JUMPI"
    },
    "1521": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1523": {
      "op": "DUP1"
    },
    "1524": {
      "op": "REVERT"
    },
    "1525": {
      "op": "JUMPDEST"
    },
    "1526": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1528": {
      "op": "JUMPDEST"
    },
    "1529": {
      "op": "DUP4"
    },
    "1530": {
      "op": "DUP2"
    },
    "1531": {
      "op": "LT"
    },
    "1532": {
      "op": "ISZERO"
    },
    "1533": {
      "op": "PUSH2",
      "value": "0x610"
    },
    "1536": {
      "op": "JUMPI"
    },
    "1537": {
      "op": "DUP2"
    },
    "1538": {
      "op": "DUP2"
    },
    "1539": {
      "op": "ADD"
    },
    "1540": {
      "op": "MLOAD"
    },
    "1541": {
      "op": "DUP4"
    },
    "1542": {
      "op": "DUP3"
    },
    "1543": {
      "op": "ADD"
    },
    "1544": {
      "op": "MSTORE"
    },
    "1545": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1547": {
      "op": "ADD"
    },
    "1548": {
      "op": "PUSH2",
      "value": "0x5F8"
    },
    "1551": {
      "op": "JUMP"
    },
    "1552": {
      "op": "JUMPDEST"
    },
    "1553": {
      "op": "DUP4"
    },
    "1554": {
      "op": "DUP2"
    },
    "1555": {
      "op": "GT"
    },
    "1556": {
      "op": "ISZERO"
    },
    "1557": {
      "op": "PUSH2",
      "value": "0x61F"
    },
    "1560": {
      "op": "JUMPI"
    },
    "1561": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1563": {
      "op": "DUP5"
    },
    "1564": {
      "op": "DUP5"
    },
    "1565": {
      "op": "ADD"
    },
    "1566": {
      "op": "MSTORE"
    },
    "1567": {
      "op": "JUMPDEST"
    },
    "1568": {
      "op": "POP"
    },
    "1569": {
      "op": "POP"
    },
    "1570": {
      "op": "POP"
    },
    "1571": {
      "op": "POP"
    },
    "1572": {
      "jump": "o",
      "op": "JUMP"
    },
    "1573": {
      "op": "JUMPDEST"
    },
    "1574": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1576": {
      "op": "DUP3"
    },
    "1577": {
      "op": "MLOAD"
    },
    "1578": {
      "op": "PUSH2",
      "value": "0x637"
    },
    "1581": {
      "op": "DUP2"
    },
    "1582": {
      "op": "DUP5"
    },
    "1583": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1585": {
      "op": "DUP8"
    },
    "1586": {
      "op": "ADD"
    },
    "1587": {
      "op": "PUSH2",
      "value": "0x5F5"
    },
    "1590": {
      "jump": "i",
      "op": "JUMP"
    },
    "1591": {
      "op": "JUMPDEST"
    },
    "1592": {
      "op": "SWAP2"
    },
    "1593": {
      "op": "SWAP1"
    },
    "1594": {
      "op": "SWAP2"
    },
    "1595": {
      "op": "ADD"
    },
    "1596": {
      "op": "SWAP3"
    },
    "1597": {
      "op": "SWAP2"
    },
    "1598": {
      "op": "POP"
    },
    "1599": {
      "op": "POP"
    },
    "1600": {
      "jump": "o",
      "op": "JUMP"
    },
    "1601": {
      "op": "JUMPDEST"
    },
    "1602": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1604": {
      "op": "DUP2"
    },
    "1605": {
      "op": "MSTORE"
    },
    "1606": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1608": {
      "op": "DUP3"
    },
    "1609": {
      "op": "MLOAD"
    },
    "1610": {
      "op": "DUP1"
    },
    "1611": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1613": {
      "op": "DUP5"
    },
    "1614": {
      "op": "ADD"
    },
    "1615": {
      "op": "MSTORE"
    },
    "1616": {
      "op": "PUSH2",
      "value": "0x660"
    },
    "1619": {
      "op": "DUP2"
    },
    "1620": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1622": {
      "op": "DUP6"
    },
    "1623": {
      "op": "ADD"
    },
    "1624": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1626": {
      "op": "DUP8"
    },
    "1627": {
      "op": "ADD"
    },
    "1628": {
      "op": "PUSH2",
      "value": "0x5F5"
    },
    "1631": {
      "jump": "i",
      "op": "JUMP"
    },
    "1632": {
      "op": "JUMPDEST"
    },
    "1633": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1635": {
      "op": "ADD"
    },
    "1636": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1638": {
      "op": "NOT"
    },
    "1639": {
      "op": "AND"
    },
    "1640": {
      "op": "SWAP2"
    },
    "1641": {
      "op": "SWAP1"
    },
    "1642": {
      "op": "SWAP2"
    },
    "1643": {
      "op": "ADD"
    },
    "1644": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1646": {
      "op": "ADD"
    },
    "1647": {
      "op": "SWAP3"
    },
    "1648": {
      "op": "SWAP2"
    },
    "1649": {
      "op": "POP"
    },
    "1650": {
      "op": "POP"
    },
    "1651": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "70e2acb810a354baeaa45bc6b54d6a65e8d99abb",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"../token/ERC20/IERC20.sol\";\nimport \"../interfaces/IERC3156.sol\";\nimport \"../utils/Address.sol\";\n\n/**\n * @dev WARNING: this IERC3156FlashBorrower mock implementation is for testing purposes ONLY.\n * Writing a secure flash lock borrower is not an easy task, and should be done with the utmost care.\n * This is not an example of how it should be done, and no pattern present in this mock should be considered secure.\n * Following best practices, always have your contract properly audited before using them to manipulate important funds on\n * live networks.\n */\ncontract ERC3156FlashBorrowerMock is IERC3156FlashBorrower {\n    bytes32 internal constant _RETURN_VALUE = keccak256(\"ERC3156FlashBorrower.onFlashLoan\");\n\n    bool immutable _enableApprove;\n    bool immutable _enableReturn;\n\n    event BalanceOf(address token, address account, uint256 value);\n    event TotalSupply(address token, uint256 value);\n\n    constructor(bool enableReturn, bool enableApprove) {\n        _enableApprove = enableApprove;\n        _enableReturn = enableReturn;\n    }\n\n    function onFlashLoan(\n        address, /*initiator*/\n        address token,\n        uint256 amount,\n        uint256 fee,\n        bytes calldata data\n    ) public override returns (bytes32) {\n        require(msg.sender == token);\n\n        emit BalanceOf(token, address(this), IERC20(token).balanceOf(address(this)));\n        emit TotalSupply(token, IERC20(token).totalSupply());\n\n        if (data.length > 0) {\n            // WARNING: This code is for testing purposes only! Do not use.\n            Address.functionCall(token, data);\n        }\n\n        if (_enableApprove) {\n            IERC20(token).approve(token, amount + fee);\n        }\n\n        return _enableReturn ? _RETURN_VALUE : bytes32(0);\n    }\n}\n",
  "sourceMap": "625:1200:51:-:0;;;976:136;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1037:30;;;;1077:28;;;;625:1200;;14:164:171;90:13;;139;;132:21;122:32;;112:60;;168:1;165;158:12;112:60;14:164;;;:::o;183:281::-;256:6;264;317:2;305:9;296:7;292:23;288:32;285:52;;;333:1;330;323:12;285:52;356:37;383:9;356:37;:::i;:::-;346:47;;412:46;454:2;443:9;439:18;412:46;:::i;:::-;402:56;;183:281;;;;;:::o;:::-;625:1200:51;;;;;;;;;;;;;;;;;;",
  "sourcePath": "contracts/openzeppelin/contracts/mocks/ERC3156FlashBorrowerMock.sol",
  "type": "contract"
}