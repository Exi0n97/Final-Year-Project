{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "ethtoken",
          "type": "address"
        },
        {
          "internalType": "address payable",
          "name": "usdtoken",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "eth",
      "outputs": [
        {
          "internalType": "contract etherToken",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "tradeEth",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "tradeUSD",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "usd",
      "outputs": [
        {
          "internalType": "contract usdToken",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "allSourcePaths": {
    "0": "contracts/dex.sol",
    "1": "contracts/eth.sol",
    "8": "contracts/usd.sol"
  },
  "ast": {
    "absolutePath": "contracts/dex.sol",
    "exportedSymbols": {
      "Context": [
        1134
      ],
      "Dex": [
        94
      ],
      "ERC20": [
        1010
      ],
      "IERC20": [
        1088
      ],
      "IERC20Metadata": [
        1113
      ],
      "etherToken": [
        151
      ],
      "usdToken": [
        464
      ]
    },
    "id": 95,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:0"
      },
      {
        "absolutePath": "contracts/openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "./openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 95,
        "sourceUnit": 1089,
        "src": "25:57:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/openzeppelin/contracts/token/ERC20/ERC20.sol",
        "file": "./openzeppelin/contracts/token/ERC20/ERC20.sol",
        "id": 3,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 95,
        "sourceUnit": 1011,
        "src": "83:56:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/eth.sol",
        "file": "./eth.sol",
        "id": 4,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 95,
        "sourceUnit": 152,
        "src": "140:19:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/usd.sol",
        "file": "./usd.sol",
        "id": 5,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 95,
        "sourceUnit": 465,
        "src": "160:19:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "Dex",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 94,
        "linearizedBaseContracts": [
          94
        ],
        "name": "Dex",
        "nameLocation": "190:3:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "8c7c9e0c",
            "id": 8,
            "mutability": "mutable",
            "name": "eth",
            "nameLocation": "214:3:0",
            "nodeType": "VariableDeclaration",
            "scope": 94,
            "src": "196:21:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_etherToken_$151",
              "typeString": "contract etherToken"
            },
            "typeName": {
              "id": 7,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 6,
                "name": "etherToken",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 151,
                "src": "196:10:0"
              },
              "referencedDeclaration": 151,
              "src": "196:10:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_etherToken_$151",
                "typeString": "contract etherToken"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "d63a6ccd",
            "id": 11,
            "mutability": "mutable",
            "name": "usd",
            "nameLocation": "236:3:0",
            "nodeType": "VariableDeclaration",
            "scope": 94,
            "src": "220:19:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_usdToken_$464",
              "typeString": "contract usdToken"
            },
            "typeName": {
              "id": 10,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 9,
                "name": "usdToken",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 464,
                "src": "220:8:0"
              },
              "referencedDeclaration": 464,
              "src": "220:8:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_usdToken_$464",
                "typeString": "contract usdToken"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 50,
              "nodeType": "Block",
              "src": "312:130:0",
              "statements": [
                {
                  "expression": {
                    "id": 22,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 18,
                      "name": "eth",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8,
                      "src": "319:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_etherToken_$151",
                        "typeString": "contract etherToken"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 20,
                          "name": "ethtoken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13,
                          "src": "334:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        ],
                        "id": 19,
                        "name": "etherToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 151,
                        "src": "323:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_etherToken_$151_$",
                          "typeString": "type(contract etherToken)"
                        }
                      },
                      "id": 21,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "323:20:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_etherToken_$151",
                        "typeString": "contract etherToken"
                      }
                    },
                    "src": "319:24:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_etherToken_$151",
                      "typeString": "contract etherToken"
                    }
                  },
                  "id": 23,
                  "nodeType": "ExpressionStatement",
                  "src": "319:24:0"
                },
                {
                  "expression": {
                    "id": 28,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 24,
                      "name": "usd",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11,
                      "src": "349:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_usdToken_$464",
                        "typeString": "contract usdToken"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 26,
                          "name": "usdtoken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15,
                          "src": "362:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        ],
                        "id": 25,
                        "name": "usdToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 464,
                        "src": "353:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_usdToken_$464_$",
                          "typeString": "type(contract usdToken)"
                        }
                      },
                      "id": 27,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "353:18:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_usdToken_$464",
                        "typeString": "contract usdToken"
                      }
                    },
                    "src": "349:22:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_usdToken_$464",
                      "typeString": "contract usdToken"
                    }
                  },
                  "id": 29,
                  "nodeType": "ExpressionStatement",
                  "src": "349:22:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 35,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "394:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Dex_$94",
                              "typeString": "contract Dex"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Dex_$94",
                              "typeString": "contract Dex"
                            }
                          ],
                          "id": 34,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "386:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 33,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "386:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 36,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "386:13:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "383030",
                        "id": 37,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "400:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_800_by_1",
                          "typeString": "int_const 800"
                        },
                        "value": "800"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_800_by_1",
                          "typeString": "int_const 800"
                        }
                      ],
                      "expression": {
                        "id": 30,
                        "name": "eth",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8,
                        "src": "377:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_etherToken_$151",
                          "typeString": "contract etherToken"
                        }
                      },
                      "id": 32,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 146,
                      "src": "377:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 38,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "377:27:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 39,
                  "nodeType": "ExpressionStatement",
                  "src": "377:27:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 45,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "427:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Dex_$94",
                              "typeString": "contract Dex"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Dex_$94",
                              "typeString": "contract Dex"
                            }
                          ],
                          "id": 44,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "419:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 43,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "419:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 46,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "419:13:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "33323030",
                        "id": 47,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "433:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_3200_by_1",
                          "typeString": "int_const 3200"
                        },
                        "value": "3200"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_3200_by_1",
                          "typeString": "int_const 3200"
                        }
                      ],
                      "expression": {
                        "id": 40,
                        "name": "usd",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11,
                        "src": "410:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_usdToken_$464",
                          "typeString": "contract usdToken"
                        }
                      },
                      "id": 42,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 459,
                      "src": "410:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 48,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "410:28:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 49,
                  "nodeType": "ExpressionStatement",
                  "src": "410:28:0"
                }
              ]
            },
            "id": 51,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 16,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13,
                  "mutability": "mutable",
                  "name": "ethtoken",
                  "nameLocation": "270:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 51,
                  "src": "254:24:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 12,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "254:15:0",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15,
                  "mutability": "mutable",
                  "name": "usdtoken",
                  "nameLocation": "295:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 51,
                  "src": "279:24:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 14,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "279:15:0",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "253:51:0"
            },
            "returnParameters": {
              "id": 17,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "312:0:0"
            },
            "scope": 94,
            "src": "242:200:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 69,
              "nodeType": "Block",
              "src": "504:63:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 63,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "539:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Dex_$94",
                              "typeString": "contract Dex"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Dex_$94",
                              "typeString": "contract Dex"
                            }
                          ],
                          "id": 62,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "531:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 61,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "531:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 64,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "531:13:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 65,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53,
                        "src": "545:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 66,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 55,
                        "src": "553:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 58,
                        "name": "eth",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8,
                        "src": "514:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_etherToken_$151",
                          "typeString": "contract etherToken"
                        }
                      },
                      "id": 60,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 133,
                      "src": "514:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 67,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "514:46:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 68,
                  "nodeType": "ExpressionStatement",
                  "src": "514:46:0"
                }
              ]
            },
            "functionSelector": "bb405677",
            "id": 70,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tradeEth",
            "nameLocation": "453:8:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 56,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 53,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "470:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 70,
                  "src": "462:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 52,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "462:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 55,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "487:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 70,
                  "src": "479:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 54,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "479:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "461:33:0"
            },
            "returnParameters": {
              "id": 57,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "504:0:0"
            },
            "scope": 94,
            "src": "444:123:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 88,
              "nodeType": "Block",
              "src": "629:63:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 82,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "664:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Dex_$94",
                              "typeString": "contract Dex"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Dex_$94",
                              "typeString": "contract Dex"
                            }
                          ],
                          "id": 81,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "656:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 80,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "656:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 83,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "656:13:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 84,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 72,
                        "src": "670:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 85,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74,
                        "src": "678:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 77,
                        "name": "usd",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11,
                        "src": "639:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_usdToken_$464",
                          "typeString": "contract usdToken"
                        }
                      },
                      "id": 79,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 446,
                      "src": "639:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 86,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "639:46:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 87,
                  "nodeType": "ExpressionStatement",
                  "src": "639:46:0"
                }
              ]
            },
            "functionSelector": "1324b42d",
            "id": 89,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tradeUSD",
            "nameLocation": "578:8:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 75,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 72,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "595:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 89,
                  "src": "587:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 71,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "587:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 74,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "612:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 89,
                  "src": "604:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 73,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "604:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "586:33:0"
            },
            "returnParameters": {
              "id": 76,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "629:0:0"
            },
            "scope": 94,
            "src": "569:123:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 92,
              "nodeType": "Block",
              "src": "722:2:0",
              "statements": []
            },
            "id": 93,
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 90,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "702:2:0"
            },
            "returnParameters": {
              "id": 91,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "722:0:0"
            },
            "scope": 94,
            "src": "695:29:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 95,
        "src": "181:545:0",
        "usedErrors": []
      }
    ],
    "src": "0:726:0"
  },
  "bytecode": "608060405234801561001057600080fd5b506040516103c33803806103c383398101604081905261002f9161013b565b600080546001600160a01b038481166001600160a01b0319928316811790935560018054918516919092161790556040516340c10f1960e01b815230600482015261032060248201526340c10f1990604401600060405180830381600087803b15801561009b57600080fd5b505af11580156100af573d6000803e3d6000fd5b50506001546040516340c10f1960e01b8152306004820152610c8060248201526001600160a01b0390911692506340c10f199150604401600060405180830381600087803b15801561010057600080fd5b505af1158015610114573d6000803e3d6000fd5b50505050505061016e565b80516001600160a01b038116811461013657600080fd5b919050565b6000806040838503121561014e57600080fd5b6101578361011f565b91506101656020840161011f565b90509250929050565b6102468061017d6000396000f3fe6080604052600436106100435760003560e01c80631324b42d1461004f5780638c7c9e0c14610071578063bb405677146100ad578063d63a6ccd146100cd57600080fd5b3661004a57005b600080fd5b34801561005b57600080fd5b5061006f61006a3660046101af565b6100ed565b005b34801561007d57600080fd5b50600054610091906001600160a01b031681565b6040516001600160a01b03909116815260200160405180910390f35b3480156100b957600080fd5b5061006f6100c83660046101af565b610170565b3480156100d957600080fd5b50600154610091906001600160a01b031681565b6001546040516323b872dd60e01b81523060048201526001600160a01b03848116602483015260448201849052909116906323b872dd906064015b6020604051808303816000875af1158015610147573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061016b91906101e7565b505050565b6000546040516323b872dd60e01b81523060048201526001600160a01b03848116602483015260448201849052909116906323b872dd90606401610128565b600080604083850312156101c257600080fd5b82356001600160a01b03811681146101d957600080fd5b946020939093013593505050565b6000602082840312156101f957600080fd5b8151801515811461020957600080fd5b939250505056fea26469706673582212206d32628d6f2f3004ff61ad2f7554a1600b7e4cde343185d1d82d92c45350590464736f6c634300080c0033",
  "bytecodeSha1": "4d8a92fbcd7d1a17d4bf408b7ed5aa6ca38935ed",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.12+commit.f00d7308"
  },
  "contractName": "Dex",
  "coverageMap": {
    "branches": {
      "0": {},
      "1": {},
      "8": {}
    },
    "statements": {
      "0": {
        "Dex.tradeEth": {
          "1": [
            514,
            560
          ]
        },
        "Dex.tradeUSD": {
          "0": [
            639,
            685
          ]
        }
      },
      "1": {},
      "8": {}
    }
  },
  "dependencies": [
    "etherToken",
    "usdToken"
  ],
  "deployedBytecode": "6080604052600436106100435760003560e01c80631324b42d1461004f5780638c7c9e0c14610071578063bb405677146100ad578063d63a6ccd146100cd57600080fd5b3661004a57005b600080fd5b34801561005b57600080fd5b5061006f61006a3660046101af565b6100ed565b005b34801561007d57600080fd5b50600054610091906001600160a01b031681565b6040516001600160a01b03909116815260200160405180910390f35b3480156100b957600080fd5b5061006f6100c83660046101af565b610170565b3480156100d957600080fd5b50600154610091906001600160a01b031681565b6001546040516323b872dd60e01b81523060048201526001600160a01b03848116602483015260448201849052909116906323b872dd906064015b6020604051808303816000875af1158015610147573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061016b91906101e7565b505050565b6000546040516323b872dd60e01b81523060048201526001600160a01b03848116602483015260448201849052909116906323b872dd90606401610128565b600080604083850312156101c257600080fd5b82356001600160a01b03811681146101d957600080fd5b946020939093013593505050565b6000602082840312156101f957600080fd5b8151801515811461020957600080fd5b939250505056fea26469706673582212206d32628d6f2f3004ff61ad2f7554a1600b7e4cde343185d1d82d92c45350590464736f6c634300080c0033",
  "deployedSourceMap": "181:545:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;569:123;;;;;;;;;;-1:-1:-1;569:123:0;;;;;:::i;:::-;;:::i;:::-;;196:21;;;;;;;;;;-1:-1:-1;196:21:0;;;;-1:-1:-1;;;;;196:21:0;;;;;;-1:-1:-1;;;;;563:32:9;;;545:51;;533:2;518:18;196:21:0;;;;;;;444:123;;;;;;;;;;-1:-1:-1;444:123:0;;;;;:::i;:::-;;:::i;220:19::-;;;;;;;;;;-1:-1:-1;220:19:0;;;;-1:-1:-1;;;;;220:19:0;;;569:123;639:3;;:46;;-1:-1:-1;;;639:46:0;;664:4;639:46;;;1079:34:9;-1:-1:-1;;;;;1149:15:9;;;1129:18;;;1122:43;1181:18;;;1174:34;;;639:3:0;;;;:16;;1014:18:9;;639:46:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;569:123;;:::o;444:::-;514:3;;:46;;-1:-1:-1;;;514:46:0;;539:4;514:46;;;1079:34:9;-1:-1:-1;;;;;1149:15:9;;;1129:18;;;1122:43;1181:18;;;1174:34;;;514:3:0;;;;:16;;1014:18:9;;514:46:0;839:375:9;14:354;82:6;90;143:2;131:9;122:7;118:23;114:32;111:52;;;159:1;156;149:12;111:52;185:23;;-1:-1:-1;;;;;237:31:9;;227:42;;217:70;;283:1;280;273:12;217:70;306:5;358:2;343:18;;;;330:32;;-1:-1:-1;;;14:354:9:o;1219:277::-;1286:6;1339:2;1327:9;1318:7;1314:23;1310:32;1307:52;;;1355:1;1352;1345:12;1307:52;1387:9;1381:16;1440:5;1433:13;1426:21;1419:5;1416:32;1406:60;;1462:1;1459;1452:12;1406:60;1485:5;1219:277;-1:-1:-1;;;1219:277:9:o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "offset": [
    181,
    726
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x43 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1324B42D EQ PUSH2 0x4F JUMPI DUP1 PUSH4 0x8C7C9E0C EQ PUSH2 0x71 JUMPI DUP1 PUSH4 0xBB405677 EQ PUSH2 0xAD JUMPI DUP1 PUSH4 0xD63A6CCD EQ PUSH2 0xCD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0x4A JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6F PUSH2 0x6A CALLDATASIZE PUSH1 0x4 PUSH2 0x1AF JUMP JUMPDEST PUSH2 0xED JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH2 0x91 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6F PUSH2 0xC8 CALLDATASIZE PUSH1 0x4 PUSH2 0x1AF JUMP JUMPDEST PUSH2 0x170 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xD9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH2 0x91 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD DUP5 SWAP1 MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x147 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x16B SWAP2 SWAP1 PUSH2 0x1E7 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD DUP5 SWAP1 MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH2 0x128 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x209 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH14 0x32628D6F2F3004FF61AD2F7554A1 PUSH1 0xB PUSH31 0x4CDE343185D1D82D92C45350590464736F6C634300080C0033000000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        181,
        726
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        181,
        726
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        181,
        726
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5": {
      "fn": null,
      "offset": [
        181,
        726
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "7": {
      "fn": null,
      "offset": [
        181,
        726
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "8": {
      "fn": null,
      "offset": [
        181,
        726
      ],
      "op": "LT",
      "path": "0"
    },
    "9": {
      "fn": null,
      "offset": [
        181,
        726
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x43"
    },
    "12": {
      "fn": null,
      "offset": [
        181,
        726
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "13": {
      "fn": null,
      "offset": [
        181,
        726
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "15": {
      "fn": null,
      "offset": [
        181,
        726
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "16": {
      "fn": null,
      "offset": [
        181,
        726
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE0"
    },
    "18": {
      "fn": null,
      "offset": [
        181,
        726
      ],
      "op": "SHR",
      "path": "0"
    },
    "19": {
      "fn": null,
      "offset": [
        181,
        726
      ],
      "op": "DUP1",
      "path": "0"
    },
    "20": {
      "fn": null,
      "offset": [
        181,
        726
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x1324B42D"
    },
    "25": {
      "fn": null,
      "offset": [
        181,
        726
      ],
      "op": "EQ",
      "path": "0"
    },
    "26": {
      "fn": null,
      "offset": [
        181,
        726
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4F"
    },
    "29": {
      "fn": null,
      "offset": [
        181,
        726
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "30": {
      "fn": null,
      "offset": [
        181,
        726
      ],
      "op": "DUP1",
      "path": "0"
    },
    "31": {
      "fn": null,
      "offset": [
        181,
        726
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x8C7C9E0C"
    },
    "36": {
      "fn": null,
      "offset": [
        181,
        726
      ],
      "op": "EQ",
      "path": "0"
    },
    "37": {
      "fn": null,
      "offset": [
        181,
        726
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x71"
    },
    "40": {
      "fn": null,
      "offset": [
        181,
        726
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "41": {
      "fn": null,
      "offset": [
        181,
        726
      ],
      "op": "DUP1",
      "path": "0"
    },
    "42": {
      "fn": null,
      "offset": [
        181,
        726
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xBB405677"
    },
    "47": {
      "fn": null,
      "offset": [
        181,
        726
      ],
      "op": "EQ",
      "path": "0"
    },
    "48": {
      "fn": null,
      "offset": [
        181,
        726
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAD"
    },
    "51": {
      "fn": null,
      "offset": [
        181,
        726
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "52": {
      "fn": null,
      "offset": [
        181,
        726
      ],
      "op": "DUP1",
      "path": "0"
    },
    "53": {
      "fn": null,
      "offset": [
        181,
        726
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xD63A6CCD"
    },
    "58": {
      "fn": null,
      "offset": [
        181,
        726
      ],
      "op": "EQ",
      "path": "0"
    },
    "59": {
      "fn": null,
      "offset": [
        181,
        726
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCD"
    },
    "62": {
      "fn": null,
      "offset": [
        181,
        726
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "63": {
      "fn": null,
      "offset": [
        181,
        726
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "65": {
      "fn": null,
      "offset": [
        181,
        726
      ],
      "op": "DUP1",
      "path": "0"
    },
    "66": {
      "fn": null,
      "offset": [
        181,
        726
      ],
      "op": "REVERT",
      "path": "0"
    },
    "67": {
      "fn": null,
      "offset": [
        181,
        726
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "68": {
      "fn": null,
      "offset": [
        181,
        726
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "69": {
      "fn": null,
      "offset": [
        181,
        726
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4A"
    },
    "72": {
      "fn": null,
      "offset": [
        181,
        726
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "73": {
      "fn": null,
      "offset": [
        181,
        726
      ],
      "op": "STOP",
      "path": "0"
    },
    "74": {
      "fn": null,
      "offset": [
        181,
        726
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "75": {
      "fn": null,
      "offset": [
        181,
        726
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "77": {
      "fn": null,
      "offset": [
        181,
        726
      ],
      "op": "DUP1",
      "path": "0"
    },
    "78": {
      "first_revert": true,
      "fn": null,
      "offset": [
        181,
        726
      ],
      "op": "REVERT",
      "path": "0"
    },
    "79": {
      "fn": "Dex.tradeUSD",
      "offset": [
        569,
        692
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "80": {
      "fn": "Dex.tradeUSD",
      "offset": [
        569,
        692
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "81": {
      "fn": "Dex.tradeUSD",
      "offset": [
        569,
        692
      ],
      "op": "DUP1",
      "path": "0"
    },
    "82": {
      "fn": "Dex.tradeUSD",
      "offset": [
        569,
        692
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "83": {
      "fn": "Dex.tradeUSD",
      "offset": [
        569,
        692
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5B"
    },
    "86": {
      "fn": "Dex.tradeUSD",
      "offset": [
        569,
        692
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "87": {
      "fn": "Dex.tradeUSD",
      "offset": [
        569,
        692
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "89": {
      "fn": "Dex.tradeUSD",
      "offset": [
        569,
        692
      ],
      "op": "DUP1",
      "path": "0"
    },
    "90": {
      "fn": "Dex.tradeUSD",
      "offset": [
        569,
        692
      ],
      "op": "REVERT",
      "path": "0"
    },
    "91": {
      "fn": "Dex.tradeUSD",
      "offset": [
        569,
        692
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "92": {
      "op": "POP"
    },
    "93": {
      "fn": "Dex.tradeUSD",
      "offset": [
        569,
        692
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6F"
    },
    "96": {
      "fn": "Dex.tradeUSD",
      "offset": [
        569,
        692
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6A"
    },
    "99": {
      "fn": "Dex.tradeUSD",
      "offset": [
        569,
        692
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "100": {
      "fn": "Dex.tradeUSD",
      "offset": [
        569,
        692
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "102": {
      "fn": "Dex.tradeUSD",
      "offset": [
        569,
        692
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1AF"
    },
    "105": {
      "fn": "Dex.tradeUSD",
      "jump": "i",
      "offset": [
        569,
        692
      ],
      "op": "JUMP",
      "path": "0"
    },
    "106": {
      "fn": "Dex.tradeUSD",
      "offset": [
        569,
        692
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "107": {
      "fn": "Dex.tradeUSD",
      "offset": [
        569,
        692
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xED"
    },
    "110": {
      "fn": "Dex.tradeUSD",
      "jump": "i",
      "offset": [
        569,
        692
      ],
      "op": "JUMP",
      "path": "0"
    },
    "111": {
      "fn": "Dex.tradeUSD",
      "offset": [
        569,
        692
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "112": {
      "fn": "Dex.tradeUSD",
      "offset": [
        569,
        692
      ],
      "op": "STOP",
      "path": "0"
    },
    "113": {
      "offset": [
        196,
        217
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "114": {
      "fn": "Dex.tradeUSD",
      "offset": [
        196,
        217
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "115": {
      "fn": "Dex.tradeUSD",
      "offset": [
        196,
        217
      ],
      "op": "DUP1",
      "path": "0"
    },
    "116": {
      "fn": "Dex.tradeUSD",
      "offset": [
        196,
        217
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "117": {
      "fn": "Dex.tradeUSD",
      "offset": [
        196,
        217
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7D"
    },
    "120": {
      "fn": "Dex.tradeUSD",
      "offset": [
        196,
        217
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "121": {
      "fn": "Dex.tradeUSD",
      "offset": [
        196,
        217
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "123": {
      "fn": "Dex.tradeUSD",
      "offset": [
        196,
        217
      ],
      "op": "DUP1",
      "path": "0"
    },
    "124": {
      "fn": "Dex.tradeUSD",
      "offset": [
        196,
        217
      ],
      "op": "REVERT",
      "path": "0"
    },
    "125": {
      "fn": "Dex.tradeUSD",
      "offset": [
        196,
        217
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "126": {
      "op": "POP"
    },
    "127": {
      "offset": [
        196,
        217
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "129": {
      "fn": "Dex.tradeUSD",
      "offset": [
        196,
        217
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "130": {
      "fn": "Dex.tradeUSD",
      "offset": [
        196,
        217
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x91"
    },
    "133": {
      "fn": "Dex.tradeUSD",
      "offset": [
        196,
        217
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "134": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "136": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "138": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "140": {
      "op": "SHL"
    },
    "141": {
      "op": "SUB"
    },
    "142": {
      "offset": [
        196,
        217
      ],
      "op": "AND",
      "path": "0"
    },
    "143": {
      "fn": "Dex.tradeUSD",
      "offset": [
        196,
        217
      ],
      "op": "DUP2",
      "path": "0"
    },
    "144": {
      "fn": "Dex.tradeUSD",
      "offset": [
        196,
        217
      ],
      "op": "JUMP",
      "path": "0"
    },
    "145": {
      "fn": "Dex.tradeUSD",
      "offset": [
        196,
        217
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "146": {
      "fn": "Dex.tradeUSD",
      "offset": [
        196,
        217
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "148": {
      "fn": "Dex.tradeUSD",
      "offset": [
        196,
        217
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "149": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "151": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "153": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "155": {
      "op": "SHL"
    },
    "156": {
      "op": "SUB"
    },
    "157": {
      "op": "SWAP1"
    },
    "158": {
      "op": "SWAP2"
    },
    "159": {
      "op": "AND"
    },
    "160": {
      "op": "DUP2"
    },
    "161": {
      "op": "MSTORE"
    },
    "162": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "164": {
      "op": "ADD"
    },
    "165": {
      "offset": [
        196,
        217
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "167": {
      "fn": "Dex.tradeUSD",
      "offset": [
        196,
        217
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "168": {
      "fn": "Dex.tradeUSD",
      "offset": [
        196,
        217
      ],
      "op": "DUP1",
      "path": "0"
    },
    "169": {
      "fn": "Dex.tradeUSD",
      "offset": [
        196,
        217
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "170": {
      "fn": "Dex.tradeUSD",
      "offset": [
        196,
        217
      ],
      "op": "SUB",
      "path": "0"
    },
    "171": {
      "fn": "Dex.tradeUSD",
      "offset": [
        196,
        217
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "172": {
      "fn": "Dex.tradeUSD",
      "offset": [
        196,
        217
      ],
      "op": "RETURN",
      "path": "0"
    },
    "173": {
      "fn": "Dex.tradeEth",
      "offset": [
        444,
        567
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "174": {
      "fn": "Dex.tradeEth",
      "offset": [
        444,
        567
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "175": {
      "fn": "Dex.tradeEth",
      "offset": [
        444,
        567
      ],
      "op": "DUP1",
      "path": "0"
    },
    "176": {
      "fn": "Dex.tradeEth",
      "offset": [
        444,
        567
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "177": {
      "fn": "Dex.tradeEth",
      "offset": [
        444,
        567
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB9"
    },
    "180": {
      "fn": "Dex.tradeEth",
      "offset": [
        444,
        567
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "181": {
      "fn": "Dex.tradeEth",
      "offset": [
        444,
        567
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "183": {
      "fn": "Dex.tradeEth",
      "offset": [
        444,
        567
      ],
      "op": "DUP1",
      "path": "0"
    },
    "184": {
      "fn": "Dex.tradeEth",
      "offset": [
        444,
        567
      ],
      "op": "REVERT",
      "path": "0"
    },
    "185": {
      "fn": "Dex.tradeEth",
      "offset": [
        444,
        567
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "186": {
      "op": "POP"
    },
    "187": {
      "fn": "Dex.tradeEth",
      "offset": [
        444,
        567
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6F"
    },
    "190": {
      "fn": "Dex.tradeEth",
      "offset": [
        444,
        567
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC8"
    },
    "193": {
      "fn": "Dex.tradeEth",
      "offset": [
        444,
        567
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "194": {
      "fn": "Dex.tradeEth",
      "offset": [
        444,
        567
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "196": {
      "fn": "Dex.tradeEth",
      "offset": [
        444,
        567
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1AF"
    },
    "199": {
      "fn": "Dex.tradeEth",
      "jump": "i",
      "offset": [
        444,
        567
      ],
      "op": "JUMP",
      "path": "0"
    },
    "200": {
      "fn": "Dex.tradeEth",
      "offset": [
        444,
        567
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "201": {
      "fn": "Dex.tradeEth",
      "offset": [
        444,
        567
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x170"
    },
    "204": {
      "fn": "Dex.tradeEth",
      "jump": "i",
      "offset": [
        444,
        567
      ],
      "op": "JUMP",
      "path": "0"
    },
    "205": {
      "offset": [
        220,
        239
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "206": {
      "fn": "Dex.tradeEth",
      "offset": [
        220,
        239
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "207": {
      "fn": "Dex.tradeEth",
      "offset": [
        220,
        239
      ],
      "op": "DUP1",
      "path": "0"
    },
    "208": {
      "fn": "Dex.tradeEth",
      "offset": [
        220,
        239
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "209": {
      "fn": "Dex.tradeEth",
      "offset": [
        220,
        239
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD9"
    },
    "212": {
      "fn": "Dex.tradeEth",
      "offset": [
        220,
        239
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "213": {
      "fn": "Dex.tradeEth",
      "offset": [
        220,
        239
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "215": {
      "fn": "Dex.tradeEth",
      "offset": [
        220,
        239
      ],
      "op": "DUP1",
      "path": "0"
    },
    "216": {
      "fn": "Dex.tradeEth",
      "offset": [
        220,
        239
      ],
      "op": "REVERT",
      "path": "0"
    },
    "217": {
      "fn": "Dex.tradeEth",
      "offset": [
        220,
        239
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "218": {
      "op": "POP"
    },
    "219": {
      "offset": [
        220,
        239
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "221": {
      "fn": "Dex.tradeEth",
      "offset": [
        220,
        239
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "222": {
      "fn": "Dex.tradeEth",
      "offset": [
        220,
        239
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x91"
    },
    "225": {
      "fn": "Dex.tradeEth",
      "offset": [
        220,
        239
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "226": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "228": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "230": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "232": {
      "op": "SHL"
    },
    "233": {
      "op": "SUB"
    },
    "234": {
      "offset": [
        220,
        239
      ],
      "op": "AND",
      "path": "0"
    },
    "235": {
      "fn": "Dex.tradeEth",
      "offset": [
        220,
        239
      ],
      "op": "DUP2",
      "path": "0"
    },
    "236": {
      "fn": "Dex.tradeEth",
      "offset": [
        220,
        239
      ],
      "op": "JUMP",
      "path": "0"
    },
    "237": {
      "fn": "Dex.tradeUSD",
      "offset": [
        569,
        692
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "238": {
      "fn": "Dex.tradeUSD",
      "offset": [
        639,
        642
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 0,
      "value": "0x1"
    },
    "240": {
      "fn": "Dex.tradeUSD",
      "offset": [
        639,
        642
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "241": {
      "fn": "Dex.tradeUSD",
      "offset": [
        639,
        685
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "243": {
      "fn": "Dex.tradeUSD",
      "offset": [
        639,
        685
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "244": {
      "op": "PUSH4",
      "value": "0x23B872DD"
    },
    "249": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "251": {
      "op": "SHL"
    },
    "252": {
      "fn": "Dex.tradeUSD",
      "offset": [
        639,
        685
      ],
      "op": "DUP2",
      "path": "0"
    },
    "253": {
      "fn": "Dex.tradeUSD",
      "offset": [
        639,
        685
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "254": {
      "fn": "Dex.tradeUSD",
      "offset": [
        664,
        668
      ],
      "op": "ADDRESS",
      "path": "0"
    },
    "255": {
      "fn": "Dex.tradeUSD",
      "offset": [
        639,
        685
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "257": {
      "fn": "Dex.tradeUSD",
      "offset": [
        639,
        685
      ],
      "op": "DUP3",
      "path": "0"
    },
    "258": {
      "fn": "Dex.tradeUSD",
      "offset": [
        639,
        685
      ],
      "op": "ADD",
      "path": "0"
    },
    "259": {
      "op": "MSTORE"
    },
    "260": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "262": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "264": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "266": {
      "op": "SHL"
    },
    "267": {
      "op": "SUB"
    },
    "268": {
      "op": "DUP5"
    },
    "269": {
      "op": "DUP2"
    },
    "270": {
      "op": "AND"
    },
    "271": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "273": {
      "op": "DUP4"
    },
    "274": {
      "op": "ADD"
    },
    "275": {
      "op": "MSTORE"
    },
    "276": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "278": {
      "op": "DUP3"
    },
    "279": {
      "op": "ADD"
    },
    "280": {
      "op": "DUP5"
    },
    "281": {
      "op": "SWAP1"
    },
    "282": {
      "op": "MSTORE"
    },
    "283": {
      "fn": "Dex.tradeUSD",
      "offset": [
        639,
        642
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "284": {
      "fn": "Dex.tradeUSD",
      "offset": [
        639,
        642
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "285": {
      "fn": "Dex.tradeUSD",
      "offset": [
        639,
        642
      ],
      "op": "AND",
      "path": "0"
    },
    "286": {
      "fn": "Dex.tradeUSD",
      "offset": [
        639,
        642
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "287": {
      "fn": "Dex.tradeUSD",
      "offset": [
        639,
        655
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x23B872DD"
    },
    "292": {
      "fn": "Dex.tradeUSD",
      "offset": [
        639,
        655
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "293": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "295": {
      "op": "ADD"
    },
    "296": {
      "fn": "Dex.tradeUSD",
      "offset": [
        639,
        685
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "297": {
      "fn": "Dex.tradeUSD",
      "offset": [
        639,
        685
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "299": {
      "fn": "Dex.tradeUSD",
      "offset": [
        639,
        685
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "301": {
      "fn": "Dex.tradeUSD",
      "offset": [
        639,
        685
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "302": {
      "fn": "Dex.tradeUSD",
      "offset": [
        639,
        685
      ],
      "op": "DUP1",
      "path": "0"
    },
    "303": {
      "fn": "Dex.tradeUSD",
      "offset": [
        639,
        685
      ],
      "op": "DUP4",
      "path": "0"
    },
    "304": {
      "fn": "Dex.tradeUSD",
      "offset": [
        639,
        685
      ],
      "op": "SUB",
      "path": "0"
    },
    "305": {
      "fn": "Dex.tradeUSD",
      "offset": [
        639,
        685
      ],
      "op": "DUP2",
      "path": "0"
    },
    "306": {
      "fn": "Dex.tradeUSD",
      "offset": [
        639,
        685
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "308": {
      "fn": "Dex.tradeUSD",
      "offset": [
        639,
        685
      ],
      "op": "DUP8",
      "path": "0"
    },
    "309": {
      "fn": "Dex.tradeUSD",
      "offset": [
        639,
        685
      ],
      "op": "GAS",
      "path": "0"
    },
    "310": {
      "fn": "Dex.tradeUSD",
      "offset": [
        639,
        685
      ],
      "op": "CALL",
      "path": "0"
    },
    "311": {
      "fn": "Dex.tradeUSD",
      "offset": [
        639,
        685
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "312": {
      "fn": "Dex.tradeUSD",
      "offset": [
        639,
        685
      ],
      "op": "DUP1",
      "path": "0"
    },
    "313": {
      "fn": "Dex.tradeUSD",
      "offset": [
        639,
        685
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "314": {
      "fn": "Dex.tradeUSD",
      "offset": [
        639,
        685
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x147"
    },
    "317": {
      "fn": "Dex.tradeUSD",
      "offset": [
        639,
        685
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "318": {
      "fn": "Dex.tradeUSD",
      "offset": [
        639,
        685
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "319": {
      "fn": "Dex.tradeUSD",
      "offset": [
        639,
        685
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "321": {
      "fn": "Dex.tradeUSD",
      "offset": [
        639,
        685
      ],
      "op": "DUP1",
      "path": "0"
    },
    "322": {
      "fn": "Dex.tradeUSD",
      "offset": [
        639,
        685
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "323": {
      "fn": "Dex.tradeUSD",
      "offset": [
        639,
        685
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "324": {
      "fn": "Dex.tradeUSD",
      "offset": [
        639,
        685
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "326": {
      "fn": "Dex.tradeUSD",
      "offset": [
        639,
        685
      ],
      "op": "REVERT",
      "path": "0"
    },
    "327": {
      "fn": "Dex.tradeUSD",
      "offset": [
        639,
        685
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "328": {
      "fn": "Dex.tradeUSD",
      "offset": [
        639,
        685
      ],
      "op": "POP",
      "path": "0"
    },
    "329": {
      "fn": "Dex.tradeUSD",
      "offset": [
        639,
        685
      ],
      "op": "POP",
      "path": "0"
    },
    "330": {
      "fn": "Dex.tradeUSD",
      "offset": [
        639,
        685
      ],
      "op": "POP",
      "path": "0"
    },
    "331": {
      "fn": "Dex.tradeUSD",
      "offset": [
        639,
        685
      ],
      "op": "POP",
      "path": "0"
    },
    "332": {
      "fn": "Dex.tradeUSD",
      "offset": [
        639,
        685
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "334": {
      "fn": "Dex.tradeUSD",
      "offset": [
        639,
        685
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "335": {
      "fn": "Dex.tradeUSD",
      "offset": [
        639,
        685
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "336": {
      "fn": "Dex.tradeUSD",
      "offset": [
        639,
        685
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "338": {
      "fn": "Dex.tradeUSD",
      "offset": [
        639,
        685
      ],
      "op": "NOT",
      "path": "0"
    },
    "339": {
      "fn": "Dex.tradeUSD",
      "offset": [
        639,
        685
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "341": {
      "fn": "Dex.tradeUSD",
      "offset": [
        639,
        685
      ],
      "op": "DUP3",
      "path": "0"
    },
    "342": {
      "fn": "Dex.tradeUSD",
      "offset": [
        639,
        685
      ],
      "op": "ADD",
      "path": "0"
    },
    "343": {
      "fn": "Dex.tradeUSD",
      "offset": [
        639,
        685
      ],
      "op": "AND",
      "path": "0"
    },
    "344": {
      "fn": "Dex.tradeUSD",
      "offset": [
        639,
        685
      ],
      "op": "DUP3",
      "path": "0"
    },
    "345": {
      "fn": "Dex.tradeUSD",
      "offset": [
        639,
        685
      ],
      "op": "ADD",
      "path": "0"
    },
    "346": {
      "fn": "Dex.tradeUSD",
      "offset": [
        639,
        685
      ],
      "op": "DUP1",
      "path": "0"
    },
    "347": {
      "fn": "Dex.tradeUSD",
      "offset": [
        639,
        685
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "349": {
      "fn": "Dex.tradeUSD",
      "offset": [
        639,
        685
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "350": {
      "fn": "Dex.tradeUSD",
      "offset": [
        639,
        685
      ],
      "op": "POP",
      "path": "0"
    },
    "351": {
      "fn": "Dex.tradeUSD",
      "offset": [
        639,
        685
      ],
      "op": "DUP2",
      "path": "0"
    },
    "352": {
      "fn": "Dex.tradeUSD",
      "offset": [
        639,
        685
      ],
      "op": "ADD",
      "path": "0"
    },
    "353": {
      "fn": "Dex.tradeUSD",
      "offset": [
        639,
        685
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "354": {
      "fn": "Dex.tradeUSD",
      "offset": [
        639,
        685
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x16B"
    },
    "357": {
      "fn": "Dex.tradeUSD",
      "offset": [
        639,
        685
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "358": {
      "fn": "Dex.tradeUSD",
      "offset": [
        639,
        685
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "359": {
      "fn": "Dex.tradeUSD",
      "offset": [
        639,
        685
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1E7"
    },
    "362": {
      "fn": "Dex.tradeUSD",
      "jump": "i",
      "offset": [
        639,
        685
      ],
      "op": "JUMP",
      "path": "0"
    },
    "363": {
      "fn": "Dex.tradeUSD",
      "offset": [
        639,
        685
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "364": {
      "fn": "Dex.tradeUSD",
      "offset": [
        639,
        685
      ],
      "op": "POP",
      "path": "0"
    },
    "365": {
      "fn": "Dex.tradeUSD",
      "offset": [
        569,
        692
      ],
      "op": "POP",
      "path": "0"
    },
    "366": {
      "fn": "Dex.tradeUSD",
      "offset": [
        569,
        692
      ],
      "op": "POP",
      "path": "0"
    },
    "367": {
      "fn": "Dex.tradeUSD",
      "jump": "o",
      "offset": [
        569,
        692
      ],
      "op": "JUMP",
      "path": "0"
    },
    "368": {
      "fn": "Dex.tradeEth",
      "offset": [
        444,
        567
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "369": {
      "fn": "Dex.tradeEth",
      "offset": [
        514,
        517
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 1,
      "value": "0x0"
    },
    "371": {
      "fn": "Dex.tradeEth",
      "offset": [
        514,
        517
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "372": {
      "fn": "Dex.tradeEth",
      "offset": [
        514,
        560
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "374": {
      "fn": "Dex.tradeEth",
      "offset": [
        514,
        560
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "375": {
      "op": "PUSH4",
      "value": "0x23B872DD"
    },
    "380": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "382": {
      "op": "SHL"
    },
    "383": {
      "fn": "Dex.tradeEth",
      "offset": [
        514,
        560
      ],
      "op": "DUP2",
      "path": "0"
    },
    "384": {
      "fn": "Dex.tradeEth",
      "offset": [
        514,
        560
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "385": {
      "fn": "Dex.tradeEth",
      "offset": [
        539,
        543
      ],
      "op": "ADDRESS",
      "path": "0"
    },
    "386": {
      "fn": "Dex.tradeEth",
      "offset": [
        514,
        560
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "388": {
      "fn": "Dex.tradeEth",
      "offset": [
        514,
        560
      ],
      "op": "DUP3",
      "path": "0"
    },
    "389": {
      "fn": "Dex.tradeEth",
      "offset": [
        514,
        560
      ],
      "op": "ADD",
      "path": "0"
    },
    "390": {
      "op": "MSTORE"
    },
    "391": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "393": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "395": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "397": {
      "op": "SHL"
    },
    "398": {
      "op": "SUB"
    },
    "399": {
      "op": "DUP5"
    },
    "400": {
      "op": "DUP2"
    },
    "401": {
      "op": "AND"
    },
    "402": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "404": {
      "op": "DUP4"
    },
    "405": {
      "op": "ADD"
    },
    "406": {
      "op": "MSTORE"
    },
    "407": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "409": {
      "op": "DUP3"
    },
    "410": {
      "op": "ADD"
    },
    "411": {
      "op": "DUP5"
    },
    "412": {
      "op": "SWAP1"
    },
    "413": {
      "op": "MSTORE"
    },
    "414": {
      "fn": "Dex.tradeEth",
      "offset": [
        514,
        517
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "415": {
      "fn": "Dex.tradeEth",
      "offset": [
        514,
        517
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "416": {
      "fn": "Dex.tradeEth",
      "offset": [
        514,
        517
      ],
      "op": "AND",
      "path": "0"
    },
    "417": {
      "fn": "Dex.tradeEth",
      "offset": [
        514,
        517
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "418": {
      "fn": "Dex.tradeEth",
      "offset": [
        514,
        530
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x23B872DD"
    },
    "423": {
      "fn": "Dex.tradeEth",
      "offset": [
        514,
        530
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "424": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "426": {
      "op": "ADD"
    },
    "427": {
      "fn": "Dex.tradeEth",
      "offset": [
        514,
        560
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x128"
    },
    "430": {
      "op": "JUMP"
    },
    "431": {
      "op": "JUMPDEST"
    },
    "432": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "434": {
      "op": "DUP1"
    },
    "435": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "437": {
      "op": "DUP4"
    },
    "438": {
      "op": "DUP6"
    },
    "439": {
      "op": "SUB"
    },
    "440": {
      "op": "SLT"
    },
    "441": {
      "op": "ISZERO"
    },
    "442": {
      "op": "PUSH2",
      "value": "0x1C2"
    },
    "445": {
      "op": "JUMPI"
    },
    "446": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "448": {
      "op": "DUP1"
    },
    "449": {
      "op": "REVERT"
    },
    "450": {
      "op": "JUMPDEST"
    },
    "451": {
      "op": "DUP3"
    },
    "452": {
      "op": "CALLDATALOAD"
    },
    "453": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "455": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "457": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "459": {
      "op": "SHL"
    },
    "460": {
      "op": "SUB"
    },
    "461": {
      "op": "DUP2"
    },
    "462": {
      "op": "AND"
    },
    "463": {
      "op": "DUP2"
    },
    "464": {
      "op": "EQ"
    },
    "465": {
      "op": "PUSH2",
      "value": "0x1D9"
    },
    "468": {
      "op": "JUMPI"
    },
    "469": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "471": {
      "op": "DUP1"
    },
    "472": {
      "op": "REVERT"
    },
    "473": {
      "op": "JUMPDEST"
    },
    "474": {
      "op": "SWAP5"
    },
    "475": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "477": {
      "op": "SWAP4"
    },
    "478": {
      "op": "SWAP1"
    },
    "479": {
      "op": "SWAP4"
    },
    "480": {
      "op": "ADD"
    },
    "481": {
      "op": "CALLDATALOAD"
    },
    "482": {
      "op": "SWAP4"
    },
    "483": {
      "op": "POP"
    },
    "484": {
      "op": "POP"
    },
    "485": {
      "op": "POP"
    },
    "486": {
      "jump": "o",
      "op": "JUMP"
    },
    "487": {
      "op": "JUMPDEST"
    },
    "488": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "490": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "492": {
      "op": "DUP3"
    },
    "493": {
      "op": "DUP5"
    },
    "494": {
      "op": "SUB"
    },
    "495": {
      "op": "SLT"
    },
    "496": {
      "op": "ISZERO"
    },
    "497": {
      "op": "PUSH2",
      "value": "0x1F9"
    },
    "500": {
      "op": "JUMPI"
    },
    "501": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "503": {
      "op": "DUP1"
    },
    "504": {
      "op": "REVERT"
    },
    "505": {
      "op": "JUMPDEST"
    },
    "506": {
      "op": "DUP2"
    },
    "507": {
      "op": "MLOAD"
    },
    "508": {
      "op": "DUP1"
    },
    "509": {
      "op": "ISZERO"
    },
    "510": {
      "op": "ISZERO"
    },
    "511": {
      "op": "DUP2"
    },
    "512": {
      "op": "EQ"
    },
    "513": {
      "op": "PUSH2",
      "value": "0x209"
    },
    "516": {
      "op": "JUMPI"
    },
    "517": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "519": {
      "op": "DUP1"
    },
    "520": {
      "op": "REVERT"
    },
    "521": {
      "op": "JUMPDEST"
    },
    "522": {
      "op": "SWAP4"
    },
    "523": {
      "op": "SWAP3"
    },
    "524": {
      "op": "POP"
    },
    "525": {
      "op": "POP"
    },
    "526": {
      "op": "POP"
    },
    "527": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "990db0239bd41263064ac7e318e6fa78fec4f644",
  "source": "pragma solidity ^0.8.0;\n\nimport \"./openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"./openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"./eth.sol\";\nimport \"./usd.sol\";\n\ncontract Dex{\n etherToken public eth;\n usdToken public usd;\n\nconstructor(address payable ethtoken,address payable usdtoken) public { \n    eth=etherToken(ethtoken);\n    usd=usdToken(usdtoken);\n    eth.mint(address(this),800);\n    usd.mint(address(this),3200);\n\n}\n\nfunction tradeEth(address account, uint256 amount) external {\n        eth.transferFrom(address(this),account,amount);\n    }\n\nfunction tradeUSD(address account, uint256 amount) external {\n        usd.transferFrom(address(this),account,amount);\n    }\n\n\nreceive() external payable {}\n}",
  "sourceMap": "181:545:0:-:0;;;242:200;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;319:3;:24;;-1:-1:-1;;;;;319:24:0;;;-1:-1:-1;;;;;;319:24:0;;;;;;;;-1:-1:-1;349:22:0;;;;;;;;;;;;377:27;;-1:-1:-1;;;377:27:0;;394:4;377:27;;;718:51:9;400:3:0;785:18:9;;;778:34;377:8:0;;691:18:9;;377:27:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;410:3:0;;:28;;-1:-1:-1;;;410:28:0;;427:4;410:28;;;718:51:9;433:4:0;785:18:9;;;778:34;-1:-1:-1;;;;;410:3:0;;;;-1:-1:-1;410:8:0;;-1:-1:-1;691:18:9;;410:28:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;242:200;;181:545;;14:185:9;101:13;;-1:-1:-1;;;;;143:31:9;;133:42;;123:70;;189:1;186;179:12;123:70;14:185;;;:::o;204:325::-;299:6;307;360:2;348:9;339:7;335:23;331:32;328:52;;;376:1;373;366:12;328:52;399:48;437:9;399:48;:::i;:::-;389:58;;466:57;519:2;508:9;504:18;466:57;:::i;:::-;456:67;;204:325;;;;;:::o;823:285::-;181:545:0;;;;;;",
  "sourcePath": "contracts/dex.sol",
  "type": "contract"
}