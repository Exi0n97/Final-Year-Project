{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint256[]",
          "name": "array",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "element",
          "type": "uint256"
        }
      ],
      "name": "findUpperBound",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "145": "contracts/openzeppelin/contracts/utils/Arrays.sol",
    "16": "contracts/openzeppelin/contracts/mocks/ArraysImpl.sol",
    "166": "contracts/openzeppelin/contracts/utils/math/Math.sol"
  },
  "ast": {
    "absolutePath": "contracts/openzeppelin/contracts/mocks/ArraysImpl.sol",
    "exportedSymbols": {
      "Arrays": [
        18194
      ],
      "ArraysImpl": [
        2946
      ],
      "Math": [
        20033
      ]
    },
    "id": 2947,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2913,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:16"
      },
      {
        "absolutePath": "contracts/openzeppelin/contracts/utils/Arrays.sol",
        "file": "../utils/Arrays.sol",
        "id": 2914,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2947,
        "sourceUnit": 18195,
        "src": "58:29:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "ArraysImpl",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 2946,
        "linearizedBaseContracts": [
          2946
        ],
        "name": "ArraysImpl",
        "nameLocation": "98:10:16",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 2918,
            "libraryName": {
              "id": 2915,
              "name": "Arrays",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 18194,
              "src": "121:6:16"
            },
            "nodeType": "UsingForDirective",
            "src": "115:27:16",
            "typeName": {
              "baseType": {
                "id": 2916,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "132:7:16",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "id": 2917,
              "nodeType": "ArrayTypeName",
              "src": "132:9:16",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                "typeString": "uint256[]"
              }
            }
          },
          {
            "constant": false,
            "id": 2921,
            "mutability": "mutable",
            "name": "_array",
            "nameLocation": "166:6:16",
            "nodeType": "VariableDeclaration",
            "scope": 2946,
            "src": "148:24:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
              "typeString": "uint256[]"
            },
            "typeName": {
              "baseType": {
                "id": 2919,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "148:7:16",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "id": 2920,
              "nodeType": "ArrayTypeName",
              "src": "148:9:16",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                "typeString": "uint256[]"
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 2931,
              "nodeType": "Block",
              "src": "215:31:16",
              "statements": [
                {
                  "expression": {
                    "id": 2929,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2927,
                      "name": "_array",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2921,
                      "src": "225:6:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                        "typeString": "uint256[] storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2928,
                      "name": "array",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2924,
                      "src": "234:5:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[] memory"
                      }
                    },
                    "src": "225:14:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                      "typeString": "uint256[] storage ref"
                    }
                  },
                  "id": 2930,
                  "nodeType": "ExpressionStatement",
                  "src": "225:14:16"
                }
              ]
            },
            "id": 2932,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2925,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2924,
                  "mutability": "mutable",
                  "name": "array",
                  "nameLocation": "208:5:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 2932,
                  "src": "191:22:16",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2922,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "191:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2923,
                    "nodeType": "ArrayTypeName",
                    "src": "191:9:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "190:24:16"
            },
            "returnParameters": {
              "id": 2926,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "215:0:16"
            },
            "scope": 2946,
            "src": "179:67:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2944,
              "nodeType": "Block",
              "src": "325:54:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2941,
                        "name": "element",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2934,
                        "src": "364:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 2939,
                        "name": "_array",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2921,
                        "src": "342:6:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                          "typeString": "uint256[] storage ref"
                        }
                      },
                      "id": 2940,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "findUpperBound",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 18193,
                      "src": "342:21:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$_t_uint256_$bound_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
                        "typeString": "function (uint256[] storage pointer,uint256) view returns (uint256)"
                      }
                    },
                    "id": 2942,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "342:30:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2938,
                  "id": 2943,
                  "nodeType": "Return",
                  "src": "335:37:16"
                }
              ]
            },
            "functionSelector": "33e3a58a",
            "id": 2945,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "findUpperBound",
            "nameLocation": "261:14:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2935,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2934,
                  "mutability": "mutable",
                  "name": "element",
                  "nameLocation": "284:7:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 2945,
                  "src": "276:15:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2933,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "276:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "275:17:16"
            },
            "returnParameters": {
              "id": 2938,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2937,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2945,
                  "src": "316:7:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2936,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "316:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "315:9:16"
            },
            "scope": 2946,
            "src": "252:127:16",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 2947,
        "src": "89:292:16",
        "usedErrors": []
      }
    ],
    "src": "33:349:16"
  },
  "bytecode": "608060405234801561001057600080fd5b506040516103fb3803806103fb83398101604081905261002f916100bf565b8051610042906000906020840190610049565b505061017c565b828054828255906000526020600020908101928215610084579160200282015b82811115610084578251825591602001919060010190610069565b50610090929150610094565b5090565b5b808211156100905760008155600101610095565b634e487b7160e01b600052604160045260246000fd5b600060208083850312156100d257600080fd5b82516001600160401b03808211156100e957600080fd5b818501915085601f8301126100fd57600080fd5b81518181111561010f5761010f6100a9565b8060051b604051601f19603f83011681018181108582111715610134576101346100a9565b60405291825284820192508381018501918883111561015257600080fd5b938501935b8285101561017057845184529385019392850192610157565b98975050505050505050565b6102708061018b6000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c806333e3a58a14610030575b600080fd5b61004361003e366004610188565b610055565b60405190815260200160405180910390f35b60006100618183610067565b92915050565b815460009061007857506000610061565b82546000905b808210156100d4576000610092838361012a565b9050848682815481106100a7576100a76101a1565b906000526020600020015411156100c0578091506100ce565b6100cb8160016101cd565b92505b5061007e565b600082118015610109575083856100ec6001856101e5565b815481106100fc576100fc6101a1565b9060005260206000200154145b15610122576101196001836101e5565b92505050610061565b509392505050565b600060026101388184610212565b610143600286610212565b61014d91906101cd565b6101579190610226565b610162600284610226565b61016d600286610226565b61017791906101cd565b61018191906101cd565b9392505050565b60006020828403121561019a57600080fd5b5035919050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600082198211156101e0576101e06101b7565b500190565b6000828210156101f7576101f76101b7565b500390565b634e487b7160e01b600052601260045260246000fd5b600082610221576102216101fc565b500690565b600082610235576102356101fc565b50049056fea2646970667358221220cd41b3be77b66b020105216fbed0c41155ffe6b8083dcb806723c97fdd5b6d7564736f6c634300080c0033",
  "bytecodeSha1": "6715013fe4bd8acfb9489936de7d7c73b60e75ab",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.12+commit.f00d7308"
  },
  "contractName": "ArraysImpl",
  "coverageMap": {
    "branches": {
      "145": {
        "Arrays.findUpperBound": {
          "7": [
            1106,
            1126,
            false
          ],
          "8": [
            1350,
            1357,
            false
          ],
          "9": [
            1361,
            1386,
            false
          ]
        }
      },
      "16": {},
      "166": {}
    },
    "statements": {
      "145": {
        "Arrays.findUpperBound": {
          "1": [
            727,
            735
          ],
          "2": [
            1146,
            1156
          ],
          "3": [
            1195,
            1208
          ],
          "4": [
            1402,
            1416
          ],
          "5": [
            1447,
            1457
          ]
        }
      },
      "16": {
        "ArraysImpl.findUpperBound": {
          "0": [
            335,
            372
          ]
        }
      },
      "166": {
        "Math.average": {
          "6": [
            744,
            796
          ]
        }
      }
    }
  },
  "dependencies": [
    "Arrays",
    "Math"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b506004361061002b5760003560e01c806333e3a58a14610030575b600080fd5b61004361003e366004610188565b610055565b60405190815260200160405180910390f35b60006100618183610067565b92915050565b815460009061007857506000610061565b82546000905b808210156100d4576000610092838361012a565b9050848682815481106100a7576100a76101a1565b906000526020600020015411156100c0578091506100ce565b6100cb8160016101cd565b92505b5061007e565b600082118015610109575083856100ec6001856101e5565b815481106100fc576100fc6101a1565b9060005260206000200154145b15610122576101196001836101e5565b92505050610061565b509392505050565b600060026101388184610212565b610143600286610212565b61014d91906101cd565b6101579190610226565b610162600284610226565b61016d600286610226565b61017791906101cd565b61018191906101cd565b9392505050565b60006020828403121561019a57600080fd5b5035919050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600082198211156101e0576101e06101b7565b500190565b6000828210156101f7576101f76101b7565b500390565b634e487b7160e01b600052601260045260246000fd5b600082610221576102216101fc565b500690565b600082610235576102356101fc565b50049056fea2646970667358221220cd41b3be77b66b020105216fbed0c41155ffe6b8083dcb806723c97fdd5b6d7564736f6c634300080c0033",
  "deployedSourceMap": "89:292:16:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;252:127;;;;;;:::i;:::-;;:::i;:::-;;;345:25:174;;;333:2;318:18;252:127:16;;;;;;;;316:7;342:30;316:7;364;342:21;:30::i;:::-;335:37;252:127;-1:-1:-1;;252:127:16:o;582:892:145:-;694:12;;671:7;;690:56;;-1:-1:-1;734:1:145;727:8;;690:56;796:12;;756:11;;819:414;832:4;826:3;:10;819:414;;;852:11;866:23;879:3;884:4;866:12;:23::i;:::-;852:37;;1119:7;1106:5;1112:3;1106:10;;;;;;;;:::i;:::-;;;;;;;;;:20;1102:121;;;1153:3;1146:10;;1102:121;;;1201:7;:3;1207:1;1201:7;:::i;:::-;1195:13;;1102:121;838:395;819:414;;;1356:1;1350:3;:7;:36;;;;-1:-1:-1;1379:7:145;1361:5;1367:7;1373:1;1367:3;:7;:::i;:::-;1361:14;;;;;;;;:::i;:::-;;;;;;;;;:25;1350:36;1346:122;;;1409:7;1415:1;1409:3;:7;:::i;:::-;1402:14;;;;;;1346:122;-1:-1:-1;1454:3:145;582:892;-1:-1:-1;;;582:892:145:o;608:195:166:-;670:7;794:1;784:5;794:1;784;:5;:::i;:::-;774;778:1;774;:5;:::i;:::-;773:17;;;;:::i;:::-;772:23;;;;:::i;:::-;762:5;766:1;762;:5;:::i;:::-;752;756:1;752;:5;:::i;:::-;751:17;;;;:::i;:::-;:45;;;;:::i;:::-;744:52;608:195;-1:-1:-1;;;608:195:166:o;14:180:174:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;165:23:174;;14:180;-1:-1:-1;14:180:174:o;381:127::-;442:10;437:3;433:20;430:1;423:31;473:4;470:1;463:15;497:4;494:1;487:15;513:127;574:10;569:3;565:20;562:1;555:31;605:4;602:1;595:15;629:4;626:1;619:15;645:128;685:3;716:1;712:6;709:1;706:13;703:39;;;722:18;;:::i;:::-;-1:-1:-1;758:9:174;;645:128::o;778:125::-;818:4;846:1;843;840:8;837:34;;;851:18;;:::i;:::-;-1:-1:-1;888:9:174;;778:125::o;908:127::-;969:10;964:3;960:20;957:1;950:31;1000:4;997:1;990:15;1024:4;1021:1;1014:15;1040:112;1072:1;1098;1088:35;;1103:18;;:::i;:::-;-1:-1:-1;1137:9:174;;1040:112::o;1157:120::-;1197:1;1223;1213:35;;1228:18;;:::i;:::-;-1:-1:-1;1262:9:174;;1157:120::o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "offset": [
    89,
    381
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x33E3A58A EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x43 PUSH2 0x3E CALLDATASIZE PUSH1 0x4 PUSH2 0x188 JUMP JUMPDEST PUSH2 0x55 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH2 0x61 DUP2 DUP4 PUSH2 0x67 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP2 SLOAD PUSH1 0x0 SWAP1 PUSH2 0x78 JUMPI POP PUSH1 0x0 PUSH2 0x61 JUMP JUMPDEST DUP3 SLOAD PUSH1 0x0 SWAP1 JUMPDEST DUP1 DUP3 LT ISZERO PUSH2 0xD4 JUMPI PUSH1 0x0 PUSH2 0x92 DUP4 DUP4 PUSH2 0x12A JUMP JUMPDEST SWAP1 POP DUP5 DUP7 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xA7 JUMPI PUSH2 0xA7 PUSH2 0x1A1 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD GT ISZERO PUSH2 0xC0 JUMPI DUP1 SWAP2 POP PUSH2 0xCE JUMP JUMPDEST PUSH2 0xCB DUP2 PUSH1 0x1 PUSH2 0x1CD JUMP JUMPDEST SWAP3 POP JUMPDEST POP PUSH2 0x7E JUMP JUMPDEST PUSH1 0x0 DUP3 GT DUP1 ISZERO PUSH2 0x109 JUMPI POP DUP4 DUP6 PUSH2 0xEC PUSH1 0x1 DUP6 PUSH2 0x1E5 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0xFC JUMPI PUSH2 0xFC PUSH2 0x1A1 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD EQ JUMPDEST ISZERO PUSH2 0x122 JUMPI PUSH2 0x119 PUSH1 0x1 DUP4 PUSH2 0x1E5 JUMP JUMPDEST SWAP3 POP POP POP PUSH2 0x61 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH2 0x138 DUP2 DUP5 PUSH2 0x212 JUMP JUMPDEST PUSH2 0x143 PUSH1 0x2 DUP7 PUSH2 0x212 JUMP JUMPDEST PUSH2 0x14D SWAP2 SWAP1 PUSH2 0x1CD JUMP JUMPDEST PUSH2 0x157 SWAP2 SWAP1 PUSH2 0x226 JUMP JUMPDEST PUSH2 0x162 PUSH1 0x2 DUP5 PUSH2 0x226 JUMP JUMPDEST PUSH2 0x16D PUSH1 0x2 DUP7 PUSH2 0x226 JUMP JUMPDEST PUSH2 0x177 SWAP2 SWAP1 PUSH2 0x1CD JUMP JUMPDEST PUSH2 0x181 SWAP2 SWAP1 PUSH2 0x1CD JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x19A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x1E0 JUMPI PUSH2 0x1E0 PUSH2 0x1B7 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x1F7 JUMPI PUSH2 0x1F7 PUSH2 0x1B7 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x221 JUMPI PUSH2 0x221 PUSH2 0x1FC JUMP JUMPDEST POP MOD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x235 JUMPI PUSH2 0x235 PUSH2 0x1FC JUMP JUMPDEST POP DIV SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCD COINBASE 0xB3 0xBE PUSH24 0xB66B020105216FBED0C41155FFE6B8083DCB806723C97FDD JUMPDEST PUSH14 0x7564736F6C634300080C00330000 ",
  "pcMap": {
    "0": {
      "offset": [
        89,
        381
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        89,
        381
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        89,
        381
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "5": {
      "fn": null,
      "offset": [
        89,
        381
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "6": {
      "fn": null,
      "offset": [
        89,
        381
      ],
      "op": "DUP1",
      "path": "16"
    },
    "7": {
      "fn": null,
      "offset": [
        89,
        381
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "8": {
      "fn": null,
      "offset": [
        89,
        381
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        89,
        381
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "12": {
      "fn": null,
      "offset": [
        89,
        381
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        89,
        381
      ],
      "op": "DUP1",
      "path": "16"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        89,
        381
      ],
      "op": "REVERT",
      "path": "16"
    },
    "16": {
      "fn": null,
      "offset": [
        89,
        381
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "17": {
      "fn": null,
      "offset": [
        89,
        381
      ],
      "op": "POP",
      "path": "16"
    },
    "18": {
      "fn": null,
      "offset": [
        89,
        381
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        89,
        381
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "21": {
      "fn": null,
      "offset": [
        89,
        381
      ],
      "op": "LT",
      "path": "16"
    },
    "22": {
      "fn": null,
      "offset": [
        89,
        381
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2B"
    },
    "25": {
      "fn": null,
      "offset": [
        89,
        381
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "26": {
      "fn": null,
      "offset": [
        89,
        381
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        89,
        381
      ],
      "op": "CALLDATALOAD",
      "path": "16"
    },
    "29": {
      "fn": null,
      "offset": [
        89,
        381
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        89,
        381
      ],
      "op": "SHR",
      "path": "16"
    },
    "32": {
      "fn": null,
      "offset": [
        89,
        381
      ],
      "op": "DUP1",
      "path": "16"
    },
    "33": {
      "fn": null,
      "offset": [
        89,
        381
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x33E3A58A"
    },
    "38": {
      "fn": null,
      "offset": [
        89,
        381
      ],
      "op": "EQ",
      "path": "16"
    },
    "39": {
      "fn": null,
      "offset": [
        89,
        381
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x30"
    },
    "42": {
      "fn": null,
      "offset": [
        89,
        381
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "43": {
      "fn": null,
      "offset": [
        89,
        381
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "44": {
      "fn": null,
      "offset": [
        89,
        381
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "46": {
      "fn": null,
      "offset": [
        89,
        381
      ],
      "op": "DUP1",
      "path": "16"
    },
    "47": {
      "first_revert": true,
      "fn": null,
      "offset": [
        89,
        381
      ],
      "op": "REVERT",
      "path": "16"
    },
    "48": {
      "fn": "ArraysImpl.findUpperBound",
      "offset": [
        252,
        379
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "49": {
      "fn": "ArraysImpl.findUpperBound",
      "offset": [
        252,
        379
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x43"
    },
    "52": {
      "fn": "ArraysImpl.findUpperBound",
      "offset": [
        252,
        379
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3E"
    },
    "55": {
      "fn": "ArraysImpl.findUpperBound",
      "offset": [
        252,
        379
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "56": {
      "fn": "ArraysImpl.findUpperBound",
      "offset": [
        252,
        379
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "58": {
      "fn": "ArraysImpl.findUpperBound",
      "offset": [
        252,
        379
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x188"
    },
    "61": {
      "fn": "ArraysImpl.findUpperBound",
      "jump": "i",
      "offset": [
        252,
        379
      ],
      "op": "JUMP",
      "path": "16"
    },
    "62": {
      "fn": "ArraysImpl.findUpperBound",
      "offset": [
        252,
        379
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "63": {
      "fn": "ArraysImpl.findUpperBound",
      "offset": [
        252,
        379
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x55"
    },
    "66": {
      "fn": "ArraysImpl.findUpperBound",
      "jump": "i",
      "offset": [
        252,
        379
      ],
      "op": "JUMP",
      "path": "16"
    },
    "67": {
      "fn": "ArraysImpl.findUpperBound",
      "offset": [
        252,
        379
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "68": {
      "fn": "ArraysImpl.findUpperBound",
      "offset": [
        252,
        379
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "70": {
      "fn": "ArraysImpl.findUpperBound",
      "offset": [
        252,
        379
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "71": {
      "op": "SWAP1"
    },
    "72": {
      "op": "DUP2"
    },
    "73": {
      "op": "MSTORE"
    },
    "74": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "76": {
      "op": "ADD"
    },
    "77": {
      "fn": "ArraysImpl.findUpperBound",
      "offset": [
        252,
        379
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "79": {
      "fn": "ArraysImpl.findUpperBound",
      "offset": [
        252,
        379
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "80": {
      "fn": "ArraysImpl.findUpperBound",
      "offset": [
        252,
        379
      ],
      "op": "DUP1",
      "path": "16"
    },
    "81": {
      "fn": "ArraysImpl.findUpperBound",
      "offset": [
        252,
        379
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "82": {
      "fn": "ArraysImpl.findUpperBound",
      "offset": [
        252,
        379
      ],
      "op": "SUB",
      "path": "16"
    },
    "83": {
      "fn": "ArraysImpl.findUpperBound",
      "offset": [
        252,
        379
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "84": {
      "fn": "ArraysImpl.findUpperBound",
      "offset": [
        252,
        379
      ],
      "op": "RETURN",
      "path": "16"
    },
    "85": {
      "fn": "ArraysImpl.findUpperBound",
      "offset": [
        252,
        379
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "86": {
      "fn": "ArraysImpl.findUpperBound",
      "offset": [
        316,
        323
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "88": {
      "fn": "ArraysImpl.findUpperBound",
      "offset": [
        342,
        372
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 0,
      "value": "0x61"
    },
    "91": {
      "fn": "ArraysImpl.findUpperBound",
      "offset": [
        316,
        323
      ],
      "op": "DUP2",
      "path": "16"
    },
    "92": {
      "fn": "ArraysImpl.findUpperBound",
      "offset": [
        364,
        371
      ],
      "op": "DUP4",
      "path": "16"
    },
    "93": {
      "fn": "ArraysImpl.findUpperBound",
      "offset": [
        342,
        363
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x67"
    },
    "96": {
      "fn": "ArraysImpl.findUpperBound",
      "jump": "i",
      "offset": [
        342,
        372
      ],
      "op": "JUMP",
      "path": "16"
    },
    "97": {
      "fn": "ArraysImpl.findUpperBound",
      "offset": [
        342,
        372
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "98": {
      "fn": "ArraysImpl.findUpperBound",
      "offset": [
        335,
        372
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "99": {
      "fn": "ArraysImpl.findUpperBound",
      "offset": [
        252,
        379
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "100": {
      "op": "POP"
    },
    "101": {
      "op": "POP"
    },
    "102": {
      "fn": "ArraysImpl.findUpperBound",
      "jump": "o",
      "offset": [
        252,
        379
      ],
      "op": "JUMP",
      "path": "16"
    },
    "103": {
      "fn": "Arrays.findUpperBound",
      "offset": [
        582,
        1474
      ],
      "op": "JUMPDEST",
      "path": "145"
    },
    "104": {
      "fn": "Arrays.findUpperBound",
      "offset": [
        694,
        706
      ],
      "op": "DUP2",
      "path": "145"
    },
    "105": {
      "fn": "Arrays.findUpperBound",
      "offset": [
        694,
        706
      ],
      "op": "SLOAD",
      "path": "145"
    },
    "106": {
      "fn": "Arrays.findUpperBound",
      "offset": [
        671,
        678
      ],
      "op": "PUSH1",
      "path": "145",
      "value": "0x0"
    },
    "108": {
      "fn": "Arrays.findUpperBound",
      "offset": [
        671,
        678
      ],
      "op": "SWAP1",
      "path": "145"
    },
    "109": {
      "fn": "Arrays.findUpperBound",
      "offset": [
        690,
        746
      ],
      "op": "PUSH2",
      "path": "145",
      "value": "0x78"
    },
    "112": {
      "fn": "Arrays.findUpperBound",
      "offset": [
        690,
        746
      ],
      "op": "JUMPI",
      "path": "145"
    },
    "113": {
      "op": "POP"
    },
    "114": {
      "fn": "Arrays.findUpperBound",
      "offset": [
        734,
        735
      ],
      "op": "PUSH1",
      "path": "145",
      "statement": 1,
      "value": "0x0"
    },
    "116": {
      "fn": "Arrays.findUpperBound",
      "offset": [
        727,
        735
      ],
      "op": "PUSH2",
      "path": "145",
      "value": "0x61"
    },
    "119": {
      "fn": "Arrays.findUpperBound",
      "offset": [
        727,
        735
      ],
      "op": "JUMP",
      "path": "145"
    },
    "120": {
      "fn": "Arrays.findUpperBound",
      "offset": [
        690,
        746
      ],
      "op": "JUMPDEST",
      "path": "145"
    },
    "121": {
      "fn": "Arrays.findUpperBound",
      "offset": [
        796,
        808
      ],
      "op": "DUP3",
      "path": "145"
    },
    "122": {
      "fn": "Arrays.findUpperBound",
      "offset": [
        796,
        808
      ],
      "op": "SLOAD",
      "path": "145"
    },
    "123": {
      "fn": "Arrays.findUpperBound",
      "offset": [
        756,
        767
      ],
      "op": "PUSH1",
      "path": "145",
      "value": "0x0"
    },
    "125": {
      "fn": "Arrays.findUpperBound",
      "offset": [
        756,
        767
      ],
      "op": "SWAP1",
      "path": "145"
    },
    "126": {
      "fn": "Arrays.findUpperBound",
      "offset": [
        819,
        1233
      ],
      "op": "JUMPDEST",
      "path": "145"
    },
    "127": {
      "fn": "Arrays.findUpperBound",
      "offset": [
        832,
        836
      ],
      "op": "DUP1",
      "path": "145"
    },
    "128": {
      "fn": "Arrays.findUpperBound",
      "offset": [
        826,
        829
      ],
      "op": "DUP3",
      "path": "145"
    },
    "129": {
      "fn": "Arrays.findUpperBound",
      "offset": [
        826,
        836
      ],
      "op": "LT",
      "path": "145"
    },
    "130": {
      "fn": "Arrays.findUpperBound",
      "offset": [
        819,
        1233
      ],
      "op": "ISZERO",
      "path": "145"
    },
    "131": {
      "fn": "Arrays.findUpperBound",
      "offset": [
        819,
        1233
      ],
      "op": "PUSH2",
      "path": "145",
      "value": "0xD4"
    },
    "134": {
      "fn": "Arrays.findUpperBound",
      "offset": [
        819,
        1233
      ],
      "op": "JUMPI",
      "path": "145"
    },
    "135": {
      "fn": "Arrays.findUpperBound",
      "offset": [
        852,
        863
      ],
      "op": "PUSH1",
      "path": "145",
      "value": "0x0"
    },
    "137": {
      "fn": "Arrays.findUpperBound",
      "offset": [
        866,
        889
      ],
      "op": "PUSH2",
      "path": "145",
      "value": "0x92"
    },
    "140": {
      "fn": "Arrays.findUpperBound",
      "offset": [
        879,
        882
      ],
      "op": "DUP4",
      "path": "145"
    },
    "141": {
      "fn": "Arrays.findUpperBound",
      "offset": [
        884,
        888
      ],
      "op": "DUP4",
      "path": "145"
    },
    "142": {
      "fn": "Arrays.findUpperBound",
      "offset": [
        866,
        878
      ],
      "op": "PUSH2",
      "path": "145",
      "value": "0x12A"
    },
    "145": {
      "fn": "Arrays.findUpperBound",
      "jump": "i",
      "offset": [
        866,
        889
      ],
      "op": "JUMP",
      "path": "145"
    },
    "146": {
      "fn": "Arrays.findUpperBound",
      "offset": [
        866,
        889
      ],
      "op": "JUMPDEST",
      "path": "145"
    },
    "147": {
      "fn": "Arrays.findUpperBound",
      "offset": [
        852,
        889
      ],
      "op": "SWAP1",
      "path": "145"
    },
    "148": {
      "fn": "Arrays.findUpperBound",
      "offset": [
        852,
        889
      ],
      "op": "POP",
      "path": "145"
    },
    "149": {
      "fn": "Arrays.findUpperBound",
      "offset": [
        1119,
        1126
      ],
      "op": "DUP5",
      "path": "145"
    },
    "150": {
      "fn": "Arrays.findUpperBound",
      "offset": [
        1106,
        1111
      ],
      "op": "DUP7",
      "path": "145"
    },
    "151": {
      "fn": "Arrays.findUpperBound",
      "offset": [
        1112,
        1115
      ],
      "op": "DUP3",
      "path": "145"
    },
    "152": {
      "fn": "Arrays.findUpperBound",
      "offset": [
        1106,
        1116
      ],
      "op": "DUP2",
      "path": "145"
    },
    "153": {
      "fn": "Arrays.findUpperBound",
      "offset": [
        1106,
        1116
      ],
      "op": "SLOAD",
      "path": "145"
    },
    "154": {
      "fn": "Arrays.findUpperBound",
      "offset": [
        1106,
        1116
      ],
      "op": "DUP2",
      "path": "145"
    },
    "155": {
      "fn": "Arrays.findUpperBound",
      "offset": [
        1106,
        1116
      ],
      "op": "LT",
      "path": "145"
    },
    "156": {
      "fn": "Arrays.findUpperBound",
      "offset": [
        1106,
        1116
      ],
      "op": "PUSH2",
      "path": "145",
      "value": "0xA7"
    },
    "159": {
      "fn": "Arrays.findUpperBound",
      "offset": [
        1106,
        1116
      ],
      "op": "JUMPI",
      "path": "145"
    },
    "160": {
      "fn": "Arrays.findUpperBound",
      "offset": [
        1106,
        1116
      ],
      "op": "PUSH2",
      "path": "145",
      "value": "0xA7"
    },
    "163": {
      "fn": "Arrays.findUpperBound",
      "offset": [
        1106,
        1116
      ],
      "op": "PUSH2",
      "path": "145",
      "value": "0x1A1"
    },
    "166": {
      "fn": "Arrays.findUpperBound",
      "jump": "i",
      "offset": [
        1106,
        1116
      ],
      "op": "JUMP",
      "path": "145"
    },
    "167": {
      "fn": "Arrays.findUpperBound",
      "offset": [
        1106,
        1116
      ],
      "op": "JUMPDEST",
      "path": "145"
    },
    "168": {
      "fn": "Arrays.findUpperBound",
      "offset": [
        1106,
        1116
      ],
      "op": "SWAP1",
      "path": "145"
    },
    "169": {
      "fn": "Arrays.findUpperBound",
      "offset": [
        1106,
        1116
      ],
      "op": "PUSH1",
      "path": "145",
      "value": "0x0"
    },
    "171": {
      "fn": "Arrays.findUpperBound",
      "offset": [
        1106,
        1116
      ],
      "op": "MSTORE",
      "path": "145"
    },
    "172": {
      "fn": "Arrays.findUpperBound",
      "offset": [
        1106,
        1116
      ],
      "op": "PUSH1",
      "path": "145",
      "value": "0x20"
    },
    "174": {
      "fn": "Arrays.findUpperBound",
      "offset": [
        1106,
        1116
      ],
      "op": "PUSH1",
      "path": "145",
      "value": "0x0"
    },
    "176": {
      "fn": "Arrays.findUpperBound",
      "offset": [
        1106,
        1116
      ],
      "op": "KECCAK256",
      "path": "145"
    },
    "177": {
      "fn": "Arrays.findUpperBound",
      "offset": [
        1106,
        1116
      ],
      "op": "ADD",
      "path": "145"
    },
    "178": {
      "fn": "Arrays.findUpperBound",
      "offset": [
        1106,
        1116
      ],
      "op": "SLOAD",
      "path": "145"
    },
    "179": {
      "branch": 7,
      "fn": "Arrays.findUpperBound",
      "offset": [
        1106,
        1126
      ],
      "op": "GT",
      "path": "145"
    },
    "180": {
      "fn": "Arrays.findUpperBound",
      "offset": [
        1102,
        1223
      ],
      "op": "ISZERO",
      "path": "145"
    },
    "181": {
      "fn": "Arrays.findUpperBound",
      "offset": [
        1102,
        1223
      ],
      "op": "PUSH2",
      "path": "145",
      "value": "0xC0"
    },
    "184": {
      "branch": 7,
      "fn": "Arrays.findUpperBound",
      "offset": [
        1102,
        1223
      ],
      "op": "JUMPI",
      "path": "145"
    },
    "185": {
      "fn": "Arrays.findUpperBound",
      "offset": [
        1153,
        1156
      ],
      "op": "DUP1",
      "path": "145",
      "statement": 2
    },
    "186": {
      "fn": "Arrays.findUpperBound",
      "offset": [
        1146,
        1156
      ],
      "op": "SWAP2",
      "path": "145"
    },
    "187": {
      "fn": "Arrays.findUpperBound",
      "offset": [
        1146,
        1156
      ],
      "op": "POP",
      "path": "145"
    },
    "188": {
      "fn": "Arrays.findUpperBound",
      "offset": [
        1102,
        1223
      ],
      "op": "PUSH2",
      "path": "145",
      "value": "0xCE"
    },
    "191": {
      "fn": "Arrays.findUpperBound",
      "offset": [
        1102,
        1223
      ],
      "op": "JUMP",
      "path": "145"
    },
    "192": {
      "fn": "Arrays.findUpperBound",
      "offset": [
        1102,
        1223
      ],
      "op": "JUMPDEST",
      "path": "145"
    },
    "193": {
      "fn": "Arrays.findUpperBound",
      "offset": [
        1201,
        1208
      ],
      "op": "PUSH2",
      "path": "145",
      "statement": 3,
      "value": "0xCB"
    },
    "196": {
      "fn": "Arrays.findUpperBound",
      "offset": [
        1201,
        1204
      ],
      "op": "DUP2",
      "path": "145"
    },
    "197": {
      "fn": "Arrays.findUpperBound",
      "offset": [
        1207,
        1208
      ],
      "op": "PUSH1",
      "path": "145",
      "value": "0x1"
    },
    "199": {
      "fn": "Arrays.findUpperBound",
      "offset": [
        1201,
        1208
      ],
      "op": "PUSH2",
      "path": "145",
      "value": "0x1CD"
    },
    "202": {
      "fn": "Arrays.findUpperBound",
      "jump": "i",
      "offset": [
        1201,
        1208
      ],
      "op": "JUMP",
      "path": "145"
    },
    "203": {
      "fn": "Arrays.findUpperBound",
      "offset": [
        1201,
        1208
      ],
      "op": "JUMPDEST",
      "path": "145"
    },
    "204": {
      "fn": "Arrays.findUpperBound",
      "offset": [
        1195,
        1208
      ],
      "op": "SWAP3",
      "path": "145"
    },
    "205": {
      "fn": "Arrays.findUpperBound",
      "offset": [
        1195,
        1208
      ],
      "op": "POP",
      "path": "145"
    },
    "206": {
      "fn": "Arrays.findUpperBound",
      "offset": [
        1102,
        1223
      ],
      "op": "JUMPDEST",
      "path": "145"
    },
    "207": {
      "fn": "Arrays.findUpperBound",
      "offset": [
        838,
        1233
      ],
      "op": "POP",
      "path": "145"
    },
    "208": {
      "fn": "Arrays.findUpperBound",
      "offset": [
        819,
        1233
      ],
      "op": "PUSH2",
      "path": "145",
      "value": "0x7E"
    },
    "211": {
      "fn": "Arrays.findUpperBound",
      "offset": [
        819,
        1233
      ],
      "op": "JUMP",
      "path": "145"
    },
    "212": {
      "fn": "Arrays.findUpperBound",
      "offset": [
        819,
        1233
      ],
      "op": "JUMPDEST",
      "path": "145"
    },
    "213": {
      "fn": "Arrays.findUpperBound",
      "offset": [
        1356,
        1357
      ],
      "op": "PUSH1",
      "path": "145",
      "value": "0x0"
    },
    "215": {
      "fn": "Arrays.findUpperBound",
      "offset": [
        1350,
        1353
      ],
      "op": "DUP3",
      "path": "145"
    },
    "216": {
      "branch": 8,
      "fn": "Arrays.findUpperBound",
      "offset": [
        1350,
        1357
      ],
      "op": "GT",
      "path": "145"
    },
    "217": {
      "fn": "Arrays.findUpperBound",
      "offset": [
        1350,
        1386
      ],
      "op": "DUP1",
      "path": "145"
    },
    "218": {
      "fn": "Arrays.findUpperBound",
      "offset": [
        1350,
        1386
      ],
      "op": "ISZERO",
      "path": "145"
    },
    "219": {
      "fn": "Arrays.findUpperBound",
      "offset": [
        1350,
        1386
      ],
      "op": "PUSH2",
      "path": "145",
      "value": "0x109"
    },
    "222": {
      "branch": 8,
      "fn": "Arrays.findUpperBound",
      "offset": [
        1350,
        1386
      ],
      "op": "JUMPI",
      "path": "145"
    },
    "223": {
      "op": "POP"
    },
    "224": {
      "fn": "Arrays.findUpperBound",
      "offset": [
        1379,
        1386
      ],
      "op": "DUP4",
      "path": "145"
    },
    "225": {
      "fn": "Arrays.findUpperBound",
      "offset": [
        1361,
        1366
      ],
      "op": "DUP6",
      "path": "145"
    },
    "226": {
      "fn": "Arrays.findUpperBound",
      "offset": [
        1367,
        1374
      ],
      "op": "PUSH2",
      "path": "145",
      "value": "0xEC"
    },
    "229": {
      "fn": "Arrays.findUpperBound",
      "offset": [
        1373,
        1374
      ],
      "op": "PUSH1",
      "path": "145",
      "value": "0x1"
    },
    "231": {
      "fn": "Arrays.findUpperBound",
      "offset": [
        1367,
        1370
      ],
      "op": "DUP6",
      "path": "145"
    },
    "232": {
      "fn": "Arrays.findUpperBound",
      "offset": [
        1367,
        1374
      ],
      "op": "PUSH2",
      "path": "145",
      "value": "0x1E5"
    },
    "235": {
      "fn": "Arrays.findUpperBound",
      "jump": "i",
      "offset": [
        1367,
        1374
      ],
      "op": "JUMP",
      "path": "145"
    },
    "236": {
      "fn": "Arrays.findUpperBound",
      "offset": [
        1367,
        1374
      ],
      "op": "JUMPDEST",
      "path": "145"
    },
    "237": {
      "fn": "Arrays.findUpperBound",
      "offset": [
        1361,
        1375
      ],
      "op": "DUP2",
      "path": "145"
    },
    "238": {
      "fn": "Arrays.findUpperBound",
      "offset": [
        1361,
        1375
      ],
      "op": "SLOAD",
      "path": "145"
    },
    "239": {
      "fn": "Arrays.findUpperBound",
      "offset": [
        1361,
        1375
      ],
      "op": "DUP2",
      "path": "145"
    },
    "240": {
      "fn": "Arrays.findUpperBound",
      "offset": [
        1361,
        1375
      ],
      "op": "LT",
      "path": "145"
    },
    "241": {
      "fn": "Arrays.findUpperBound",
      "offset": [
        1361,
        1375
      ],
      "op": "PUSH2",
      "path": "145",
      "value": "0xFC"
    },
    "244": {
      "fn": "Arrays.findUpperBound",
      "offset": [
        1361,
        1375
      ],
      "op": "JUMPI",
      "path": "145"
    },
    "245": {
      "fn": "Arrays.findUpperBound",
      "offset": [
        1361,
        1375
      ],
      "op": "PUSH2",
      "path": "145",
      "value": "0xFC"
    },
    "248": {
      "fn": "Arrays.findUpperBound",
      "offset": [
        1361,
        1375
      ],
      "op": "PUSH2",
      "path": "145",
      "value": "0x1A1"
    },
    "251": {
      "fn": "Arrays.findUpperBound",
      "jump": "i",
      "offset": [
        1361,
        1375
      ],
      "op": "JUMP",
      "path": "145"
    },
    "252": {
      "fn": "Arrays.findUpperBound",
      "offset": [
        1361,
        1375
      ],
      "op": "JUMPDEST",
      "path": "145"
    },
    "253": {
      "fn": "Arrays.findUpperBound",
      "offset": [
        1361,
        1375
      ],
      "op": "SWAP1",
      "path": "145"
    },
    "254": {
      "fn": "Arrays.findUpperBound",
      "offset": [
        1361,
        1375
      ],
      "op": "PUSH1",
      "path": "145",
      "value": "0x0"
    },
    "256": {
      "fn": "Arrays.findUpperBound",
      "offset": [
        1361,
        1375
      ],
      "op": "MSTORE",
      "path": "145"
    },
    "257": {
      "fn": "Arrays.findUpperBound",
      "offset": [
        1361,
        1375
      ],
      "op": "PUSH1",
      "path": "145",
      "value": "0x20"
    },
    "259": {
      "fn": "Arrays.findUpperBound",
      "offset": [
        1361,
        1375
      ],
      "op": "PUSH1",
      "path": "145",
      "value": "0x0"
    },
    "261": {
      "fn": "Arrays.findUpperBound",
      "offset": [
        1361,
        1375
      ],
      "op": "KECCAK256",
      "path": "145"
    },
    "262": {
      "fn": "Arrays.findUpperBound",
      "offset": [
        1361,
        1375
      ],
      "op": "ADD",
      "path": "145"
    },
    "263": {
      "fn": "Arrays.findUpperBound",
      "offset": [
        1361,
        1375
      ],
      "op": "SLOAD",
      "path": "145"
    },
    "264": {
      "branch": 9,
      "fn": "Arrays.findUpperBound",
      "offset": [
        1361,
        1386
      ],
      "op": "EQ",
      "path": "145"
    },
    "265": {
      "fn": "Arrays.findUpperBound",
      "offset": [
        1350,
        1386
      ],
      "op": "JUMPDEST",
      "path": "145"
    },
    "266": {
      "fn": "Arrays.findUpperBound",
      "offset": [
        1346,
        1468
      ],
      "op": "ISZERO",
      "path": "145"
    },
    "267": {
      "fn": "Arrays.findUpperBound",
      "offset": [
        1346,
        1468
      ],
      "op": "PUSH2",
      "path": "145",
      "value": "0x122"
    },
    "270": {
      "branch": 9,
      "fn": "Arrays.findUpperBound",
      "offset": [
        1346,
        1468
      ],
      "op": "JUMPI",
      "path": "145"
    },
    "271": {
      "fn": "Arrays.findUpperBound",
      "offset": [
        1409,
        1416
      ],
      "op": "PUSH2",
      "path": "145",
      "statement": 4,
      "value": "0x119"
    },
    "274": {
      "fn": "Arrays.findUpperBound",
      "offset": [
        1415,
        1416
      ],
      "op": "PUSH1",
      "path": "145",
      "value": "0x1"
    },
    "276": {
      "fn": "Arrays.findUpperBound",
      "offset": [
        1409,
        1412
      ],
      "op": "DUP4",
      "path": "145"
    },
    "277": {
      "fn": "Arrays.findUpperBound",
      "offset": [
        1409,
        1416
      ],
      "op": "PUSH2",
      "path": "145",
      "value": "0x1E5"
    },
    "280": {
      "fn": "Arrays.findUpperBound",
      "jump": "i",
      "offset": [
        1409,
        1416
      ],
      "op": "JUMP",
      "path": "145"
    },
    "281": {
      "fn": "Arrays.findUpperBound",
      "offset": [
        1409,
        1416
      ],
      "op": "JUMPDEST",
      "path": "145"
    },
    "282": {
      "fn": "Arrays.findUpperBound",
      "offset": [
        1402,
        1416
      ],
      "op": "SWAP3",
      "path": "145"
    },
    "283": {
      "fn": "Arrays.findUpperBound",
      "offset": [
        1402,
        1416
      ],
      "op": "POP",
      "path": "145"
    },
    "284": {
      "fn": "Arrays.findUpperBound",
      "offset": [
        1402,
        1416
      ],
      "op": "POP",
      "path": "145"
    },
    "285": {
      "fn": "Arrays.findUpperBound",
      "offset": [
        1402,
        1416
      ],
      "op": "POP",
      "path": "145"
    },
    "286": {
      "fn": "Arrays.findUpperBound",
      "offset": [
        1402,
        1416
      ],
      "op": "PUSH2",
      "path": "145",
      "value": "0x61"
    },
    "289": {
      "fn": "Arrays.findUpperBound",
      "offset": [
        1402,
        1416
      ],
      "op": "JUMP",
      "path": "145"
    },
    "290": {
      "fn": "Arrays.findUpperBound",
      "offset": [
        1346,
        1468
      ],
      "op": "JUMPDEST",
      "path": "145"
    },
    "291": {
      "op": "POP"
    },
    "292": {
      "fn": "Arrays.findUpperBound",
      "offset": [
        1454,
        1457
      ],
      "op": "SWAP4",
      "path": "145",
      "statement": 5
    },
    "293": {
      "fn": "Arrays.findUpperBound",
      "offset": [
        582,
        1474
      ],
      "op": "SWAP3",
      "path": "145"
    },
    "294": {
      "op": "POP"
    },
    "295": {
      "op": "POP"
    },
    "296": {
      "op": "POP"
    },
    "297": {
      "fn": "Arrays.findUpperBound",
      "jump": "o",
      "offset": [
        582,
        1474
      ],
      "op": "JUMP",
      "path": "145"
    },
    "298": {
      "fn": "Math.average",
      "offset": [
        608,
        803
      ],
      "op": "JUMPDEST",
      "path": "166"
    },
    "299": {
      "fn": "Math.average",
      "offset": [
        670,
        677
      ],
      "op": "PUSH1",
      "path": "166",
      "value": "0x0"
    },
    "301": {
      "fn": "Math.average",
      "offset": [
        794,
        795
      ],
      "op": "PUSH1",
      "path": "166",
      "statement": 6,
      "value": "0x2"
    },
    "303": {
      "fn": "Math.average",
      "offset": [
        784,
        789
      ],
      "op": "PUSH2",
      "path": "166",
      "value": "0x138"
    },
    "306": {
      "fn": "Math.average",
      "offset": [
        794,
        795
      ],
      "op": "DUP2",
      "path": "166"
    },
    "307": {
      "fn": "Math.average",
      "offset": [
        784,
        785
      ],
      "op": "DUP5",
      "path": "166"
    },
    "308": {
      "fn": "Math.average",
      "offset": [
        784,
        789
      ],
      "op": "PUSH2",
      "path": "166",
      "value": "0x212"
    },
    "311": {
      "fn": "Math.average",
      "jump": "i",
      "offset": [
        784,
        789
      ],
      "op": "JUMP",
      "path": "166"
    },
    "312": {
      "fn": "Math.average",
      "offset": [
        784,
        789
      ],
      "op": "JUMPDEST",
      "path": "166"
    },
    "313": {
      "fn": "Math.average",
      "offset": [
        774,
        779
      ],
      "op": "PUSH2",
      "path": "166",
      "value": "0x143"
    },
    "316": {
      "fn": "Math.average",
      "offset": [
        778,
        779
      ],
      "op": "PUSH1",
      "path": "166",
      "value": "0x2"
    },
    "318": {
      "fn": "Math.average",
      "offset": [
        774,
        775
      ],
      "op": "DUP7",
      "path": "166"
    },
    "319": {
      "fn": "Math.average",
      "offset": [
        774,
        779
      ],
      "op": "PUSH2",
      "path": "166",
      "value": "0x212"
    },
    "322": {
      "fn": "Math.average",
      "jump": "i",
      "offset": [
        774,
        779
      ],
      "op": "JUMP",
      "path": "166"
    },
    "323": {
      "fn": "Math.average",
      "offset": [
        774,
        779
      ],
      "op": "JUMPDEST",
      "path": "166"
    },
    "324": {
      "fn": "Math.average",
      "offset": [
        773,
        790
      ],
      "op": "PUSH2",
      "path": "166",
      "value": "0x14D"
    },
    "327": {
      "fn": "Math.average",
      "offset": [
        773,
        790
      ],
      "op": "SWAP2",
      "path": "166"
    },
    "328": {
      "fn": "Math.average",
      "offset": [
        773,
        790
      ],
      "op": "SWAP1",
      "path": "166"
    },
    "329": {
      "fn": "Math.average",
      "offset": [
        773,
        790
      ],
      "op": "PUSH2",
      "path": "166",
      "value": "0x1CD"
    },
    "332": {
      "fn": "Math.average",
      "jump": "i",
      "offset": [
        773,
        790
      ],
      "op": "JUMP",
      "path": "166"
    },
    "333": {
      "fn": "Math.average",
      "offset": [
        773,
        790
      ],
      "op": "JUMPDEST",
      "path": "166"
    },
    "334": {
      "fn": "Math.average",
      "offset": [
        772,
        795
      ],
      "op": "PUSH2",
      "path": "166",
      "value": "0x157"
    },
    "337": {
      "fn": "Math.average",
      "offset": [
        772,
        795
      ],
      "op": "SWAP2",
      "path": "166"
    },
    "338": {
      "fn": "Math.average",
      "offset": [
        772,
        795
      ],
      "op": "SWAP1",
      "path": "166"
    },
    "339": {
      "fn": "Math.average",
      "offset": [
        772,
        795
      ],
      "op": "PUSH2",
      "path": "166",
      "value": "0x226"
    },
    "342": {
      "fn": "Math.average",
      "jump": "i",
      "offset": [
        772,
        795
      ],
      "op": "JUMP",
      "path": "166"
    },
    "343": {
      "fn": "Math.average",
      "offset": [
        772,
        795
      ],
      "op": "JUMPDEST",
      "path": "166"
    },
    "344": {
      "fn": "Math.average",
      "offset": [
        762,
        767
      ],
      "op": "PUSH2",
      "path": "166",
      "value": "0x162"
    },
    "347": {
      "fn": "Math.average",
      "offset": [
        766,
        767
      ],
      "op": "PUSH1",
      "path": "166",
      "value": "0x2"
    },
    "349": {
      "fn": "Math.average",
      "offset": [
        762,
        763
      ],
      "op": "DUP5",
      "path": "166"
    },
    "350": {
      "fn": "Math.average",
      "offset": [
        762,
        767
      ],
      "op": "PUSH2",
      "path": "166",
      "value": "0x226"
    },
    "353": {
      "fn": "Math.average",
      "jump": "i",
      "offset": [
        762,
        767
      ],
      "op": "JUMP",
      "path": "166"
    },
    "354": {
      "fn": "Math.average",
      "offset": [
        762,
        767
      ],
      "op": "JUMPDEST",
      "path": "166"
    },
    "355": {
      "fn": "Math.average",
      "offset": [
        752,
        757
      ],
      "op": "PUSH2",
      "path": "166",
      "value": "0x16D"
    },
    "358": {
      "fn": "Math.average",
      "offset": [
        756,
        757
      ],
      "op": "PUSH1",
      "path": "166",
      "value": "0x2"
    },
    "360": {
      "fn": "Math.average",
      "offset": [
        752,
        753
      ],
      "op": "DUP7",
      "path": "166"
    },
    "361": {
      "fn": "Math.average",
      "offset": [
        752,
        757
      ],
      "op": "PUSH2",
      "path": "166",
      "value": "0x226"
    },
    "364": {
      "fn": "Math.average",
      "jump": "i",
      "offset": [
        752,
        757
      ],
      "op": "JUMP",
      "path": "166"
    },
    "365": {
      "fn": "Math.average",
      "offset": [
        752,
        757
      ],
      "op": "JUMPDEST",
      "path": "166"
    },
    "366": {
      "fn": "Math.average",
      "offset": [
        751,
        768
      ],
      "op": "PUSH2",
      "path": "166",
      "value": "0x177"
    },
    "369": {
      "fn": "Math.average",
      "offset": [
        751,
        768
      ],
      "op": "SWAP2",
      "path": "166"
    },
    "370": {
      "fn": "Math.average",
      "offset": [
        751,
        768
      ],
      "op": "SWAP1",
      "path": "166"
    },
    "371": {
      "fn": "Math.average",
      "offset": [
        751,
        768
      ],
      "op": "PUSH2",
      "path": "166",
      "value": "0x1CD"
    },
    "374": {
      "fn": "Math.average",
      "jump": "i",
      "offset": [
        751,
        768
      ],
      "op": "JUMP",
      "path": "166"
    },
    "375": {
      "fn": "Math.average",
      "offset": [
        751,
        768
      ],
      "op": "JUMPDEST",
      "path": "166"
    },
    "376": {
      "fn": "Math.average",
      "offset": [
        751,
        796
      ],
      "op": "PUSH2",
      "path": "166",
      "value": "0x181"
    },
    "379": {
      "fn": "Math.average",
      "offset": [
        751,
        796
      ],
      "op": "SWAP2",
      "path": "166"
    },
    "380": {
      "fn": "Math.average",
      "offset": [
        751,
        796
      ],
      "op": "SWAP1",
      "path": "166"
    },
    "381": {
      "fn": "Math.average",
      "offset": [
        751,
        796
      ],
      "op": "PUSH2",
      "path": "166",
      "value": "0x1CD"
    },
    "384": {
      "fn": "Math.average",
      "jump": "i",
      "offset": [
        751,
        796
      ],
      "op": "JUMP",
      "path": "166"
    },
    "385": {
      "fn": "Math.average",
      "offset": [
        751,
        796
      ],
      "op": "JUMPDEST",
      "path": "166"
    },
    "386": {
      "fn": "Math.average",
      "offset": [
        744,
        796
      ],
      "op": "SWAP4",
      "path": "166"
    },
    "387": {
      "fn": "Math.average",
      "offset": [
        608,
        803
      ],
      "op": "SWAP3",
      "path": "166"
    },
    "388": {
      "op": "POP"
    },
    "389": {
      "op": "POP"
    },
    "390": {
      "op": "POP"
    },
    "391": {
      "fn": "Math.average",
      "jump": "o",
      "offset": [
        608,
        803
      ],
      "op": "JUMP",
      "path": "166"
    },
    "392": {
      "op": "JUMPDEST"
    },
    "393": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "395": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "397": {
      "op": "DUP3"
    },
    "398": {
      "op": "DUP5"
    },
    "399": {
      "op": "SUB"
    },
    "400": {
      "op": "SLT"
    },
    "401": {
      "op": "ISZERO"
    },
    "402": {
      "op": "PUSH2",
      "value": "0x19A"
    },
    "405": {
      "op": "JUMPI"
    },
    "406": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "408": {
      "op": "DUP1"
    },
    "409": {
      "op": "REVERT"
    },
    "410": {
      "op": "JUMPDEST"
    },
    "411": {
      "op": "POP"
    },
    "412": {
      "op": "CALLDATALOAD"
    },
    "413": {
      "op": "SWAP2"
    },
    "414": {
      "op": "SWAP1"
    },
    "415": {
      "op": "POP"
    },
    "416": {
      "jump": "o",
      "op": "JUMP"
    },
    "417": {
      "op": "JUMPDEST"
    },
    "418": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "423": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "425": {
      "op": "SHL"
    },
    "426": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "428": {
      "op": "MSTORE"
    },
    "429": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "431": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "433": {
      "op": "MSTORE"
    },
    "434": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "436": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "438": {
      "op": "REVERT"
    },
    "439": {
      "op": "JUMPDEST"
    },
    "440": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "445": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "447": {
      "op": "SHL"
    },
    "448": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "450": {
      "op": "MSTORE"
    },
    "451": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "453": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "455": {
      "op": "MSTORE"
    },
    "456": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "458": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "460": {
      "op": "REVERT"
    },
    "461": {
      "op": "JUMPDEST"
    },
    "462": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "464": {
      "op": "DUP3"
    },
    "465": {
      "op": "NOT"
    },
    "466": {
      "op": "DUP3"
    },
    "467": {
      "op": "GT"
    },
    "468": {
      "op": "ISZERO"
    },
    "469": {
      "op": "PUSH2",
      "value": "0x1E0"
    },
    "472": {
      "op": "JUMPI"
    },
    "473": {
      "op": "PUSH2",
      "value": "0x1E0"
    },
    "476": {
      "op": "PUSH2",
      "value": "0x1B7"
    },
    "479": {
      "jump": "i",
      "op": "JUMP"
    },
    "480": {
      "op": "JUMPDEST"
    },
    "481": {
      "op": "POP"
    },
    "482": {
      "op": "ADD"
    },
    "483": {
      "op": "SWAP1"
    },
    "484": {
      "jump": "o",
      "op": "JUMP"
    },
    "485": {
      "op": "JUMPDEST"
    },
    "486": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "488": {
      "op": "DUP3"
    },
    "489": {
      "op": "DUP3"
    },
    "490": {
      "op": "LT"
    },
    "491": {
      "op": "ISZERO"
    },
    "492": {
      "op": "PUSH2",
      "value": "0x1F7"
    },
    "495": {
      "op": "JUMPI"
    },
    "496": {
      "op": "PUSH2",
      "value": "0x1F7"
    },
    "499": {
      "op": "PUSH2",
      "value": "0x1B7"
    },
    "502": {
      "jump": "i",
      "op": "JUMP"
    },
    "503": {
      "op": "JUMPDEST"
    },
    "504": {
      "op": "POP"
    },
    "505": {
      "op": "SUB"
    },
    "506": {
      "op": "SWAP1"
    },
    "507": {
      "jump": "o",
      "op": "JUMP"
    },
    "508": {
      "op": "JUMPDEST"
    },
    "509": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "514": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "516": {
      "op": "SHL"
    },
    "517": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "519": {
      "op": "MSTORE"
    },
    "520": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "522": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "524": {
      "op": "MSTORE"
    },
    "525": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "527": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "529": {
      "op": "REVERT"
    },
    "530": {
      "op": "JUMPDEST"
    },
    "531": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "533": {
      "op": "DUP3"
    },
    "534": {
      "op": "PUSH2",
      "value": "0x221"
    },
    "537": {
      "op": "JUMPI"
    },
    "538": {
      "op": "PUSH2",
      "value": "0x221"
    },
    "541": {
      "op": "PUSH2",
      "value": "0x1FC"
    },
    "544": {
      "jump": "i",
      "op": "JUMP"
    },
    "545": {
      "op": "JUMPDEST"
    },
    "546": {
      "op": "POP"
    },
    "547": {
      "op": "MOD"
    },
    "548": {
      "op": "SWAP1"
    },
    "549": {
      "jump": "o",
      "op": "JUMP"
    },
    "550": {
      "op": "JUMPDEST"
    },
    "551": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "553": {
      "op": "DUP3"
    },
    "554": {
      "op": "PUSH2",
      "value": "0x235"
    },
    "557": {
      "op": "JUMPI"
    },
    "558": {
      "op": "PUSH2",
      "value": "0x235"
    },
    "561": {
      "op": "PUSH2",
      "value": "0x1FC"
    },
    "564": {
      "jump": "i",
      "op": "JUMP"
    },
    "565": {
      "op": "JUMPDEST"
    },
    "566": {
      "op": "POP"
    },
    "567": {
      "op": "DIV"
    },
    "568": {
      "op": "SWAP1"
    },
    "569": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "ef1acbc3e33350c426845f9e7da242d767c4242b",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Arrays.sol\";\n\ncontract ArraysImpl {\n    using Arrays for uint256[];\n\n    uint256[] private _array;\n\n    constructor(uint256[] memory array) {\n        _array = array;\n    }\n\n    function findUpperBound(uint256 element) external view returns (uint256) {\n        return _array.findUpperBound(element);\n    }\n}\n",
  "sourceMap": "89:292:16:-:0;;;179:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;225:14;;;;:6;;:14;;;;;:::i;:::-;;179:67;89:292;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;89:292:16;;;-1:-1:-1;89:292:16;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:127:174;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:1105;241:6;272:2;315;303:9;294:7;290:23;286:32;283:52;;;331:1;328;321:12;283:52;358:16;;-1:-1:-1;;;;;423:14:174;;;420:34;;;450:1;447;440:12;420:34;488:6;477:9;473:22;463:32;;533:7;526:4;522:2;518:13;514:27;504:55;;555:1;552;545:12;504:55;584:2;578:9;606:2;602;599:10;596:36;;;612:18;;:::i;:::-;658:2;655:1;651:10;690:2;684:9;753:2;749:7;744:2;740;736:11;732:25;724:6;720:38;808:6;796:10;793:22;788:2;776:10;773:18;770:46;767:72;;;819:18;;:::i;:::-;855:2;848:22;905:18;;;939:15;;;;-1:-1:-1;981:11:174;;;977:20;;;1009:19;;;1006:39;;;1041:1;1038;1031:12;1006:39;1065:11;;;;1085:135;1101:6;1096:3;1093:15;1085:135;;;1167:10;;1155:23;;1118:12;;;;1198;;;;1085:135;;;1239:6;146:1105;-1:-1:-1;;;;;;;;146:1105:174:o;:::-;89:292:16;;;;;;",
  "sourcePath": "contracts/openzeppelin/contracts/mocks/ArraysImpl.sol",
  "type": "contract"
}