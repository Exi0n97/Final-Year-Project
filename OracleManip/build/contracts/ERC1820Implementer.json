{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "interfaceHash",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "canImplementInterfaceForAddress",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "162": "contracts/openzeppelin/contracts/utils/introspection/ERC1820Implementer.sol",
    "164": "contracts/openzeppelin/contracts/utils/introspection/IERC1820Implementer.sol"
  },
  "ast": {
    "absolutePath": "contracts/openzeppelin/contracts/utils/introspection/ERC1820Implementer.sol",
    "exportedSymbols": {
      "ERC1820Implementer": [
        19817
      ],
      "IERC1820Implementer": [
        19843
      ]
    },
    "id": 19818,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 19760,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:162"
      },
      {
        "absolutePath": "contracts/openzeppelin/contracts/utils/introspection/IERC1820Implementer.sol",
        "file": "./IERC1820Implementer.sol",
        "id": 19761,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 19818,
        "sourceUnit": 19844,
        "src": "58:35:162",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 19763,
              "name": "IERC1820Implementer",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 19843,
              "src": "435:19:162"
            },
            "id": 19764,
            "nodeType": "InheritanceSpecifier",
            "src": "435:19:162"
          }
        ],
        "canonicalName": "ERC1820Implementer",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 19762,
          "nodeType": "StructuredDocumentation",
          "src": "95:308:162",
          "text": " @dev Implementation of the {IERC1820Implementer} interface.\n Contracts may inherit from this and call {_registerInterfaceForAddress} to\n declare their willingness to be implementers.\n {IERC1820Registry-setInterfaceImplementer} should then be called for the\n registration to be complete."
        },
        "fullyImplemented": true,
        "id": 19817,
        "linearizedBaseContracts": [
          19817,
          19843
        ],
        "name": "ERC1820Implementer",
        "nameLocation": "413:18:162",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "id": 19769,
            "mutability": "constant",
            "name": "_ERC1820_ACCEPT_MAGIC",
            "nameLocation": "486:21:162",
            "nodeType": "VariableDeclaration",
            "scope": 19817,
            "src": "461:82:162",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 19765,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "461:7:162",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "455243313832305f4143434550545f4d41474943",
                  "id": 19767,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "520:22:162",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_a2ef4600d742022d532d4747cb3547474667d6f13804902513b2ec01c848f4b4",
                    "typeString": "literal_string \"ERC1820_ACCEPT_MAGIC\""
                  },
                  "value": "ERC1820_ACCEPT_MAGIC"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_a2ef4600d742022d532d4747cb3547474667d6f13804902513b2ec01c848f4b4",
                    "typeString": "literal_string \"ERC1820_ACCEPT_MAGIC\""
                  }
                ],
                "id": 19766,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": -8,
                "src": "510:9:162",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 19768,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "510:33:162",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 19775,
            "mutability": "mutable",
            "name": "_supportedInterfaces",
            "nameLocation": "603:20:162",
            "nodeType": "VariableDeclaration",
            "scope": 19817,
            "src": "550:73:162",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_mapping$_t_address_$_t_bool_$_$",
              "typeString": "mapping(bytes32 => mapping(address => bool))"
            },
            "typeName": {
              "id": 19774,
              "keyType": {
                "id": 19770,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "558:7:162",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "550:44:162",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_mapping$_t_address_$_t_bool_$_$",
                "typeString": "mapping(bytes32 => mapping(address => bool))"
              },
              "valueType": {
                "id": 19773,
                "keyType": {
                  "id": 19771,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "577:7:162",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "569:24:162",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                  "typeString": "mapping(address => bool)"
                },
                "valueType": {
                  "id": 19772,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "588:4:162",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                }
              }
            },
            "visibility": "private"
          },
          {
            "baseFunctions": [
              19842
            ],
            "body": {
              "id": 19798,
              "nodeType": "Block",
              "src": "889:108:162",
              "statements": [
                {
                  "expression": {
                    "condition": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 19786,
                          "name": "_supportedInterfaces",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 19775,
                          "src": "906:20:162",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_mapping$_t_address_$_t_bool_$_$",
                            "typeString": "mapping(bytes32 => mapping(address => bool))"
                          }
                        },
                        "id": 19788,
                        "indexExpression": {
                          "id": 19787,
                          "name": "interfaceHash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 19778,
                          "src": "927:13:162",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "906:35:162",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 19790,
                      "indexExpression": {
                        "id": 19789,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19780,
                        "src": "942:7:162",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "906:44:162",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "arguments": [
                        {
                          "hexValue": "30783030",
                          "id": 19794,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "985:4:162",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0x00"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 19793,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "977:7:162",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_bytes32_$",
                          "typeString": "type(bytes32)"
                        },
                        "typeName": {
                          "id": 19792,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "977:7:162",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 19795,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "977:13:162",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 19796,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "906:84:162",
                    "trueExpression": {
                      "id": 19791,
                      "name": "_ERC1820_ACCEPT_MAGIC",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19769,
                      "src": "953:21:162",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 19785,
                  "id": 19797,
                  "nodeType": "Return",
                  "src": "899:91:162"
                }
              ]
            },
            "documentation": {
              "id": 19776,
              "nodeType": "StructuredDocumentation",
              "src": "630:82:162",
              "text": " @dev See {IERC1820Implementer-canImplementInterfaceForAddress}."
            },
            "functionSelector": "249cb3fa",
            "id": 19799,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "canImplementInterfaceForAddress",
            "nameLocation": "726:31:162",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 19782,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "850:8:162"
            },
            "parameters": {
              "id": 19781,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 19778,
                  "mutability": "mutable",
                  "name": "interfaceHash",
                  "nameLocation": "766:13:162",
                  "nodeType": "VariableDeclaration",
                  "scope": 19799,
                  "src": "758:21:162",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 19777,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "758:7:162",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 19780,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "789:7:162",
                  "nodeType": "VariableDeclaration",
                  "scope": 19799,
                  "src": "781:15:162",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 19779,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "781:7:162",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "757:40:162"
            },
            "returnParameters": {
              "id": 19785,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 19784,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 19799,
                  "src": "876:7:162",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 19783,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "876:7:162",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "875:9:162"
            },
            "scope": 19817,
            "src": "717:280:162",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 19815,
              "nodeType": "Block",
              "src": "1327:68:162",
              "statements": [
                {
                  "expression": {
                    "id": 19813,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 19807,
                          "name": "_supportedInterfaces",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 19775,
                          "src": "1337:20:162",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_mapping$_t_address_$_t_bool_$_$",
                            "typeString": "mapping(bytes32 => mapping(address => bool))"
                          }
                        },
                        "id": 19810,
                        "indexExpression": {
                          "id": 19808,
                          "name": "interfaceHash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 19802,
                          "src": "1358:13:162",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1337:35:162",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 19811,
                      "indexExpression": {
                        "id": 19809,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19804,
                        "src": "1373:7:162",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1337:44:162",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 19812,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1384:4:162",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1337:51:162",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 19814,
                  "nodeType": "ExpressionStatement",
                  "src": "1337:51:162"
                }
              ]
            },
            "documentation": {
              "id": 19800,
              "nodeType": "StructuredDocumentation",
              "src": "1003:224:162",
              "text": " @dev Declares the contract as willing to be an implementer of\n `interfaceHash` for `account`.\n See {IERC1820Registry-setInterfaceImplementer} and\n {IERC1820Registry-interfaceHash}."
            },
            "id": 19816,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_registerInterfaceForAddress",
            "nameLocation": "1241:28:162",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 19805,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 19802,
                  "mutability": "mutable",
                  "name": "interfaceHash",
                  "nameLocation": "1278:13:162",
                  "nodeType": "VariableDeclaration",
                  "scope": 19816,
                  "src": "1270:21:162",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 19801,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1270:7:162",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 19804,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "1301:7:162",
                  "nodeType": "VariableDeclaration",
                  "scope": 19816,
                  "src": "1293:15:162",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 19803,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1293:7:162",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1269:40:162"
            },
            "returnParameters": {
              "id": 19806,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1327:0:162"
            },
            "scope": 19817,
            "src": "1232:163:162",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "scope": 19818,
        "src": "404:993:162",
        "usedErrors": []
      }
    ],
    "src": "33:1365:162"
  },
  "bytecode": "608060405234801561001057600080fd5b50610114806100206000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c8063249cb3fa14602d575b600080fd5b603c603836600460a4565b604e565b60405190815260200160405180910390f35b6000828152602081815260408083206001600160a01b038516845290915281205460ff16607b576000609d565b7fa2ef4600d742022d532d4747cb3547474667d6f13804902513b2ec01c848f4b45b9392505050565b6000806040838503121560b657600080fd5b8235915060208301356001600160a01b038116811460d357600080fd5b80915050925092905056fea2646970667358221220713d1973372e6d433cd25e15c8921178ab182180a303bde3cf9c92c8cbee596a64736f6c634300080c0033",
  "bytecodeSha1": "ad70782eafaaa1cb0d2599f7aea122ce4797a0b9",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.12+commit.f00d7308"
  },
  "contractName": "ERC1820Implementer",
  "coverageMap": {
    "branches": {
      "162": {
        "ERC1820Implementer.canImplementInterfaceForAddress": {
          "1": [
            906,
            950,
            true
          ]
        }
      },
      "164": {}
    },
    "statements": {
      "162": {
        "ERC1820Implementer.canImplementInterfaceForAddress": {
          "0": [
            899,
            990
          ]
        }
      },
      "164": {}
    }
  },
  "dependencies": [
    "IERC1820Implementer"
  ],
  "deployedBytecode": "6080604052348015600f57600080fd5b506004361060285760003560e01c8063249cb3fa14602d575b600080fd5b603c603836600460a4565b604e565b60405190815260200160405180910390f35b6000828152602081815260408083206001600160a01b038516845290915281205460ff16607b576000609d565b7fa2ef4600d742022d532d4747cb3547474667d6f13804902513b2ec01c848f4b45b9392505050565b6000806040838503121560b657600080fd5b8235915060208301356001600160a01b038116811460d357600080fd5b80915050925092905056fea2646970667358221220713d1973372e6d433cd25e15c8921178ab182180a303bde3cf9c92c8cbee596a64736f6c634300080c0033",
  "deployedSourceMap": "404:993:162:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;717:280;;;;;;:::i;:::-;;:::i;:::-;;;519:25:174;;;507:2;492:18;717:280:162;;;;;;;;876:7;906:35;;;;;;;;;;;-1:-1:-1;;;;;906:44:162;;;;;;;;;;;;:84;;985:4;906:84;;;510:33;906:84;899:91;717:280;-1:-1:-1;;;717:280:162:o;14:354:174:-;82:6;90;143:2;131:9;122:7;118:23;114:32;111:52;;;159:1;156;149:12;111:52;182:23;;;-1:-1:-1;255:2:174;240:18;;227:32;-1:-1:-1;;;;;288:31:174;;278:42;;268:70;;334:1;331;324:12;268:70;357:5;347:15;;;14:354;;;;;:::o",
  "language": "Solidity",
  "natspec": {
    "details": "Implementation of the {IERC1820Implementer} interface. Contracts may inherit from this and call {_registerInterfaceForAddress} to declare their willingness to be implementers. {IERC1820Registry-setInterfaceImplementer} should then be called for the registration to be complete.",
    "kind": "dev",
    "methods": {
      "canImplementInterfaceForAddress(bytes32,address)": {
        "details": "See {IERC1820Implementer-canImplementInterfaceForAddress}."
      }
    },
    "version": 1
  },
  "offset": [
    404,
    1397
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x28 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x249CB3FA EQ PUSH1 0x2D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3C PUSH1 0x38 CALLDATASIZE PUSH1 0x4 PUSH1 0xA4 JUMP JUMPDEST PUSH1 0x4E JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD PUSH1 0xFF AND PUSH1 0x7B JUMPI PUSH1 0x0 PUSH1 0x9D JUMP JUMPDEST PUSH32 0xA2EF4600D742022D532D4747CB3547474667D6F13804902513B2EC01C848F4B4 JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH1 0xB6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH1 0xD3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH18 0x3D1973372E6D433CD25E15C8921178AB1821 DUP1 LOG3 SUB 0xBD 0xE3 0xCF SWAP13 SWAP3 0xC8 0xCB 0xEE MSIZE PUSH11 0x64736F6C634300080C0033 ",
  "pcMap": {
    "0": {
      "offset": [
        404,
        1397
      ],
      "op": "PUSH1",
      "path": "162",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        404,
        1397
      ],
      "op": "PUSH1",
      "path": "162",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        404,
        1397
      ],
      "op": "MSTORE",
      "path": "162"
    },
    "5": {
      "fn": null,
      "offset": [
        404,
        1397
      ],
      "op": "CALLVALUE",
      "path": "162"
    },
    "6": {
      "fn": null,
      "offset": [
        404,
        1397
      ],
      "op": "DUP1",
      "path": "162"
    },
    "7": {
      "fn": null,
      "offset": [
        404,
        1397
      ],
      "op": "ISZERO",
      "path": "162"
    },
    "8": {
      "fn": null,
      "offset": [
        404,
        1397
      ],
      "op": "PUSH1",
      "path": "162",
      "value": "0xF"
    },
    "10": {
      "fn": null,
      "offset": [
        404,
        1397
      ],
      "op": "JUMPI",
      "path": "162"
    },
    "11": {
      "fn": null,
      "offset": [
        404,
        1397
      ],
      "op": "PUSH1",
      "path": "162",
      "value": "0x0"
    },
    "13": {
      "fn": null,
      "offset": [
        404,
        1397
      ],
      "op": "DUP1",
      "path": "162"
    },
    "14": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        404,
        1397
      ],
      "op": "REVERT",
      "path": "162"
    },
    "15": {
      "fn": null,
      "offset": [
        404,
        1397
      ],
      "op": "JUMPDEST",
      "path": "162"
    },
    "16": {
      "fn": null,
      "offset": [
        404,
        1397
      ],
      "op": "POP",
      "path": "162"
    },
    "17": {
      "fn": null,
      "offset": [
        404,
        1397
      ],
      "op": "PUSH1",
      "path": "162",
      "value": "0x4"
    },
    "19": {
      "fn": null,
      "offset": [
        404,
        1397
      ],
      "op": "CALLDATASIZE",
      "path": "162"
    },
    "20": {
      "fn": null,
      "offset": [
        404,
        1397
      ],
      "op": "LT",
      "path": "162"
    },
    "21": {
      "fn": null,
      "offset": [
        404,
        1397
      ],
      "op": "PUSH1",
      "path": "162",
      "value": "0x28"
    },
    "23": {
      "fn": null,
      "offset": [
        404,
        1397
      ],
      "op": "JUMPI",
      "path": "162"
    },
    "24": {
      "fn": null,
      "offset": [
        404,
        1397
      ],
      "op": "PUSH1",
      "path": "162",
      "value": "0x0"
    },
    "26": {
      "fn": null,
      "offset": [
        404,
        1397
      ],
      "op": "CALLDATALOAD",
      "path": "162"
    },
    "27": {
      "fn": null,
      "offset": [
        404,
        1397
      ],
      "op": "PUSH1",
      "path": "162",
      "value": "0xE0"
    },
    "29": {
      "fn": null,
      "offset": [
        404,
        1397
      ],
      "op": "SHR",
      "path": "162"
    },
    "30": {
      "fn": null,
      "offset": [
        404,
        1397
      ],
      "op": "DUP1",
      "path": "162"
    },
    "31": {
      "fn": null,
      "offset": [
        404,
        1397
      ],
      "op": "PUSH4",
      "path": "162",
      "value": "0x249CB3FA"
    },
    "36": {
      "fn": null,
      "offset": [
        404,
        1397
      ],
      "op": "EQ",
      "path": "162"
    },
    "37": {
      "fn": null,
      "offset": [
        404,
        1397
      ],
      "op": "PUSH1",
      "path": "162",
      "value": "0x2D"
    },
    "39": {
      "fn": null,
      "offset": [
        404,
        1397
      ],
      "op": "JUMPI",
      "path": "162"
    },
    "40": {
      "fn": null,
      "offset": [
        404,
        1397
      ],
      "op": "JUMPDEST",
      "path": "162"
    },
    "41": {
      "fn": null,
      "offset": [
        404,
        1397
      ],
      "op": "PUSH1",
      "path": "162",
      "value": "0x0"
    },
    "43": {
      "fn": null,
      "offset": [
        404,
        1397
      ],
      "op": "DUP1",
      "path": "162"
    },
    "44": {
      "first_revert": true,
      "fn": null,
      "offset": [
        404,
        1397
      ],
      "op": "REVERT",
      "path": "162"
    },
    "45": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        717,
        997
      ],
      "op": "JUMPDEST",
      "path": "162"
    },
    "46": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        717,
        997
      ],
      "op": "PUSH1",
      "path": "162",
      "value": "0x3C"
    },
    "48": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        717,
        997
      ],
      "op": "PUSH1",
      "path": "162",
      "value": "0x38"
    },
    "50": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        717,
        997
      ],
      "op": "CALLDATASIZE",
      "path": "162"
    },
    "51": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        717,
        997
      ],
      "op": "PUSH1",
      "path": "162",
      "value": "0x4"
    },
    "53": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        717,
        997
      ],
      "op": "PUSH1",
      "path": "162",
      "value": "0xA4"
    },
    "55": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "jump": "i",
      "offset": [
        717,
        997
      ],
      "op": "JUMP",
      "path": "162"
    },
    "56": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        717,
        997
      ],
      "op": "JUMPDEST",
      "path": "162"
    },
    "57": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        717,
        997
      ],
      "op": "PUSH1",
      "path": "162",
      "value": "0x4E"
    },
    "59": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "jump": "i",
      "offset": [
        717,
        997
      ],
      "op": "JUMP",
      "path": "162"
    },
    "60": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        717,
        997
      ],
      "op": "JUMPDEST",
      "path": "162"
    },
    "61": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        717,
        997
      ],
      "op": "PUSH1",
      "path": "162",
      "value": "0x40"
    },
    "63": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        717,
        997
      ],
      "op": "MLOAD",
      "path": "162"
    },
    "64": {
      "op": "SWAP1"
    },
    "65": {
      "op": "DUP2"
    },
    "66": {
      "op": "MSTORE"
    },
    "67": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "69": {
      "op": "ADD"
    },
    "70": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        717,
        997
      ],
      "op": "PUSH1",
      "path": "162",
      "value": "0x40"
    },
    "72": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        717,
        997
      ],
      "op": "MLOAD",
      "path": "162"
    },
    "73": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        717,
        997
      ],
      "op": "DUP1",
      "path": "162"
    },
    "74": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        717,
        997
      ],
      "op": "SWAP2",
      "path": "162"
    },
    "75": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        717,
        997
      ],
      "op": "SUB",
      "path": "162"
    },
    "76": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        717,
        997
      ],
      "op": "SWAP1",
      "path": "162"
    },
    "77": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        717,
        997
      ],
      "op": "RETURN",
      "path": "162"
    },
    "78": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        717,
        997
      ],
      "op": "JUMPDEST",
      "path": "162"
    },
    "79": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        876,
        883
      ],
      "op": "PUSH1",
      "path": "162",
      "value": "0x0"
    },
    "81": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        906,
        941
      ],
      "op": "DUP3",
      "path": "162",
      "statement": 0
    },
    "82": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        906,
        941
      ],
      "op": "DUP2",
      "path": "162"
    },
    "83": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        906,
        941
      ],
      "op": "MSTORE",
      "path": "162"
    },
    "84": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        906,
        941
      ],
      "op": "PUSH1",
      "path": "162",
      "value": "0x20"
    },
    "86": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        906,
        941
      ],
      "op": "DUP2",
      "path": "162"
    },
    "87": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        906,
        941
      ],
      "op": "DUP2",
      "path": "162"
    },
    "88": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        906,
        941
      ],
      "op": "MSTORE",
      "path": "162"
    },
    "89": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        906,
        941
      ],
      "op": "PUSH1",
      "path": "162",
      "value": "0x40"
    },
    "91": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        906,
        941
      ],
      "op": "DUP1",
      "path": "162"
    },
    "92": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        906,
        941
      ],
      "op": "DUP4",
      "path": "162"
    },
    "93": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        906,
        941
      ],
      "op": "KECCAK256",
      "path": "162"
    },
    "94": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "96": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "98": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "100": {
      "op": "SHL"
    },
    "101": {
      "op": "SUB"
    },
    "102": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        906,
        950
      ],
      "op": "DUP6",
      "path": "162"
    },
    "103": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        906,
        950
      ],
      "op": "AND",
      "path": "162"
    },
    "104": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        906,
        950
      ],
      "op": "DUP5",
      "path": "162"
    },
    "105": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        906,
        950
      ],
      "op": "MSTORE",
      "path": "162"
    },
    "106": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        906,
        950
      ],
      "op": "SWAP1",
      "path": "162"
    },
    "107": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        906,
        950
      ],
      "op": "SWAP2",
      "path": "162"
    },
    "108": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        906,
        950
      ],
      "op": "MSTORE",
      "path": "162"
    },
    "109": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        906,
        950
      ],
      "op": "DUP2",
      "path": "162"
    },
    "110": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        906,
        950
      ],
      "op": "KECCAK256",
      "path": "162"
    },
    "111": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        906,
        950
      ],
      "op": "SLOAD",
      "path": "162"
    },
    "112": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        906,
        950
      ],
      "op": "PUSH1",
      "path": "162",
      "value": "0xFF"
    },
    "114": {
      "branch": 1,
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        906,
        950
      ],
      "op": "AND",
      "path": "162"
    },
    "115": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        906,
        990
      ],
      "op": "PUSH1",
      "path": "162",
      "value": "0x7B"
    },
    "117": {
      "branch": 1,
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        906,
        990
      ],
      "op": "JUMPI",
      "path": "162"
    },
    "118": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        985,
        989
      ],
      "op": "PUSH1",
      "path": "162",
      "value": "0x0"
    },
    "120": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        906,
        990
      ],
      "op": "PUSH1",
      "path": "162",
      "value": "0x9D"
    },
    "122": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        906,
        990
      ],
      "op": "JUMP",
      "path": "162"
    },
    "123": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        906,
        990
      ],
      "op": "JUMPDEST",
      "path": "162"
    },
    "124": {
      "offset": [
        510,
        543
      ],
      "op": "PUSH32",
      "path": "162",
      "value": "0xA2EF4600D742022D532D4747CB3547474667D6F13804902513B2EC01C848F4B4"
    },
    "157": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        906,
        990
      ],
      "op": "JUMPDEST",
      "path": "162"
    },
    "158": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        899,
        990
      ],
      "op": "SWAP4",
      "path": "162"
    },
    "159": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        717,
        997
      ],
      "op": "SWAP3",
      "path": "162"
    },
    "160": {
      "op": "POP"
    },
    "161": {
      "op": "POP"
    },
    "162": {
      "op": "POP"
    },
    "163": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "jump": "o",
      "offset": [
        717,
        997
      ],
      "op": "JUMP",
      "path": "162"
    },
    "164": {
      "op": "JUMPDEST"
    },
    "165": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "167": {
      "op": "DUP1"
    },
    "168": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "170": {
      "op": "DUP4"
    },
    "171": {
      "op": "DUP6"
    },
    "172": {
      "op": "SUB"
    },
    "173": {
      "op": "SLT"
    },
    "174": {
      "op": "ISZERO"
    },
    "175": {
      "op": "PUSH1",
      "value": "0xB6"
    },
    "177": {
      "op": "JUMPI"
    },
    "178": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "180": {
      "op": "DUP1"
    },
    "181": {
      "op": "REVERT"
    },
    "182": {
      "op": "JUMPDEST"
    },
    "183": {
      "op": "DUP3"
    },
    "184": {
      "op": "CALLDATALOAD"
    },
    "185": {
      "op": "SWAP2"
    },
    "186": {
      "op": "POP"
    },
    "187": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "189": {
      "op": "DUP4"
    },
    "190": {
      "op": "ADD"
    },
    "191": {
      "op": "CALLDATALOAD"
    },
    "192": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "194": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "196": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "198": {
      "op": "SHL"
    },
    "199": {
      "op": "SUB"
    },
    "200": {
      "op": "DUP2"
    },
    "201": {
      "op": "AND"
    },
    "202": {
      "op": "DUP2"
    },
    "203": {
      "op": "EQ"
    },
    "204": {
      "op": "PUSH1",
      "value": "0xD3"
    },
    "206": {
      "op": "JUMPI"
    },
    "207": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "209": {
      "op": "DUP1"
    },
    "210": {
      "op": "REVERT"
    },
    "211": {
      "op": "JUMPDEST"
    },
    "212": {
      "op": "DUP1"
    },
    "213": {
      "op": "SWAP2"
    },
    "214": {
      "op": "POP"
    },
    "215": {
      "op": "POP"
    },
    "216": {
      "op": "SWAP3"
    },
    "217": {
      "op": "POP"
    },
    "218": {
      "op": "SWAP3"
    },
    "219": {
      "op": "SWAP1"
    },
    "220": {
      "op": "POP"
    },
    "221": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "1973c02edbbbaf8c3a262e12bc22f905e3ebae96",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"./IERC1820Implementer.sol\";\n\n/**\n * @dev Implementation of the {IERC1820Implementer} interface.\n *\n * Contracts may inherit from this and call {_registerInterfaceForAddress} to\n * declare their willingness to be implementers.\n * {IERC1820Registry-setInterfaceImplementer} should then be called for the\n * registration to be complete.\n */\ncontract ERC1820Implementer is IERC1820Implementer {\n    bytes32 private constant _ERC1820_ACCEPT_MAGIC = keccak256(\"ERC1820_ACCEPT_MAGIC\");\n\n    mapping(bytes32 => mapping(address => bool)) private _supportedInterfaces;\n\n    /**\n     * @dev See {IERC1820Implementer-canImplementInterfaceForAddress}.\n     */\n    function canImplementInterfaceForAddress(bytes32 interfaceHash, address account)\n        public\n        view\n        virtual\n        override\n        returns (bytes32)\n    {\n        return _supportedInterfaces[interfaceHash][account] ? _ERC1820_ACCEPT_MAGIC : bytes32(0x00);\n    }\n\n    /**\n     * @dev Declares the contract as willing to be an implementer of\n     * `interfaceHash` for `account`.\n     *\n     * See {IERC1820Registry-setInterfaceImplementer} and\n     * {IERC1820Registry-interfaceHash}.\n     */\n    function _registerInterfaceForAddress(bytes32 interfaceHash, address account) internal virtual {\n        _supportedInterfaces[interfaceHash][account] = true;\n    }\n}\n",
  "sourceMap": "404:993:162:-:0;;;;;;;;;;;;;;;;;;;",
  "sourcePath": "contracts/openzeppelin/contracts/utils/introspection/ERC1820Implementer.sol",
  "type": "contract"
}