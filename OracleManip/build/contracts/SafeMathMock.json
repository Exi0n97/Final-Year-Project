{
  "abi": [
    {
      "inputs": [],
      "name": "addMemoryCheck",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "mem",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "divMemoryCheck",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "mem",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "a",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "b",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "errorMessage",
          "type": "string"
        }
      ],
      "name": "divWithMessage",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "a",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "b",
          "type": "uint256"
        }
      ],
      "name": "doAdd",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "a",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "b",
          "type": "uint256"
        }
      ],
      "name": "doDiv",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "a",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "b",
          "type": "uint256"
        }
      ],
      "name": "doMod",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "a",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "b",
          "type": "uint256"
        }
      ],
      "name": "doMul",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "a",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "b",
          "type": "uint256"
        }
      ],
      "name": "doSub",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "modMemoryCheck",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "mem",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "a",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "b",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "errorMessage",
          "type": "string"
        }
      ],
      "name": "modWithMessage",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "mulMemoryCheck",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "mem",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "subMemoryCheck",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "mem",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "a",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "b",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "errorMessage",
          "type": "string"
        }
      ],
      "name": "subWithMessage",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "a",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "b",
          "type": "uint256"
        }
      ],
      "name": "tryAdd",
      "outputs": [
        {
          "internalType": "bool",
          "name": "flag",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "a",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "b",
          "type": "uint256"
        }
      ],
      "name": "tryDiv",
      "outputs": [
        {
          "internalType": "bool",
          "name": "flag",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "a",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "b",
          "type": "uint256"
        }
      ],
      "name": "tryMod",
      "outputs": [
        {
          "internalType": "bool",
          "name": "flag",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "a",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "b",
          "type": "uint256"
        }
      ],
      "name": "tryMul",
      "outputs": [
        {
          "internalType": "bool",
          "name": "flag",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "a",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "b",
          "type": "uint256"
        }
      ],
      "name": "trySub",
      "outputs": [
        {
          "internalType": "bool",
          "name": "flag",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "168": "contracts/openzeppelin/contracts/utils/math/SafeMath.sol",
    "80": "contracts/openzeppelin/contracts/mocks/SafeMathMock.sol"
  },
  "ast": {
    "absolutePath": "contracts/openzeppelin/contracts/mocks/SafeMathMock.sol",
    "exportedSymbols": {
      "SafeMath": [
        20738
      ],
      "SafeMathMock": [
        8292
      ]
    },
    "id": 8293,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 7908,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:80"
      },
      {
        "absolutePath": "contracts/openzeppelin/contracts/utils/math/SafeMath.sol",
        "file": "../utils/math/SafeMath.sol",
        "id": 7909,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 8293,
        "sourceUnit": 20739,
        "src": "58:36:80",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "SafeMathMock",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 8292,
        "linearizedBaseContracts": [
          8292
        ],
        "name": "SafeMathMock",
        "nameLocation": "105:12:80",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 7926,
              "nodeType": "Block",
              "src": "209:45:80",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 7922,
                        "name": "a",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7911,
                        "src": "242:1:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 7923,
                        "name": "b",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7913,
                        "src": "245:1:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 7920,
                        "name": "SafeMath",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20738,
                        "src": "226:8:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SafeMath_$20738_$",
                          "typeString": "type(library SafeMath)"
                        }
                      },
                      "id": 7921,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "tryAdd",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 20461,
                      "src": "226:15:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (bool,uint256)"
                      }
                    },
                    "id": 7924,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "226:21:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
                      "typeString": "tuple(bool,uint256)"
                    }
                  },
                  "functionReturnParameters": 7919,
                  "id": 7925,
                  "nodeType": "Return",
                  "src": "219:28:80"
                }
              ]
            },
            "functionSelector": "884557bf",
            "id": 7927,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tryAdd",
            "nameLocation": "133:6:80",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7914,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7911,
                  "mutability": "mutable",
                  "name": "a",
                  "nameLocation": "148:1:80",
                  "nodeType": "VariableDeclaration",
                  "scope": 7927,
                  "src": "140:9:80",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7910,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "140:7:80",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7913,
                  "mutability": "mutable",
                  "name": "b",
                  "nameLocation": "159:1:80",
                  "nodeType": "VariableDeclaration",
                  "scope": 7927,
                  "src": "151:9:80",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7912,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "151:7:80",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "139:22:80"
            },
            "returnParameters": {
              "id": 7919,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7916,
                  "mutability": "mutable",
                  "name": "flag",
                  "nameLocation": "188:4:80",
                  "nodeType": "VariableDeclaration",
                  "scope": 7927,
                  "src": "183:9:80",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 7915,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "183:4:80",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7918,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "202:5:80",
                  "nodeType": "VariableDeclaration",
                  "scope": 7927,
                  "src": "194:13:80",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7917,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "194:7:80",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "182:26:80"
            },
            "scope": 8292,
            "src": "124:130:80",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7944,
              "nodeType": "Block",
              "src": "345:45:80",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 7940,
                        "name": "a",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7929,
                        "src": "378:1:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 7941,
                        "name": "b",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7931,
                        "src": "381:1:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 7938,
                        "name": "SafeMath",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20738,
                        "src": "362:8:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SafeMath_$20738_$",
                          "typeString": "type(library SafeMath)"
                        }
                      },
                      "id": 7939,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "trySub",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 20489,
                      "src": "362:15:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (bool,uint256)"
                      }
                    },
                    "id": 7942,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "362:21:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
                      "typeString": "tuple(bool,uint256)"
                    }
                  },
                  "functionReturnParameters": 7937,
                  "id": 7943,
                  "nodeType": "Return",
                  "src": "355:28:80"
                }
              ]
            },
            "functionSelector": "a29962b1",
            "id": 7945,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "trySub",
            "nameLocation": "269:6:80",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7932,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7929,
                  "mutability": "mutable",
                  "name": "a",
                  "nameLocation": "284:1:80",
                  "nodeType": "VariableDeclaration",
                  "scope": 7945,
                  "src": "276:9:80",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7928,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "276:7:80",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7931,
                  "mutability": "mutable",
                  "name": "b",
                  "nameLocation": "295:1:80",
                  "nodeType": "VariableDeclaration",
                  "scope": 7945,
                  "src": "287:9:80",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7930,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "287:7:80",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "275:22:80"
            },
            "returnParameters": {
              "id": 7937,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7934,
                  "mutability": "mutable",
                  "name": "flag",
                  "nameLocation": "324:4:80",
                  "nodeType": "VariableDeclaration",
                  "scope": 7945,
                  "src": "319:9:80",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 7933,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "319:4:80",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7936,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "338:5:80",
                  "nodeType": "VariableDeclaration",
                  "scope": 7945,
                  "src": "330:13:80",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7935,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "330:7:80",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "318:26:80"
            },
            "scope": 8292,
            "src": "260:130:80",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7962,
              "nodeType": "Block",
              "src": "481:45:80",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 7958,
                        "name": "a",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7947,
                        "src": "514:1:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 7959,
                        "name": "b",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7949,
                        "src": "517:1:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 7956,
                        "name": "SafeMath",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20738,
                        "src": "498:8:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SafeMath_$20738_$",
                          "typeString": "type(library SafeMath)"
                        }
                      },
                      "id": 7957,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "tryMul",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 20531,
                      "src": "498:15:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (bool,uint256)"
                      }
                    },
                    "id": 7960,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "498:21:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
                      "typeString": "tuple(bool,uint256)"
                    }
                  },
                  "functionReturnParameters": 7955,
                  "id": 7961,
                  "nodeType": "Return",
                  "src": "491:28:80"
                }
              ]
            },
            "functionSelector": "6281efa4",
            "id": 7963,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tryMul",
            "nameLocation": "405:6:80",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7950,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7947,
                  "mutability": "mutable",
                  "name": "a",
                  "nameLocation": "420:1:80",
                  "nodeType": "VariableDeclaration",
                  "scope": 7963,
                  "src": "412:9:80",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7946,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "412:7:80",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7949,
                  "mutability": "mutable",
                  "name": "b",
                  "nameLocation": "431:1:80",
                  "nodeType": "VariableDeclaration",
                  "scope": 7963,
                  "src": "423:9:80",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7948,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "423:7:80",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "411:22:80"
            },
            "returnParameters": {
              "id": 7955,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7952,
                  "mutability": "mutable",
                  "name": "flag",
                  "nameLocation": "460:4:80",
                  "nodeType": "VariableDeclaration",
                  "scope": 7963,
                  "src": "455:9:80",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 7951,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "455:4:80",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7954,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "474:5:80",
                  "nodeType": "VariableDeclaration",
                  "scope": 7963,
                  "src": "466:13:80",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7953,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "466:7:80",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "454:26:80"
            },
            "scope": 8292,
            "src": "396:130:80",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7980,
              "nodeType": "Block",
              "src": "617:45:80",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 7976,
                        "name": "a",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7965,
                        "src": "650:1:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 7977,
                        "name": "b",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7967,
                        "src": "653:1:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 7974,
                        "name": "SafeMath",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20738,
                        "src": "634:8:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SafeMath_$20738_$",
                          "typeString": "type(library SafeMath)"
                        }
                      },
                      "id": 7975,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "tryDiv",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 20559,
                      "src": "634:15:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (bool,uint256)"
                      }
                    },
                    "id": 7978,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "634:21:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
                      "typeString": "tuple(bool,uint256)"
                    }
                  },
                  "functionReturnParameters": 7973,
                  "id": 7979,
                  "nodeType": "Return",
                  "src": "627:28:80"
                }
              ]
            },
            "functionSelector": "736ecb18",
            "id": 7981,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tryDiv",
            "nameLocation": "541:6:80",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7968,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7965,
                  "mutability": "mutable",
                  "name": "a",
                  "nameLocation": "556:1:80",
                  "nodeType": "VariableDeclaration",
                  "scope": 7981,
                  "src": "548:9:80",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7964,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "548:7:80",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7967,
                  "mutability": "mutable",
                  "name": "b",
                  "nameLocation": "567:1:80",
                  "nodeType": "VariableDeclaration",
                  "scope": 7981,
                  "src": "559:9:80",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7966,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "559:7:80",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "547:22:80"
            },
            "returnParameters": {
              "id": 7973,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7970,
                  "mutability": "mutable",
                  "name": "flag",
                  "nameLocation": "596:4:80",
                  "nodeType": "VariableDeclaration",
                  "scope": 7981,
                  "src": "591:9:80",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 7969,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "591:4:80",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7972,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "610:5:80",
                  "nodeType": "VariableDeclaration",
                  "scope": 7981,
                  "src": "602:13:80",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7971,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "602:7:80",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "590:26:80"
            },
            "scope": 8292,
            "src": "532:130:80",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7998,
              "nodeType": "Block",
              "src": "753:45:80",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 7994,
                        "name": "a",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7983,
                        "src": "786:1:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 7995,
                        "name": "b",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7985,
                        "src": "789:1:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 7992,
                        "name": "SafeMath",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20738,
                        "src": "770:8:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SafeMath_$20738_$",
                          "typeString": "type(library SafeMath)"
                        }
                      },
                      "id": 7993,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "tryMod",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 20587,
                      "src": "770:15:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (bool,uint256)"
                      }
                    },
                    "id": 7996,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "770:21:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
                      "typeString": "tuple(bool,uint256)"
                    }
                  },
                  "functionReturnParameters": 7991,
                  "id": 7997,
                  "nodeType": "Return",
                  "src": "763:28:80"
                }
              ]
            },
            "functionSelector": "38dc0867",
            "id": 7999,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tryMod",
            "nameLocation": "677:6:80",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7986,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7983,
                  "mutability": "mutable",
                  "name": "a",
                  "nameLocation": "692:1:80",
                  "nodeType": "VariableDeclaration",
                  "scope": 7999,
                  "src": "684:9:80",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7982,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "684:7:80",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7985,
                  "mutability": "mutable",
                  "name": "b",
                  "nameLocation": "703:1:80",
                  "nodeType": "VariableDeclaration",
                  "scope": 7999,
                  "src": "695:9:80",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7984,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "695:7:80",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "683:22:80"
            },
            "returnParameters": {
              "id": 7991,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7988,
                  "mutability": "mutable",
                  "name": "flag",
                  "nameLocation": "732:4:80",
                  "nodeType": "VariableDeclaration",
                  "scope": 7999,
                  "src": "727:9:80",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 7987,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "727:4:80",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7990,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "746:5:80",
                  "nodeType": "VariableDeclaration",
                  "scope": 7999,
                  "src": "738:13:80",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7989,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "738:7:80",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "726:26:80"
            },
            "scope": 8292,
            "src": "668:130:80",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 8014,
              "nodeType": "Block",
              "src": "958:42:80",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 8010,
                        "name": "a",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8001,
                        "src": "988:1:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 8011,
                        "name": "b",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8003,
                        "src": "991:1:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 8008,
                        "name": "SafeMath",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20738,
                        "src": "975:8:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SafeMath_$20738_$",
                          "typeString": "type(library SafeMath)"
                        }
                      },
                      "id": 8009,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "add",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 20602,
                      "src": "975:12:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 8012,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "975:18:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 8007,
                  "id": 8013,
                  "nodeType": "Return",
                  "src": "968:25:80"
                }
              ]
            },
            "functionSelector": "dcc721d2",
            "id": 8015,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "doAdd",
            "nameLocation": "900:5:80",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8004,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8001,
                  "mutability": "mutable",
                  "name": "a",
                  "nameLocation": "914:1:80",
                  "nodeType": "VariableDeclaration",
                  "scope": 8015,
                  "src": "906:9:80",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8000,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "906:7:80",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8003,
                  "mutability": "mutable",
                  "name": "b",
                  "nameLocation": "925:1:80",
                  "nodeType": "VariableDeclaration",
                  "scope": 8015,
                  "src": "917:9:80",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8002,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "917:7:80",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "905:22:80"
            },
            "returnParameters": {
              "id": 8007,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8006,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 8015,
                  "src": "949:7:80",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8005,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "949:7:80",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "948:9:80"
            },
            "scope": 8292,
            "src": "891:109:80",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 8030,
              "nodeType": "Block",
              "src": "1073:42:80",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 8026,
                        "name": "a",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8017,
                        "src": "1103:1:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 8027,
                        "name": "b",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8019,
                        "src": "1106:1:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 8024,
                        "name": "SafeMath",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20738,
                        "src": "1090:8:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SafeMath_$20738_$",
                          "typeString": "type(library SafeMath)"
                        }
                      },
                      "id": 8025,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sub",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 20617,
                      "src": "1090:12:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 8028,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1090:18:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 8023,
                  "id": 8029,
                  "nodeType": "Return",
                  "src": "1083:25:80"
                }
              ]
            },
            "functionSelector": "6c7ac637",
            "id": 8031,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "doSub",
            "nameLocation": "1015:5:80",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8020,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8017,
                  "mutability": "mutable",
                  "name": "a",
                  "nameLocation": "1029:1:80",
                  "nodeType": "VariableDeclaration",
                  "scope": 8031,
                  "src": "1021:9:80",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8016,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1021:7:80",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8019,
                  "mutability": "mutable",
                  "name": "b",
                  "nameLocation": "1040:1:80",
                  "nodeType": "VariableDeclaration",
                  "scope": 8031,
                  "src": "1032:9:80",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8018,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1032:7:80",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1020:22:80"
            },
            "returnParameters": {
              "id": 8023,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8022,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 8031,
                  "src": "1064:7:80",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8021,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1064:7:80",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1063:9:80"
            },
            "scope": 8292,
            "src": "1006:109:80",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 8046,
              "nodeType": "Block",
              "src": "1188:42:80",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 8042,
                        "name": "a",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8033,
                        "src": "1218:1:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 8043,
                        "name": "b",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8035,
                        "src": "1221:1:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 8040,
                        "name": "SafeMath",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20738,
                        "src": "1205:8:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SafeMath_$20738_$",
                          "typeString": "type(library SafeMath)"
                        }
                      },
                      "id": 8041,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mul",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 20632,
                      "src": "1205:12:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 8044,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1205:18:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 8039,
                  "id": 8045,
                  "nodeType": "Return",
                  "src": "1198:25:80"
                }
              ]
            },
            "functionSelector": "fb119198",
            "id": 8047,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "doMul",
            "nameLocation": "1130:5:80",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8036,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8033,
                  "mutability": "mutable",
                  "name": "a",
                  "nameLocation": "1144:1:80",
                  "nodeType": "VariableDeclaration",
                  "scope": 8047,
                  "src": "1136:9:80",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8032,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1136:7:80",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8035,
                  "mutability": "mutable",
                  "name": "b",
                  "nameLocation": "1155:1:80",
                  "nodeType": "VariableDeclaration",
                  "scope": 8047,
                  "src": "1147:9:80",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8034,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1147:7:80",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1135:22:80"
            },
            "returnParameters": {
              "id": 8039,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8038,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 8047,
                  "src": "1179:7:80",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8037,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1179:7:80",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1178:9:80"
            },
            "scope": 8292,
            "src": "1121:109:80",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 8062,
              "nodeType": "Block",
              "src": "1303:42:80",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 8058,
                        "name": "a",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8049,
                        "src": "1333:1:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 8059,
                        "name": "b",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8051,
                        "src": "1336:1:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 8056,
                        "name": "SafeMath",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20738,
                        "src": "1320:8:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SafeMath_$20738_$",
                          "typeString": "type(library SafeMath)"
                        }
                      },
                      "id": 8057,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "div",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 20647,
                      "src": "1320:12:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 8060,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1320:18:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 8055,
                  "id": 8061,
                  "nodeType": "Return",
                  "src": "1313:25:80"
                }
              ]
            },
            "functionSelector": "fc0ce503",
            "id": 8063,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "doDiv",
            "nameLocation": "1245:5:80",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8052,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8049,
                  "mutability": "mutable",
                  "name": "a",
                  "nameLocation": "1259:1:80",
                  "nodeType": "VariableDeclaration",
                  "scope": 8063,
                  "src": "1251:9:80",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8048,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1251:7:80",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8051,
                  "mutability": "mutable",
                  "name": "b",
                  "nameLocation": "1270:1:80",
                  "nodeType": "VariableDeclaration",
                  "scope": 8063,
                  "src": "1262:9:80",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8050,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1262:7:80",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1250:22:80"
            },
            "returnParameters": {
              "id": 8055,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8054,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 8063,
                  "src": "1294:7:80",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8053,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1294:7:80",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1293:9:80"
            },
            "scope": 8292,
            "src": "1236:109:80",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 8078,
              "nodeType": "Block",
              "src": "1418:42:80",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 8074,
                        "name": "a",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8065,
                        "src": "1448:1:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 8075,
                        "name": "b",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8067,
                        "src": "1451:1:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 8072,
                        "name": "SafeMath",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20738,
                        "src": "1435:8:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SafeMath_$20738_$",
                          "typeString": "type(library SafeMath)"
                        }
                      },
                      "id": 8073,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mod",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 20662,
                      "src": "1435:12:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 8076,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1435:18:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 8071,
                  "id": 8077,
                  "nodeType": "Return",
                  "src": "1428:25:80"
                }
              ]
            },
            "functionSelector": "869f602f",
            "id": 8079,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "doMod",
            "nameLocation": "1360:5:80",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8068,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8065,
                  "mutability": "mutable",
                  "name": "a",
                  "nameLocation": "1374:1:80",
                  "nodeType": "VariableDeclaration",
                  "scope": 8079,
                  "src": "1366:9:80",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8064,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1366:7:80",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8067,
                  "mutability": "mutable",
                  "name": "b",
                  "nameLocation": "1385:1:80",
                  "nodeType": "VariableDeclaration",
                  "scope": 8079,
                  "src": "1377:9:80",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8066,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1377:7:80",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1365:22:80"
            },
            "returnParameters": {
              "id": 8071,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8070,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 8079,
                  "src": "1409:7:80",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8069,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1409:7:80",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1408:9:80"
            },
            "scope": 8292,
            "src": "1351:109:80",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 8097,
              "nodeType": "Block",
              "src": "1600:56:80",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 8092,
                        "name": "a",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8081,
                        "src": "1630:1:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 8093,
                        "name": "b",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8083,
                        "src": "1633:1:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 8094,
                        "name": "errorMessage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8085,
                        "src": "1636:12:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "expression": {
                        "id": 8090,
                        "name": "SafeMath",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20738,
                        "src": "1617:8:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SafeMath_$20738_$",
                          "typeString": "type(library SafeMath)"
                        }
                      },
                      "id": 8091,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sub",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 20687,
                      "src": "1617:12:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
                      }
                    },
                    "id": 8095,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1617:32:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 8089,
                  "id": 8096,
                  "nodeType": "Return",
                  "src": "1610:39:80"
                }
              ]
            },
            "functionSelector": "9f5cec89",
            "id": 8098,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "subWithMessage",
            "nameLocation": "1475:14:80",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8086,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8081,
                  "mutability": "mutable",
                  "name": "a",
                  "nameLocation": "1507:1:80",
                  "nodeType": "VariableDeclaration",
                  "scope": 8098,
                  "src": "1499:9:80",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8080,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1499:7:80",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8083,
                  "mutability": "mutable",
                  "name": "b",
                  "nameLocation": "1526:1:80",
                  "nodeType": "VariableDeclaration",
                  "scope": 8098,
                  "src": "1518:9:80",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8082,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1518:7:80",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8085,
                  "mutability": "mutable",
                  "name": "errorMessage",
                  "nameLocation": "1551:12:80",
                  "nodeType": "VariableDeclaration",
                  "scope": 8098,
                  "src": "1537:26:80",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 8084,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1537:6:80",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1489:80:80"
            },
            "returnParameters": {
              "id": 8089,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8088,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 8098,
                  "src": "1591:7:80",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8087,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1591:7:80",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1590:9:80"
            },
            "scope": 8292,
            "src": "1466:190:80",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 8116,
              "nodeType": "Block",
              "src": "1796:56:80",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 8111,
                        "name": "a",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8100,
                        "src": "1826:1:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 8112,
                        "name": "b",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8102,
                        "src": "1829:1:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 8113,
                        "name": "errorMessage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8104,
                        "src": "1832:12:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "expression": {
                        "id": 8109,
                        "name": "SafeMath",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20738,
                        "src": "1813:8:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SafeMath_$20738_$",
                          "typeString": "type(library SafeMath)"
                        }
                      },
                      "id": 8110,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "div",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 20712,
                      "src": "1813:12:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
                      }
                    },
                    "id": 8114,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1813:32:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 8108,
                  "id": 8115,
                  "nodeType": "Return",
                  "src": "1806:39:80"
                }
              ]
            },
            "functionSelector": "3449b5fb",
            "id": 8117,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "divWithMessage",
            "nameLocation": "1671:14:80",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8105,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8100,
                  "mutability": "mutable",
                  "name": "a",
                  "nameLocation": "1703:1:80",
                  "nodeType": "VariableDeclaration",
                  "scope": 8117,
                  "src": "1695:9:80",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8099,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1695:7:80",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8102,
                  "mutability": "mutable",
                  "name": "b",
                  "nameLocation": "1722:1:80",
                  "nodeType": "VariableDeclaration",
                  "scope": 8117,
                  "src": "1714:9:80",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8101,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1714:7:80",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8104,
                  "mutability": "mutable",
                  "name": "errorMessage",
                  "nameLocation": "1747:12:80",
                  "nodeType": "VariableDeclaration",
                  "scope": 8117,
                  "src": "1733:26:80",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 8103,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1733:6:80",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1685:80:80"
            },
            "returnParameters": {
              "id": 8108,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8107,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 8117,
                  "src": "1787:7:80",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8106,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1787:7:80",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1786:9:80"
            },
            "scope": 8292,
            "src": "1662:190:80",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 8135,
              "nodeType": "Block",
              "src": "1992:56:80",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 8130,
                        "name": "a",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8119,
                        "src": "2022:1:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 8131,
                        "name": "b",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8121,
                        "src": "2025:1:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 8132,
                        "name": "errorMessage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8123,
                        "src": "2028:12:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "expression": {
                        "id": 8128,
                        "name": "SafeMath",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20738,
                        "src": "2009:8:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SafeMath_$20738_$",
                          "typeString": "type(library SafeMath)"
                        }
                      },
                      "id": 8129,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mod",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 20737,
                      "src": "2009:12:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
                      }
                    },
                    "id": 8133,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2009:32:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 8127,
                  "id": 8134,
                  "nodeType": "Return",
                  "src": "2002:39:80"
                }
              ]
            },
            "functionSelector": "a155bd62",
            "id": 8136,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "modWithMessage",
            "nameLocation": "1867:14:80",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8124,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8119,
                  "mutability": "mutable",
                  "name": "a",
                  "nameLocation": "1899:1:80",
                  "nodeType": "VariableDeclaration",
                  "scope": 8136,
                  "src": "1891:9:80",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8118,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1891:7:80",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8121,
                  "mutability": "mutable",
                  "name": "b",
                  "nameLocation": "1918:1:80",
                  "nodeType": "VariableDeclaration",
                  "scope": 8136,
                  "src": "1910:9:80",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8120,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1910:7:80",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8123,
                  "mutability": "mutable",
                  "name": "errorMessage",
                  "nameLocation": "1943:12:80",
                  "nodeType": "VariableDeclaration",
                  "scope": 8136,
                  "src": "1929:26:80",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 8122,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1929:6:80",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1881:80:80"
            },
            "returnParameters": {
              "id": 8127,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8126,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 8136,
                  "src": "1983:7:80",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8125,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1983:7:80",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1982:9:80"
            },
            "scope": 8292,
            "src": "1858:190:80",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 8166,
              "nodeType": "Block",
              "src": "2114:255:80",
              "statements": [
                {
                  "assignments": [
                    8142
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 8142,
                      "mutability": "mutable",
                      "name": "length",
                      "nameLocation": "2132:6:80",
                      "nodeType": "VariableDeclaration",
                      "scope": 8166,
                      "src": "2124:14:80",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 8141,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2124:7:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 8144,
                  "initialValue": {
                    "hexValue": "3332",
                    "id": 8143,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2141:2:80",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_32_by_1",
                      "typeString": "int_const 32"
                    },
                    "value": "32"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2124:19:80"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "2162:42:80",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "2176:18:80",
                        "value": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2189:4:80",
                              "type": "",
                              "value": "0x40"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "2183:5:80"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2183:11:80"
                        },
                        "variableNames": [
                          {
                            "name": "mem",
                            "nodeType": "YulIdentifier",
                            "src": "2176:3:80"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "istanbul",
                  "externalReferences": [
                    {
                      "declaration": 8139,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "2176:3:80",
                      "valueSize": 1
                    }
                  ],
                  "id": 8145,
                  "nodeType": "InlineAssembly",
                  "src": "2153:51:80"
                },
                {
                  "body": {
                    "id": 8163,
                    "nodeType": "Block",
                    "src": "2250:43:80",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "31",
                              "id": 8159,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2277:1:80",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            {
                              "hexValue": "31",
                              "id": 8160,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2280:1:80",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              }
                            ],
                            "expression": {
                              "id": 8156,
                              "name": "SafeMath",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 20738,
                              "src": "2264:8:80",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_SafeMath_$20738_$",
                                "typeString": "type(library SafeMath)"
                              }
                            },
                            "id": 8158,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "add",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 20602,
                            "src": "2264:12:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 8161,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2264:18:80",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 8162,
                        "nodeType": "ExpressionStatement",
                        "src": "2264:18:80"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 8152,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 8150,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8147,
                      "src": "2233:1:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 8151,
                      "name": "length",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8142,
                      "src": "2237:6:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2233:10:80",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 8164,
                  "initializationExpression": {
                    "assignments": [
                      8147
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 8147,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "2226:1:80",
                        "nodeType": "VariableDeclaration",
                        "scope": 8164,
                        "src": "2218:9:80",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 8146,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2218:7:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 8149,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 8148,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2230:1:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "2218:13:80"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 8154,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": true,
                      "src": "2245:3:80",
                      "subExpression": {
                        "id": 8153,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8147,
                        "src": "2247:1:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 8155,
                    "nodeType": "ExpressionStatement",
                    "src": "2245:3:80"
                  },
                  "nodeType": "ForStatement",
                  "src": "2213:80:80"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "2311:52:80",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "2325:28:80",
                        "value": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2342:4:80",
                                  "type": "",
                                  "value": "0x40"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "2336:5:80"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2336:11:80"
                            },
                            {
                              "name": "mem",
                              "nodeType": "YulIdentifier",
                              "src": "2349:3:80"
                            }
                          ],
                          "functionName": {
                            "name": "sub",
                            "nodeType": "YulIdentifier",
                            "src": "2332:3:80"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2332:21:80"
                        },
                        "variableNames": [
                          {
                            "name": "mem",
                            "nodeType": "YulIdentifier",
                            "src": "2325:3:80"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "istanbul",
                  "externalReferences": [
                    {
                      "declaration": 8139,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "2325:3:80",
                      "valueSize": 1
                    },
                    {
                      "declaration": 8139,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "2349:3:80",
                      "valueSize": 1
                    }
                  ],
                  "id": 8165,
                  "nodeType": "InlineAssembly",
                  "src": "2302:61:80"
                }
              ]
            },
            "functionSelector": "fb24c860",
            "id": 8167,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addMemoryCheck",
            "nameLocation": "2063:14:80",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8137,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2077:2:80"
            },
            "returnParameters": {
              "id": 8140,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8139,
                  "mutability": "mutable",
                  "name": "mem",
                  "nameLocation": "2109:3:80",
                  "nodeType": "VariableDeclaration",
                  "scope": 8167,
                  "src": "2101:11:80",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8138,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2101:7:80",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2100:13:80"
            },
            "scope": 8292,
            "src": "2054:315:80",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 8197,
              "nodeType": "Block",
              "src": "2435:255:80",
              "statements": [
                {
                  "assignments": [
                    8173
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 8173,
                      "mutability": "mutable",
                      "name": "length",
                      "nameLocation": "2453:6:80",
                      "nodeType": "VariableDeclaration",
                      "scope": 8197,
                      "src": "2445:14:80",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 8172,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2445:7:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 8175,
                  "initialValue": {
                    "hexValue": "3332",
                    "id": 8174,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2462:2:80",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_32_by_1",
                      "typeString": "int_const 32"
                    },
                    "value": "32"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2445:19:80"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "2483:42:80",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "2497:18:80",
                        "value": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2510:4:80",
                              "type": "",
                              "value": "0x40"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "2504:5:80"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2504:11:80"
                        },
                        "variableNames": [
                          {
                            "name": "mem",
                            "nodeType": "YulIdentifier",
                            "src": "2497:3:80"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "istanbul",
                  "externalReferences": [
                    {
                      "declaration": 8170,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "2497:3:80",
                      "valueSize": 1
                    }
                  ],
                  "id": 8176,
                  "nodeType": "InlineAssembly",
                  "src": "2474:51:80"
                },
                {
                  "body": {
                    "id": 8194,
                    "nodeType": "Block",
                    "src": "2571:43:80",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "31",
                              "id": 8190,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2598:1:80",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            {
                              "hexValue": "31",
                              "id": 8191,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2601:1:80",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              }
                            ],
                            "expression": {
                              "id": 8187,
                              "name": "SafeMath",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 20738,
                              "src": "2585:8:80",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_SafeMath_$20738_$",
                                "typeString": "type(library SafeMath)"
                              }
                            },
                            "id": 8189,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sub",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 20617,
                            "src": "2585:12:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 8192,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2585:18:80",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 8193,
                        "nodeType": "ExpressionStatement",
                        "src": "2585:18:80"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 8183,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 8181,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8178,
                      "src": "2554:1:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 8182,
                      "name": "length",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8173,
                      "src": "2558:6:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2554:10:80",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 8195,
                  "initializationExpression": {
                    "assignments": [
                      8178
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 8178,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "2547:1:80",
                        "nodeType": "VariableDeclaration",
                        "scope": 8195,
                        "src": "2539:9:80",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 8177,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2539:7:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 8180,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 8179,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2551:1:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "2539:13:80"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 8185,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": true,
                      "src": "2566:3:80",
                      "subExpression": {
                        "id": 8184,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8178,
                        "src": "2568:1:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 8186,
                    "nodeType": "ExpressionStatement",
                    "src": "2566:3:80"
                  },
                  "nodeType": "ForStatement",
                  "src": "2534:80:80"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "2632:52:80",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "2646:28:80",
                        "value": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2663:4:80",
                                  "type": "",
                                  "value": "0x40"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "2657:5:80"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2657:11:80"
                            },
                            {
                              "name": "mem",
                              "nodeType": "YulIdentifier",
                              "src": "2670:3:80"
                            }
                          ],
                          "functionName": {
                            "name": "sub",
                            "nodeType": "YulIdentifier",
                            "src": "2653:3:80"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2653:21:80"
                        },
                        "variableNames": [
                          {
                            "name": "mem",
                            "nodeType": "YulIdentifier",
                            "src": "2646:3:80"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "istanbul",
                  "externalReferences": [
                    {
                      "declaration": 8170,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "2646:3:80",
                      "valueSize": 1
                    },
                    {
                      "declaration": 8170,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "2670:3:80",
                      "valueSize": 1
                    }
                  ],
                  "id": 8196,
                  "nodeType": "InlineAssembly",
                  "src": "2623:61:80"
                }
              ]
            },
            "functionSelector": "fb999ded",
            "id": 8198,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "subMemoryCheck",
            "nameLocation": "2384:14:80",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8168,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2398:2:80"
            },
            "returnParameters": {
              "id": 8171,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8170,
                  "mutability": "mutable",
                  "name": "mem",
                  "nameLocation": "2430:3:80",
                  "nodeType": "VariableDeclaration",
                  "scope": 8198,
                  "src": "2422:11:80",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8169,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2422:7:80",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2421:13:80"
            },
            "scope": 8292,
            "src": "2375:315:80",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 8228,
              "nodeType": "Block",
              "src": "2756:255:80",
              "statements": [
                {
                  "assignments": [
                    8204
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 8204,
                      "mutability": "mutable",
                      "name": "length",
                      "nameLocation": "2774:6:80",
                      "nodeType": "VariableDeclaration",
                      "scope": 8228,
                      "src": "2766:14:80",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 8203,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2766:7:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 8206,
                  "initialValue": {
                    "hexValue": "3332",
                    "id": 8205,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2783:2:80",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_32_by_1",
                      "typeString": "int_const 32"
                    },
                    "value": "32"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2766:19:80"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "2804:42:80",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "2818:18:80",
                        "value": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2831:4:80",
                              "type": "",
                              "value": "0x40"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "2825:5:80"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2825:11:80"
                        },
                        "variableNames": [
                          {
                            "name": "mem",
                            "nodeType": "YulIdentifier",
                            "src": "2818:3:80"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "istanbul",
                  "externalReferences": [
                    {
                      "declaration": 8201,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "2818:3:80",
                      "valueSize": 1
                    }
                  ],
                  "id": 8207,
                  "nodeType": "InlineAssembly",
                  "src": "2795:51:80"
                },
                {
                  "body": {
                    "id": 8225,
                    "nodeType": "Block",
                    "src": "2892:43:80",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "31",
                              "id": 8221,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2919:1:80",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            {
                              "hexValue": "31",
                              "id": 8222,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2922:1:80",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              }
                            ],
                            "expression": {
                              "id": 8218,
                              "name": "SafeMath",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 20738,
                              "src": "2906:8:80",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_SafeMath_$20738_$",
                                "typeString": "type(library SafeMath)"
                              }
                            },
                            "id": 8220,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "mul",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 20632,
                            "src": "2906:12:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 8223,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2906:18:80",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 8224,
                        "nodeType": "ExpressionStatement",
                        "src": "2906:18:80"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 8214,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 8212,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8209,
                      "src": "2875:1:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 8213,
                      "name": "length",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8204,
                      "src": "2879:6:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2875:10:80",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 8226,
                  "initializationExpression": {
                    "assignments": [
                      8209
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 8209,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "2868:1:80",
                        "nodeType": "VariableDeclaration",
                        "scope": 8226,
                        "src": "2860:9:80",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 8208,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2860:7:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 8211,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 8210,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2872:1:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "2860:13:80"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 8216,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": true,
                      "src": "2887:3:80",
                      "subExpression": {
                        "id": 8215,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8209,
                        "src": "2889:1:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 8217,
                    "nodeType": "ExpressionStatement",
                    "src": "2887:3:80"
                  },
                  "nodeType": "ForStatement",
                  "src": "2855:80:80"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "2953:52:80",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "2967:28:80",
                        "value": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2984:4:80",
                                  "type": "",
                                  "value": "0x40"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "2978:5:80"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2978:11:80"
                            },
                            {
                              "name": "mem",
                              "nodeType": "YulIdentifier",
                              "src": "2991:3:80"
                            }
                          ],
                          "functionName": {
                            "name": "sub",
                            "nodeType": "YulIdentifier",
                            "src": "2974:3:80"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2974:21:80"
                        },
                        "variableNames": [
                          {
                            "name": "mem",
                            "nodeType": "YulIdentifier",
                            "src": "2967:3:80"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "istanbul",
                  "externalReferences": [
                    {
                      "declaration": 8201,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "2967:3:80",
                      "valueSize": 1
                    },
                    {
                      "declaration": 8201,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "2991:3:80",
                      "valueSize": 1
                    }
                  ],
                  "id": 8227,
                  "nodeType": "InlineAssembly",
                  "src": "2944:61:80"
                }
              ]
            },
            "functionSelector": "7e86d25c",
            "id": 8229,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mulMemoryCheck",
            "nameLocation": "2705:14:80",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8199,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2719:2:80"
            },
            "returnParameters": {
              "id": 8202,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8201,
                  "mutability": "mutable",
                  "name": "mem",
                  "nameLocation": "2751:3:80",
                  "nodeType": "VariableDeclaration",
                  "scope": 8229,
                  "src": "2743:11:80",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8200,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2743:7:80",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2742:13:80"
            },
            "scope": 8292,
            "src": "2696:315:80",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 8259,
              "nodeType": "Block",
              "src": "3077:255:80",
              "statements": [
                {
                  "assignments": [
                    8235
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 8235,
                      "mutability": "mutable",
                      "name": "length",
                      "nameLocation": "3095:6:80",
                      "nodeType": "VariableDeclaration",
                      "scope": 8259,
                      "src": "3087:14:80",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 8234,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3087:7:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 8237,
                  "initialValue": {
                    "hexValue": "3332",
                    "id": 8236,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3104:2:80",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_32_by_1",
                      "typeString": "int_const 32"
                    },
                    "value": "32"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3087:19:80"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "3125:42:80",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "3139:18:80",
                        "value": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3152:4:80",
                              "type": "",
                              "value": "0x40"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "3146:5:80"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3146:11:80"
                        },
                        "variableNames": [
                          {
                            "name": "mem",
                            "nodeType": "YulIdentifier",
                            "src": "3139:3:80"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "istanbul",
                  "externalReferences": [
                    {
                      "declaration": 8232,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "3139:3:80",
                      "valueSize": 1
                    }
                  ],
                  "id": 8238,
                  "nodeType": "InlineAssembly",
                  "src": "3116:51:80"
                },
                {
                  "body": {
                    "id": 8256,
                    "nodeType": "Block",
                    "src": "3213:43:80",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "31",
                              "id": 8252,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3240:1:80",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            {
                              "hexValue": "31",
                              "id": 8253,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3243:1:80",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              }
                            ],
                            "expression": {
                              "id": 8249,
                              "name": "SafeMath",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 20738,
                              "src": "3227:8:80",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_SafeMath_$20738_$",
                                "typeString": "type(library SafeMath)"
                              }
                            },
                            "id": 8251,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "div",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 20647,
                            "src": "3227:12:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 8254,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3227:18:80",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 8255,
                        "nodeType": "ExpressionStatement",
                        "src": "3227:18:80"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 8245,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 8243,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8240,
                      "src": "3196:1:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 8244,
                      "name": "length",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8235,
                      "src": "3200:6:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3196:10:80",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 8257,
                  "initializationExpression": {
                    "assignments": [
                      8240
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 8240,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "3189:1:80",
                        "nodeType": "VariableDeclaration",
                        "scope": 8257,
                        "src": "3181:9:80",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 8239,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3181:7:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 8242,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 8241,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3193:1:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "3181:13:80"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 8247,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": true,
                      "src": "3208:3:80",
                      "subExpression": {
                        "id": 8246,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8240,
                        "src": "3210:1:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 8248,
                    "nodeType": "ExpressionStatement",
                    "src": "3208:3:80"
                  },
                  "nodeType": "ForStatement",
                  "src": "3176:80:80"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "3274:52:80",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "3288:28:80",
                        "value": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "3305:4:80",
                                  "type": "",
                                  "value": "0x40"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "3299:5:80"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3299:11:80"
                            },
                            {
                              "name": "mem",
                              "nodeType": "YulIdentifier",
                              "src": "3312:3:80"
                            }
                          ],
                          "functionName": {
                            "name": "sub",
                            "nodeType": "YulIdentifier",
                            "src": "3295:3:80"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3295:21:80"
                        },
                        "variableNames": [
                          {
                            "name": "mem",
                            "nodeType": "YulIdentifier",
                            "src": "3288:3:80"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "istanbul",
                  "externalReferences": [
                    {
                      "declaration": 8232,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "3288:3:80",
                      "valueSize": 1
                    },
                    {
                      "declaration": 8232,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "3312:3:80",
                      "valueSize": 1
                    }
                  ],
                  "id": 8258,
                  "nodeType": "InlineAssembly",
                  "src": "3265:61:80"
                }
              ]
            },
            "functionSelector": "c460ae04",
            "id": 8260,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "divMemoryCheck",
            "nameLocation": "3026:14:80",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8230,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3040:2:80"
            },
            "returnParameters": {
              "id": 8233,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8232,
                  "mutability": "mutable",
                  "name": "mem",
                  "nameLocation": "3072:3:80",
                  "nodeType": "VariableDeclaration",
                  "scope": 8260,
                  "src": "3064:11:80",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8231,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3064:7:80",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3063:13:80"
            },
            "scope": 8292,
            "src": "3017:315:80",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 8290,
              "nodeType": "Block",
              "src": "3398:255:80",
              "statements": [
                {
                  "assignments": [
                    8266
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 8266,
                      "mutability": "mutable",
                      "name": "length",
                      "nameLocation": "3416:6:80",
                      "nodeType": "VariableDeclaration",
                      "scope": 8290,
                      "src": "3408:14:80",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 8265,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3408:7:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 8268,
                  "initialValue": {
                    "hexValue": "3332",
                    "id": 8267,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3425:2:80",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_32_by_1",
                      "typeString": "int_const 32"
                    },
                    "value": "32"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3408:19:80"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "3446:42:80",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "3460:18:80",
                        "value": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3473:4:80",
                              "type": "",
                              "value": "0x40"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "3467:5:80"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3467:11:80"
                        },
                        "variableNames": [
                          {
                            "name": "mem",
                            "nodeType": "YulIdentifier",
                            "src": "3460:3:80"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "istanbul",
                  "externalReferences": [
                    {
                      "declaration": 8263,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "3460:3:80",
                      "valueSize": 1
                    }
                  ],
                  "id": 8269,
                  "nodeType": "InlineAssembly",
                  "src": "3437:51:80"
                },
                {
                  "body": {
                    "id": 8287,
                    "nodeType": "Block",
                    "src": "3534:43:80",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "31",
                              "id": 8283,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3561:1:80",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            {
                              "hexValue": "31",
                              "id": 8284,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3564:1:80",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              }
                            ],
                            "expression": {
                              "id": 8280,
                              "name": "SafeMath",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 20738,
                              "src": "3548:8:80",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_SafeMath_$20738_$",
                                "typeString": "type(library SafeMath)"
                              }
                            },
                            "id": 8282,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "mod",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 20662,
                            "src": "3548:12:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 8285,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3548:18:80",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 8286,
                        "nodeType": "ExpressionStatement",
                        "src": "3548:18:80"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 8276,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 8274,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8271,
                      "src": "3517:1:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 8275,
                      "name": "length",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8266,
                      "src": "3521:6:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3517:10:80",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 8288,
                  "initializationExpression": {
                    "assignments": [
                      8271
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 8271,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "3510:1:80",
                        "nodeType": "VariableDeclaration",
                        "scope": 8288,
                        "src": "3502:9:80",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 8270,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3502:7:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 8273,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 8272,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3514:1:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "3502:13:80"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 8278,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": true,
                      "src": "3529:3:80",
                      "subExpression": {
                        "id": 8277,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8271,
                        "src": "3531:1:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 8279,
                    "nodeType": "ExpressionStatement",
                    "src": "3529:3:80"
                  },
                  "nodeType": "ForStatement",
                  "src": "3497:80:80"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "3595:52:80",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "3609:28:80",
                        "value": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "3626:4:80",
                                  "type": "",
                                  "value": "0x40"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "3620:5:80"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3620:11:80"
                            },
                            {
                              "name": "mem",
                              "nodeType": "YulIdentifier",
                              "src": "3633:3:80"
                            }
                          ],
                          "functionName": {
                            "name": "sub",
                            "nodeType": "YulIdentifier",
                            "src": "3616:3:80"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3616:21:80"
                        },
                        "variableNames": [
                          {
                            "name": "mem",
                            "nodeType": "YulIdentifier",
                            "src": "3609:3:80"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "istanbul",
                  "externalReferences": [
                    {
                      "declaration": 8263,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "3609:3:80",
                      "valueSize": 1
                    },
                    {
                      "declaration": 8263,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "3633:3:80",
                      "valueSize": 1
                    }
                  ],
                  "id": 8289,
                  "nodeType": "InlineAssembly",
                  "src": "3586:61:80"
                }
              ]
            },
            "functionSelector": "6f91e802",
            "id": 8291,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "modMemoryCheck",
            "nameLocation": "3347:14:80",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8261,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3361:2:80"
            },
            "returnParameters": {
              "id": 8264,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8263,
                  "mutability": "mutable",
                  "name": "mem",
                  "nameLocation": "3393:3:80",
                  "nodeType": "VariableDeclaration",
                  "scope": 8291,
                  "src": "3385:11:80",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8262,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3385:7:80",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3384:13:80"
            },
            "scope": 8292,
            "src": "3338:315:80",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 8293,
        "src": "96:3559:80",
        "usedErrors": []
      }
    ],
    "src": "33:3623:80"
  },
  "bytecode": "608060405234801561001057600080fd5b50610814806100206000396000f3fe608060405234801561001057600080fd5b50600436106101165760003560e01c80639f5cec89116100a2578063dcc721d211610071578063dcc721d21461021b578063fb1191981461022e578063fb24c86014610241578063fb999ded14610249578063fc0ce5031461025157600080fd5b80639f5cec89146101da578063a155bd62146101ed578063a29962b114610200578063c460ae041461021357600080fd5b80636f91e802116100e95780636f91e80214610191578063736ecb18146101995780637e86d25c146101ac578063869f602f146101b4578063884557bf146101c757600080fd5b80633449b5fb1461011b57806338dc0867146101415780636281efa41461016b5780636c7ac6371461017e575b600080fd5b61012e6101293660046105e6565b610264565b6040519081526020015b60405180910390f35b61015461014f3660046106aa565b610279565b604080519215158352602083019190915201610138565b6101546101793660046106aa565b610292565b61012e61018c3660046106aa565b61029f565b61012e6102b2565b6101546101a73660046106aa565b6102e7565b61012e6102f4565b61012e6101c23660046106aa565b610320565b6101546101d53660046106aa565b61032c565b61012e6101e83660046105e6565b610339565b61012e6101fb3660046105e6565b610346565b61015461020e3660046106aa565b610353565b61012e610360565b61012e6102293660046106aa565b61038c565b61012e61023c3660046106aa565b610398565b61012e6103a4565b61012e6103d0565b61012e61025f3660046106aa565b6103fc565b6000610271848484610408565b949350505050565b600080610286848461044b565b915091505b9250929050565b600080610286848461047b565b60006102ab83836104c1565b9392505050565b604051602060005b818110156102de576102cd6001806104cd565b506102d7816106e2565b90506102ba565b50506040510390565b60008061028684846104d9565b604051602060005b818110156102de5761030f600180610509565b50610319816106e2565b90506102fc565b60006102ab83836104cd565b6000806102868484610515565b6000610271848484610530565b600061027184848461055c565b6000806102868484610596565b604051602060005b818110156102de5761037b6001806105b8565b50610385816106e2565b9050610368565b60006102ab83836105c4565b60006102ab8383610509565b604051602060005b818110156102de576103bf6001806105c4565b506103c9816106e2565b90506103ac565b604051602060005b818110156102de576103eb6001806104c1565b506103f5816106e2565b90506103d8565b60006102ab83836105b8565b600081836104325760405162461bcd60e51b815260040161042991906106fd565b60405180910390fd5b5082848161044257610442610752565b04949350505050565b6000808261045e5750600090508061028b565b600183858161046f5761046f610752565b06915091509250929050565b6000808361048f575060019050600061028b565b838302838582816104a2576104a2610752565b04146104b557600080925092505061028b565b60019590945092505050565b60006102ab8284610768565b60006102ab828461077f565b600080826104ec5750600090508061028b565b60018385816104fd576104fd610752565b04915091509250929050565b60006102ab8284610793565b600080838301848110156104b557600080925092505061028b565b600081848411156105545760405162461bcd60e51b815260040161042991906106fd565b505050900390565b6000818361057d5760405162461bcd60e51b815260040161042991906106fd565b5082848161058d5761058d610752565b06949350505050565b600080838311156105ac5750600090508061028b565b50600193919092039150565b60006102ab82846107b2565b60006102ab82846107c6565b634e487b7160e01b600052604160045260246000fd5b6000806000606084860312156105fb57600080fd5b8335925060208401359150604084013567ffffffffffffffff8082111561062157600080fd5b818601915086601f83011261063557600080fd5b813581811115610647576106476105d0565b604051601f8201601f19908116603f0116810190838211818310171561066f5761066f6105d0565b8160405282815289602084870101111561068857600080fd5b8260208601602083013760006020848301015280955050505050509250925092565b600080604083850312156106bd57600080fd5b50508035926020909101359150565b634e487b7160e01b600052601160045260246000fd5b60006000198214156106f6576106f66106cc565b5060010190565b600060208083528351808285015260005b8181101561072a5785810183015185820160400152820161070e565b8181111561073c576000604083870101525b50601f01601f1916929092016040019392505050565b634e487b7160e01b600052601260045260246000fd5b60008282101561077a5761077a6106cc565b500390565b60008261078e5761078e610752565b500690565b60008160001904831182151516156107ad576107ad6106cc565b500290565b6000826107c1576107c1610752565b500490565b600082198211156107d9576107d96106cc565b50019056fea2646970667358221220618a9c98d18d90fb0eb83055093e3ea8d23532e97ce501b550bd4dc5fb5cf4b564736f6c634300080c0033",
  "bytecodeSha1": "4bba34440cff6371d7b3d662e090f62a395bcdd6",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.12+commit.f00d7308"
  },
  "contractName": "SafeMathMock",
  "coverageMap": {
    "branches": {
      "168": {
        "SafeMath.div": {
          "44": [
            5758,
            5763,
            true
          ]
        },
        "SafeMath.mod": {
          "51": [
            6634,
            6639,
            true
          ]
        },
        "SafeMath.sub": {
          "50": [
            5043,
            5049,
            true
          ]
        },
        "SafeMath.tryAdd": {
          "49": [
            702,
            707,
            false
          ]
        },
        "SafeMath.tryDiv": {
          "48": [
            2012,
            2018,
            false
          ]
        },
        "SafeMath.tryMod": {
          "45": [
            2361,
            2367,
            false
          ]
        },
        "SafeMath.tryMul": {
          "46": [
            1600,
            1606,
            false
          ],
          "47": [
            1673,
            1683,
            false
          ]
        },
        "SafeMath.trySub": {
          "52": [
            1033,
            1038,
            false
          ]
        }
      },
      "80": {}
    },
    "statements": {
      "168": {
        "SafeMath.add": {
          "43": [
            2749,
            2761
          ]
        },
        "SafeMath.div": {
          "23": [
            5750,
            5778
          ],
          "24": [
            5792,
            5804
          ],
          "42": [
            3844,
            3856
          ]
        },
        "SafeMath.mod": {
          "31": [
            4393,
            4405
          ],
          "38": [
            6626,
            6654
          ],
          "39": [
            6668,
            6680
          ]
        },
        "SafeMath.mul": {
          "34": [
            3459,
            3471
          ]
        },
        "SafeMath.sub": {
          "30": [
            3116,
            3128
          ],
          "36": [
            5035,
            5064
          ],
          "37": [
            5078,
            5090
          ]
        },
        "SafeMath.tryAdd": {
          "35": [
            709,
            726
          ]
        },
        "SafeMath.tryDiv": {
          "32": [
            2020,
            2037
          ],
          "33": [
            2051,
            2071
          ]
        },
        "SafeMath.tryMod": {
          "25": [
            2369,
            2386
          ],
          "26": [
            2400,
            2420
          ]
        },
        "SafeMath.tryMul": {
          "27": [
            1608,
            1624
          ],
          "28": [
            1685,
            1702
          ],
          "29": [
            1716,
            1732
          ]
        },
        "SafeMath.trySub": {
          "40": [
            1040,
            1057
          ],
          "41": [
            1071,
            1091
          ]
        }
      },
      "80": {
        "SafeMathMock.addMemoryCheck": {
          "18": [
            2264,
            2282
          ],
          "19": [
            2245,
            2248
          ]
        },
        "SafeMathMock.divMemoryCheck": {
          "14": [
            3227,
            3245
          ],
          "15": [
            3208,
            3211
          ]
        },
        "SafeMathMock.divWithMessage": {
          "0": [
            1806,
            1845
          ]
        },
        "SafeMathMock.doAdd": {
          "16": [
            968,
            993
          ]
        },
        "SafeMathMock.doDiv": {
          "22": [
            1313,
            1338
          ]
        },
        "SafeMathMock.doMod": {
          "9": [
            1428,
            1453
          ]
        },
        "SafeMathMock.doMul": {
          "17": [
            1198,
            1223
          ]
        },
        "SafeMathMock.doSub": {
          "3": [
            1083,
            1108
          ]
        },
        "SafeMathMock.modMemoryCheck": {
          "4": [
            3548,
            3566
          ],
          "5": [
            3529,
            3532
          ]
        },
        "SafeMathMock.modWithMessage": {
          "12": [
            2002,
            2041
          ]
        },
        "SafeMathMock.mulMemoryCheck": {
          "7": [
            2906,
            2924
          ],
          "8": [
            2887,
            2890
          ]
        },
        "SafeMathMock.subMemoryCheck": {
          "20": [
            2585,
            2603
          ],
          "21": [
            2566,
            2569
          ]
        },
        "SafeMathMock.subWithMessage": {
          "11": [
            1610,
            1649
          ]
        },
        "SafeMathMock.tryAdd": {
          "10": [
            219,
            247
          ]
        },
        "SafeMathMock.tryDiv": {
          "6": [
            627,
            655
          ]
        },
        "SafeMathMock.tryMod": {
          "1": [
            763,
            791
          ]
        },
        "SafeMathMock.tryMul": {
          "2": [
            491,
            519
          ]
        },
        "SafeMathMock.trySub": {
          "13": [
            355,
            383
          ]
        }
      }
    }
  },
  "dependencies": [
    "SafeMath"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106101165760003560e01c80639f5cec89116100a2578063dcc721d211610071578063dcc721d21461021b578063fb1191981461022e578063fb24c86014610241578063fb999ded14610249578063fc0ce5031461025157600080fd5b80639f5cec89146101da578063a155bd62146101ed578063a29962b114610200578063c460ae041461021357600080fd5b80636f91e802116100e95780636f91e80214610191578063736ecb18146101995780637e86d25c146101ac578063869f602f146101b4578063884557bf146101c757600080fd5b80633449b5fb1461011b57806338dc0867146101415780636281efa41461016b5780636c7ac6371461017e575b600080fd5b61012e6101293660046105e6565b610264565b6040519081526020015b60405180910390f35b61015461014f3660046106aa565b610279565b604080519215158352602083019190915201610138565b6101546101793660046106aa565b610292565b61012e61018c3660046106aa565b61029f565b61012e6102b2565b6101546101a73660046106aa565b6102e7565b61012e6102f4565b61012e6101c23660046106aa565b610320565b6101546101d53660046106aa565b61032c565b61012e6101e83660046105e6565b610339565b61012e6101fb3660046105e6565b610346565b61015461020e3660046106aa565b610353565b61012e610360565b61012e6102293660046106aa565b61038c565b61012e61023c3660046106aa565b610398565b61012e6103a4565b61012e6103d0565b61012e61025f3660046106aa565b6103fc565b6000610271848484610408565b949350505050565b600080610286848461044b565b915091505b9250929050565b600080610286848461047b565b60006102ab83836104c1565b9392505050565b604051602060005b818110156102de576102cd6001806104cd565b506102d7816106e2565b90506102ba565b50506040510390565b60008061028684846104d9565b604051602060005b818110156102de5761030f600180610509565b50610319816106e2565b90506102fc565b60006102ab83836104cd565b6000806102868484610515565b6000610271848484610530565b600061027184848461055c565b6000806102868484610596565b604051602060005b818110156102de5761037b6001806105b8565b50610385816106e2565b9050610368565b60006102ab83836105c4565b60006102ab8383610509565b604051602060005b818110156102de576103bf6001806105c4565b506103c9816106e2565b90506103ac565b604051602060005b818110156102de576103eb6001806104c1565b506103f5816106e2565b90506103d8565b60006102ab83836105b8565b600081836104325760405162461bcd60e51b815260040161042991906106fd565b60405180910390fd5b5082848161044257610442610752565b04949350505050565b6000808261045e5750600090508061028b565b600183858161046f5761046f610752565b06915091509250929050565b6000808361048f575060019050600061028b565b838302838582816104a2576104a2610752565b04146104b557600080925092505061028b565b60019590945092505050565b60006102ab8284610768565b60006102ab828461077f565b600080826104ec5750600090508061028b565b60018385816104fd576104fd610752565b04915091509250929050565b60006102ab8284610793565b600080838301848110156104b557600080925092505061028b565b600081848411156105545760405162461bcd60e51b815260040161042991906106fd565b505050900390565b6000818361057d5760405162461bcd60e51b815260040161042991906106fd565b5082848161058d5761058d610752565b06949350505050565b600080838311156105ac5750600090508061028b565b50600193919092039150565b60006102ab82846107b2565b60006102ab82846107c6565b634e487b7160e01b600052604160045260246000fd5b6000806000606084860312156105fb57600080fd5b8335925060208401359150604084013567ffffffffffffffff8082111561062157600080fd5b818601915086601f83011261063557600080fd5b813581811115610647576106476105d0565b604051601f8201601f19908116603f0116810190838211818310171561066f5761066f6105d0565b8160405282815289602084870101111561068857600080fd5b8260208601602083013760006020848301015280955050505050509250925092565b600080604083850312156106bd57600080fd5b50508035926020909101359150565b634e487b7160e01b600052601160045260246000fd5b60006000198214156106f6576106f66106cc565b5060010190565b600060208083528351808285015260005b8181101561072a5785810183015185820160400152820161070e565b8181111561073c576000604083870101525b50601f01601f1916929092016040019392505050565b634e487b7160e01b600052601260045260246000fd5b60008282101561077a5761077a6106cc565b500390565b60008261078e5761078e610752565b500690565b60008160001904831182151516156107ad576107ad6106cc565b500290565b6000826107c1576107c1610752565b500490565b600082198211156107d9576107d96106cc565b50019056fea2646970667358221220618a9c98d18d90fb0eb83055093e3ea8d23532e97ce501b550bd4dc5fb5cf4b564736f6c634300080c0033",
  "deployedSourceMap": "96:3559:80:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1662:190;;;;;;:::i;:::-;;:::i;:::-;;;1355:25:174;;;1343:2;1328:18;1662:190:80;;;;;;;;668:130;;;;;;:::i;:::-;;:::i;:::-;;;;1837:14:174;;1830:22;1812:41;;1884:2;1869:18;;1862:34;;;;1785:18;668:130:80;1644:258:174;396:130:80;;;;;;:::i;:::-;;:::i;1006:109::-;;;;;;:::i;:::-;;:::i;3338:315::-;;;:::i;532:130::-;;;;;;:::i;:::-;;:::i;2696:315::-;;;:::i;1351:109::-;;;;;;:::i;:::-;;:::i;124:130::-;;;;;;:::i;:::-;;:::i;1466:190::-;;;;;;:::i;:::-;;:::i;1858:::-;;;;;;:::i;:::-;;:::i;260:130::-;;;;;;:::i;:::-;;:::i;3017:315::-;;;:::i;891:109::-;;;;;;:::i;:::-;;:::i;1121:::-;;;;;;:::i;:::-;;:::i;2054:315::-;;;:::i;2375:::-;;;:::i;1236:109::-;;;;;;:::i;:::-;;:::i;1662:190::-;1787:7;1813:32;1826:1;1829;1832:12;1813;:32::i;:::-;1806:39;1662:190;-1:-1:-1;;;;1662:190:80:o;668:130::-;727:9;738:13;770:21;786:1;789;770:15;:21::i;:::-;763:28;;;;668:130;;;;;;:::o;396:::-;455:9;466:13;498:21;514:1;517;498:15;:21::i;1006:109::-;1064:7;1090:18;1103:1;1106;1090:12;:18::i;:::-;1083:25;1006:109;-1:-1:-1;;;1006:109:80:o;3338:315::-;3473:4;3467:11;3425:2;3385:11;3497:80;3521:6;3517:1;:10;3497:80;;;3548:18;3561:1;3564;3548:12;:18::i;:::-;-1:-1:-1;3529:3:80;;;:::i;:::-;;;3497:80;;;-1:-1:-1;;3626:4:80;3620:11;3616:21;;3338:315::o;532:130::-;591:9;602:13;634:21;650:1;653;634:15;:21::i;2696:315::-;2831:4;2825:11;2783:2;2743:11;2855:80;2879:6;2875:1;:10;2855:80;;;2906:18;2919:1;2922;2906:12;:18::i;:::-;-1:-1:-1;2887:3:80;;;:::i;:::-;;;2855:80;;1351:109;1409:7;1435:18;1448:1;1451;1435:12;:18::i;124:130::-;183:9;194:13;226:21;242:1;245;226:15;:21::i;1466:190::-;1591:7;1617:32;1630:1;1633;1636:12;1617;:32::i;1858:190::-;1983:7;2009:32;2022:1;2025;2028:12;2009;:32::i;260:130::-;319:9;330:13;362:21;378:1;381;362:15;:21::i;3017:315::-;3152:4;3146:11;3104:2;3064:11;3176:80;3200:6;3196:1;:10;3176:80;;;3227:18;3240:1;3243;3227:12;:18::i;:::-;-1:-1:-1;3208:3:80;;;:::i;:::-;;;3176:80;;891:109;949:7;975:18;988:1;991;975:12;:18::i;1121:109::-;1179:7;1205:18;1218:1;1221;1205:12;:18::i;2054:315::-;2189:4;2183:11;2141:2;2101:11;2213:80;2237:6;2233:1;:10;2213:80;;;2264:18;2277:1;2280;2264:12;:18::i;:::-;-1:-1:-1;2245:3:80;;;:::i;:::-;;;2213:80;;2375:315;2510:4;2504:11;2462:2;2422:11;2534:80;2558:6;2554:1;:10;2534:80;;;2585:18;2598:1;2601;2585:12;:18::i;:::-;-1:-1:-1;2566:3:80;;;:::i;:::-;;;2534:80;;1236:109;1294:7;1320:18;1333:1;1336;1320:12;:18::i;5591:230:168:-;5707:7;5765:12;5758:5;5750:28;;;;-1:-1:-1;;;5750:28:168;;;;;;;;:::i;:::-;;;;;;;;;;5803:1;5799;:5;;;;;:::i;:::-;;;5591:230;-1:-1:-1;;;;5591:230:168:o;2247:190::-;2308:4;;2361:6;2357:29;;-1:-1:-1;2377:5:168;;-1:-1:-1;2377:5:168;2369:17;;2357:29;2408:4;2418:1;2414;:5;;;;;:::i;:::-;;2400:20;;;;2247:190;;;;;:::o;1256:493::-;1317:4;;1600:6;1596:28;;-1:-1:-1;1616:4:168;;-1:-1:-1;1622:1:168;1608:16;;1596:28;1650:5;;;1654:1;1650;:5;:1;1673:5;;;;:::i;:::-;;:10;1669:33;;1693:5;1700:1;1685:17;;;;;;;1669:33;1724:4;;1730:1;;-1:-1:-1;1256:493:168;-1:-1:-1;;;1256:493:168:o;3039:96::-;3097:7;3123:5;3127:1;3123;:5;:::i;4316:96::-;4374:7;4400:5;4404:1;4400;:5;:::i;1898:190::-;1959:4;;2012:6;2008:29;;-1:-1:-1;2028:5:168;;-1:-1:-1;2028:5:168;2020:17;;2008:29;2059:4;2069:1;2065;:5;;;;;:::i;:::-;;2051:20;;;;1898:190;;;;;:::o;3382:96::-;3440:7;3466:5;3470:1;3466;:5;:::i;557:216::-;618:4;;679:5;;;702;;;698:28;;;717:5;724:1;709:17;;;;;;;4876:231;4992:7;5051:12;5043:6;;;;5035:29;;;;-1:-1:-1;;;5035:29:168;;;;;;;;:::i;:::-;-1:-1:-1;;;5085:5:168;;;4876:231::o;6467:230::-;6583:7;6641:12;6634:5;6626:28;;;;-1:-1:-1;;;6626:28:168;;;;;;;;:::i;:::-;;6679:1;6675;:5;;;;;:::i;:::-;;;6467:230;-1:-1:-1;;;;6467:230:168:o;919:189::-;980:4;986:7;1037:1;1033;:5;1029:28;;;-1:-1:-1;1048:5:168;;-1:-1:-1;1048:5:168;1040:17;;1029:28;-1:-1:-1;1079:4:168;;1085:5;;;;;-1:-1:-1;919:189:168:o;3767:96::-;3825:7;3851:5;3855:1;3851;:5;:::i;2672:96::-;2730:7;2756:5;2760:1;2756;:5;:::i;14:127:174:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:1058;233:6;241;249;302:2;290:9;281:7;277:23;273:32;270:52;;;318:1;315;308:12;270:52;354:9;341:23;331:33;;411:2;400:9;396:18;383:32;373:42;;466:2;455:9;451:18;438:32;489:18;530:2;522:6;519:14;516:34;;;546:1;543;536:12;516:34;584:6;573:9;569:22;559:32;;629:7;622:4;618:2;614:13;610:27;600:55;;651:1;648;641:12;600:55;687:2;674:16;709:2;705;702:10;699:36;;;715:18;;:::i;:::-;790:2;784:9;758:2;844:13;;-1:-1:-1;;840:22:174;;;864:2;836:31;832:40;820:53;;;888:18;;;908:22;;;885:46;882:72;;;934:18;;:::i;:::-;974:10;970:2;963:22;1009:2;1001:6;994:18;1049:7;1044:2;1039;1035;1031:11;1027:20;1024:33;1021:53;;;1070:1;1067;1060:12;1021:53;1126:2;1121;1117;1113:11;1108:2;1100:6;1096:15;1083:46;1171:1;1166:2;1161;1153:6;1149:15;1145:24;1138:35;1192:6;1182:16;;;;;;;146:1058;;;;;:::o;1391:248::-;1459:6;1467;1520:2;1508:9;1499:7;1495:23;1491:32;1488:52;;;1536:1;1533;1526:12;1488:52;-1:-1:-1;;1559:23:174;;;1629:2;1614:18;;;1601:32;;-1:-1:-1;1391:248:174:o;1907:127::-;1968:10;1963:3;1959:20;1956:1;1949:31;1999:4;1996:1;1989:15;2023:4;2020:1;2013:15;2039:135;2078:3;-1:-1:-1;;2099:17:174;;2096:43;;;2119:18;;:::i;:::-;-1:-1:-1;2166:1:174;2155:13;;2039:135::o;2179:597::-;2291:4;2320:2;2349;2338:9;2331:21;2381:6;2375:13;2424:6;2419:2;2408:9;2404:18;2397:34;2449:1;2459:140;2473:6;2470:1;2467:13;2459:140;;;2568:14;;;2564:23;;2558:30;2534:17;;;2553:2;2530:26;2523:66;2488:10;;2459:140;;;2617:6;2614:1;2611:13;2608:91;;;2687:1;2682:2;2673:6;2662:9;2658:22;2654:31;2647:42;2608:91;-1:-1:-1;2760:2:174;2739:15;-1:-1:-1;;2735:29:174;2720:45;;;;2767:2;2716:54;;2179:597;-1:-1:-1;;;2179:597:174:o;2781:127::-;2842:10;2837:3;2833:20;2830:1;2823:31;2873:4;2870:1;2863:15;2897:4;2894:1;2887:15;2913:125;2953:4;2981:1;2978;2975:8;2972:34;;;2986:18;;:::i;:::-;-1:-1:-1;3023:9:174;;2913:125::o;3043:112::-;3075:1;3101;3091:35;;3106:18;;:::i;:::-;-1:-1:-1;3140:9:174;;3043:112::o;3160:168::-;3200:7;3266:1;3262;3258:6;3254:14;3251:1;3248:21;3243:1;3236:9;3229:17;3225:45;3222:71;;;3273:18;;:::i;:::-;-1:-1:-1;3313:9:174;;3160:168::o;3333:120::-;3373:1;3399;3389:35;;3404:18;;:::i;:::-;-1:-1:-1;3438:9:174;;3333:120::o;3458:128::-;3498:3;3529:1;3525:6;3522:1;3519:13;3516:39;;;3535:18;;:::i;:::-;-1:-1:-1;3571:9:174;;3458:128::o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "offset": [
    96,
    3655
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x116 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9F5CEC89 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xDCC721D2 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xDCC721D2 EQ PUSH2 0x21B JUMPI DUP1 PUSH4 0xFB119198 EQ PUSH2 0x22E JUMPI DUP1 PUSH4 0xFB24C860 EQ PUSH2 0x241 JUMPI DUP1 PUSH4 0xFB999DED EQ PUSH2 0x249 JUMPI DUP1 PUSH4 0xFC0CE503 EQ PUSH2 0x251 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x9F5CEC89 EQ PUSH2 0x1DA JUMPI DUP1 PUSH4 0xA155BD62 EQ PUSH2 0x1ED JUMPI DUP1 PUSH4 0xA29962B1 EQ PUSH2 0x200 JUMPI DUP1 PUSH4 0xC460AE04 EQ PUSH2 0x213 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6F91E802 GT PUSH2 0xE9 JUMPI DUP1 PUSH4 0x6F91E802 EQ PUSH2 0x191 JUMPI DUP1 PUSH4 0x736ECB18 EQ PUSH2 0x199 JUMPI DUP1 PUSH4 0x7E86D25C EQ PUSH2 0x1AC JUMPI DUP1 PUSH4 0x869F602F EQ PUSH2 0x1B4 JUMPI DUP1 PUSH4 0x884557BF EQ PUSH2 0x1C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3449B5FB EQ PUSH2 0x11B JUMPI DUP1 PUSH4 0x38DC0867 EQ PUSH2 0x141 JUMPI DUP1 PUSH4 0x6281EFA4 EQ PUSH2 0x16B JUMPI DUP1 PUSH4 0x6C7AC637 EQ PUSH2 0x17E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x12E PUSH2 0x129 CALLDATASIZE PUSH1 0x4 PUSH2 0x5E6 JUMP JUMPDEST PUSH2 0x264 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x154 PUSH2 0x14F CALLDATASIZE PUSH1 0x4 PUSH2 0x6AA JUMP JUMPDEST PUSH2 0x279 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 ISZERO ISZERO DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH2 0x138 JUMP JUMPDEST PUSH2 0x154 PUSH2 0x179 CALLDATASIZE PUSH1 0x4 PUSH2 0x6AA JUMP JUMPDEST PUSH2 0x292 JUMP JUMPDEST PUSH2 0x12E PUSH2 0x18C CALLDATASIZE PUSH1 0x4 PUSH2 0x6AA JUMP JUMPDEST PUSH2 0x29F JUMP JUMPDEST PUSH2 0x12E PUSH2 0x2B2 JUMP JUMPDEST PUSH2 0x154 PUSH2 0x1A7 CALLDATASIZE PUSH1 0x4 PUSH2 0x6AA JUMP JUMPDEST PUSH2 0x2E7 JUMP JUMPDEST PUSH2 0x12E PUSH2 0x2F4 JUMP JUMPDEST PUSH2 0x12E PUSH2 0x1C2 CALLDATASIZE PUSH1 0x4 PUSH2 0x6AA JUMP JUMPDEST PUSH2 0x320 JUMP JUMPDEST PUSH2 0x154 PUSH2 0x1D5 CALLDATASIZE PUSH1 0x4 PUSH2 0x6AA JUMP JUMPDEST PUSH2 0x32C JUMP JUMPDEST PUSH2 0x12E PUSH2 0x1E8 CALLDATASIZE PUSH1 0x4 PUSH2 0x5E6 JUMP JUMPDEST PUSH2 0x339 JUMP JUMPDEST PUSH2 0x12E PUSH2 0x1FB CALLDATASIZE PUSH1 0x4 PUSH2 0x5E6 JUMP JUMPDEST PUSH2 0x346 JUMP JUMPDEST PUSH2 0x154 PUSH2 0x20E CALLDATASIZE PUSH1 0x4 PUSH2 0x6AA JUMP JUMPDEST PUSH2 0x353 JUMP JUMPDEST PUSH2 0x12E PUSH2 0x360 JUMP JUMPDEST PUSH2 0x12E PUSH2 0x229 CALLDATASIZE PUSH1 0x4 PUSH2 0x6AA JUMP JUMPDEST PUSH2 0x38C JUMP JUMPDEST PUSH2 0x12E PUSH2 0x23C CALLDATASIZE PUSH1 0x4 PUSH2 0x6AA JUMP JUMPDEST PUSH2 0x398 JUMP JUMPDEST PUSH2 0x12E PUSH2 0x3A4 JUMP JUMPDEST PUSH2 0x12E PUSH2 0x3D0 JUMP JUMPDEST PUSH2 0x12E PUSH2 0x25F CALLDATASIZE PUSH1 0x4 PUSH2 0x6AA JUMP JUMPDEST PUSH2 0x3FC JUMP JUMPDEST PUSH1 0x0 PUSH2 0x271 DUP5 DUP5 DUP5 PUSH2 0x408 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x286 DUP5 DUP5 PUSH2 0x44B JUMP JUMPDEST SWAP2 POP SWAP2 POP JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x286 DUP5 DUP5 PUSH2 0x47B JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2AB DUP4 DUP4 PUSH2 0x4C1 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2DE JUMPI PUSH2 0x2CD PUSH1 0x1 DUP1 PUSH2 0x4CD JUMP JUMPDEST POP PUSH2 0x2D7 DUP2 PUSH2 0x6E2 JUMP JUMPDEST SWAP1 POP PUSH2 0x2BA JUMP JUMPDEST POP POP PUSH1 0x40 MLOAD SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x286 DUP5 DUP5 PUSH2 0x4D9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2DE JUMPI PUSH2 0x30F PUSH1 0x1 DUP1 PUSH2 0x509 JUMP JUMPDEST POP PUSH2 0x319 DUP2 PUSH2 0x6E2 JUMP JUMPDEST SWAP1 POP PUSH2 0x2FC JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2AB DUP4 DUP4 PUSH2 0x4CD JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x286 DUP5 DUP5 PUSH2 0x515 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x271 DUP5 DUP5 DUP5 PUSH2 0x530 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x271 DUP5 DUP5 DUP5 PUSH2 0x55C JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x286 DUP5 DUP5 PUSH2 0x596 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2DE JUMPI PUSH2 0x37B PUSH1 0x1 DUP1 PUSH2 0x5B8 JUMP JUMPDEST POP PUSH2 0x385 DUP2 PUSH2 0x6E2 JUMP JUMPDEST SWAP1 POP PUSH2 0x368 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2AB DUP4 DUP4 PUSH2 0x5C4 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2AB DUP4 DUP4 PUSH2 0x509 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2DE JUMPI PUSH2 0x3BF PUSH1 0x1 DUP1 PUSH2 0x5C4 JUMP JUMPDEST POP PUSH2 0x3C9 DUP2 PUSH2 0x6E2 JUMP JUMPDEST SWAP1 POP PUSH2 0x3AC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2DE JUMPI PUSH2 0x3EB PUSH1 0x1 DUP1 PUSH2 0x4C1 JUMP JUMPDEST POP PUSH2 0x3F5 DUP2 PUSH2 0x6E2 JUMP JUMPDEST SWAP1 POP PUSH2 0x3D8 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2AB DUP4 DUP4 PUSH2 0x5B8 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x432 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x429 SWAP2 SWAP1 PUSH2 0x6FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP DUP3 DUP5 DUP2 PUSH2 0x442 JUMPI PUSH2 0x442 PUSH2 0x752 JUMP JUMPDEST DIV SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH2 0x45E JUMPI POP PUSH1 0x0 SWAP1 POP DUP1 PUSH2 0x28B JUMP JUMPDEST PUSH1 0x1 DUP4 DUP6 DUP2 PUSH2 0x46F JUMPI PUSH2 0x46F PUSH2 0x752 JUMP JUMPDEST MOD SWAP2 POP SWAP2 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH2 0x48F JUMPI POP PUSH1 0x1 SWAP1 POP PUSH1 0x0 PUSH2 0x28B JUMP JUMPDEST DUP4 DUP4 MUL DUP4 DUP6 DUP3 DUP2 PUSH2 0x4A2 JUMPI PUSH2 0x4A2 PUSH2 0x752 JUMP JUMPDEST DIV EQ PUSH2 0x4B5 JUMPI PUSH1 0x0 DUP1 SWAP3 POP SWAP3 POP POP PUSH2 0x28B JUMP JUMPDEST PUSH1 0x1 SWAP6 SWAP1 SWAP5 POP SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2AB DUP3 DUP5 PUSH2 0x768 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2AB DUP3 DUP5 PUSH2 0x77F JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH2 0x4EC JUMPI POP PUSH1 0x0 SWAP1 POP DUP1 PUSH2 0x28B JUMP JUMPDEST PUSH1 0x1 DUP4 DUP6 DUP2 PUSH2 0x4FD JUMPI PUSH2 0x4FD PUSH2 0x752 JUMP JUMPDEST DIV SWAP2 POP SWAP2 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2AB DUP3 DUP5 PUSH2 0x793 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 DUP4 ADD DUP5 DUP2 LT ISZERO PUSH2 0x4B5 JUMPI PUSH1 0x0 DUP1 SWAP3 POP SWAP3 POP POP PUSH2 0x28B JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0x554 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x429 SWAP2 SWAP1 PUSH2 0x6FD JUMP JUMPDEST POP POP POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x57D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x429 SWAP2 SWAP1 PUSH2 0x6FD JUMP JUMPDEST POP DUP3 DUP5 DUP2 PUSH2 0x58D JUMPI PUSH2 0x58D PUSH2 0x752 JUMP JUMPDEST MOD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 DUP4 GT ISZERO PUSH2 0x5AC JUMPI POP PUSH1 0x0 SWAP1 POP DUP1 PUSH2 0x28B JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP2 SWAP1 SWAP3 SUB SWAP2 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2AB DUP3 DUP5 PUSH2 0x7B2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2AB DUP3 DUP5 PUSH2 0x7C6 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x5FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x621 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP7 ADD SWAP2 POP DUP7 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x635 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x647 JUMPI PUSH2 0x647 PUSH2 0x5D0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x66F JUMPI PUSH2 0x66F PUSH2 0x5D0 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP10 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x688 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP6 POP POP POP POP POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x6BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x6F6 JUMPI PUSH2 0x6F6 PUSH2 0x6CC JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x72A JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x70E JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x73C JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x77A JUMPI PUSH2 0x77A PUSH2 0x6CC JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x78E JUMPI PUSH2 0x78E PUSH2 0x752 JUMP JUMPDEST POP MOD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x7AD JUMPI PUSH2 0x7AD PUSH2 0x6CC JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x7C1 JUMPI PUSH2 0x7C1 PUSH2 0x752 JUMP JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x7D9 JUMPI PUSH2 0x7D9 PUSH2 0x6CC JUMP JUMPDEST POP ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH2 0x8A9C SWAP9 0xD1 DUP14 SWAP1 0xFB 0xE 0xB8 ADDRESS SSTORE MULMOD RETURNDATACOPY RETURNDATACOPY 0xA8 0xD2 CALLDATALOAD ORIGIN 0xE9 PUSH29 0xE501B550BD4DC5FB5CF4B564736F6C634300080C003300000000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        96,
        3655
      ],
      "op": "PUSH1",
      "path": "80",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "PUSH1",
      "path": "80",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "MSTORE",
      "path": "80"
    },
    "5": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "CALLVALUE",
      "path": "80"
    },
    "6": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "DUP1",
      "path": "80"
    },
    "7": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "ISZERO",
      "path": "80"
    },
    "8": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "PUSH2",
      "path": "80",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "JUMPI",
      "path": "80"
    },
    "12": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "PUSH1",
      "path": "80",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "DUP1",
      "path": "80"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "REVERT",
      "path": "80"
    },
    "16": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "JUMPDEST",
      "path": "80"
    },
    "17": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "POP",
      "path": "80"
    },
    "18": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "PUSH1",
      "path": "80",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "CALLDATASIZE",
      "path": "80"
    },
    "21": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "LT",
      "path": "80"
    },
    "22": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "PUSH2",
      "path": "80",
      "value": "0x116"
    },
    "25": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "JUMPI",
      "path": "80"
    },
    "26": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "PUSH1",
      "path": "80",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "CALLDATALOAD",
      "path": "80"
    },
    "29": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "PUSH1",
      "path": "80",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "SHR",
      "path": "80"
    },
    "32": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "DUP1",
      "path": "80"
    },
    "33": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "PUSH4",
      "path": "80",
      "value": "0x9F5CEC89"
    },
    "38": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "GT",
      "path": "80"
    },
    "39": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "PUSH2",
      "path": "80",
      "value": "0xA2"
    },
    "42": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "JUMPI",
      "path": "80"
    },
    "43": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "DUP1",
      "path": "80"
    },
    "44": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "PUSH4",
      "path": "80",
      "value": "0xDCC721D2"
    },
    "49": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "GT",
      "path": "80"
    },
    "50": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "PUSH2",
      "path": "80",
      "value": "0x71"
    },
    "53": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "JUMPI",
      "path": "80"
    },
    "54": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "DUP1",
      "path": "80"
    },
    "55": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "PUSH4",
      "path": "80",
      "value": "0xDCC721D2"
    },
    "60": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "EQ",
      "path": "80"
    },
    "61": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "PUSH2",
      "path": "80",
      "value": "0x21B"
    },
    "64": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "JUMPI",
      "path": "80"
    },
    "65": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "DUP1",
      "path": "80"
    },
    "66": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "PUSH4",
      "path": "80",
      "value": "0xFB119198"
    },
    "71": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "EQ",
      "path": "80"
    },
    "72": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "PUSH2",
      "path": "80",
      "value": "0x22E"
    },
    "75": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "JUMPI",
      "path": "80"
    },
    "76": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "DUP1",
      "path": "80"
    },
    "77": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "PUSH4",
      "path": "80",
      "value": "0xFB24C860"
    },
    "82": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "EQ",
      "path": "80"
    },
    "83": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "PUSH2",
      "path": "80",
      "value": "0x241"
    },
    "86": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "JUMPI",
      "path": "80"
    },
    "87": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "DUP1",
      "path": "80"
    },
    "88": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "PUSH4",
      "path": "80",
      "value": "0xFB999DED"
    },
    "93": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "EQ",
      "path": "80"
    },
    "94": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "PUSH2",
      "path": "80",
      "value": "0x249"
    },
    "97": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "JUMPI",
      "path": "80"
    },
    "98": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "DUP1",
      "path": "80"
    },
    "99": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "PUSH4",
      "path": "80",
      "value": "0xFC0CE503"
    },
    "104": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "EQ",
      "path": "80"
    },
    "105": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "PUSH2",
      "path": "80",
      "value": "0x251"
    },
    "108": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "JUMPI",
      "path": "80"
    },
    "109": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "PUSH1",
      "path": "80",
      "value": "0x0"
    },
    "111": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "DUP1",
      "path": "80"
    },
    "112": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "REVERT",
      "path": "80"
    },
    "113": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "JUMPDEST",
      "path": "80"
    },
    "114": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "DUP1",
      "path": "80"
    },
    "115": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "PUSH4",
      "path": "80",
      "value": "0x9F5CEC89"
    },
    "120": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "EQ",
      "path": "80"
    },
    "121": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "PUSH2",
      "path": "80",
      "value": "0x1DA"
    },
    "124": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "JUMPI",
      "path": "80"
    },
    "125": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "DUP1",
      "path": "80"
    },
    "126": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "PUSH4",
      "path": "80",
      "value": "0xA155BD62"
    },
    "131": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "EQ",
      "path": "80"
    },
    "132": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "PUSH2",
      "path": "80",
      "value": "0x1ED"
    },
    "135": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "JUMPI",
      "path": "80"
    },
    "136": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "DUP1",
      "path": "80"
    },
    "137": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "PUSH4",
      "path": "80",
      "value": "0xA29962B1"
    },
    "142": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "EQ",
      "path": "80"
    },
    "143": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "PUSH2",
      "path": "80",
      "value": "0x200"
    },
    "146": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "JUMPI",
      "path": "80"
    },
    "147": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "DUP1",
      "path": "80"
    },
    "148": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "PUSH4",
      "path": "80",
      "value": "0xC460AE04"
    },
    "153": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "EQ",
      "path": "80"
    },
    "154": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "PUSH2",
      "path": "80",
      "value": "0x213"
    },
    "157": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "JUMPI",
      "path": "80"
    },
    "158": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "PUSH1",
      "path": "80",
      "value": "0x0"
    },
    "160": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "DUP1",
      "path": "80"
    },
    "161": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "REVERT",
      "path": "80"
    },
    "162": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "JUMPDEST",
      "path": "80"
    },
    "163": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "DUP1",
      "path": "80"
    },
    "164": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "PUSH4",
      "path": "80",
      "value": "0x6F91E802"
    },
    "169": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "GT",
      "path": "80"
    },
    "170": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "PUSH2",
      "path": "80",
      "value": "0xE9"
    },
    "173": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "JUMPI",
      "path": "80"
    },
    "174": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "DUP1",
      "path": "80"
    },
    "175": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "PUSH4",
      "path": "80",
      "value": "0x6F91E802"
    },
    "180": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "EQ",
      "path": "80"
    },
    "181": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "PUSH2",
      "path": "80",
      "value": "0x191"
    },
    "184": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "JUMPI",
      "path": "80"
    },
    "185": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "DUP1",
      "path": "80"
    },
    "186": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "PUSH4",
      "path": "80",
      "value": "0x736ECB18"
    },
    "191": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "EQ",
      "path": "80"
    },
    "192": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "PUSH2",
      "path": "80",
      "value": "0x199"
    },
    "195": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "JUMPI",
      "path": "80"
    },
    "196": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "DUP1",
      "path": "80"
    },
    "197": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "PUSH4",
      "path": "80",
      "value": "0x7E86D25C"
    },
    "202": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "EQ",
      "path": "80"
    },
    "203": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "PUSH2",
      "path": "80",
      "value": "0x1AC"
    },
    "206": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "JUMPI",
      "path": "80"
    },
    "207": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "DUP1",
      "path": "80"
    },
    "208": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "PUSH4",
      "path": "80",
      "value": "0x869F602F"
    },
    "213": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "EQ",
      "path": "80"
    },
    "214": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "PUSH2",
      "path": "80",
      "value": "0x1B4"
    },
    "217": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "JUMPI",
      "path": "80"
    },
    "218": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "DUP1",
      "path": "80"
    },
    "219": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "PUSH4",
      "path": "80",
      "value": "0x884557BF"
    },
    "224": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "EQ",
      "path": "80"
    },
    "225": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "PUSH2",
      "path": "80",
      "value": "0x1C7"
    },
    "228": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "JUMPI",
      "path": "80"
    },
    "229": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "PUSH1",
      "path": "80",
      "value": "0x0"
    },
    "231": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "DUP1",
      "path": "80"
    },
    "232": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "REVERT",
      "path": "80"
    },
    "233": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "JUMPDEST",
      "path": "80"
    },
    "234": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "DUP1",
      "path": "80"
    },
    "235": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "PUSH4",
      "path": "80",
      "value": "0x3449B5FB"
    },
    "240": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "EQ",
      "path": "80"
    },
    "241": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "PUSH2",
      "path": "80",
      "value": "0x11B"
    },
    "244": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "JUMPI",
      "path": "80"
    },
    "245": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "DUP1",
      "path": "80"
    },
    "246": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "PUSH4",
      "path": "80",
      "value": "0x38DC0867"
    },
    "251": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "EQ",
      "path": "80"
    },
    "252": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "PUSH2",
      "path": "80",
      "value": "0x141"
    },
    "255": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "JUMPI",
      "path": "80"
    },
    "256": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "DUP1",
      "path": "80"
    },
    "257": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "PUSH4",
      "path": "80",
      "value": "0x6281EFA4"
    },
    "262": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "EQ",
      "path": "80"
    },
    "263": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "PUSH2",
      "path": "80",
      "value": "0x16B"
    },
    "266": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "JUMPI",
      "path": "80"
    },
    "267": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "DUP1",
      "path": "80"
    },
    "268": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "PUSH4",
      "path": "80",
      "value": "0x6C7AC637"
    },
    "273": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "EQ",
      "path": "80"
    },
    "274": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "PUSH2",
      "path": "80",
      "value": "0x17E"
    },
    "277": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "JUMPI",
      "path": "80"
    },
    "278": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "JUMPDEST",
      "path": "80"
    },
    "279": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "PUSH1",
      "path": "80",
      "value": "0x0"
    },
    "281": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "DUP1",
      "path": "80"
    },
    "282": {
      "first_revert": true,
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "REVERT",
      "path": "80"
    },
    "283": {
      "fn": "SafeMathMock.divWithMessage",
      "offset": [
        1662,
        1852
      ],
      "op": "JUMPDEST",
      "path": "80"
    },
    "284": {
      "fn": "SafeMathMock.divWithMessage",
      "offset": [
        1662,
        1852
      ],
      "op": "PUSH2",
      "path": "80",
      "value": "0x12E"
    },
    "287": {
      "fn": "SafeMathMock.divWithMessage",
      "offset": [
        1662,
        1852
      ],
      "op": "PUSH2",
      "path": "80",
      "value": "0x129"
    },
    "290": {
      "fn": "SafeMathMock.divWithMessage",
      "offset": [
        1662,
        1852
      ],
      "op": "CALLDATASIZE",
      "path": "80"
    },
    "291": {
      "fn": "SafeMathMock.divWithMessage",
      "offset": [
        1662,
        1852
      ],
      "op": "PUSH1",
      "path": "80",
      "value": "0x4"
    },
    "293": {
      "fn": "SafeMathMock.divWithMessage",
      "offset": [
        1662,
        1852
      ],
      "op": "PUSH2",
      "path": "80",
      "value": "0x5E6"
    },
    "296": {
      "fn": "SafeMathMock.divWithMessage",
      "jump": "i",
      "offset": [
        1662,
        1852
      ],
      "op": "JUMP",
      "path": "80"
    },
    "297": {
      "fn": "SafeMathMock.divWithMessage",
      "offset": [
        1662,
        1852
      ],
      "op": "JUMPDEST",
      "path": "80"
    },
    "298": {
      "fn": "SafeMathMock.divWithMessage",
      "offset": [
        1662,
        1852
      ],
      "op": "PUSH2",
      "path": "80",
      "value": "0x264"
    },
    "301": {
      "fn": "SafeMathMock.divWithMessage",
      "jump": "i",
      "offset": [
        1662,
        1852
      ],
      "op": "JUMP",
      "path": "80"
    },
    "302": {
      "fn": "SafeMathMock.divWithMessage",
      "offset": [
        1662,
        1852
      ],
      "op": "JUMPDEST",
      "path": "80"
    },
    "303": {
      "fn": "SafeMathMock.divWithMessage",
      "offset": [
        1662,
        1852
      ],
      "op": "PUSH1",
      "path": "80",
      "value": "0x40"
    },
    "305": {
      "fn": "SafeMathMock.divWithMessage",
      "offset": [
        1662,
        1852
      ],
      "op": "MLOAD",
      "path": "80"
    },
    "306": {
      "op": "SWAP1"
    },
    "307": {
      "op": "DUP2"
    },
    "308": {
      "op": "MSTORE"
    },
    "309": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "311": {
      "op": "ADD"
    },
    "312": {
      "fn": "SafeMathMock.divWithMessage",
      "offset": [
        1662,
        1852
      ],
      "op": "JUMPDEST",
      "path": "80"
    },
    "313": {
      "fn": "SafeMathMock.divWithMessage",
      "offset": [
        1662,
        1852
      ],
      "op": "PUSH1",
      "path": "80",
      "value": "0x40"
    },
    "315": {
      "fn": "SafeMathMock.divWithMessage",
      "offset": [
        1662,
        1852
      ],
      "op": "MLOAD",
      "path": "80"
    },
    "316": {
      "fn": "SafeMathMock.divWithMessage",
      "offset": [
        1662,
        1852
      ],
      "op": "DUP1",
      "path": "80"
    },
    "317": {
      "fn": "SafeMathMock.divWithMessage",
      "offset": [
        1662,
        1852
      ],
      "op": "SWAP2",
      "path": "80"
    },
    "318": {
      "fn": "SafeMathMock.divWithMessage",
      "offset": [
        1662,
        1852
      ],
      "op": "SUB",
      "path": "80"
    },
    "319": {
      "fn": "SafeMathMock.divWithMessage",
      "offset": [
        1662,
        1852
      ],
      "op": "SWAP1",
      "path": "80"
    },
    "320": {
      "fn": "SafeMathMock.divWithMessage",
      "offset": [
        1662,
        1852
      ],
      "op": "RETURN",
      "path": "80"
    },
    "321": {
      "fn": "SafeMathMock.tryMod",
      "offset": [
        668,
        798
      ],
      "op": "JUMPDEST",
      "path": "80"
    },
    "322": {
      "fn": "SafeMathMock.tryMod",
      "offset": [
        668,
        798
      ],
      "op": "PUSH2",
      "path": "80",
      "value": "0x154"
    },
    "325": {
      "fn": "SafeMathMock.tryMod",
      "offset": [
        668,
        798
      ],
      "op": "PUSH2",
      "path": "80",
      "value": "0x14F"
    },
    "328": {
      "fn": "SafeMathMock.tryMod",
      "offset": [
        668,
        798
      ],
      "op": "CALLDATASIZE",
      "path": "80"
    },
    "329": {
      "fn": "SafeMathMock.tryMod",
      "offset": [
        668,
        798
      ],
      "op": "PUSH1",
      "path": "80",
      "value": "0x4"
    },
    "331": {
      "fn": "SafeMathMock.tryMod",
      "offset": [
        668,
        798
      ],
      "op": "PUSH2",
      "path": "80",
      "value": "0x6AA"
    },
    "334": {
      "fn": "SafeMathMock.tryMod",
      "jump": "i",
      "offset": [
        668,
        798
      ],
      "op": "JUMP",
      "path": "80"
    },
    "335": {
      "fn": "SafeMathMock.tryMod",
      "offset": [
        668,
        798
      ],
      "op": "JUMPDEST",
      "path": "80"
    },
    "336": {
      "fn": "SafeMathMock.tryMod",
      "offset": [
        668,
        798
      ],
      "op": "PUSH2",
      "path": "80",
      "value": "0x279"
    },
    "339": {
      "fn": "SafeMathMock.tryMod",
      "jump": "i",
      "offset": [
        668,
        798
      ],
      "op": "JUMP",
      "path": "80"
    },
    "340": {
      "fn": "SafeMathMock.tryMod",
      "offset": [
        668,
        798
      ],
      "op": "JUMPDEST",
      "path": "80"
    },
    "341": {
      "fn": "SafeMathMock.tryMod",
      "offset": [
        668,
        798
      ],
      "op": "PUSH1",
      "path": "80",
      "value": "0x40"
    },
    "343": {
      "fn": "SafeMathMock.tryMod",
      "offset": [
        668,
        798
      ],
      "op": "DUP1",
      "path": "80"
    },
    "344": {
      "fn": "SafeMathMock.tryMod",
      "offset": [
        668,
        798
      ],
      "op": "MLOAD",
      "path": "80"
    },
    "345": {
      "op": "SWAP3"
    },
    "346": {
      "op": "ISZERO"
    },
    "347": {
      "op": "ISZERO"
    },
    "348": {
      "op": "DUP4"
    },
    "349": {
      "op": "MSTORE"
    },
    "350": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "352": {
      "op": "DUP4"
    },
    "353": {
      "op": "ADD"
    },
    "354": {
      "op": "SWAP2"
    },
    "355": {
      "op": "SWAP1"
    },
    "356": {
      "op": "SWAP2"
    },
    "357": {
      "op": "MSTORE"
    },
    "358": {
      "op": "ADD"
    },
    "359": {
      "fn": "SafeMathMock.tryMod",
      "offset": [
        668,
        798
      ],
      "op": "PUSH2",
      "path": "80",
      "value": "0x138"
    },
    "362": {
      "op": "JUMP"
    },
    "363": {
      "fn": "SafeMathMock.tryMul",
      "offset": [
        396,
        526
      ],
      "op": "JUMPDEST",
      "path": "80"
    },
    "364": {
      "fn": "SafeMathMock.tryMul",
      "offset": [
        396,
        526
      ],
      "op": "PUSH2",
      "path": "80",
      "value": "0x154"
    },
    "367": {
      "fn": "SafeMathMock.tryMul",
      "offset": [
        396,
        526
      ],
      "op": "PUSH2",
      "path": "80",
      "value": "0x179"
    },
    "370": {
      "fn": "SafeMathMock.tryMul",
      "offset": [
        396,
        526
      ],
      "op": "CALLDATASIZE",
      "path": "80"
    },
    "371": {
      "fn": "SafeMathMock.tryMul",
      "offset": [
        396,
        526
      ],
      "op": "PUSH1",
      "path": "80",
      "value": "0x4"
    },
    "373": {
      "fn": "SafeMathMock.tryMul",
      "offset": [
        396,
        526
      ],
      "op": "PUSH2",
      "path": "80",
      "value": "0x6AA"
    },
    "376": {
      "fn": "SafeMathMock.tryMul",
      "jump": "i",
      "offset": [
        396,
        526
      ],
      "op": "JUMP",
      "path": "80"
    },
    "377": {
      "fn": "SafeMathMock.tryMul",
      "offset": [
        396,
        526
      ],
      "op": "JUMPDEST",
      "path": "80"
    },
    "378": {
      "fn": "SafeMathMock.tryMul",
      "offset": [
        396,
        526
      ],
      "op": "PUSH2",
      "path": "80",
      "value": "0x292"
    },
    "381": {
      "fn": "SafeMathMock.tryMul",
      "jump": "i",
      "offset": [
        396,
        526
      ],
      "op": "JUMP",
      "path": "80"
    },
    "382": {
      "fn": "SafeMathMock.doSub",
      "offset": [
        1006,
        1115
      ],
      "op": "JUMPDEST",
      "path": "80"
    },
    "383": {
      "fn": "SafeMathMock.doSub",
      "offset": [
        1006,
        1115
      ],
      "op": "PUSH2",
      "path": "80",
      "value": "0x12E"
    },
    "386": {
      "fn": "SafeMathMock.doSub",
      "offset": [
        1006,
        1115
      ],
      "op": "PUSH2",
      "path": "80",
      "value": "0x18C"
    },
    "389": {
      "fn": "SafeMathMock.doSub",
      "offset": [
        1006,
        1115
      ],
      "op": "CALLDATASIZE",
      "path": "80"
    },
    "390": {
      "fn": "SafeMathMock.doSub",
      "offset": [
        1006,
        1115
      ],
      "op": "PUSH1",
      "path": "80",
      "value": "0x4"
    },
    "392": {
      "fn": "SafeMathMock.doSub",
      "offset": [
        1006,
        1115
      ],
      "op": "PUSH2",
      "path": "80",
      "value": "0x6AA"
    },
    "395": {
      "fn": "SafeMathMock.doSub",
      "jump": "i",
      "offset": [
        1006,
        1115
      ],
      "op": "JUMP",
      "path": "80"
    },
    "396": {
      "fn": "SafeMathMock.doSub",
      "offset": [
        1006,
        1115
      ],
      "op": "JUMPDEST",
      "path": "80"
    },
    "397": {
      "fn": "SafeMathMock.doSub",
      "offset": [
        1006,
        1115
      ],
      "op": "PUSH2",
      "path": "80",
      "value": "0x29F"
    },
    "400": {
      "fn": "SafeMathMock.doSub",
      "jump": "i",
      "offset": [
        1006,
        1115
      ],
      "op": "JUMP",
      "path": "80"
    },
    "401": {
      "fn": "SafeMathMock.modMemoryCheck",
      "offset": [
        3338,
        3653
      ],
      "op": "JUMPDEST",
      "path": "80"
    },
    "402": {
      "fn": "SafeMathMock.modMemoryCheck",
      "offset": [
        3338,
        3653
      ],
      "op": "PUSH2",
      "path": "80",
      "value": "0x12E"
    },
    "405": {
      "fn": "SafeMathMock.modMemoryCheck",
      "offset": [
        3338,
        3653
      ],
      "op": "PUSH2",
      "path": "80",
      "value": "0x2B2"
    },
    "408": {
      "fn": "SafeMathMock.modMemoryCheck",
      "jump": "i",
      "offset": [
        3338,
        3653
      ],
      "op": "JUMP",
      "path": "80"
    },
    "409": {
      "fn": "SafeMathMock.tryDiv",
      "offset": [
        532,
        662
      ],
      "op": "JUMPDEST",
      "path": "80"
    },
    "410": {
      "fn": "SafeMathMock.tryDiv",
      "offset": [
        532,
        662
      ],
      "op": "PUSH2",
      "path": "80",
      "value": "0x154"
    },
    "413": {
      "fn": "SafeMathMock.tryDiv",
      "offset": [
        532,
        662
      ],
      "op": "PUSH2",
      "path": "80",
      "value": "0x1A7"
    },
    "416": {
      "fn": "SafeMathMock.tryDiv",
      "offset": [
        532,
        662
      ],
      "op": "CALLDATASIZE",
      "path": "80"
    },
    "417": {
      "fn": "SafeMathMock.tryDiv",
      "offset": [
        532,
        662
      ],
      "op": "PUSH1",
      "path": "80",
      "value": "0x4"
    },
    "419": {
      "fn": "SafeMathMock.tryDiv",
      "offset": [
        532,
        662
      ],
      "op": "PUSH2",
      "path": "80",
      "value": "0x6AA"
    },
    "422": {
      "fn": "SafeMathMock.tryDiv",
      "jump": "i",
      "offset": [
        532,
        662
      ],
      "op": "JUMP",
      "path": "80"
    },
    "423": {
      "fn": "SafeMathMock.tryDiv",
      "offset": [
        532,
        662
      ],
      "op": "JUMPDEST",
      "path": "80"
    },
    "424": {
      "fn": "SafeMathMock.tryDiv",
      "offset": [
        532,
        662
      ],
      "op": "PUSH2",
      "path": "80",
      "value": "0x2E7"
    },
    "427": {
      "fn": "SafeMathMock.tryDiv",
      "jump": "i",
      "offset": [
        532,
        662
      ],
      "op": "JUMP",
      "path": "80"
    },
    "428": {
      "fn": "SafeMathMock.mulMemoryCheck",
      "offset": [
        2696,
        3011
      ],
      "op": "JUMPDEST",
      "path": "80"
    },
    "429": {
      "fn": "SafeMathMock.mulMemoryCheck",
      "offset": [
        2696,
        3011
      ],
      "op": "PUSH2",
      "path": "80",
      "value": "0x12E"
    },
    "432": {
      "fn": "SafeMathMock.mulMemoryCheck",
      "offset": [
        2696,
        3011
      ],
      "op": "PUSH2",
      "path": "80",
      "value": "0x2F4"
    },
    "435": {
      "fn": "SafeMathMock.mulMemoryCheck",
      "jump": "i",
      "offset": [
        2696,
        3011
      ],
      "op": "JUMP",
      "path": "80"
    },
    "436": {
      "fn": "SafeMathMock.doMod",
      "offset": [
        1351,
        1460
      ],
      "op": "JUMPDEST",
      "path": "80"
    },
    "437": {
      "fn": "SafeMathMock.doMod",
      "offset": [
        1351,
        1460
      ],
      "op": "PUSH2",
      "path": "80",
      "value": "0x12E"
    },
    "440": {
      "fn": "SafeMathMock.doMod",
      "offset": [
        1351,
        1460
      ],
      "op": "PUSH2",
      "path": "80",
      "value": "0x1C2"
    },
    "443": {
      "fn": "SafeMathMock.doMod",
      "offset": [
        1351,
        1460
      ],
      "op": "CALLDATASIZE",
      "path": "80"
    },
    "444": {
      "fn": "SafeMathMock.doMod",
      "offset": [
        1351,
        1460
      ],
      "op": "PUSH1",
      "path": "80",
      "value": "0x4"
    },
    "446": {
      "fn": "SafeMathMock.doMod",
      "offset": [
        1351,
        1460
      ],
      "op": "PUSH2",
      "path": "80",
      "value": "0x6AA"
    },
    "449": {
      "fn": "SafeMathMock.doMod",
      "jump": "i",
      "offset": [
        1351,
        1460
      ],
      "op": "JUMP",
      "path": "80"
    },
    "450": {
      "fn": "SafeMathMock.doMod",
      "offset": [
        1351,
        1460
      ],
      "op": "JUMPDEST",
      "path": "80"
    },
    "451": {
      "fn": "SafeMathMock.doMod",
      "offset": [
        1351,
        1460
      ],
      "op": "PUSH2",
      "path": "80",
      "value": "0x320"
    },
    "454": {
      "fn": "SafeMathMock.doMod",
      "jump": "i",
      "offset": [
        1351,
        1460
      ],
      "op": "JUMP",
      "path": "80"
    },
    "455": {
      "fn": "SafeMathMock.tryAdd",
      "offset": [
        124,
        254
      ],
      "op": "JUMPDEST",
      "path": "80"
    },
    "456": {
      "fn": "SafeMathMock.tryAdd",
      "offset": [
        124,
        254
      ],
      "op": "PUSH2",
      "path": "80",
      "value": "0x154"
    },
    "459": {
      "fn": "SafeMathMock.tryAdd",
      "offset": [
        124,
        254
      ],
      "op": "PUSH2",
      "path": "80",
      "value": "0x1D5"
    },
    "462": {
      "fn": "SafeMathMock.tryAdd",
      "offset": [
        124,
        254
      ],
      "op": "CALLDATASIZE",
      "path": "80"
    },
    "463": {
      "fn": "SafeMathMock.tryAdd",
      "offset": [
        124,
        254
      ],
      "op": "PUSH1",
      "path": "80",
      "value": "0x4"
    },
    "465": {
      "fn": "SafeMathMock.tryAdd",
      "offset": [
        124,
        254
      ],
      "op": "PUSH2",
      "path": "80",
      "value": "0x6AA"
    },
    "468": {
      "fn": "SafeMathMock.tryAdd",
      "jump": "i",
      "offset": [
        124,
        254
      ],
      "op": "JUMP",
      "path": "80"
    },
    "469": {
      "fn": "SafeMathMock.tryAdd",
      "offset": [
        124,
        254
      ],
      "op": "JUMPDEST",
      "path": "80"
    },
    "470": {
      "fn": "SafeMathMock.tryAdd",
      "offset": [
        124,
        254
      ],
      "op": "PUSH2",
      "path": "80",
      "value": "0x32C"
    },
    "473": {
      "fn": "SafeMathMock.tryAdd",
      "jump": "i",
      "offset": [
        124,
        254
      ],
      "op": "JUMP",
      "path": "80"
    },
    "474": {
      "fn": "SafeMathMock.subWithMessage",
      "offset": [
        1466,
        1656
      ],
      "op": "JUMPDEST",
      "path": "80"
    },
    "475": {
      "fn": "SafeMathMock.subWithMessage",
      "offset": [
        1466,
        1656
      ],
      "op": "PUSH2",
      "path": "80",
      "value": "0x12E"
    },
    "478": {
      "fn": "SafeMathMock.subWithMessage",
      "offset": [
        1466,
        1656
      ],
      "op": "PUSH2",
      "path": "80",
      "value": "0x1E8"
    },
    "481": {
      "fn": "SafeMathMock.subWithMessage",
      "offset": [
        1466,
        1656
      ],
      "op": "CALLDATASIZE",
      "path": "80"
    },
    "482": {
      "fn": "SafeMathMock.subWithMessage",
      "offset": [
        1466,
        1656
      ],
      "op": "PUSH1",
      "path": "80",
      "value": "0x4"
    },
    "484": {
      "fn": "SafeMathMock.subWithMessage",
      "offset": [
        1466,
        1656
      ],
      "op": "PUSH2",
      "path": "80",
      "value": "0x5E6"
    },
    "487": {
      "fn": "SafeMathMock.subWithMessage",
      "jump": "i",
      "offset": [
        1466,
        1656
      ],
      "op": "JUMP",
      "path": "80"
    },
    "488": {
      "fn": "SafeMathMock.subWithMessage",
      "offset": [
        1466,
        1656
      ],
      "op": "JUMPDEST",
      "path": "80"
    },
    "489": {
      "fn": "SafeMathMock.subWithMessage",
      "offset": [
        1466,
        1656
      ],
      "op": "PUSH2",
      "path": "80",
      "value": "0x339"
    },
    "492": {
      "fn": "SafeMathMock.subWithMessage",
      "jump": "i",
      "offset": [
        1466,
        1656
      ],
      "op": "JUMP",
      "path": "80"
    },
    "493": {
      "fn": "SafeMathMock.modWithMessage",
      "offset": [
        1858,
        2048
      ],
      "op": "JUMPDEST",
      "path": "80"
    },
    "494": {
      "fn": "SafeMathMock.modWithMessage",
      "offset": [
        1858,
        2048
      ],
      "op": "PUSH2",
      "path": "80",
      "value": "0x12E"
    },
    "497": {
      "fn": "SafeMathMock.modWithMessage",
      "offset": [
        1858,
        2048
      ],
      "op": "PUSH2",
      "path": "80",
      "value": "0x1FB"
    },
    "500": {
      "fn": "SafeMathMock.modWithMessage",
      "offset": [
        1858,
        2048
      ],
      "op": "CALLDATASIZE",
      "path": "80"
    },
    "501": {
      "fn": "SafeMathMock.modWithMessage",
      "offset": [
        1858,
        2048
      ],
      "op": "PUSH1",
      "path": "80",
      "value": "0x4"
    },
    "503": {
      "fn": "SafeMathMock.modWithMessage",
      "offset": [
        1858,
        2048
      ],
      "op": "PUSH2",
      "path": "80",
      "value": "0x5E6"
    },
    "506": {
      "fn": "SafeMathMock.modWithMessage",
      "jump": "i",
      "offset": [
        1858,
        2048
      ],
      "op": "JUMP",
      "path": "80"
    },
    "507": {
      "fn": "SafeMathMock.modWithMessage",
      "offset": [
        1858,
        2048
      ],
      "op": "JUMPDEST",
      "path": "80"
    },
    "508": {
      "fn": "SafeMathMock.modWithMessage",
      "offset": [
        1858,
        2048
      ],
      "op": "PUSH2",
      "path": "80",
      "value": "0x346"
    },
    "511": {
      "fn": "SafeMathMock.modWithMessage",
      "jump": "i",
      "offset": [
        1858,
        2048
      ],
      "op": "JUMP",
      "path": "80"
    },
    "512": {
      "fn": "SafeMathMock.trySub",
      "offset": [
        260,
        390
      ],
      "op": "JUMPDEST",
      "path": "80"
    },
    "513": {
      "fn": "SafeMathMock.trySub",
      "offset": [
        260,
        390
      ],
      "op": "PUSH2",
      "path": "80",
      "value": "0x154"
    },
    "516": {
      "fn": "SafeMathMock.trySub",
      "offset": [
        260,
        390
      ],
      "op": "PUSH2",
      "path": "80",
      "value": "0x20E"
    },
    "519": {
      "fn": "SafeMathMock.trySub",
      "offset": [
        260,
        390
      ],
      "op": "CALLDATASIZE",
      "path": "80"
    },
    "520": {
      "fn": "SafeMathMock.trySub",
      "offset": [
        260,
        390
      ],
      "op": "PUSH1",
      "path": "80",
      "value": "0x4"
    },
    "522": {
      "fn": "SafeMathMock.trySub",
      "offset": [
        260,
        390
      ],
      "op": "PUSH2",
      "path": "80",
      "value": "0x6AA"
    },
    "525": {
      "fn": "SafeMathMock.trySub",
      "jump": "i",
      "offset": [
        260,
        390
      ],
      "op": "JUMP",
      "path": "80"
    },
    "526": {
      "fn": "SafeMathMock.trySub",
      "offset": [
        260,
        390
      ],
      "op": "JUMPDEST",
      "path": "80"
    },
    "527": {
      "fn": "SafeMathMock.trySub",
      "offset": [
        260,
        390
      ],
      "op": "PUSH2",
      "path": "80",
      "value": "0x353"
    },
    "530": {
      "fn": "SafeMathMock.trySub",
      "jump": "i",
      "offset": [
        260,
        390
      ],
      "op": "JUMP",
      "path": "80"
    },
    "531": {
      "fn": "SafeMathMock.divMemoryCheck",
      "offset": [
        3017,
        3332
      ],
      "op": "JUMPDEST",
      "path": "80"
    },
    "532": {
      "fn": "SafeMathMock.divMemoryCheck",
      "offset": [
        3017,
        3332
      ],
      "op": "PUSH2",
      "path": "80",
      "value": "0x12E"
    },
    "535": {
      "fn": "SafeMathMock.divMemoryCheck",
      "offset": [
        3017,
        3332
      ],
      "op": "PUSH2",
      "path": "80",
      "value": "0x360"
    },
    "538": {
      "fn": "SafeMathMock.divMemoryCheck",
      "jump": "i",
      "offset": [
        3017,
        3332
      ],
      "op": "JUMP",
      "path": "80"
    },
    "539": {
      "fn": "SafeMathMock.doAdd",
      "offset": [
        891,
        1000
      ],
      "op": "JUMPDEST",
      "path": "80"
    },
    "540": {
      "fn": "SafeMathMock.doAdd",
      "offset": [
        891,
        1000
      ],
      "op": "PUSH2",
      "path": "80",
      "value": "0x12E"
    },
    "543": {
      "fn": "SafeMathMock.doAdd",
      "offset": [
        891,
        1000
      ],
      "op": "PUSH2",
      "path": "80",
      "value": "0x229"
    },
    "546": {
      "fn": "SafeMathMock.doAdd",
      "offset": [
        891,
        1000
      ],
      "op": "CALLDATASIZE",
      "path": "80"
    },
    "547": {
      "fn": "SafeMathMock.doAdd",
      "offset": [
        891,
        1000
      ],
      "op": "PUSH1",
      "path": "80",
      "value": "0x4"
    },
    "549": {
      "fn": "SafeMathMock.doAdd",
      "offset": [
        891,
        1000
      ],
      "op": "PUSH2",
      "path": "80",
      "value": "0x6AA"
    },
    "552": {
      "fn": "SafeMathMock.doAdd",
      "jump": "i",
      "offset": [
        891,
        1000
      ],
      "op": "JUMP",
      "path": "80"
    },
    "553": {
      "fn": "SafeMathMock.doAdd",
      "offset": [
        891,
        1000
      ],
      "op": "JUMPDEST",
      "path": "80"
    },
    "554": {
      "fn": "SafeMathMock.doAdd",
      "offset": [
        891,
        1000
      ],
      "op": "PUSH2",
      "path": "80",
      "value": "0x38C"
    },
    "557": {
      "fn": "SafeMathMock.doAdd",
      "jump": "i",
      "offset": [
        891,
        1000
      ],
      "op": "JUMP",
      "path": "80"
    },
    "558": {
      "fn": "SafeMathMock.doMul",
      "offset": [
        1121,
        1230
      ],
      "op": "JUMPDEST",
      "path": "80"
    },
    "559": {
      "fn": "SafeMathMock.doMul",
      "offset": [
        1121,
        1230
      ],
      "op": "PUSH2",
      "path": "80",
      "value": "0x12E"
    },
    "562": {
      "fn": "SafeMathMock.doMul",
      "offset": [
        1121,
        1230
      ],
      "op": "PUSH2",
      "path": "80",
      "value": "0x23C"
    },
    "565": {
      "fn": "SafeMathMock.doMul",
      "offset": [
        1121,
        1230
      ],
      "op": "CALLDATASIZE",
      "path": "80"
    },
    "566": {
      "fn": "SafeMathMock.doMul",
      "offset": [
        1121,
        1230
      ],
      "op": "PUSH1",
      "path": "80",
      "value": "0x4"
    },
    "568": {
      "fn": "SafeMathMock.doMul",
      "offset": [
        1121,
        1230
      ],
      "op": "PUSH2",
      "path": "80",
      "value": "0x6AA"
    },
    "571": {
      "fn": "SafeMathMock.doMul",
      "jump": "i",
      "offset": [
        1121,
        1230
      ],
      "op": "JUMP",
      "path": "80"
    },
    "572": {
      "fn": "SafeMathMock.doMul",
      "offset": [
        1121,
        1230
      ],
      "op": "JUMPDEST",
      "path": "80"
    },
    "573": {
      "fn": "SafeMathMock.doMul",
      "offset": [
        1121,
        1230
      ],
      "op": "PUSH2",
      "path": "80",
      "value": "0x398"
    },
    "576": {
      "fn": "SafeMathMock.doMul",
      "jump": "i",
      "offset": [
        1121,
        1230
      ],
      "op": "JUMP",
      "path": "80"
    },
    "577": {
      "fn": "SafeMathMock.addMemoryCheck",
      "offset": [
        2054,
        2369
      ],
      "op": "JUMPDEST",
      "path": "80"
    },
    "578": {
      "fn": "SafeMathMock.addMemoryCheck",
      "offset": [
        2054,
        2369
      ],
      "op": "PUSH2",
      "path": "80",
      "value": "0x12E"
    },
    "581": {
      "fn": "SafeMathMock.addMemoryCheck",
      "offset": [
        2054,
        2369
      ],
      "op": "PUSH2",
      "path": "80",
      "value": "0x3A4"
    },
    "584": {
      "fn": "SafeMathMock.addMemoryCheck",
      "jump": "i",
      "offset": [
        2054,
        2369
      ],
      "op": "JUMP",
      "path": "80"
    },
    "585": {
      "fn": "SafeMathMock.subMemoryCheck",
      "offset": [
        2375,
        2690
      ],
      "op": "JUMPDEST",
      "path": "80"
    },
    "586": {
      "fn": "SafeMathMock.subMemoryCheck",
      "offset": [
        2375,
        2690
      ],
      "op": "PUSH2",
      "path": "80",
      "value": "0x12E"
    },
    "589": {
      "fn": "SafeMathMock.subMemoryCheck",
      "offset": [
        2375,
        2690
      ],
      "op": "PUSH2",
      "path": "80",
      "value": "0x3D0"
    },
    "592": {
      "fn": "SafeMathMock.subMemoryCheck",
      "jump": "i",
      "offset": [
        2375,
        2690
      ],
      "op": "JUMP",
      "path": "80"
    },
    "593": {
      "fn": "SafeMathMock.doDiv",
      "offset": [
        1236,
        1345
      ],
      "op": "JUMPDEST",
      "path": "80"
    },
    "594": {
      "fn": "SafeMathMock.doDiv",
      "offset": [
        1236,
        1345
      ],
      "op": "PUSH2",
      "path": "80",
      "value": "0x12E"
    },
    "597": {
      "fn": "SafeMathMock.doDiv",
      "offset": [
        1236,
        1345
      ],
      "op": "PUSH2",
      "path": "80",
      "value": "0x25F"
    },
    "600": {
      "fn": "SafeMathMock.doDiv",
      "offset": [
        1236,
        1345
      ],
      "op": "CALLDATASIZE",
      "path": "80"
    },
    "601": {
      "fn": "SafeMathMock.doDiv",
      "offset": [
        1236,
        1345
      ],
      "op": "PUSH1",
      "path": "80",
      "value": "0x4"
    },
    "603": {
      "fn": "SafeMathMock.doDiv",
      "offset": [
        1236,
        1345
      ],
      "op": "PUSH2",
      "path": "80",
      "value": "0x6AA"
    },
    "606": {
      "fn": "SafeMathMock.doDiv",
      "jump": "i",
      "offset": [
        1236,
        1345
      ],
      "op": "JUMP",
      "path": "80"
    },
    "607": {
      "fn": "SafeMathMock.doDiv",
      "offset": [
        1236,
        1345
      ],
      "op": "JUMPDEST",
      "path": "80"
    },
    "608": {
      "fn": "SafeMathMock.doDiv",
      "offset": [
        1236,
        1345
      ],
      "op": "PUSH2",
      "path": "80",
      "value": "0x3FC"
    },
    "611": {
      "fn": "SafeMathMock.doDiv",
      "jump": "i",
      "offset": [
        1236,
        1345
      ],
      "op": "JUMP",
      "path": "80"
    },
    "612": {
      "fn": "SafeMathMock.divWithMessage",
      "offset": [
        1662,
        1852
      ],
      "op": "JUMPDEST",
      "path": "80"
    },
    "613": {
      "fn": "SafeMathMock.divWithMessage",
      "offset": [
        1787,
        1794
      ],
      "op": "PUSH1",
      "path": "80",
      "value": "0x0"
    },
    "615": {
      "fn": "SafeMathMock.divWithMessage",
      "offset": [
        1813,
        1845
      ],
      "op": "PUSH2",
      "path": "80",
      "statement": 0,
      "value": "0x271"
    },
    "618": {
      "fn": "SafeMathMock.divWithMessage",
      "offset": [
        1826,
        1827
      ],
      "op": "DUP5",
      "path": "80"
    },
    "619": {
      "fn": "SafeMathMock.divWithMessage",
      "offset": [
        1829,
        1830
      ],
      "op": "DUP5",
      "path": "80"
    },
    "620": {
      "fn": "SafeMathMock.divWithMessage",
      "offset": [
        1832,
        1844
      ],
      "op": "DUP5",
      "path": "80"
    },
    "621": {
      "fn": "SafeMathMock.divWithMessage",
      "offset": [
        1813,
        1825
      ],
      "op": "PUSH2",
      "path": "80",
      "value": "0x408"
    },
    "624": {
      "fn": "SafeMathMock.divWithMessage",
      "jump": "i",
      "offset": [
        1813,
        1845
      ],
      "op": "JUMP",
      "path": "80"
    },
    "625": {
      "fn": "SafeMathMock.divWithMessage",
      "offset": [
        1813,
        1845
      ],
      "op": "JUMPDEST",
      "path": "80"
    },
    "626": {
      "fn": "SafeMathMock.divWithMessage",
      "offset": [
        1806,
        1845
      ],
      "op": "SWAP5",
      "path": "80"
    },
    "627": {
      "fn": "SafeMathMock.divWithMessage",
      "offset": [
        1662,
        1852
      ],
      "op": "SWAP4",
      "path": "80"
    },
    "628": {
      "op": "POP"
    },
    "629": {
      "op": "POP"
    },
    "630": {
      "op": "POP"
    },
    "631": {
      "op": "POP"
    },
    "632": {
      "fn": "SafeMathMock.divWithMessage",
      "jump": "o",
      "offset": [
        1662,
        1852
      ],
      "op": "JUMP",
      "path": "80"
    },
    "633": {
      "fn": "SafeMathMock.tryMod",
      "offset": [
        668,
        798
      ],
      "op": "JUMPDEST",
      "path": "80"
    },
    "634": {
      "fn": "SafeMathMock.tryMod",
      "offset": [
        727,
        736
      ],
      "op": "PUSH1",
      "path": "80",
      "value": "0x0"
    },
    "636": {
      "fn": "SafeMathMock.tryMod",
      "offset": [
        738,
        751
      ],
      "op": "DUP1",
      "path": "80"
    },
    "637": {
      "fn": "SafeMathMock.tryMod",
      "offset": [
        770,
        791
      ],
      "op": "PUSH2",
      "path": "80",
      "statement": 1,
      "value": "0x286"
    },
    "640": {
      "fn": "SafeMathMock.tryMod",
      "offset": [
        786,
        787
      ],
      "op": "DUP5",
      "path": "80"
    },
    "641": {
      "fn": "SafeMathMock.tryMod",
      "offset": [
        789,
        790
      ],
      "op": "DUP5",
      "path": "80"
    },
    "642": {
      "fn": "SafeMathMock.tryMod",
      "offset": [
        770,
        785
      ],
      "op": "PUSH2",
      "path": "80",
      "value": "0x44B"
    },
    "645": {
      "fn": "SafeMathMock.tryMod",
      "jump": "i",
      "offset": [
        770,
        791
      ],
      "op": "JUMP",
      "path": "80"
    },
    "646": {
      "fn": "SafeMathMock.tryMod",
      "offset": [
        770,
        791
      ],
      "op": "JUMPDEST",
      "path": "80"
    },
    "647": {
      "fn": "SafeMathMock.tryMod",
      "offset": [
        763,
        791
      ],
      "op": "SWAP2",
      "path": "80"
    },
    "648": {
      "fn": "SafeMathMock.tryMod",
      "offset": [
        763,
        791
      ],
      "op": "POP",
      "path": "80"
    },
    "649": {
      "fn": "SafeMathMock.tryMod",
      "offset": [
        763,
        791
      ],
      "op": "SWAP2",
      "path": "80"
    },
    "650": {
      "fn": "SafeMathMock.tryMod",
      "offset": [
        763,
        791
      ],
      "op": "POP",
      "path": "80"
    },
    "651": {
      "fn": "SafeMathMock.tryMod",
      "offset": [
        668,
        798
      ],
      "op": "JUMPDEST",
      "path": "80"
    },
    "652": {
      "fn": "SafeMathMock.tryMod",
      "offset": [
        668,
        798
      ],
      "op": "SWAP3",
      "path": "80"
    },
    "653": {
      "fn": "SafeMathMock.tryMod",
      "offset": [
        668,
        798
      ],
      "op": "POP",
      "path": "80"
    },
    "654": {
      "fn": "SafeMathMock.tryMod",
      "offset": [
        668,
        798
      ],
      "op": "SWAP3",
      "path": "80"
    },
    "655": {
      "fn": "SafeMathMock.tryMod",
      "offset": [
        668,
        798
      ],
      "op": "SWAP1",
      "path": "80"
    },
    "656": {
      "fn": "SafeMathMock.tryMod",
      "offset": [
        668,
        798
      ],
      "op": "POP",
      "path": "80"
    },
    "657": {
      "fn": "SafeMathMock.tryMod",
      "jump": "o",
      "offset": [
        668,
        798
      ],
      "op": "JUMP",
      "path": "80"
    },
    "658": {
      "fn": "SafeMathMock.tryMul",
      "offset": [
        396,
        526
      ],
      "op": "JUMPDEST",
      "path": "80"
    },
    "659": {
      "fn": "SafeMathMock.tryMul",
      "offset": [
        455,
        464
      ],
      "op": "PUSH1",
      "path": "80",
      "value": "0x0"
    },
    "661": {
      "fn": "SafeMathMock.tryMul",
      "offset": [
        466,
        479
      ],
      "op": "DUP1",
      "path": "80"
    },
    "662": {
      "fn": "SafeMathMock.tryMul",
      "offset": [
        498,
        519
      ],
      "op": "PUSH2",
      "path": "80",
      "statement": 2,
      "value": "0x286"
    },
    "665": {
      "fn": "SafeMathMock.tryMul",
      "offset": [
        514,
        515
      ],
      "op": "DUP5",
      "path": "80"
    },
    "666": {
      "fn": "SafeMathMock.tryMul",
      "offset": [
        517,
        518
      ],
      "op": "DUP5",
      "path": "80"
    },
    "667": {
      "fn": "SafeMathMock.tryMul",
      "offset": [
        498,
        513
      ],
      "op": "PUSH2",
      "path": "80",
      "value": "0x47B"
    },
    "670": {
      "fn": "SafeMathMock.tryMul",
      "jump": "i",
      "offset": [
        498,
        519
      ],
      "op": "JUMP",
      "path": "80"
    },
    "671": {
      "fn": "SafeMathMock.doSub",
      "offset": [
        1006,
        1115
      ],
      "op": "JUMPDEST",
      "path": "80"
    },
    "672": {
      "fn": "SafeMathMock.doSub",
      "offset": [
        1064,
        1071
      ],
      "op": "PUSH1",
      "path": "80",
      "value": "0x0"
    },
    "674": {
      "fn": "SafeMathMock.doSub",
      "offset": [
        1090,
        1108
      ],
      "op": "PUSH2",
      "path": "80",
      "statement": 3,
      "value": "0x2AB"
    },
    "677": {
      "fn": "SafeMathMock.doSub",
      "offset": [
        1103,
        1104
      ],
      "op": "DUP4",
      "path": "80"
    },
    "678": {
      "fn": "SafeMathMock.doSub",
      "offset": [
        1106,
        1107
      ],
      "op": "DUP4",
      "path": "80"
    },
    "679": {
      "fn": "SafeMathMock.doSub",
      "offset": [
        1090,
        1102
      ],
      "op": "PUSH2",
      "path": "80",
      "value": "0x4C1"
    },
    "682": {
      "fn": "SafeMathMock.doSub",
      "jump": "i",
      "offset": [
        1090,
        1108
      ],
      "op": "JUMP",
      "path": "80"
    },
    "683": {
      "fn": "SafeMathMock.doSub",
      "offset": [
        1090,
        1108
      ],
      "op": "JUMPDEST",
      "path": "80"
    },
    "684": {
      "fn": "SafeMathMock.doSub",
      "offset": [
        1083,
        1108
      ],
      "op": "SWAP4",
      "path": "80"
    },
    "685": {
      "fn": "SafeMathMock.doSub",
      "offset": [
        1006,
        1115
      ],
      "op": "SWAP3",
      "path": "80"
    },
    "686": {
      "op": "POP"
    },
    "687": {
      "op": "POP"
    },
    "688": {
      "op": "POP"
    },
    "689": {
      "fn": "SafeMathMock.doSub",
      "jump": "o",
      "offset": [
        1006,
        1115
      ],
      "op": "JUMP",
      "path": "80"
    },
    "690": {
      "fn": "SafeMathMock.modMemoryCheck",
      "offset": [
        3338,
        3653
      ],
      "op": "JUMPDEST",
      "path": "80"
    },
    "691": {
      "fn": "SafeMathMock.modMemoryCheck",
      "offset": [
        3473,
        3477
      ],
      "op": "PUSH1",
      "path": "80",
      "value": "0x40"
    },
    "693": {
      "fn": "SafeMathMock.modMemoryCheck",
      "offset": [
        3467,
        3478
      ],
      "op": "MLOAD",
      "path": "80"
    },
    "694": {
      "fn": "SafeMathMock.modMemoryCheck",
      "offset": [
        3425,
        3427
      ],
      "op": "PUSH1",
      "path": "80",
      "value": "0x20"
    },
    "696": {
      "fn": "SafeMathMock.modMemoryCheck",
      "offset": [
        3385,
        3396
      ],
      "op": "PUSH1",
      "path": "80",
      "value": "0x0"
    },
    "698": {
      "fn": "SafeMathMock.modMemoryCheck",
      "offset": [
        3497,
        3577
      ],
      "op": "JUMPDEST",
      "path": "80"
    },
    "699": {
      "fn": "SafeMathMock.modMemoryCheck",
      "offset": [
        3521,
        3527
      ],
      "op": "DUP2",
      "path": "80"
    },
    "700": {
      "fn": "SafeMathMock.modMemoryCheck",
      "offset": [
        3517,
        3518
      ],
      "op": "DUP2",
      "path": "80"
    },
    "701": {
      "fn": "SafeMathMock.modMemoryCheck",
      "offset": [
        3517,
        3527
      ],
      "op": "LT",
      "path": "80"
    },
    "702": {
      "fn": "SafeMathMock.modMemoryCheck",
      "offset": [
        3497,
        3577
      ],
      "op": "ISZERO",
      "path": "80"
    },
    "703": {
      "fn": "SafeMathMock.modMemoryCheck",
      "offset": [
        3497,
        3577
      ],
      "op": "PUSH2",
      "path": "80",
      "value": "0x2DE"
    },
    "706": {
      "fn": "SafeMathMock.modMemoryCheck",
      "offset": [
        3497,
        3577
      ],
      "op": "JUMPI",
      "path": "80"
    },
    "707": {
      "fn": "SafeMathMock.modMemoryCheck",
      "offset": [
        3548,
        3566
      ],
      "op": "PUSH2",
      "path": "80",
      "statement": 4,
      "value": "0x2CD"
    },
    "710": {
      "fn": "SafeMathMock.modMemoryCheck",
      "offset": [
        3561,
        3562
      ],
      "op": "PUSH1",
      "path": "80",
      "value": "0x1"
    },
    "712": {
      "fn": "SafeMathMock.modMemoryCheck",
      "offset": [
        3564,
        3565
      ],
      "op": "DUP1",
      "path": "80"
    },
    "713": {
      "fn": "SafeMathMock.modMemoryCheck",
      "offset": [
        3548,
        3560
      ],
      "op": "PUSH2",
      "path": "80",
      "value": "0x4CD"
    },
    "716": {
      "fn": "SafeMathMock.modMemoryCheck",
      "jump": "i",
      "offset": [
        3548,
        3566
      ],
      "op": "JUMP",
      "path": "80"
    },
    "717": {
      "fn": "SafeMathMock.modMemoryCheck",
      "offset": [
        3548,
        3566
      ],
      "op": "JUMPDEST",
      "path": "80"
    },
    "718": {
      "op": "POP"
    },
    "719": {
      "fn": "SafeMathMock.modMemoryCheck",
      "offset": [
        3529,
        3532
      ],
      "op": "PUSH2",
      "path": "80",
      "statement": 5,
      "value": "0x2D7"
    },
    "722": {
      "fn": "SafeMathMock.modMemoryCheck",
      "offset": [
        3529,
        3532
      ],
      "op": "DUP2",
      "path": "80"
    },
    "723": {
      "fn": "SafeMathMock.modMemoryCheck",
      "offset": [
        3529,
        3532
      ],
      "op": "PUSH2",
      "path": "80",
      "value": "0x6E2"
    },
    "726": {
      "fn": "SafeMathMock.modMemoryCheck",
      "jump": "i",
      "offset": [
        3529,
        3532
      ],
      "op": "JUMP",
      "path": "80"
    },
    "727": {
      "fn": "SafeMathMock.modMemoryCheck",
      "offset": [
        3529,
        3532
      ],
      "op": "JUMPDEST",
      "path": "80"
    },
    "728": {
      "fn": "SafeMathMock.modMemoryCheck",
      "offset": [
        3529,
        3532
      ],
      "op": "SWAP1",
      "path": "80"
    },
    "729": {
      "fn": "SafeMathMock.modMemoryCheck",
      "offset": [
        3529,
        3532
      ],
      "op": "POP",
      "path": "80"
    },
    "730": {
      "fn": "SafeMathMock.modMemoryCheck",
      "offset": [
        3497,
        3577
      ],
      "op": "PUSH2",
      "path": "80",
      "value": "0x2BA"
    },
    "733": {
      "fn": "SafeMathMock.modMemoryCheck",
      "offset": [
        3497,
        3577
      ],
      "op": "JUMP",
      "path": "80"
    },
    "734": {
      "fn": "SafeMathMock.modMemoryCheck",
      "offset": [
        3497,
        3577
      ],
      "op": "JUMPDEST",
      "path": "80"
    },
    "735": {
      "op": "POP"
    },
    "736": {
      "op": "POP"
    },
    "737": {
      "fn": "SafeMathMock.modMemoryCheck",
      "offset": [
        3626,
        3630
      ],
      "op": "PUSH1",
      "path": "80",
      "value": "0x40"
    },
    "739": {
      "fn": "SafeMathMock.modMemoryCheck",
      "offset": [
        3620,
        3631
      ],
      "op": "MLOAD",
      "path": "80"
    },
    "740": {
      "fn": "SafeMathMock.modMemoryCheck",
      "offset": [
        3616,
        3637
      ],
      "op": "SUB",
      "path": "80"
    },
    "741": {
      "fn": "SafeMathMock.modMemoryCheck",
      "offset": [
        3616,
        3637
      ],
      "op": "SWAP1",
      "path": "80"
    },
    "742": {
      "fn": "SafeMathMock.modMemoryCheck",
      "jump": "o",
      "offset": [
        3338,
        3653
      ],
      "op": "JUMP",
      "path": "80"
    },
    "743": {
      "fn": "SafeMathMock.tryDiv",
      "offset": [
        532,
        662
      ],
      "op": "JUMPDEST",
      "path": "80"
    },
    "744": {
      "fn": "SafeMathMock.tryDiv",
      "offset": [
        591,
        600
      ],
      "op": "PUSH1",
      "path": "80",
      "value": "0x0"
    },
    "746": {
      "fn": "SafeMathMock.tryDiv",
      "offset": [
        602,
        615
      ],
      "op": "DUP1",
      "path": "80"
    },
    "747": {
      "fn": "SafeMathMock.tryDiv",
      "offset": [
        634,
        655
      ],
      "op": "PUSH2",
      "path": "80",
      "statement": 6,
      "value": "0x286"
    },
    "750": {
      "fn": "SafeMathMock.tryDiv",
      "offset": [
        650,
        651
      ],
      "op": "DUP5",
      "path": "80"
    },
    "751": {
      "fn": "SafeMathMock.tryDiv",
      "offset": [
        653,
        654
      ],
      "op": "DUP5",
      "path": "80"
    },
    "752": {
      "fn": "SafeMathMock.tryDiv",
      "offset": [
        634,
        649
      ],
      "op": "PUSH2",
      "path": "80",
      "value": "0x4D9"
    },
    "755": {
      "fn": "SafeMathMock.tryDiv",
      "jump": "i",
      "offset": [
        634,
        655
      ],
      "op": "JUMP",
      "path": "80"
    },
    "756": {
      "fn": "SafeMathMock.mulMemoryCheck",
      "offset": [
        2696,
        3011
      ],
      "op": "JUMPDEST",
      "path": "80"
    },
    "757": {
      "fn": "SafeMathMock.mulMemoryCheck",
      "offset": [
        2831,
        2835
      ],
      "op": "PUSH1",
      "path": "80",
      "value": "0x40"
    },
    "759": {
      "fn": "SafeMathMock.mulMemoryCheck",
      "offset": [
        2825,
        2836
      ],
      "op": "MLOAD",
      "path": "80"
    },
    "760": {
      "fn": "SafeMathMock.mulMemoryCheck",
      "offset": [
        2783,
        2785
      ],
      "op": "PUSH1",
      "path": "80",
      "value": "0x20"
    },
    "762": {
      "fn": "SafeMathMock.mulMemoryCheck",
      "offset": [
        2743,
        2754
      ],
      "op": "PUSH1",
      "path": "80",
      "value": "0x0"
    },
    "764": {
      "fn": "SafeMathMock.mulMemoryCheck",
      "offset": [
        2855,
        2935
      ],
      "op": "JUMPDEST",
      "path": "80"
    },
    "765": {
      "fn": "SafeMathMock.mulMemoryCheck",
      "offset": [
        2879,
        2885
      ],
      "op": "DUP2",
      "path": "80"
    },
    "766": {
      "fn": "SafeMathMock.mulMemoryCheck",
      "offset": [
        2875,
        2876
      ],
      "op": "DUP2",
      "path": "80"
    },
    "767": {
      "fn": "SafeMathMock.mulMemoryCheck",
      "offset": [
        2875,
        2885
      ],
      "op": "LT",
      "path": "80"
    },
    "768": {
      "fn": "SafeMathMock.mulMemoryCheck",
      "offset": [
        2855,
        2935
      ],
      "op": "ISZERO",
      "path": "80"
    },
    "769": {
      "fn": "SafeMathMock.mulMemoryCheck",
      "offset": [
        2855,
        2935
      ],
      "op": "PUSH2",
      "path": "80",
      "value": "0x2DE"
    },
    "772": {
      "fn": "SafeMathMock.mulMemoryCheck",
      "offset": [
        2855,
        2935
      ],
      "op": "JUMPI",
      "path": "80"
    },
    "773": {
      "fn": "SafeMathMock.mulMemoryCheck",
      "offset": [
        2906,
        2924
      ],
      "op": "PUSH2",
      "path": "80",
      "statement": 7,
      "value": "0x30F"
    },
    "776": {
      "fn": "SafeMathMock.mulMemoryCheck",
      "offset": [
        2919,
        2920
      ],
      "op": "PUSH1",
      "path": "80",
      "value": "0x1"
    },
    "778": {
      "fn": "SafeMathMock.mulMemoryCheck",
      "offset": [
        2922,
        2923
      ],
      "op": "DUP1",
      "path": "80"
    },
    "779": {
      "fn": "SafeMathMock.mulMemoryCheck",
      "offset": [
        2906,
        2918
      ],
      "op": "PUSH2",
      "path": "80",
      "value": "0x509"
    },
    "782": {
      "fn": "SafeMathMock.mulMemoryCheck",
      "jump": "i",
      "offset": [
        2906,
        2924
      ],
      "op": "JUMP",
      "path": "80"
    },
    "783": {
      "fn": "SafeMathMock.mulMemoryCheck",
      "offset": [
        2906,
        2924
      ],
      "op": "JUMPDEST",
      "path": "80"
    },
    "784": {
      "op": "POP"
    },
    "785": {
      "fn": "SafeMathMock.mulMemoryCheck",
      "offset": [
        2887,
        2890
      ],
      "op": "PUSH2",
      "path": "80",
      "statement": 8,
      "value": "0x319"
    },
    "788": {
      "fn": "SafeMathMock.mulMemoryCheck",
      "offset": [
        2887,
        2890
      ],
      "op": "DUP2",
      "path": "80"
    },
    "789": {
      "fn": "SafeMathMock.mulMemoryCheck",
      "offset": [
        2887,
        2890
      ],
      "op": "PUSH2",
      "path": "80",
      "value": "0x6E2"
    },
    "792": {
      "fn": "SafeMathMock.mulMemoryCheck",
      "jump": "i",
      "offset": [
        2887,
        2890
      ],
      "op": "JUMP",
      "path": "80"
    },
    "793": {
      "fn": "SafeMathMock.mulMemoryCheck",
      "offset": [
        2887,
        2890
      ],
      "op": "JUMPDEST",
      "path": "80"
    },
    "794": {
      "fn": "SafeMathMock.mulMemoryCheck",
      "offset": [
        2887,
        2890
      ],
      "op": "SWAP1",
      "path": "80"
    },
    "795": {
      "fn": "SafeMathMock.mulMemoryCheck",
      "offset": [
        2887,
        2890
      ],
      "op": "POP",
      "path": "80"
    },
    "796": {
      "fn": "SafeMathMock.mulMemoryCheck",
      "offset": [
        2855,
        2935
      ],
      "op": "PUSH2",
      "path": "80",
      "value": "0x2FC"
    },
    "799": {
      "fn": "SafeMathMock.mulMemoryCheck",
      "offset": [
        2855,
        2935
      ],
      "op": "JUMP",
      "path": "80"
    },
    "800": {
      "fn": "SafeMathMock.doMod",
      "offset": [
        1351,
        1460
      ],
      "op": "JUMPDEST",
      "path": "80"
    },
    "801": {
      "fn": "SafeMathMock.doMod",
      "offset": [
        1409,
        1416
      ],
      "op": "PUSH1",
      "path": "80",
      "value": "0x0"
    },
    "803": {
      "fn": "SafeMathMock.doMod",
      "offset": [
        1435,
        1453
      ],
      "op": "PUSH2",
      "path": "80",
      "statement": 9,
      "value": "0x2AB"
    },
    "806": {
      "fn": "SafeMathMock.doMod",
      "offset": [
        1448,
        1449
      ],
      "op": "DUP4",
      "path": "80"
    },
    "807": {
      "fn": "SafeMathMock.doMod",
      "offset": [
        1451,
        1452
      ],
      "op": "DUP4",
      "path": "80"
    },
    "808": {
      "fn": "SafeMathMock.doMod",
      "offset": [
        1435,
        1447
      ],
      "op": "PUSH2",
      "path": "80",
      "value": "0x4CD"
    },
    "811": {
      "fn": "SafeMathMock.doMod",
      "jump": "i",
      "offset": [
        1435,
        1453
      ],
      "op": "JUMP",
      "path": "80"
    },
    "812": {
      "fn": "SafeMathMock.tryAdd",
      "offset": [
        124,
        254
      ],
      "op": "JUMPDEST",
      "path": "80"
    },
    "813": {
      "fn": "SafeMathMock.tryAdd",
      "offset": [
        183,
        192
      ],
      "op": "PUSH1",
      "path": "80",
      "value": "0x0"
    },
    "815": {
      "fn": "SafeMathMock.tryAdd",
      "offset": [
        194,
        207
      ],
      "op": "DUP1",
      "path": "80"
    },
    "816": {
      "fn": "SafeMathMock.tryAdd",
      "offset": [
        226,
        247
      ],
      "op": "PUSH2",
      "path": "80",
      "statement": 10,
      "value": "0x286"
    },
    "819": {
      "fn": "SafeMathMock.tryAdd",
      "offset": [
        242,
        243
      ],
      "op": "DUP5",
      "path": "80"
    },
    "820": {
      "fn": "SafeMathMock.tryAdd",
      "offset": [
        245,
        246
      ],
      "op": "DUP5",
      "path": "80"
    },
    "821": {
      "fn": "SafeMathMock.tryAdd",
      "offset": [
        226,
        241
      ],
      "op": "PUSH2",
      "path": "80",
      "value": "0x515"
    },
    "824": {
      "fn": "SafeMathMock.tryAdd",
      "jump": "i",
      "offset": [
        226,
        247
      ],
      "op": "JUMP",
      "path": "80"
    },
    "825": {
      "fn": "SafeMathMock.subWithMessage",
      "offset": [
        1466,
        1656
      ],
      "op": "JUMPDEST",
      "path": "80"
    },
    "826": {
      "fn": "SafeMathMock.subWithMessage",
      "offset": [
        1591,
        1598
      ],
      "op": "PUSH1",
      "path": "80",
      "value": "0x0"
    },
    "828": {
      "fn": "SafeMathMock.subWithMessage",
      "offset": [
        1617,
        1649
      ],
      "op": "PUSH2",
      "path": "80",
      "statement": 11,
      "value": "0x271"
    },
    "831": {
      "fn": "SafeMathMock.subWithMessage",
      "offset": [
        1630,
        1631
      ],
      "op": "DUP5",
      "path": "80"
    },
    "832": {
      "fn": "SafeMathMock.subWithMessage",
      "offset": [
        1633,
        1634
      ],
      "op": "DUP5",
      "path": "80"
    },
    "833": {
      "fn": "SafeMathMock.subWithMessage",
      "offset": [
        1636,
        1648
      ],
      "op": "DUP5",
      "path": "80"
    },
    "834": {
      "fn": "SafeMathMock.subWithMessage",
      "offset": [
        1617,
        1629
      ],
      "op": "PUSH2",
      "path": "80",
      "value": "0x530"
    },
    "837": {
      "fn": "SafeMathMock.subWithMessage",
      "jump": "i",
      "offset": [
        1617,
        1649
      ],
      "op": "JUMP",
      "path": "80"
    },
    "838": {
      "fn": "SafeMathMock.modWithMessage",
      "offset": [
        1858,
        2048
      ],
      "op": "JUMPDEST",
      "path": "80"
    },
    "839": {
      "fn": "SafeMathMock.modWithMessage",
      "offset": [
        1983,
        1990
      ],
      "op": "PUSH1",
      "path": "80",
      "value": "0x0"
    },
    "841": {
      "fn": "SafeMathMock.modWithMessage",
      "offset": [
        2009,
        2041
      ],
      "op": "PUSH2",
      "path": "80",
      "statement": 12,
      "value": "0x271"
    },
    "844": {
      "fn": "SafeMathMock.modWithMessage",
      "offset": [
        2022,
        2023
      ],
      "op": "DUP5",
      "path": "80"
    },
    "845": {
      "fn": "SafeMathMock.modWithMessage",
      "offset": [
        2025,
        2026
      ],
      "op": "DUP5",
      "path": "80"
    },
    "846": {
      "fn": "SafeMathMock.modWithMessage",
      "offset": [
        2028,
        2040
      ],
      "op": "DUP5",
      "path": "80"
    },
    "847": {
      "fn": "SafeMathMock.modWithMessage",
      "offset": [
        2009,
        2021
      ],
      "op": "PUSH2",
      "path": "80",
      "value": "0x55C"
    },
    "850": {
      "fn": "SafeMathMock.modWithMessage",
      "jump": "i",
      "offset": [
        2009,
        2041
      ],
      "op": "JUMP",
      "path": "80"
    },
    "851": {
      "fn": "SafeMathMock.trySub",
      "offset": [
        260,
        390
      ],
      "op": "JUMPDEST",
      "path": "80"
    },
    "852": {
      "fn": "SafeMathMock.trySub",
      "offset": [
        319,
        328
      ],
      "op": "PUSH1",
      "path": "80",
      "value": "0x0"
    },
    "854": {
      "fn": "SafeMathMock.trySub",
      "offset": [
        330,
        343
      ],
      "op": "DUP1",
      "path": "80"
    },
    "855": {
      "fn": "SafeMathMock.trySub",
      "offset": [
        362,
        383
      ],
      "op": "PUSH2",
      "path": "80",
      "statement": 13,
      "value": "0x286"
    },
    "858": {
      "fn": "SafeMathMock.trySub",
      "offset": [
        378,
        379
      ],
      "op": "DUP5",
      "path": "80"
    },
    "859": {
      "fn": "SafeMathMock.trySub",
      "offset": [
        381,
        382
      ],
      "op": "DUP5",
      "path": "80"
    },
    "860": {
      "fn": "SafeMathMock.trySub",
      "offset": [
        362,
        377
      ],
      "op": "PUSH2",
      "path": "80",
      "value": "0x596"
    },
    "863": {
      "fn": "SafeMathMock.trySub",
      "jump": "i",
      "offset": [
        362,
        383
      ],
      "op": "JUMP",
      "path": "80"
    },
    "864": {
      "fn": "SafeMathMock.divMemoryCheck",
      "offset": [
        3017,
        3332
      ],
      "op": "JUMPDEST",
      "path": "80"
    },
    "865": {
      "fn": "SafeMathMock.divMemoryCheck",
      "offset": [
        3152,
        3156
      ],
      "op": "PUSH1",
      "path": "80",
      "value": "0x40"
    },
    "867": {
      "fn": "SafeMathMock.divMemoryCheck",
      "offset": [
        3146,
        3157
      ],
      "op": "MLOAD",
      "path": "80"
    },
    "868": {
      "fn": "SafeMathMock.divMemoryCheck",
      "offset": [
        3104,
        3106
      ],
      "op": "PUSH1",
      "path": "80",
      "value": "0x20"
    },
    "870": {
      "fn": "SafeMathMock.divMemoryCheck",
      "offset": [
        3064,
        3075
      ],
      "op": "PUSH1",
      "path": "80",
      "value": "0x0"
    },
    "872": {
      "fn": "SafeMathMock.divMemoryCheck",
      "offset": [
        3176,
        3256
      ],
      "op": "JUMPDEST",
      "path": "80"
    },
    "873": {
      "fn": "SafeMathMock.divMemoryCheck",
      "offset": [
        3200,
        3206
      ],
      "op": "DUP2",
      "path": "80"
    },
    "874": {
      "fn": "SafeMathMock.divMemoryCheck",
      "offset": [
        3196,
        3197
      ],
      "op": "DUP2",
      "path": "80"
    },
    "875": {
      "fn": "SafeMathMock.divMemoryCheck",
      "offset": [
        3196,
        3206
      ],
      "op": "LT",
      "path": "80"
    },
    "876": {
      "fn": "SafeMathMock.divMemoryCheck",
      "offset": [
        3176,
        3256
      ],
      "op": "ISZERO",
      "path": "80"
    },
    "877": {
      "fn": "SafeMathMock.divMemoryCheck",
      "offset": [
        3176,
        3256
      ],
      "op": "PUSH2",
      "path": "80",
      "value": "0x2DE"
    },
    "880": {
      "fn": "SafeMathMock.divMemoryCheck",
      "offset": [
        3176,
        3256
      ],
      "op": "JUMPI",
      "path": "80"
    },
    "881": {
      "fn": "SafeMathMock.divMemoryCheck",
      "offset": [
        3227,
        3245
      ],
      "op": "PUSH2",
      "path": "80",
      "statement": 14,
      "value": "0x37B"
    },
    "884": {
      "fn": "SafeMathMock.divMemoryCheck",
      "offset": [
        3240,
        3241
      ],
      "op": "PUSH1",
      "path": "80",
      "value": "0x1"
    },
    "886": {
      "fn": "SafeMathMock.divMemoryCheck",
      "offset": [
        3243,
        3244
      ],
      "op": "DUP1",
      "path": "80"
    },
    "887": {
      "fn": "SafeMathMock.divMemoryCheck",
      "offset": [
        3227,
        3239
      ],
      "op": "PUSH2",
      "path": "80",
      "value": "0x5B8"
    },
    "890": {
      "fn": "SafeMathMock.divMemoryCheck",
      "jump": "i",
      "offset": [
        3227,
        3245
      ],
      "op": "JUMP",
      "path": "80"
    },
    "891": {
      "fn": "SafeMathMock.divMemoryCheck",
      "offset": [
        3227,
        3245
      ],
      "op": "JUMPDEST",
      "path": "80"
    },
    "892": {
      "op": "POP"
    },
    "893": {
      "fn": "SafeMathMock.divMemoryCheck",
      "offset": [
        3208,
        3211
      ],
      "op": "PUSH2",
      "path": "80",
      "statement": 15,
      "value": "0x385"
    },
    "896": {
      "fn": "SafeMathMock.divMemoryCheck",
      "offset": [
        3208,
        3211
      ],
      "op": "DUP2",
      "path": "80"
    },
    "897": {
      "fn": "SafeMathMock.divMemoryCheck",
      "offset": [
        3208,
        3211
      ],
      "op": "PUSH2",
      "path": "80",
      "value": "0x6E2"
    },
    "900": {
      "fn": "SafeMathMock.divMemoryCheck",
      "jump": "i",
      "offset": [
        3208,
        3211
      ],
      "op": "JUMP",
      "path": "80"
    },
    "901": {
      "fn": "SafeMathMock.divMemoryCheck",
      "offset": [
        3208,
        3211
      ],
      "op": "JUMPDEST",
      "path": "80"
    },
    "902": {
      "fn": "SafeMathMock.divMemoryCheck",
      "offset": [
        3208,
        3211
      ],
      "op": "SWAP1",
      "path": "80"
    },
    "903": {
      "fn": "SafeMathMock.divMemoryCheck",
      "offset": [
        3208,
        3211
      ],
      "op": "POP",
      "path": "80"
    },
    "904": {
      "fn": "SafeMathMock.divMemoryCheck",
      "offset": [
        3176,
        3256
      ],
      "op": "PUSH2",
      "path": "80",
      "value": "0x368"
    },
    "907": {
      "fn": "SafeMathMock.divMemoryCheck",
      "offset": [
        3176,
        3256
      ],
      "op": "JUMP",
      "path": "80"
    },
    "908": {
      "fn": "SafeMathMock.doAdd",
      "offset": [
        891,
        1000
      ],
      "op": "JUMPDEST",
      "path": "80"
    },
    "909": {
      "fn": "SafeMathMock.doAdd",
      "offset": [
        949,
        956
      ],
      "op": "PUSH1",
      "path": "80",
      "value": "0x0"
    },
    "911": {
      "fn": "SafeMathMock.doAdd",
      "offset": [
        975,
        993
      ],
      "op": "PUSH2",
      "path": "80",
      "statement": 16,
      "value": "0x2AB"
    },
    "914": {
      "fn": "SafeMathMock.doAdd",
      "offset": [
        988,
        989
      ],
      "op": "DUP4",
      "path": "80"
    },
    "915": {
      "fn": "SafeMathMock.doAdd",
      "offset": [
        991,
        992
      ],
      "op": "DUP4",
      "path": "80"
    },
    "916": {
      "fn": "SafeMathMock.doAdd",
      "offset": [
        975,
        987
      ],
      "op": "PUSH2",
      "path": "80",
      "value": "0x5C4"
    },
    "919": {
      "fn": "SafeMathMock.doAdd",
      "jump": "i",
      "offset": [
        975,
        993
      ],
      "op": "JUMP",
      "path": "80"
    },
    "920": {
      "fn": "SafeMathMock.doMul",
      "offset": [
        1121,
        1230
      ],
      "op": "JUMPDEST",
      "path": "80"
    },
    "921": {
      "fn": "SafeMathMock.doMul",
      "offset": [
        1179,
        1186
      ],
      "op": "PUSH1",
      "path": "80",
      "value": "0x0"
    },
    "923": {
      "fn": "SafeMathMock.doMul",
      "offset": [
        1205,
        1223
      ],
      "op": "PUSH2",
      "path": "80",
      "statement": 17,
      "value": "0x2AB"
    },
    "926": {
      "fn": "SafeMathMock.doMul",
      "offset": [
        1218,
        1219
      ],
      "op": "DUP4",
      "path": "80"
    },
    "927": {
      "fn": "SafeMathMock.doMul",
      "offset": [
        1221,
        1222
      ],
      "op": "DUP4",
      "path": "80"
    },
    "928": {
      "fn": "SafeMathMock.doMul",
      "offset": [
        1205,
        1217
      ],
      "op": "PUSH2",
      "path": "80",
      "value": "0x509"
    },
    "931": {
      "fn": "SafeMathMock.doMul",
      "jump": "i",
      "offset": [
        1205,
        1223
      ],
      "op": "JUMP",
      "path": "80"
    },
    "932": {
      "fn": "SafeMathMock.addMemoryCheck",
      "offset": [
        2054,
        2369
      ],
      "op": "JUMPDEST",
      "path": "80"
    },
    "933": {
      "fn": "SafeMathMock.addMemoryCheck",
      "offset": [
        2189,
        2193
      ],
      "op": "PUSH1",
      "path": "80",
      "value": "0x40"
    },
    "935": {
      "fn": "SafeMathMock.addMemoryCheck",
      "offset": [
        2183,
        2194
      ],
      "op": "MLOAD",
      "path": "80"
    },
    "936": {
      "fn": "SafeMathMock.addMemoryCheck",
      "offset": [
        2141,
        2143
      ],
      "op": "PUSH1",
      "path": "80",
      "value": "0x20"
    },
    "938": {
      "fn": "SafeMathMock.addMemoryCheck",
      "offset": [
        2101,
        2112
      ],
      "op": "PUSH1",
      "path": "80",
      "value": "0x0"
    },
    "940": {
      "fn": "SafeMathMock.addMemoryCheck",
      "offset": [
        2213,
        2293
      ],
      "op": "JUMPDEST",
      "path": "80"
    },
    "941": {
      "fn": "SafeMathMock.addMemoryCheck",
      "offset": [
        2237,
        2243
      ],
      "op": "DUP2",
      "path": "80"
    },
    "942": {
      "fn": "SafeMathMock.addMemoryCheck",
      "offset": [
        2233,
        2234
      ],
      "op": "DUP2",
      "path": "80"
    },
    "943": {
      "fn": "SafeMathMock.addMemoryCheck",
      "offset": [
        2233,
        2243
      ],
      "op": "LT",
      "path": "80"
    },
    "944": {
      "fn": "SafeMathMock.addMemoryCheck",
      "offset": [
        2213,
        2293
      ],
      "op": "ISZERO",
      "path": "80"
    },
    "945": {
      "fn": "SafeMathMock.addMemoryCheck",
      "offset": [
        2213,
        2293
      ],
      "op": "PUSH2",
      "path": "80",
      "value": "0x2DE"
    },
    "948": {
      "fn": "SafeMathMock.addMemoryCheck",
      "offset": [
        2213,
        2293
      ],
      "op": "JUMPI",
      "path": "80"
    },
    "949": {
      "fn": "SafeMathMock.addMemoryCheck",
      "offset": [
        2264,
        2282
      ],
      "op": "PUSH2",
      "path": "80",
      "statement": 18,
      "value": "0x3BF"
    },
    "952": {
      "fn": "SafeMathMock.addMemoryCheck",
      "offset": [
        2277,
        2278
      ],
      "op": "PUSH1",
      "path": "80",
      "value": "0x1"
    },
    "954": {
      "fn": "SafeMathMock.addMemoryCheck",
      "offset": [
        2280,
        2281
      ],
      "op": "DUP1",
      "path": "80"
    },
    "955": {
      "fn": "SafeMathMock.addMemoryCheck",
      "offset": [
        2264,
        2276
      ],
      "op": "PUSH2",
      "path": "80",
      "value": "0x5C4"
    },
    "958": {
      "fn": "SafeMathMock.addMemoryCheck",
      "jump": "i",
      "offset": [
        2264,
        2282
      ],
      "op": "JUMP",
      "path": "80"
    },
    "959": {
      "fn": "SafeMathMock.addMemoryCheck",
      "offset": [
        2264,
        2282
      ],
      "op": "JUMPDEST",
      "path": "80"
    },
    "960": {
      "op": "POP"
    },
    "961": {
      "fn": "SafeMathMock.addMemoryCheck",
      "offset": [
        2245,
        2248
      ],
      "op": "PUSH2",
      "path": "80",
      "statement": 19,
      "value": "0x3C9"
    },
    "964": {
      "fn": "SafeMathMock.addMemoryCheck",
      "offset": [
        2245,
        2248
      ],
      "op": "DUP2",
      "path": "80"
    },
    "965": {
      "fn": "SafeMathMock.addMemoryCheck",
      "offset": [
        2245,
        2248
      ],
      "op": "PUSH2",
      "path": "80",
      "value": "0x6E2"
    },
    "968": {
      "fn": "SafeMathMock.addMemoryCheck",
      "jump": "i",
      "offset": [
        2245,
        2248
      ],
      "op": "JUMP",
      "path": "80"
    },
    "969": {
      "fn": "SafeMathMock.addMemoryCheck",
      "offset": [
        2245,
        2248
      ],
      "op": "JUMPDEST",
      "path": "80"
    },
    "970": {
      "fn": "SafeMathMock.addMemoryCheck",
      "offset": [
        2245,
        2248
      ],
      "op": "SWAP1",
      "path": "80"
    },
    "971": {
      "fn": "SafeMathMock.addMemoryCheck",
      "offset": [
        2245,
        2248
      ],
      "op": "POP",
      "path": "80"
    },
    "972": {
      "fn": "SafeMathMock.addMemoryCheck",
      "offset": [
        2213,
        2293
      ],
      "op": "PUSH2",
      "path": "80",
      "value": "0x3AC"
    },
    "975": {
      "fn": "SafeMathMock.addMemoryCheck",
      "offset": [
        2213,
        2293
      ],
      "op": "JUMP",
      "path": "80"
    },
    "976": {
      "fn": "SafeMathMock.subMemoryCheck",
      "offset": [
        2375,
        2690
      ],
      "op": "JUMPDEST",
      "path": "80"
    },
    "977": {
      "fn": "SafeMathMock.subMemoryCheck",
      "offset": [
        2510,
        2514
      ],
      "op": "PUSH1",
      "path": "80",
      "value": "0x40"
    },
    "979": {
      "fn": "SafeMathMock.subMemoryCheck",
      "offset": [
        2504,
        2515
      ],
      "op": "MLOAD",
      "path": "80"
    },
    "980": {
      "fn": "SafeMathMock.subMemoryCheck",
      "offset": [
        2462,
        2464
      ],
      "op": "PUSH1",
      "path": "80",
      "value": "0x20"
    },
    "982": {
      "fn": "SafeMathMock.subMemoryCheck",
      "offset": [
        2422,
        2433
      ],
      "op": "PUSH1",
      "path": "80",
      "value": "0x0"
    },
    "984": {
      "fn": "SafeMathMock.subMemoryCheck",
      "offset": [
        2534,
        2614
      ],
      "op": "JUMPDEST",
      "path": "80"
    },
    "985": {
      "fn": "SafeMathMock.subMemoryCheck",
      "offset": [
        2558,
        2564
      ],
      "op": "DUP2",
      "path": "80"
    },
    "986": {
      "fn": "SafeMathMock.subMemoryCheck",
      "offset": [
        2554,
        2555
      ],
      "op": "DUP2",
      "path": "80"
    },
    "987": {
      "fn": "SafeMathMock.subMemoryCheck",
      "offset": [
        2554,
        2564
      ],
      "op": "LT",
      "path": "80"
    },
    "988": {
      "fn": "SafeMathMock.subMemoryCheck",
      "offset": [
        2534,
        2614
      ],
      "op": "ISZERO",
      "path": "80"
    },
    "989": {
      "fn": "SafeMathMock.subMemoryCheck",
      "offset": [
        2534,
        2614
      ],
      "op": "PUSH2",
      "path": "80",
      "value": "0x2DE"
    },
    "992": {
      "fn": "SafeMathMock.subMemoryCheck",
      "offset": [
        2534,
        2614
      ],
      "op": "JUMPI",
      "path": "80"
    },
    "993": {
      "fn": "SafeMathMock.subMemoryCheck",
      "offset": [
        2585,
        2603
      ],
      "op": "PUSH2",
      "path": "80",
      "statement": 20,
      "value": "0x3EB"
    },
    "996": {
      "fn": "SafeMathMock.subMemoryCheck",
      "offset": [
        2598,
        2599
      ],
      "op": "PUSH1",
      "path": "80",
      "value": "0x1"
    },
    "998": {
      "fn": "SafeMathMock.subMemoryCheck",
      "offset": [
        2601,
        2602
      ],
      "op": "DUP1",
      "path": "80"
    },
    "999": {
      "fn": "SafeMathMock.subMemoryCheck",
      "offset": [
        2585,
        2597
      ],
      "op": "PUSH2",
      "path": "80",
      "value": "0x4C1"
    },
    "1002": {
      "fn": "SafeMathMock.subMemoryCheck",
      "jump": "i",
      "offset": [
        2585,
        2603
      ],
      "op": "JUMP",
      "path": "80"
    },
    "1003": {
      "fn": "SafeMathMock.subMemoryCheck",
      "offset": [
        2585,
        2603
      ],
      "op": "JUMPDEST",
      "path": "80"
    },
    "1004": {
      "op": "POP"
    },
    "1005": {
      "fn": "SafeMathMock.subMemoryCheck",
      "offset": [
        2566,
        2569
      ],
      "op": "PUSH2",
      "path": "80",
      "statement": 21,
      "value": "0x3F5"
    },
    "1008": {
      "fn": "SafeMathMock.subMemoryCheck",
      "offset": [
        2566,
        2569
      ],
      "op": "DUP2",
      "path": "80"
    },
    "1009": {
      "fn": "SafeMathMock.subMemoryCheck",
      "offset": [
        2566,
        2569
      ],
      "op": "PUSH2",
      "path": "80",
      "value": "0x6E2"
    },
    "1012": {
      "fn": "SafeMathMock.subMemoryCheck",
      "jump": "i",
      "offset": [
        2566,
        2569
      ],
      "op": "JUMP",
      "path": "80"
    },
    "1013": {
      "fn": "SafeMathMock.subMemoryCheck",
      "offset": [
        2566,
        2569
      ],
      "op": "JUMPDEST",
      "path": "80"
    },
    "1014": {
      "fn": "SafeMathMock.subMemoryCheck",
      "offset": [
        2566,
        2569
      ],
      "op": "SWAP1",
      "path": "80"
    },
    "1015": {
      "fn": "SafeMathMock.subMemoryCheck",
      "offset": [
        2566,
        2569
      ],
      "op": "POP",
      "path": "80"
    },
    "1016": {
      "fn": "SafeMathMock.subMemoryCheck",
      "offset": [
        2534,
        2614
      ],
      "op": "PUSH2",
      "path": "80",
      "value": "0x3D8"
    },
    "1019": {
      "fn": "SafeMathMock.subMemoryCheck",
      "offset": [
        2534,
        2614
      ],
      "op": "JUMP",
      "path": "80"
    },
    "1020": {
      "fn": "SafeMathMock.doDiv",
      "offset": [
        1236,
        1345
      ],
      "op": "JUMPDEST",
      "path": "80"
    },
    "1021": {
      "fn": "SafeMathMock.doDiv",
      "offset": [
        1294,
        1301
      ],
      "op": "PUSH1",
      "path": "80",
      "value": "0x0"
    },
    "1023": {
      "fn": "SafeMathMock.doDiv",
      "offset": [
        1320,
        1338
      ],
      "op": "PUSH2",
      "path": "80",
      "statement": 22,
      "value": "0x2AB"
    },
    "1026": {
      "fn": "SafeMathMock.doDiv",
      "offset": [
        1333,
        1334
      ],
      "op": "DUP4",
      "path": "80"
    },
    "1027": {
      "fn": "SafeMathMock.doDiv",
      "offset": [
        1336,
        1337
      ],
      "op": "DUP4",
      "path": "80"
    },
    "1028": {
      "fn": "SafeMathMock.doDiv",
      "offset": [
        1320,
        1332
      ],
      "op": "PUSH2",
      "path": "80",
      "value": "0x5B8"
    },
    "1031": {
      "fn": "SafeMathMock.doDiv",
      "jump": "i",
      "offset": [
        1320,
        1338
      ],
      "op": "JUMP",
      "path": "80"
    },
    "1032": {
      "fn": "SafeMath.div",
      "offset": [
        5591,
        5821
      ],
      "op": "JUMPDEST",
      "path": "168"
    },
    "1033": {
      "fn": "SafeMath.div",
      "offset": [
        5707,
        5714
      ],
      "op": "PUSH1",
      "path": "168",
      "value": "0x0"
    },
    "1035": {
      "fn": "SafeMath.div",
      "offset": [
        5765,
        5777
      ],
      "op": "DUP2",
      "path": "168",
      "statement": 23
    },
    "1036": {
      "branch": 44,
      "fn": "SafeMath.div",
      "offset": [
        5758,
        5763
      ],
      "op": "DUP4",
      "path": "168"
    },
    "1037": {
      "fn": "SafeMath.div",
      "offset": [
        5750,
        5778
      ],
      "op": "PUSH2",
      "path": "168",
      "value": "0x432"
    },
    "1040": {
      "branch": 44,
      "fn": "SafeMath.div",
      "offset": [
        5750,
        5778
      ],
      "op": "JUMPI",
      "path": "168"
    },
    "1041": {
      "fn": "SafeMath.div",
      "offset": [
        5750,
        5778
      ],
      "op": "PUSH1",
      "path": "168",
      "value": "0x40"
    },
    "1043": {
      "fn": "SafeMath.div",
      "offset": [
        5750,
        5778
      ],
      "op": "MLOAD",
      "path": "168"
    },
    "1044": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1048": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1050": {
      "op": "SHL"
    },
    "1051": {
      "fn": "SafeMath.div",
      "offset": [
        5750,
        5778
      ],
      "op": "DUP2",
      "path": "168"
    },
    "1052": {
      "fn": "SafeMath.div",
      "offset": [
        5750,
        5778
      ],
      "op": "MSTORE",
      "path": "168"
    },
    "1053": {
      "fn": "SafeMath.div",
      "offset": [
        5750,
        5778
      ],
      "op": "PUSH1",
      "path": "168",
      "value": "0x4"
    },
    "1055": {
      "fn": "SafeMath.div",
      "offset": [
        5750,
        5778
      ],
      "op": "ADD",
      "path": "168"
    },
    "1056": {
      "fn": "SafeMath.div",
      "offset": [
        5750,
        5778
      ],
      "op": "PUSH2",
      "path": "168",
      "value": "0x429"
    },
    "1059": {
      "fn": "SafeMath.div",
      "offset": [
        5750,
        5778
      ],
      "op": "SWAP2",
      "path": "168"
    },
    "1060": {
      "fn": "SafeMath.div",
      "offset": [
        5750,
        5778
      ],
      "op": "SWAP1",
      "path": "168"
    },
    "1061": {
      "fn": "SafeMath.div",
      "offset": [
        5750,
        5778
      ],
      "op": "PUSH2",
      "path": "168",
      "value": "0x6FD"
    },
    "1064": {
      "fn": "SafeMath.div",
      "jump": "i",
      "offset": [
        5750,
        5778
      ],
      "op": "JUMP",
      "path": "168"
    },
    "1065": {
      "fn": "SafeMath.div",
      "offset": [
        5750,
        5778
      ],
      "op": "JUMPDEST",
      "path": "168"
    },
    "1066": {
      "fn": "SafeMath.div",
      "offset": [
        5750,
        5778
      ],
      "op": "PUSH1",
      "path": "168",
      "value": "0x40"
    },
    "1068": {
      "fn": "SafeMath.div",
      "offset": [
        5750,
        5778
      ],
      "op": "MLOAD",
      "path": "168"
    },
    "1069": {
      "fn": "SafeMath.div",
      "offset": [
        5750,
        5778
      ],
      "op": "DUP1",
      "path": "168"
    },
    "1070": {
      "fn": "SafeMath.div",
      "offset": [
        5750,
        5778
      ],
      "op": "SWAP2",
      "path": "168"
    },
    "1071": {
      "fn": "SafeMath.div",
      "offset": [
        5750,
        5778
      ],
      "op": "SUB",
      "path": "168"
    },
    "1072": {
      "fn": "SafeMath.div",
      "offset": [
        5750,
        5778
      ],
      "op": "SWAP1",
      "path": "168"
    },
    "1073": {
      "fn": "SafeMath.div",
      "offset": [
        5750,
        5778
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "168"
    },
    "1074": {
      "fn": "SafeMath.div",
      "offset": [
        5750,
        5778
      ],
      "op": "JUMPDEST",
      "path": "168"
    },
    "1075": {
      "fn": "SafeMath.div",
      "offset": [
        5750,
        5778
      ],
      "op": "POP",
      "path": "168"
    },
    "1076": {
      "fn": "SafeMath.div",
      "offset": [
        5803,
        5804
      ],
      "op": "DUP3",
      "path": "168",
      "statement": 24
    },
    "1077": {
      "fn": "SafeMath.div",
      "offset": [
        5799,
        5800
      ],
      "op": "DUP5",
      "path": "168"
    },
    "1078": {
      "fn": "SafeMath.div",
      "offset": [
        5799,
        5804
      ],
      "op": "DUP2",
      "path": "168"
    },
    "1079": {
      "fn": "SafeMath.div",
      "offset": [
        5799,
        5804
      ],
      "op": "PUSH2",
      "path": "168",
      "value": "0x442"
    },
    "1082": {
      "fn": "SafeMath.div",
      "offset": [
        5799,
        5804
      ],
      "op": "JUMPI",
      "path": "168"
    },
    "1083": {
      "fn": "SafeMath.div",
      "offset": [
        5799,
        5804
      ],
      "op": "PUSH2",
      "path": "168",
      "value": "0x442"
    },
    "1086": {
      "fn": "SafeMath.div",
      "offset": [
        5799,
        5804
      ],
      "op": "PUSH2",
      "path": "168",
      "value": "0x752"
    },
    "1089": {
      "fn": "SafeMath.div",
      "jump": "i",
      "offset": [
        5799,
        5804
      ],
      "op": "JUMP",
      "path": "168"
    },
    "1090": {
      "fn": "SafeMath.div",
      "offset": [
        5799,
        5804
      ],
      "op": "JUMPDEST",
      "path": "168"
    },
    "1091": {
      "fn": "SafeMath.div",
      "offset": [
        5799,
        5804
      ],
      "op": "DIV",
      "path": "168"
    },
    "1092": {
      "fn": "SafeMath.div",
      "offset": [
        5799,
        5804
      ],
      "op": "SWAP5",
      "path": "168"
    },
    "1093": {
      "fn": "SafeMath.div",
      "offset": [
        5591,
        5821
      ],
      "op": "SWAP4",
      "path": "168"
    },
    "1094": {
      "op": "POP"
    },
    "1095": {
      "op": "POP"
    },
    "1096": {
      "op": "POP"
    },
    "1097": {
      "op": "POP"
    },
    "1098": {
      "fn": "SafeMath.div",
      "jump": "o",
      "offset": [
        5591,
        5821
      ],
      "op": "JUMP",
      "path": "168"
    },
    "1099": {
      "fn": "SafeMath.tryMod",
      "offset": [
        2247,
        2437
      ],
      "op": "JUMPDEST",
      "path": "168"
    },
    "1100": {
      "fn": "SafeMath.tryMod",
      "offset": [
        2308,
        2312
      ],
      "op": "PUSH1",
      "path": "168",
      "value": "0x0"
    },
    "1102": {
      "fn": "SafeMath.tryMod",
      "offset": [
        2308,
        2312
      ],
      "op": "DUP1",
      "path": "168"
    },
    "1103": {
      "branch": 45,
      "fn": "SafeMath.tryMod",
      "offset": [
        2361,
        2367
      ],
      "op": "DUP3",
      "path": "168"
    },
    "1104": {
      "fn": "SafeMath.tryMod",
      "offset": [
        2357,
        2386
      ],
      "op": "PUSH2",
      "path": "168",
      "value": "0x45E"
    },
    "1107": {
      "branch": 45,
      "fn": "SafeMath.tryMod",
      "offset": [
        2357,
        2386
      ],
      "op": "JUMPI",
      "path": "168"
    },
    "1108": {
      "op": "POP"
    },
    "1109": {
      "fn": "SafeMath.tryMod",
      "offset": [
        2377,
        2382
      ],
      "op": "PUSH1",
      "path": "168",
      "statement": 25,
      "value": "0x0"
    },
    "1111": {
      "fn": "SafeMath.tryMod",
      "offset": [
        2377,
        2382
      ],
      "op": "SWAP1",
      "path": "168"
    },
    "1112": {
      "op": "POP"
    },
    "1113": {
      "fn": "SafeMath.tryMod",
      "offset": [
        2377,
        2382
      ],
      "op": "DUP1",
      "path": "168"
    },
    "1114": {
      "fn": "SafeMath.tryMod",
      "offset": [
        2369,
        2386
      ],
      "op": "PUSH2",
      "path": "168",
      "value": "0x28B"
    },
    "1117": {
      "fn": "SafeMath.tryMod",
      "offset": [
        2369,
        2386
      ],
      "op": "JUMP",
      "path": "168"
    },
    "1118": {
      "fn": "SafeMath.tryMod",
      "offset": [
        2357,
        2386
      ],
      "op": "JUMPDEST",
      "path": "168"
    },
    "1119": {
      "fn": "SafeMath.tryMod",
      "offset": [
        2408,
        2412
      ],
      "op": "PUSH1",
      "path": "168",
      "statement": 26,
      "value": "0x1"
    },
    "1121": {
      "fn": "SafeMath.tryMod",
      "offset": [
        2418,
        2419
      ],
      "op": "DUP4",
      "path": "168"
    },
    "1122": {
      "fn": "SafeMath.tryMod",
      "offset": [
        2414,
        2415
      ],
      "op": "DUP6",
      "path": "168"
    },
    "1123": {
      "fn": "SafeMath.tryMod",
      "offset": [
        2414,
        2419
      ],
      "op": "DUP2",
      "path": "168"
    },
    "1124": {
      "fn": "SafeMath.tryMod",
      "offset": [
        2414,
        2419
      ],
      "op": "PUSH2",
      "path": "168",
      "value": "0x46F"
    },
    "1127": {
      "fn": "SafeMath.tryMod",
      "offset": [
        2414,
        2419
      ],
      "op": "JUMPI",
      "path": "168"
    },
    "1128": {
      "fn": "SafeMath.tryMod",
      "offset": [
        2414,
        2419
      ],
      "op": "PUSH2",
      "path": "168",
      "value": "0x46F"
    },
    "1131": {
      "fn": "SafeMath.tryMod",
      "offset": [
        2414,
        2419
      ],
      "op": "PUSH2",
      "path": "168",
      "value": "0x752"
    },
    "1134": {
      "fn": "SafeMath.tryMod",
      "jump": "i",
      "offset": [
        2414,
        2419
      ],
      "op": "JUMP",
      "path": "168"
    },
    "1135": {
      "fn": "SafeMath.tryMod",
      "offset": [
        2414,
        2419
      ],
      "op": "JUMPDEST",
      "path": "168"
    },
    "1136": {
      "fn": "SafeMath.tryMod",
      "offset": [
        2414,
        2419
      ],
      "op": "MOD",
      "path": "168"
    },
    "1137": {
      "fn": "SafeMath.tryMod",
      "offset": [
        2400,
        2420
      ],
      "op": "SWAP2",
      "path": "168"
    },
    "1138": {
      "fn": "SafeMath.tryMod",
      "offset": [
        2400,
        2420
      ],
      "op": "POP",
      "path": "168"
    },
    "1139": {
      "fn": "SafeMath.tryMod",
      "offset": [
        2400,
        2420
      ],
      "op": "SWAP2",
      "path": "168"
    },
    "1140": {
      "fn": "SafeMath.tryMod",
      "offset": [
        2400,
        2420
      ],
      "op": "POP",
      "path": "168"
    },
    "1141": {
      "fn": "SafeMath.tryMod",
      "offset": [
        2247,
        2437
      ],
      "op": "SWAP3",
      "path": "168"
    },
    "1142": {
      "fn": "SafeMath.tryMod",
      "offset": [
        2247,
        2437
      ],
      "op": "POP",
      "path": "168"
    },
    "1143": {
      "fn": "SafeMath.tryMod",
      "offset": [
        2247,
        2437
      ],
      "op": "SWAP3",
      "path": "168"
    },
    "1144": {
      "fn": "SafeMath.tryMod",
      "offset": [
        2247,
        2437
      ],
      "op": "SWAP1",
      "path": "168"
    },
    "1145": {
      "fn": "SafeMath.tryMod",
      "offset": [
        2247,
        2437
      ],
      "op": "POP",
      "path": "168"
    },
    "1146": {
      "fn": "SafeMath.tryMod",
      "jump": "o",
      "offset": [
        2247,
        2437
      ],
      "op": "JUMP",
      "path": "168"
    },
    "1147": {
      "fn": "SafeMath.tryMul",
      "offset": [
        1256,
        1749
      ],
      "op": "JUMPDEST",
      "path": "168"
    },
    "1148": {
      "fn": "SafeMath.tryMul",
      "offset": [
        1317,
        1321
      ],
      "op": "PUSH1",
      "path": "168",
      "value": "0x0"
    },
    "1150": {
      "fn": "SafeMath.tryMul",
      "offset": [
        1317,
        1321
      ],
      "op": "DUP1",
      "path": "168"
    },
    "1151": {
      "branch": 46,
      "fn": "SafeMath.tryMul",
      "offset": [
        1600,
        1606
      ],
      "op": "DUP4",
      "path": "168"
    },
    "1152": {
      "fn": "SafeMath.tryMul",
      "offset": [
        1596,
        1624
      ],
      "op": "PUSH2",
      "path": "168",
      "value": "0x48F"
    },
    "1155": {
      "branch": 46,
      "fn": "SafeMath.tryMul",
      "offset": [
        1596,
        1624
      ],
      "op": "JUMPI",
      "path": "168"
    },
    "1156": {
      "op": "POP"
    },
    "1157": {
      "fn": "SafeMath.tryMul",
      "offset": [
        1616,
        1620
      ],
      "op": "PUSH1",
      "path": "168",
      "statement": 27,
      "value": "0x1"
    },
    "1159": {
      "fn": "SafeMath.tryMul",
      "offset": [
        1616,
        1620
      ],
      "op": "SWAP1",
      "path": "168"
    },
    "1160": {
      "op": "POP"
    },
    "1161": {
      "fn": "SafeMath.tryMul",
      "offset": [
        1622,
        1623
      ],
      "op": "PUSH1",
      "path": "168",
      "value": "0x0"
    },
    "1163": {
      "fn": "SafeMath.tryMul",
      "offset": [
        1608,
        1624
      ],
      "op": "PUSH2",
      "path": "168",
      "value": "0x28B"
    },
    "1166": {
      "fn": "SafeMath.tryMul",
      "offset": [
        1608,
        1624
      ],
      "op": "JUMP",
      "path": "168"
    },
    "1167": {
      "fn": "SafeMath.tryMul",
      "offset": [
        1596,
        1624
      ],
      "op": "JUMPDEST",
      "path": "168"
    },
    "1168": {
      "fn": "SafeMath.tryMul",
      "offset": [
        1650,
        1655
      ],
      "op": "DUP4",
      "path": "168"
    },
    "1169": {
      "fn": "SafeMath.tryMul",
      "offset": [
        1650,
        1655
      ],
      "op": "DUP4",
      "path": "168"
    },
    "1170": {
      "fn": "SafeMath.tryMul",
      "offset": [
        1650,
        1655
      ],
      "op": "MUL",
      "path": "168"
    },
    "1171": {
      "fn": "SafeMath.tryMul",
      "offset": [
        1654,
        1655
      ],
      "op": "DUP4",
      "path": "168"
    },
    "1172": {
      "fn": "SafeMath.tryMul",
      "offset": [
        1650,
        1651
      ],
      "op": "DUP6",
      "path": "168"
    },
    "1173": {
      "fn": "SafeMath.tryMul",
      "offset": [
        1650,
        1655
      ],
      "op": "DUP3",
      "path": "168"
    },
    "1174": {
      "fn": "SafeMath.tryMul",
      "offset": [
        1650,
        1651
      ],
      "op": "DUP2",
      "path": "168"
    },
    "1175": {
      "fn": "SafeMath.tryMul",
      "offset": [
        1673,
        1678
      ],
      "op": "PUSH2",
      "path": "168",
      "value": "0x4A2"
    },
    "1178": {
      "fn": "SafeMath.tryMul",
      "offset": [
        1673,
        1678
      ],
      "op": "JUMPI",
      "path": "168"
    },
    "1179": {
      "fn": "SafeMath.tryMul",
      "offset": [
        1673,
        1678
      ],
      "op": "PUSH2",
      "path": "168",
      "value": "0x4A2"
    },
    "1182": {
      "fn": "SafeMath.tryMul",
      "offset": [
        1673,
        1678
      ],
      "op": "PUSH2",
      "path": "168",
      "value": "0x752"
    },
    "1185": {
      "fn": "SafeMath.tryMul",
      "jump": "i",
      "offset": [
        1673,
        1678
      ],
      "op": "JUMP",
      "path": "168"
    },
    "1186": {
      "fn": "SafeMath.tryMul",
      "offset": [
        1673,
        1678
      ],
      "op": "JUMPDEST",
      "path": "168"
    },
    "1187": {
      "fn": "SafeMath.tryMul",
      "offset": [
        1673,
        1678
      ],
      "op": "DIV",
      "path": "168"
    },
    "1188": {
      "branch": 47,
      "fn": "SafeMath.tryMul",
      "offset": [
        1673,
        1683
      ],
      "op": "EQ",
      "path": "168"
    },
    "1189": {
      "fn": "SafeMath.tryMul",
      "offset": [
        1669,
        1702
      ],
      "op": "PUSH2",
      "path": "168",
      "value": "0x4B5"
    },
    "1192": {
      "branch": 47,
      "fn": "SafeMath.tryMul",
      "offset": [
        1669,
        1702
      ],
      "op": "JUMPI",
      "path": "168"
    },
    "1193": {
      "fn": "SafeMath.tryMul",
      "offset": [
        1693,
        1698
      ],
      "op": "PUSH1",
      "path": "168",
      "statement": 28,
      "value": "0x0"
    },
    "1195": {
      "fn": "SafeMath.tryMul",
      "offset": [
        1700,
        1701
      ],
      "op": "DUP1",
      "path": "168"
    },
    "1196": {
      "fn": "SafeMath.tryMul",
      "offset": [
        1685,
        1702
      ],
      "op": "SWAP3",
      "path": "168"
    },
    "1197": {
      "fn": "SafeMath.tryMul",
      "offset": [
        1685,
        1702
      ],
      "op": "POP",
      "path": "168"
    },
    "1198": {
      "fn": "SafeMath.tryMul",
      "offset": [
        1685,
        1702
      ],
      "op": "SWAP3",
      "path": "168"
    },
    "1199": {
      "fn": "SafeMath.tryMul",
      "offset": [
        1685,
        1702
      ],
      "op": "POP",
      "path": "168"
    },
    "1200": {
      "fn": "SafeMath.tryMul",
      "offset": [
        1685,
        1702
      ],
      "op": "POP",
      "path": "168"
    },
    "1201": {
      "fn": "SafeMath.tryMul",
      "offset": [
        1685,
        1702
      ],
      "op": "PUSH2",
      "path": "168",
      "value": "0x28B"
    },
    "1204": {
      "fn": "SafeMath.tryMul",
      "offset": [
        1685,
        1702
      ],
      "op": "JUMP",
      "path": "168"
    },
    "1205": {
      "fn": "SafeMath.tryMul",
      "offset": [
        1669,
        1702
      ],
      "op": "JUMPDEST",
      "path": "168"
    },
    "1206": {
      "fn": "SafeMath.tryMul",
      "offset": [
        1724,
        1728
      ],
      "op": "PUSH1",
      "path": "168",
      "statement": 29,
      "value": "0x1"
    },
    "1208": {
      "fn": "SafeMath.tryMul",
      "offset": [
        1724,
        1728
      ],
      "op": "SWAP6",
      "path": "168"
    },
    "1209": {
      "fn": "SafeMath.tryMul",
      "offset": [
        1730,
        1731
      ],
      "op": "SWAP1",
      "path": "168"
    },
    "1210": {
      "fn": "SafeMath.tryMul",
      "offset": [
        1730,
        1731
      ],
      "op": "SWAP5",
      "path": "168"
    },
    "1211": {
      "op": "POP"
    },
    "1212": {
      "fn": "SafeMath.tryMul",
      "offset": [
        1256,
        1749
      ],
      "op": "SWAP3",
      "path": "168"
    },
    "1213": {
      "op": "POP"
    },
    "1214": {
      "op": "POP"
    },
    "1215": {
      "op": "POP"
    },
    "1216": {
      "fn": "SafeMath.tryMul",
      "jump": "o",
      "offset": [
        1256,
        1749
      ],
      "op": "JUMP",
      "path": "168"
    },
    "1217": {
      "fn": "SafeMath.sub",
      "offset": [
        3039,
        3135
      ],
      "op": "JUMPDEST",
      "path": "168"
    },
    "1218": {
      "fn": "SafeMath.sub",
      "offset": [
        3097,
        3104
      ],
      "op": "PUSH1",
      "path": "168",
      "value": "0x0"
    },
    "1220": {
      "fn": "SafeMath.sub",
      "offset": [
        3123,
        3128
      ],
      "op": "PUSH2",
      "path": "168",
      "statement": 30,
      "value": "0x2AB"
    },
    "1223": {
      "fn": "SafeMath.sub",
      "offset": [
        3127,
        3128
      ],
      "op": "DUP3",
      "path": "168"
    },
    "1224": {
      "fn": "SafeMath.sub",
      "offset": [
        3123,
        3124
      ],
      "op": "DUP5",
      "path": "168"
    },
    "1225": {
      "fn": "SafeMath.sub",
      "offset": [
        3123,
        3128
      ],
      "op": "PUSH2",
      "path": "168",
      "value": "0x768"
    },
    "1228": {
      "fn": "SafeMath.sub",
      "jump": "i",
      "offset": [
        3123,
        3128
      ],
      "op": "JUMP",
      "path": "168"
    },
    "1229": {
      "fn": "SafeMath.mod",
      "offset": [
        4316,
        4412
      ],
      "op": "JUMPDEST",
      "path": "168"
    },
    "1230": {
      "fn": "SafeMath.mod",
      "offset": [
        4374,
        4381
      ],
      "op": "PUSH1",
      "path": "168",
      "value": "0x0"
    },
    "1232": {
      "fn": "SafeMath.mod",
      "offset": [
        4400,
        4405
      ],
      "op": "PUSH2",
      "path": "168",
      "statement": 31,
      "value": "0x2AB"
    },
    "1235": {
      "fn": "SafeMath.mod",
      "offset": [
        4404,
        4405
      ],
      "op": "DUP3",
      "path": "168"
    },
    "1236": {
      "fn": "SafeMath.mod",
      "offset": [
        4400,
        4401
      ],
      "op": "DUP5",
      "path": "168"
    },
    "1237": {
      "fn": "SafeMath.mod",
      "offset": [
        4400,
        4405
      ],
      "op": "PUSH2",
      "path": "168",
      "value": "0x77F"
    },
    "1240": {
      "fn": "SafeMath.mod",
      "jump": "i",
      "offset": [
        4400,
        4405
      ],
      "op": "JUMP",
      "path": "168"
    },
    "1241": {
      "fn": "SafeMath.tryDiv",
      "offset": [
        1898,
        2088
      ],
      "op": "JUMPDEST",
      "path": "168"
    },
    "1242": {
      "fn": "SafeMath.tryDiv",
      "offset": [
        1959,
        1963
      ],
      "op": "PUSH1",
      "path": "168",
      "value": "0x0"
    },
    "1244": {
      "fn": "SafeMath.tryDiv",
      "offset": [
        1959,
        1963
      ],
      "op": "DUP1",
      "path": "168"
    },
    "1245": {
      "branch": 48,
      "fn": "SafeMath.tryDiv",
      "offset": [
        2012,
        2018
      ],
      "op": "DUP3",
      "path": "168"
    },
    "1246": {
      "fn": "SafeMath.tryDiv",
      "offset": [
        2008,
        2037
      ],
      "op": "PUSH2",
      "path": "168",
      "value": "0x4EC"
    },
    "1249": {
      "branch": 48,
      "fn": "SafeMath.tryDiv",
      "offset": [
        2008,
        2037
      ],
      "op": "JUMPI",
      "path": "168"
    },
    "1250": {
      "op": "POP"
    },
    "1251": {
      "fn": "SafeMath.tryDiv",
      "offset": [
        2028,
        2033
      ],
      "op": "PUSH1",
      "path": "168",
      "statement": 32,
      "value": "0x0"
    },
    "1253": {
      "fn": "SafeMath.tryDiv",
      "offset": [
        2028,
        2033
      ],
      "op": "SWAP1",
      "path": "168"
    },
    "1254": {
      "op": "POP"
    },
    "1255": {
      "fn": "SafeMath.tryDiv",
      "offset": [
        2028,
        2033
      ],
      "op": "DUP1",
      "path": "168"
    },
    "1256": {
      "fn": "SafeMath.tryDiv",
      "offset": [
        2020,
        2037
      ],
      "op": "PUSH2",
      "path": "168",
      "value": "0x28B"
    },
    "1259": {
      "fn": "SafeMath.tryDiv",
      "offset": [
        2020,
        2037
      ],
      "op": "JUMP",
      "path": "168"
    },
    "1260": {
      "fn": "SafeMath.tryDiv",
      "offset": [
        2008,
        2037
      ],
      "op": "JUMPDEST",
      "path": "168"
    },
    "1261": {
      "fn": "SafeMath.tryDiv",
      "offset": [
        2059,
        2063
      ],
      "op": "PUSH1",
      "path": "168",
      "statement": 33,
      "value": "0x1"
    },
    "1263": {
      "fn": "SafeMath.tryDiv",
      "offset": [
        2069,
        2070
      ],
      "op": "DUP4",
      "path": "168"
    },
    "1264": {
      "fn": "SafeMath.tryDiv",
      "offset": [
        2065,
        2066
      ],
      "op": "DUP6",
      "path": "168"
    },
    "1265": {
      "fn": "SafeMath.tryDiv",
      "offset": [
        2065,
        2070
      ],
      "op": "DUP2",
      "path": "168"
    },
    "1266": {
      "fn": "SafeMath.tryDiv",
      "offset": [
        2065,
        2070
      ],
      "op": "PUSH2",
      "path": "168",
      "value": "0x4FD"
    },
    "1269": {
      "fn": "SafeMath.tryDiv",
      "offset": [
        2065,
        2070
      ],
      "op": "JUMPI",
      "path": "168"
    },
    "1270": {
      "fn": "SafeMath.tryDiv",
      "offset": [
        2065,
        2070
      ],
      "op": "PUSH2",
      "path": "168",
      "value": "0x4FD"
    },
    "1273": {
      "fn": "SafeMath.tryDiv",
      "offset": [
        2065,
        2070
      ],
      "op": "PUSH2",
      "path": "168",
      "value": "0x752"
    },
    "1276": {
      "fn": "SafeMath.tryDiv",
      "jump": "i",
      "offset": [
        2065,
        2070
      ],
      "op": "JUMP",
      "path": "168"
    },
    "1277": {
      "fn": "SafeMath.tryDiv",
      "offset": [
        2065,
        2070
      ],
      "op": "JUMPDEST",
      "path": "168"
    },
    "1278": {
      "fn": "SafeMath.tryDiv",
      "offset": [
        2065,
        2070
      ],
      "op": "DIV",
      "path": "168"
    },
    "1279": {
      "fn": "SafeMath.tryDiv",
      "offset": [
        2051,
        2071
      ],
      "op": "SWAP2",
      "path": "168"
    },
    "1280": {
      "fn": "SafeMath.tryDiv",
      "offset": [
        2051,
        2071
      ],
      "op": "POP",
      "path": "168"
    },
    "1281": {
      "fn": "SafeMath.tryDiv",
      "offset": [
        2051,
        2071
      ],
      "op": "SWAP2",
      "path": "168"
    },
    "1282": {
      "fn": "SafeMath.tryDiv",
      "offset": [
        2051,
        2071
      ],
      "op": "POP",
      "path": "168"
    },
    "1283": {
      "fn": "SafeMath.tryDiv",
      "offset": [
        1898,
        2088
      ],
      "op": "SWAP3",
      "path": "168"
    },
    "1284": {
      "fn": "SafeMath.tryDiv",
      "offset": [
        1898,
        2088
      ],
      "op": "POP",
      "path": "168"
    },
    "1285": {
      "fn": "SafeMath.tryDiv",
      "offset": [
        1898,
        2088
      ],
      "op": "SWAP3",
      "path": "168"
    },
    "1286": {
      "fn": "SafeMath.tryDiv",
      "offset": [
        1898,
        2088
      ],
      "op": "SWAP1",
      "path": "168"
    },
    "1287": {
      "fn": "SafeMath.tryDiv",
      "offset": [
        1898,
        2088
      ],
      "op": "POP",
      "path": "168"
    },
    "1288": {
      "fn": "SafeMath.tryDiv",
      "jump": "o",
      "offset": [
        1898,
        2088
      ],
      "op": "JUMP",
      "path": "168"
    },
    "1289": {
      "fn": "SafeMath.mul",
      "offset": [
        3382,
        3478
      ],
      "op": "JUMPDEST",
      "path": "168"
    },
    "1290": {
      "fn": "SafeMath.mul",
      "offset": [
        3440,
        3447
      ],
      "op": "PUSH1",
      "path": "168",
      "value": "0x0"
    },
    "1292": {
      "fn": "SafeMath.mul",
      "offset": [
        3466,
        3471
      ],
      "op": "PUSH2",
      "path": "168",
      "statement": 34,
      "value": "0x2AB"
    },
    "1295": {
      "fn": "SafeMath.mul",
      "offset": [
        3470,
        3471
      ],
      "op": "DUP3",
      "path": "168"
    },
    "1296": {
      "fn": "SafeMath.mul",
      "offset": [
        3466,
        3467
      ],
      "op": "DUP5",
      "path": "168"
    },
    "1297": {
      "fn": "SafeMath.mul",
      "offset": [
        3466,
        3471
      ],
      "op": "PUSH2",
      "path": "168",
      "value": "0x793"
    },
    "1300": {
      "fn": "SafeMath.mul",
      "jump": "i",
      "offset": [
        3466,
        3471
      ],
      "op": "JUMP",
      "path": "168"
    },
    "1301": {
      "fn": "SafeMath.tryAdd",
      "offset": [
        557,
        773
      ],
      "op": "JUMPDEST",
      "path": "168"
    },
    "1302": {
      "fn": "SafeMath.tryAdd",
      "offset": [
        618,
        622
      ],
      "op": "PUSH1",
      "path": "168",
      "value": "0x0"
    },
    "1304": {
      "fn": "SafeMath.tryAdd",
      "offset": [
        618,
        622
      ],
      "op": "DUP1",
      "path": "168"
    },
    "1305": {
      "fn": "SafeMath.tryAdd",
      "offset": [
        679,
        684
      ],
      "op": "DUP4",
      "path": "168"
    },
    "1306": {
      "fn": "SafeMath.tryAdd",
      "offset": [
        679,
        684
      ],
      "op": "DUP4",
      "path": "168"
    },
    "1307": {
      "fn": "SafeMath.tryAdd",
      "offset": [
        679,
        684
      ],
      "op": "ADD",
      "path": "168"
    },
    "1308": {
      "fn": "SafeMath.tryAdd",
      "offset": [
        702,
        707
      ],
      "op": "DUP5",
      "path": "168"
    },
    "1309": {
      "fn": "SafeMath.tryAdd",
      "offset": [
        702,
        707
      ],
      "op": "DUP2",
      "path": "168"
    },
    "1310": {
      "branch": 49,
      "fn": "SafeMath.tryAdd",
      "offset": [
        702,
        707
      ],
      "op": "LT",
      "path": "168"
    },
    "1311": {
      "fn": "SafeMath.tryAdd",
      "offset": [
        698,
        726
      ],
      "op": "ISZERO",
      "path": "168"
    },
    "1312": {
      "fn": "SafeMath.tryAdd",
      "offset": [
        698,
        726
      ],
      "op": "PUSH2",
      "path": "168",
      "value": "0x4B5"
    },
    "1315": {
      "branch": 49,
      "fn": "SafeMath.tryAdd",
      "offset": [
        698,
        726
      ],
      "op": "JUMPI",
      "path": "168"
    },
    "1316": {
      "fn": "SafeMath.tryAdd",
      "offset": [
        717,
        722
      ],
      "op": "PUSH1",
      "path": "168",
      "statement": 35,
      "value": "0x0"
    },
    "1318": {
      "fn": "SafeMath.tryAdd",
      "offset": [
        724,
        725
      ],
      "op": "DUP1",
      "path": "168"
    },
    "1319": {
      "fn": "SafeMath.tryAdd",
      "offset": [
        709,
        726
      ],
      "op": "SWAP3",
      "path": "168"
    },
    "1320": {
      "fn": "SafeMath.tryAdd",
      "offset": [
        709,
        726
      ],
      "op": "POP",
      "path": "168"
    },
    "1321": {
      "fn": "SafeMath.tryAdd",
      "offset": [
        709,
        726
      ],
      "op": "SWAP3",
      "path": "168"
    },
    "1322": {
      "fn": "SafeMath.tryAdd",
      "offset": [
        709,
        726
      ],
      "op": "POP",
      "path": "168"
    },
    "1323": {
      "fn": "SafeMath.tryAdd",
      "offset": [
        709,
        726
      ],
      "op": "POP",
      "path": "168"
    },
    "1324": {
      "fn": "SafeMath.tryAdd",
      "offset": [
        709,
        726
      ],
      "op": "PUSH2",
      "path": "168",
      "value": "0x28B"
    },
    "1327": {
      "fn": "SafeMath.tryAdd",
      "offset": [
        709,
        726
      ],
      "op": "JUMP",
      "path": "168"
    },
    "1328": {
      "fn": "SafeMath.sub",
      "offset": [
        4876,
        5107
      ],
      "op": "JUMPDEST",
      "path": "168"
    },
    "1329": {
      "fn": "SafeMath.sub",
      "offset": [
        4992,
        4999
      ],
      "op": "PUSH1",
      "path": "168",
      "value": "0x0"
    },
    "1331": {
      "fn": "SafeMath.sub",
      "offset": [
        5051,
        5063
      ],
      "op": "DUP2",
      "path": "168",
      "statement": 36
    },
    "1332": {
      "fn": "SafeMath.sub",
      "offset": [
        5043,
        5049
      ],
      "op": "DUP5",
      "path": "168"
    },
    "1333": {
      "fn": "SafeMath.sub",
      "offset": [
        5043,
        5049
      ],
      "op": "DUP5",
      "path": "168"
    },
    "1334": {
      "fn": "SafeMath.sub",
      "offset": [
        5043,
        5049
      ],
      "op": "GT",
      "path": "168"
    },
    "1335": {
      "branch": 50,
      "fn": "SafeMath.sub",
      "offset": [
        5043,
        5049
      ],
      "op": "ISZERO",
      "path": "168"
    },
    "1336": {
      "fn": "SafeMath.sub",
      "offset": [
        5035,
        5064
      ],
      "op": "PUSH2",
      "path": "168",
      "value": "0x554"
    },
    "1339": {
      "branch": 50,
      "fn": "SafeMath.sub",
      "offset": [
        5035,
        5064
      ],
      "op": "JUMPI",
      "path": "168"
    },
    "1340": {
      "fn": "SafeMath.sub",
      "offset": [
        5035,
        5064
      ],
      "op": "PUSH1",
      "path": "168",
      "value": "0x40"
    },
    "1342": {
      "fn": "SafeMath.sub",
      "offset": [
        5035,
        5064
      ],
      "op": "MLOAD",
      "path": "168"
    },
    "1343": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1347": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1349": {
      "op": "SHL"
    },
    "1350": {
      "fn": "SafeMath.sub",
      "offset": [
        5035,
        5064
      ],
      "op": "DUP2",
      "path": "168"
    },
    "1351": {
      "fn": "SafeMath.sub",
      "offset": [
        5035,
        5064
      ],
      "op": "MSTORE",
      "path": "168"
    },
    "1352": {
      "fn": "SafeMath.sub",
      "offset": [
        5035,
        5064
      ],
      "op": "PUSH1",
      "path": "168",
      "value": "0x4"
    },
    "1354": {
      "fn": "SafeMath.sub",
      "offset": [
        5035,
        5064
      ],
      "op": "ADD",
      "path": "168"
    },
    "1355": {
      "fn": "SafeMath.sub",
      "offset": [
        5035,
        5064
      ],
      "op": "PUSH2",
      "path": "168",
      "value": "0x429"
    },
    "1358": {
      "fn": "SafeMath.sub",
      "offset": [
        5035,
        5064
      ],
      "op": "SWAP2",
      "path": "168"
    },
    "1359": {
      "fn": "SafeMath.sub",
      "offset": [
        5035,
        5064
      ],
      "op": "SWAP1",
      "path": "168"
    },
    "1360": {
      "fn": "SafeMath.sub",
      "offset": [
        5035,
        5064
      ],
      "op": "PUSH2",
      "path": "168",
      "value": "0x6FD"
    },
    "1363": {
      "fn": "SafeMath.sub",
      "jump": "i",
      "offset": [
        5035,
        5064
      ],
      "op": "JUMP",
      "path": "168"
    },
    "1364": {
      "fn": "SafeMath.sub",
      "offset": [
        5035,
        5064
      ],
      "op": "JUMPDEST",
      "path": "168"
    },
    "1365": {
      "op": "POP"
    },
    "1366": {
      "op": "POP"
    },
    "1367": {
      "op": "POP"
    },
    "1368": {
      "fn": "SafeMath.sub",
      "offset": [
        5085,
        5090
      ],
      "op": "SWAP1",
      "path": "168",
      "statement": 37
    },
    "1369": {
      "fn": "SafeMath.sub",
      "offset": [
        5085,
        5090
      ],
      "op": "SUB",
      "path": "168"
    },
    "1370": {
      "fn": "SafeMath.sub",
      "offset": [
        5085,
        5090
      ],
      "op": "SWAP1",
      "path": "168"
    },
    "1371": {
      "fn": "SafeMath.sub",
      "jump": "o",
      "offset": [
        4876,
        5107
      ],
      "op": "JUMP",
      "path": "168"
    },
    "1372": {
      "fn": "SafeMath.mod",
      "offset": [
        6467,
        6697
      ],
      "op": "JUMPDEST",
      "path": "168"
    },
    "1373": {
      "fn": "SafeMath.mod",
      "offset": [
        6583,
        6590
      ],
      "op": "PUSH1",
      "path": "168",
      "value": "0x0"
    },
    "1375": {
      "fn": "SafeMath.mod",
      "offset": [
        6641,
        6653
      ],
      "op": "DUP2",
      "path": "168",
      "statement": 38
    },
    "1376": {
      "branch": 51,
      "fn": "SafeMath.mod",
      "offset": [
        6634,
        6639
      ],
      "op": "DUP4",
      "path": "168"
    },
    "1377": {
      "fn": "SafeMath.mod",
      "offset": [
        6626,
        6654
      ],
      "op": "PUSH2",
      "path": "168",
      "value": "0x57D"
    },
    "1380": {
      "branch": 51,
      "fn": "SafeMath.mod",
      "offset": [
        6626,
        6654
      ],
      "op": "JUMPI",
      "path": "168"
    },
    "1381": {
      "fn": "SafeMath.mod",
      "offset": [
        6626,
        6654
      ],
      "op": "PUSH1",
      "path": "168",
      "value": "0x40"
    },
    "1383": {
      "fn": "SafeMath.mod",
      "offset": [
        6626,
        6654
      ],
      "op": "MLOAD",
      "path": "168"
    },
    "1384": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1388": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1390": {
      "op": "SHL"
    },
    "1391": {
      "fn": "SafeMath.mod",
      "offset": [
        6626,
        6654
      ],
      "op": "DUP2",
      "path": "168"
    },
    "1392": {
      "fn": "SafeMath.mod",
      "offset": [
        6626,
        6654
      ],
      "op": "MSTORE",
      "path": "168"
    },
    "1393": {
      "fn": "SafeMath.mod",
      "offset": [
        6626,
        6654
      ],
      "op": "PUSH1",
      "path": "168",
      "value": "0x4"
    },
    "1395": {
      "fn": "SafeMath.mod",
      "offset": [
        6626,
        6654
      ],
      "op": "ADD",
      "path": "168"
    },
    "1396": {
      "fn": "SafeMath.mod",
      "offset": [
        6626,
        6654
      ],
      "op": "PUSH2",
      "path": "168",
      "value": "0x429"
    },
    "1399": {
      "fn": "SafeMath.mod",
      "offset": [
        6626,
        6654
      ],
      "op": "SWAP2",
      "path": "168"
    },
    "1400": {
      "fn": "SafeMath.mod",
      "offset": [
        6626,
        6654
      ],
      "op": "SWAP1",
      "path": "168"
    },
    "1401": {
      "fn": "SafeMath.mod",
      "offset": [
        6626,
        6654
      ],
      "op": "PUSH2",
      "path": "168",
      "value": "0x6FD"
    },
    "1404": {
      "fn": "SafeMath.mod",
      "jump": "i",
      "offset": [
        6626,
        6654
      ],
      "op": "JUMP",
      "path": "168"
    },
    "1405": {
      "fn": "SafeMath.mod",
      "offset": [
        6626,
        6654
      ],
      "op": "JUMPDEST",
      "path": "168"
    },
    "1406": {
      "fn": "SafeMath.mod",
      "offset": [
        6626,
        6654
      ],
      "op": "POP",
      "path": "168"
    },
    "1407": {
      "fn": "SafeMath.mod",
      "offset": [
        6679,
        6680
      ],
      "op": "DUP3",
      "path": "168",
      "statement": 39
    },
    "1408": {
      "fn": "SafeMath.mod",
      "offset": [
        6675,
        6676
      ],
      "op": "DUP5",
      "path": "168"
    },
    "1409": {
      "fn": "SafeMath.mod",
      "offset": [
        6675,
        6680
      ],
      "op": "DUP2",
      "path": "168"
    },
    "1410": {
      "fn": "SafeMath.mod",
      "offset": [
        6675,
        6680
      ],
      "op": "PUSH2",
      "path": "168",
      "value": "0x58D"
    },
    "1413": {
      "fn": "SafeMath.mod",
      "offset": [
        6675,
        6680
      ],
      "op": "JUMPI",
      "path": "168"
    },
    "1414": {
      "fn": "SafeMath.mod",
      "offset": [
        6675,
        6680
      ],
      "op": "PUSH2",
      "path": "168",
      "value": "0x58D"
    },
    "1417": {
      "fn": "SafeMath.mod",
      "offset": [
        6675,
        6680
      ],
      "op": "PUSH2",
      "path": "168",
      "value": "0x752"
    },
    "1420": {
      "fn": "SafeMath.mod",
      "jump": "i",
      "offset": [
        6675,
        6680
      ],
      "op": "JUMP",
      "path": "168"
    },
    "1421": {
      "fn": "SafeMath.mod",
      "offset": [
        6675,
        6680
      ],
      "op": "JUMPDEST",
      "path": "168"
    },
    "1422": {
      "fn": "SafeMath.mod",
      "offset": [
        6675,
        6680
      ],
      "op": "MOD",
      "path": "168"
    },
    "1423": {
      "fn": "SafeMath.mod",
      "offset": [
        6675,
        6680
      ],
      "op": "SWAP5",
      "path": "168"
    },
    "1424": {
      "fn": "SafeMath.mod",
      "offset": [
        6467,
        6697
      ],
      "op": "SWAP4",
      "path": "168"
    },
    "1425": {
      "op": "POP"
    },
    "1426": {
      "op": "POP"
    },
    "1427": {
      "op": "POP"
    },
    "1428": {
      "op": "POP"
    },
    "1429": {
      "fn": "SafeMath.mod",
      "jump": "o",
      "offset": [
        6467,
        6697
      ],
      "op": "JUMP",
      "path": "168"
    },
    "1430": {
      "fn": "SafeMath.trySub",
      "offset": [
        919,
        1108
      ],
      "op": "JUMPDEST",
      "path": "168"
    },
    "1431": {
      "fn": "SafeMath.trySub",
      "offset": [
        980,
        984
      ],
      "op": "PUSH1",
      "path": "168",
      "value": "0x0"
    },
    "1433": {
      "fn": "SafeMath.trySub",
      "offset": [
        986,
        993
      ],
      "op": "DUP1",
      "path": "168"
    },
    "1434": {
      "fn": "SafeMath.trySub",
      "offset": [
        1037,
        1038
      ],
      "op": "DUP4",
      "path": "168"
    },
    "1435": {
      "fn": "SafeMath.trySub",
      "offset": [
        1033,
        1034
      ],
      "op": "DUP4",
      "path": "168"
    },
    "1436": {
      "branch": 52,
      "fn": "SafeMath.trySub",
      "offset": [
        1033,
        1038
      ],
      "op": "GT",
      "path": "168"
    },
    "1437": {
      "fn": "SafeMath.trySub",
      "offset": [
        1029,
        1057
      ],
      "op": "ISZERO",
      "path": "168"
    },
    "1438": {
      "fn": "SafeMath.trySub",
      "offset": [
        1029,
        1057
      ],
      "op": "PUSH2",
      "path": "168",
      "value": "0x5AC"
    },
    "1441": {
      "branch": 52,
      "fn": "SafeMath.trySub",
      "offset": [
        1029,
        1057
      ],
      "op": "JUMPI",
      "path": "168"
    },
    "1442": {
      "op": "POP"
    },
    "1443": {
      "fn": "SafeMath.trySub",
      "offset": [
        1048,
        1053
      ],
      "op": "PUSH1",
      "path": "168",
      "statement": 40,
      "value": "0x0"
    },
    "1445": {
      "fn": "SafeMath.trySub",
      "offset": [
        1048,
        1053
      ],
      "op": "SWAP1",
      "path": "168"
    },
    "1446": {
      "op": "POP"
    },
    "1447": {
      "fn": "SafeMath.trySub",
      "offset": [
        1048,
        1053
      ],
      "op": "DUP1",
      "path": "168"
    },
    "1448": {
      "fn": "SafeMath.trySub",
      "offset": [
        1040,
        1057
      ],
      "op": "PUSH2",
      "path": "168",
      "value": "0x28B"
    },
    "1451": {
      "fn": "SafeMath.trySub",
      "offset": [
        1040,
        1057
      ],
      "op": "JUMP",
      "path": "168"
    },
    "1452": {
      "fn": "SafeMath.trySub",
      "offset": [
        1029,
        1057
      ],
      "op": "JUMPDEST",
      "path": "168"
    },
    "1453": {
      "op": "POP"
    },
    "1454": {
      "fn": "SafeMath.trySub",
      "offset": [
        1079,
        1083
      ],
      "op": "PUSH1",
      "path": "168",
      "statement": 41,
      "value": "0x1"
    },
    "1456": {
      "fn": "SafeMath.trySub",
      "offset": [
        1079,
        1083
      ],
      "op": "SWAP4",
      "path": "168"
    },
    "1457": {
      "fn": "SafeMath.trySub",
      "offset": [
        1085,
        1090
      ],
      "op": "SWAP2",
      "path": "168"
    },
    "1458": {
      "fn": "SafeMath.trySub",
      "offset": [
        1085,
        1090
      ],
      "op": "SWAP1",
      "path": "168"
    },
    "1459": {
      "fn": "SafeMath.trySub",
      "offset": [
        1085,
        1090
      ],
      "op": "SWAP3",
      "path": "168"
    },
    "1460": {
      "fn": "SafeMath.trySub",
      "offset": [
        1085,
        1090
      ],
      "op": "SUB",
      "path": "168"
    },
    "1461": {
      "fn": "SafeMath.trySub",
      "offset": [
        1085,
        1090
      ],
      "op": "SWAP2",
      "path": "168"
    },
    "1462": {
      "op": "POP"
    },
    "1463": {
      "fn": "SafeMath.trySub",
      "jump": "o",
      "offset": [
        919,
        1108
      ],
      "op": "JUMP",
      "path": "168"
    },
    "1464": {
      "fn": "SafeMath.div",
      "offset": [
        3767,
        3863
      ],
      "op": "JUMPDEST",
      "path": "168"
    },
    "1465": {
      "fn": "SafeMath.div",
      "offset": [
        3825,
        3832
      ],
      "op": "PUSH1",
      "path": "168",
      "value": "0x0"
    },
    "1467": {
      "fn": "SafeMath.div",
      "offset": [
        3851,
        3856
      ],
      "op": "PUSH2",
      "path": "168",
      "statement": 42,
      "value": "0x2AB"
    },
    "1470": {
      "fn": "SafeMath.div",
      "offset": [
        3855,
        3856
      ],
      "op": "DUP3",
      "path": "168"
    },
    "1471": {
      "fn": "SafeMath.div",
      "offset": [
        3851,
        3852
      ],
      "op": "DUP5",
      "path": "168"
    },
    "1472": {
      "fn": "SafeMath.div",
      "offset": [
        3851,
        3856
      ],
      "op": "PUSH2",
      "path": "168",
      "value": "0x7B2"
    },
    "1475": {
      "fn": "SafeMath.div",
      "jump": "i",
      "offset": [
        3851,
        3856
      ],
      "op": "JUMP",
      "path": "168"
    },
    "1476": {
      "fn": "SafeMath.add",
      "offset": [
        2672,
        2768
      ],
      "op": "JUMPDEST",
      "path": "168"
    },
    "1477": {
      "fn": "SafeMath.add",
      "offset": [
        2730,
        2737
      ],
      "op": "PUSH1",
      "path": "168",
      "value": "0x0"
    },
    "1479": {
      "fn": "SafeMath.add",
      "offset": [
        2756,
        2761
      ],
      "op": "PUSH2",
      "path": "168",
      "statement": 43,
      "value": "0x2AB"
    },
    "1482": {
      "fn": "SafeMath.add",
      "offset": [
        2760,
        2761
      ],
      "op": "DUP3",
      "path": "168"
    },
    "1483": {
      "fn": "SafeMath.add",
      "offset": [
        2756,
        2757
      ],
      "op": "DUP5",
      "path": "168"
    },
    "1484": {
      "fn": "SafeMath.add",
      "offset": [
        2756,
        2761
      ],
      "op": "PUSH2",
      "path": "168",
      "value": "0x7C6"
    },
    "1487": {
      "fn": "SafeMath.add",
      "jump": "i",
      "offset": [
        2756,
        2761
      ],
      "op": "JUMP",
      "path": "168"
    },
    "1488": {
      "op": "JUMPDEST"
    },
    "1489": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "1494": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1496": {
      "op": "SHL"
    },
    "1497": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1499": {
      "op": "MSTORE"
    },
    "1500": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "1502": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "1504": {
      "op": "MSTORE"
    },
    "1505": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1507": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1509": {
      "op": "REVERT"
    },
    "1510": {
      "op": "JUMPDEST"
    },
    "1511": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1513": {
      "op": "DUP1"
    },
    "1514": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1516": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1518": {
      "op": "DUP5"
    },
    "1519": {
      "op": "DUP7"
    },
    "1520": {
      "op": "SUB"
    },
    "1521": {
      "op": "SLT"
    },
    "1522": {
      "op": "ISZERO"
    },
    "1523": {
      "op": "PUSH2",
      "value": "0x5FB"
    },
    "1526": {
      "op": "JUMPI"
    },
    "1527": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1529": {
      "op": "DUP1"
    },
    "1530": {
      "op": "REVERT"
    },
    "1531": {
      "op": "JUMPDEST"
    },
    "1532": {
      "op": "DUP4"
    },
    "1533": {
      "op": "CALLDATALOAD"
    },
    "1534": {
      "op": "SWAP3"
    },
    "1535": {
      "op": "POP"
    },
    "1536": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1538": {
      "op": "DUP5"
    },
    "1539": {
      "op": "ADD"
    },
    "1540": {
      "op": "CALLDATALOAD"
    },
    "1541": {
      "op": "SWAP2"
    },
    "1542": {
      "op": "POP"
    },
    "1543": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1545": {
      "op": "DUP5"
    },
    "1546": {
      "op": "ADD"
    },
    "1547": {
      "op": "CALLDATALOAD"
    },
    "1548": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "1557": {
      "op": "DUP1"
    },
    "1558": {
      "op": "DUP3"
    },
    "1559": {
      "op": "GT"
    },
    "1560": {
      "op": "ISZERO"
    },
    "1561": {
      "op": "PUSH2",
      "value": "0x621"
    },
    "1564": {
      "op": "JUMPI"
    },
    "1565": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1567": {
      "op": "DUP1"
    },
    "1568": {
      "op": "REVERT"
    },
    "1569": {
      "op": "JUMPDEST"
    },
    "1570": {
      "op": "DUP2"
    },
    "1571": {
      "op": "DUP7"
    },
    "1572": {
      "op": "ADD"
    },
    "1573": {
      "op": "SWAP2"
    },
    "1574": {
      "op": "POP"
    },
    "1575": {
      "op": "DUP7"
    },
    "1576": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1578": {
      "op": "DUP4"
    },
    "1579": {
      "op": "ADD"
    },
    "1580": {
      "op": "SLT"
    },
    "1581": {
      "op": "PUSH2",
      "value": "0x635"
    },
    "1584": {
      "op": "JUMPI"
    },
    "1585": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1587": {
      "op": "DUP1"
    },
    "1588": {
      "op": "REVERT"
    },
    "1589": {
      "op": "JUMPDEST"
    },
    "1590": {
      "op": "DUP2"
    },
    "1591": {
      "op": "CALLDATALOAD"
    },
    "1592": {
      "op": "DUP2"
    },
    "1593": {
      "op": "DUP2"
    },
    "1594": {
      "op": "GT"
    },
    "1595": {
      "op": "ISZERO"
    },
    "1596": {
      "op": "PUSH2",
      "value": "0x647"
    },
    "1599": {
      "op": "JUMPI"
    },
    "1600": {
      "op": "PUSH2",
      "value": "0x647"
    },
    "1603": {
      "op": "PUSH2",
      "value": "0x5D0"
    },
    "1606": {
      "jump": "i",
      "op": "JUMP"
    },
    "1607": {
      "op": "JUMPDEST"
    },
    "1608": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1610": {
      "op": "MLOAD"
    },
    "1611": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1613": {
      "op": "DUP3"
    },
    "1614": {
      "op": "ADD"
    },
    "1615": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1617": {
      "op": "NOT"
    },
    "1618": {
      "op": "SWAP1"
    },
    "1619": {
      "op": "DUP2"
    },
    "1620": {
      "op": "AND"
    },
    "1621": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "1623": {
      "op": "ADD"
    },
    "1624": {
      "op": "AND"
    },
    "1625": {
      "op": "DUP2"
    },
    "1626": {
      "op": "ADD"
    },
    "1627": {
      "op": "SWAP1"
    },
    "1628": {
      "op": "DUP4"
    },
    "1629": {
      "op": "DUP3"
    },
    "1630": {
      "op": "GT"
    },
    "1631": {
      "op": "DUP2"
    },
    "1632": {
      "op": "DUP4"
    },
    "1633": {
      "op": "LT"
    },
    "1634": {
      "op": "OR"
    },
    "1635": {
      "op": "ISZERO"
    },
    "1636": {
      "op": "PUSH2",
      "value": "0x66F"
    },
    "1639": {
      "op": "JUMPI"
    },
    "1640": {
      "op": "PUSH2",
      "value": "0x66F"
    },
    "1643": {
      "op": "PUSH2",
      "value": "0x5D0"
    },
    "1646": {
      "jump": "i",
      "op": "JUMP"
    },
    "1647": {
      "op": "JUMPDEST"
    },
    "1648": {
      "op": "DUP2"
    },
    "1649": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1651": {
      "op": "MSTORE"
    },
    "1652": {
      "op": "DUP3"
    },
    "1653": {
      "op": "DUP2"
    },
    "1654": {
      "op": "MSTORE"
    },
    "1655": {
      "op": "DUP10"
    },
    "1656": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1658": {
      "op": "DUP5"
    },
    "1659": {
      "op": "DUP8"
    },
    "1660": {
      "op": "ADD"
    },
    "1661": {
      "op": "ADD"
    },
    "1662": {
      "op": "GT"
    },
    "1663": {
      "op": "ISZERO"
    },
    "1664": {
      "op": "PUSH2",
      "value": "0x688"
    },
    "1667": {
      "op": "JUMPI"
    },
    "1668": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1670": {
      "op": "DUP1"
    },
    "1671": {
      "op": "REVERT"
    },
    "1672": {
      "op": "JUMPDEST"
    },
    "1673": {
      "op": "DUP3"
    },
    "1674": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1676": {
      "op": "DUP7"
    },
    "1677": {
      "op": "ADD"
    },
    "1678": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1680": {
      "op": "DUP4"
    },
    "1681": {
      "op": "ADD"
    },
    "1682": {
      "op": "CALLDATACOPY"
    },
    "1683": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1685": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1687": {
      "op": "DUP5"
    },
    "1688": {
      "op": "DUP4"
    },
    "1689": {
      "op": "ADD"
    },
    "1690": {
      "op": "ADD"
    },
    "1691": {
      "op": "MSTORE"
    },
    "1692": {
      "op": "DUP1"
    },
    "1693": {
      "op": "SWAP6"
    },
    "1694": {
      "op": "POP"
    },
    "1695": {
      "op": "POP"
    },
    "1696": {
      "op": "POP"
    },
    "1697": {
      "op": "POP"
    },
    "1698": {
      "op": "POP"
    },
    "1699": {
      "op": "POP"
    },
    "1700": {
      "op": "SWAP3"
    },
    "1701": {
      "op": "POP"
    },
    "1702": {
      "op": "SWAP3"
    },
    "1703": {
      "op": "POP"
    },
    "1704": {
      "op": "SWAP3"
    },
    "1705": {
      "jump": "o",
      "op": "JUMP"
    },
    "1706": {
      "op": "JUMPDEST"
    },
    "1707": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1709": {
      "op": "DUP1"
    },
    "1710": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1712": {
      "op": "DUP4"
    },
    "1713": {
      "op": "DUP6"
    },
    "1714": {
      "op": "SUB"
    },
    "1715": {
      "op": "SLT"
    },
    "1716": {
      "op": "ISZERO"
    },
    "1717": {
      "op": "PUSH2",
      "value": "0x6BD"
    },
    "1720": {
      "op": "JUMPI"
    },
    "1721": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1723": {
      "op": "DUP1"
    },
    "1724": {
      "op": "REVERT"
    },
    "1725": {
      "op": "JUMPDEST"
    },
    "1726": {
      "op": "POP"
    },
    "1727": {
      "op": "POP"
    },
    "1728": {
      "op": "DUP1"
    },
    "1729": {
      "op": "CALLDATALOAD"
    },
    "1730": {
      "op": "SWAP3"
    },
    "1731": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1733": {
      "op": "SWAP1"
    },
    "1734": {
      "op": "SWAP2"
    },
    "1735": {
      "op": "ADD"
    },
    "1736": {
      "op": "CALLDATALOAD"
    },
    "1737": {
      "op": "SWAP2"
    },
    "1738": {
      "op": "POP"
    },
    "1739": {
      "jump": "o",
      "op": "JUMP"
    },
    "1740": {
      "op": "JUMPDEST"
    },
    "1741": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "1746": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1748": {
      "op": "SHL"
    },
    "1749": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1751": {
      "op": "MSTORE"
    },
    "1752": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "1754": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "1756": {
      "op": "MSTORE"
    },
    "1757": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1759": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1761": {
      "op": "REVERT"
    },
    "1762": {
      "op": "JUMPDEST"
    },
    "1763": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1765": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1767": {
      "op": "NOT"
    },
    "1768": {
      "op": "DUP3"
    },
    "1769": {
      "op": "EQ"
    },
    "1770": {
      "op": "ISZERO"
    },
    "1771": {
      "op": "PUSH2",
      "value": "0x6F6"
    },
    "1774": {
      "op": "JUMPI"
    },
    "1775": {
      "op": "PUSH2",
      "value": "0x6F6"
    },
    "1778": {
      "op": "PUSH2",
      "value": "0x6CC"
    },
    "1781": {
      "jump": "i",
      "op": "JUMP"
    },
    "1782": {
      "op": "JUMPDEST"
    },
    "1783": {
      "op": "POP"
    },
    "1784": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1786": {
      "op": "ADD"
    },
    "1787": {
      "op": "SWAP1"
    },
    "1788": {
      "jump": "o",
      "op": "JUMP"
    },
    "1789": {
      "op": "JUMPDEST"
    },
    "1790": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1792": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1794": {
      "op": "DUP1"
    },
    "1795": {
      "op": "DUP4"
    },
    "1796": {
      "op": "MSTORE"
    },
    "1797": {
      "op": "DUP4"
    },
    "1798": {
      "op": "MLOAD"
    },
    "1799": {
      "op": "DUP1"
    },
    "1800": {
      "op": "DUP3"
    },
    "1801": {
      "op": "DUP6"
    },
    "1802": {
      "op": "ADD"
    },
    "1803": {
      "op": "MSTORE"
    },
    "1804": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1806": {
      "op": "JUMPDEST"
    },
    "1807": {
      "op": "DUP2"
    },
    "1808": {
      "op": "DUP2"
    },
    "1809": {
      "op": "LT"
    },
    "1810": {
      "op": "ISZERO"
    },
    "1811": {
      "op": "PUSH2",
      "value": "0x72A"
    },
    "1814": {
      "op": "JUMPI"
    },
    "1815": {
      "op": "DUP6"
    },
    "1816": {
      "op": "DUP2"
    },
    "1817": {
      "op": "ADD"
    },
    "1818": {
      "op": "DUP4"
    },
    "1819": {
      "op": "ADD"
    },
    "1820": {
      "op": "MLOAD"
    },
    "1821": {
      "op": "DUP6"
    },
    "1822": {
      "op": "DUP3"
    },
    "1823": {
      "op": "ADD"
    },
    "1824": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1826": {
      "op": "ADD"
    },
    "1827": {
      "op": "MSTORE"
    },
    "1828": {
      "op": "DUP3"
    },
    "1829": {
      "op": "ADD"
    },
    "1830": {
      "op": "PUSH2",
      "value": "0x70E"
    },
    "1833": {
      "op": "JUMP"
    },
    "1834": {
      "op": "JUMPDEST"
    },
    "1835": {
      "op": "DUP2"
    },
    "1836": {
      "op": "DUP2"
    },
    "1837": {
      "op": "GT"
    },
    "1838": {
      "op": "ISZERO"
    },
    "1839": {
      "op": "PUSH2",
      "value": "0x73C"
    },
    "1842": {
      "op": "JUMPI"
    },
    "1843": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1845": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1847": {
      "op": "DUP4"
    },
    "1848": {
      "op": "DUP8"
    },
    "1849": {
      "op": "ADD"
    },
    "1850": {
      "op": "ADD"
    },
    "1851": {
      "op": "MSTORE"
    },
    "1852": {
      "op": "JUMPDEST"
    },
    "1853": {
      "op": "POP"
    },
    "1854": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1856": {
      "op": "ADD"
    },
    "1857": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1859": {
      "op": "NOT"
    },
    "1860": {
      "op": "AND"
    },
    "1861": {
      "op": "SWAP3"
    },
    "1862": {
      "op": "SWAP1"
    },
    "1863": {
      "op": "SWAP3"
    },
    "1864": {
      "op": "ADD"
    },
    "1865": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1867": {
      "op": "ADD"
    },
    "1868": {
      "op": "SWAP4"
    },
    "1869": {
      "op": "SWAP3"
    },
    "1870": {
      "op": "POP"
    },
    "1871": {
      "op": "POP"
    },
    "1872": {
      "op": "POP"
    },
    "1873": {
      "jump": "o",
      "op": "JUMP"
    },
    "1874": {
      "op": "JUMPDEST"
    },
    "1875": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "1880": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1882": {
      "op": "SHL"
    },
    "1883": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1885": {
      "op": "MSTORE"
    },
    "1886": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "1888": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "1890": {
      "op": "MSTORE"
    },
    "1891": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1893": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1895": {
      "op": "REVERT"
    },
    "1896": {
      "op": "JUMPDEST"
    },
    "1897": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1899": {
      "op": "DUP3"
    },
    "1900": {
      "op": "DUP3"
    },
    "1901": {
      "op": "LT"
    },
    "1902": {
      "op": "ISZERO"
    },
    "1903": {
      "op": "PUSH2",
      "value": "0x77A"
    },
    "1906": {
      "op": "JUMPI"
    },
    "1907": {
      "op": "PUSH2",
      "value": "0x77A"
    },
    "1910": {
      "op": "PUSH2",
      "value": "0x6CC"
    },
    "1913": {
      "jump": "i",
      "op": "JUMP"
    },
    "1914": {
      "op": "JUMPDEST"
    },
    "1915": {
      "op": "POP"
    },
    "1916": {
      "op": "SUB"
    },
    "1917": {
      "op": "SWAP1"
    },
    "1918": {
      "jump": "o",
      "op": "JUMP"
    },
    "1919": {
      "op": "JUMPDEST"
    },
    "1920": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1922": {
      "op": "DUP3"
    },
    "1923": {
      "op": "PUSH2",
      "value": "0x78E"
    },
    "1926": {
      "op": "JUMPI"
    },
    "1927": {
      "op": "PUSH2",
      "value": "0x78E"
    },
    "1930": {
      "op": "PUSH2",
      "value": "0x752"
    },
    "1933": {
      "jump": "i",
      "op": "JUMP"
    },
    "1934": {
      "op": "JUMPDEST"
    },
    "1935": {
      "op": "POP"
    },
    "1936": {
      "op": "MOD"
    },
    "1937": {
      "op": "SWAP1"
    },
    "1938": {
      "jump": "o",
      "op": "JUMP"
    },
    "1939": {
      "op": "JUMPDEST"
    },
    "1940": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1942": {
      "op": "DUP2"
    },
    "1943": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1945": {
      "op": "NOT"
    },
    "1946": {
      "op": "DIV"
    },
    "1947": {
      "op": "DUP4"
    },
    "1948": {
      "op": "GT"
    },
    "1949": {
      "op": "DUP3"
    },
    "1950": {
      "op": "ISZERO"
    },
    "1951": {
      "op": "ISZERO"
    },
    "1952": {
      "op": "AND"
    },
    "1953": {
      "op": "ISZERO"
    },
    "1954": {
      "op": "PUSH2",
      "value": "0x7AD"
    },
    "1957": {
      "op": "JUMPI"
    },
    "1958": {
      "op": "PUSH2",
      "value": "0x7AD"
    },
    "1961": {
      "op": "PUSH2",
      "value": "0x6CC"
    },
    "1964": {
      "jump": "i",
      "op": "JUMP"
    },
    "1965": {
      "op": "JUMPDEST"
    },
    "1966": {
      "op": "POP"
    },
    "1967": {
      "op": "MUL"
    },
    "1968": {
      "op": "SWAP1"
    },
    "1969": {
      "jump": "o",
      "op": "JUMP"
    },
    "1970": {
      "op": "JUMPDEST"
    },
    "1971": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1973": {
      "op": "DUP3"
    },
    "1974": {
      "op": "PUSH2",
      "value": "0x7C1"
    },
    "1977": {
      "op": "JUMPI"
    },
    "1978": {
      "op": "PUSH2",
      "value": "0x7C1"
    },
    "1981": {
      "op": "PUSH2",
      "value": "0x752"
    },
    "1984": {
      "jump": "i",
      "op": "JUMP"
    },
    "1985": {
      "op": "JUMPDEST"
    },
    "1986": {
      "op": "POP"
    },
    "1987": {
      "op": "DIV"
    },
    "1988": {
      "op": "SWAP1"
    },
    "1989": {
      "jump": "o",
      "op": "JUMP"
    },
    "1990": {
      "op": "JUMPDEST"
    },
    "1991": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1993": {
      "op": "DUP3"
    },
    "1994": {
      "op": "NOT"
    },
    "1995": {
      "op": "DUP3"
    },
    "1996": {
      "op": "GT"
    },
    "1997": {
      "op": "ISZERO"
    },
    "1998": {
      "op": "PUSH2",
      "value": "0x7D9"
    },
    "2001": {
      "op": "JUMPI"
    },
    "2002": {
      "op": "PUSH2",
      "value": "0x7D9"
    },
    "2005": {
      "op": "PUSH2",
      "value": "0x6CC"
    },
    "2008": {
      "jump": "i",
      "op": "JUMP"
    },
    "2009": {
      "op": "JUMPDEST"
    },
    "2010": {
      "op": "POP"
    },
    "2011": {
      "op": "ADD"
    },
    "2012": {
      "op": "SWAP1"
    },
    "2013": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "731b1eeef892d98f03d186222d06276c621820ee",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"../utils/math/SafeMath.sol\";\n\ncontract SafeMathMock {\n    function tryAdd(uint256 a, uint256 b) public pure returns (bool flag, uint256 value) {\n        return SafeMath.tryAdd(a, b);\n    }\n\n    function trySub(uint256 a, uint256 b) public pure returns (bool flag, uint256 value) {\n        return SafeMath.trySub(a, b);\n    }\n\n    function tryMul(uint256 a, uint256 b) public pure returns (bool flag, uint256 value) {\n        return SafeMath.tryMul(a, b);\n    }\n\n    function tryDiv(uint256 a, uint256 b) public pure returns (bool flag, uint256 value) {\n        return SafeMath.tryDiv(a, b);\n    }\n\n    function tryMod(uint256 a, uint256 b) public pure returns (bool flag, uint256 value) {\n        return SafeMath.tryMod(a, b);\n    }\n\n    // using the do* naming convention to avoid warnings due to clashing opcode names\n\n    function doAdd(uint256 a, uint256 b) public pure returns (uint256) {\n        return SafeMath.add(a, b);\n    }\n\n    function doSub(uint256 a, uint256 b) public pure returns (uint256) {\n        return SafeMath.sub(a, b);\n    }\n\n    function doMul(uint256 a, uint256 b) public pure returns (uint256) {\n        return SafeMath.mul(a, b);\n    }\n\n    function doDiv(uint256 a, uint256 b) public pure returns (uint256) {\n        return SafeMath.div(a, b);\n    }\n\n    function doMod(uint256 a, uint256 b) public pure returns (uint256) {\n        return SafeMath.mod(a, b);\n    }\n\n    function subWithMessage(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) public pure returns (uint256) {\n        return SafeMath.sub(a, b, errorMessage);\n    }\n\n    function divWithMessage(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) public pure returns (uint256) {\n        return SafeMath.div(a, b, errorMessage);\n    }\n\n    function modWithMessage(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) public pure returns (uint256) {\n        return SafeMath.mod(a, b, errorMessage);\n    }\n\n    function addMemoryCheck() public pure returns (uint256 mem) {\n        uint256 length = 32;\n        assembly {\n            mem := mload(0x40)\n        }\n        for (uint256 i = 0; i < length; ++i) {\n            SafeMath.add(1, 1);\n        }\n        assembly {\n            mem := sub(mload(0x40), mem)\n        }\n    }\n\n    function subMemoryCheck() public pure returns (uint256 mem) {\n        uint256 length = 32;\n        assembly {\n            mem := mload(0x40)\n        }\n        for (uint256 i = 0; i < length; ++i) {\n            SafeMath.sub(1, 1);\n        }\n        assembly {\n            mem := sub(mload(0x40), mem)\n        }\n    }\n\n    function mulMemoryCheck() public pure returns (uint256 mem) {\n        uint256 length = 32;\n        assembly {\n            mem := mload(0x40)\n        }\n        for (uint256 i = 0; i < length; ++i) {\n            SafeMath.mul(1, 1);\n        }\n        assembly {\n            mem := sub(mload(0x40), mem)\n        }\n    }\n\n    function divMemoryCheck() public pure returns (uint256 mem) {\n        uint256 length = 32;\n        assembly {\n            mem := mload(0x40)\n        }\n        for (uint256 i = 0; i < length; ++i) {\n            SafeMath.div(1, 1);\n        }\n        assembly {\n            mem := sub(mload(0x40), mem)\n        }\n    }\n\n    function modMemoryCheck() public pure returns (uint256 mem) {\n        uint256 length = 32;\n        assembly {\n            mem := mload(0x40)\n        }\n        for (uint256 i = 0; i < length; ++i) {\n            SafeMath.mod(1, 1);\n        }\n        assembly {\n            mem := sub(mload(0x40), mem)\n        }\n    }\n}\n",
  "sourceMap": "96:3559:80:-:0;;;;;;;;;;;;;;;;;;;",
  "sourcePath": "contracts/openzeppelin/contracts/mocks/SafeMathMock.sol",
  "type": "contract"
}