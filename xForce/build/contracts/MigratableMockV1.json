{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "x",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "79": "contracts/openzeppelin/contracts/mocks/SingleInheritanceInitializableMocks.sol",
    "92": "contracts/openzeppelin/contracts/proxy/utils/Initializable.sol"
  },
  "ast": {
    "absolutePath": "contracts/openzeppelin/contracts/mocks/SingleInheritanceInitializableMocks.sol",
    "exportedSymbols": {
      "Initializable": [
        9112
      ],
      "MigratableMockV1": [
        7759
      ],
      "MigratableMockV2": [
        7792
      ],
      "MigratableMockV3": [
        7823
      ]
    },
    "id": 7824,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 7740,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:79"
      },
      {
        "absolutePath": "contracts/openzeppelin/contracts/proxy/utils/Initializable.sol",
        "file": "../proxy/utils/Initializable.sol",
        "id": 7741,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 7824,
        "sourceUnit": 9113,
        "src": "58:42:79",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 7743,
              "name": "Initializable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 9112,
              "src": "253:13:79"
            },
            "id": 7744,
            "nodeType": "InheritanceSpecifier",
            "src": "253:13:79"
          }
        ],
        "canonicalName": "MigratableMockV1",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 7742,
          "nodeType": "StructuredDocumentation",
          "src": "102:121:79",
          "text": " @title MigratableMockV1\n @dev This contract is a mock to test initializable functionality through migrations"
        },
        "fullyImplemented": true,
        "id": 7759,
        "linearizedBaseContracts": [
          7759,
          9112
        ],
        "name": "MigratableMockV1",
        "nameLocation": "233:16:79",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "0c55699c",
            "id": 7746,
            "mutability": "mutable",
            "name": "x",
            "nameLocation": "288:1:79",
            "nodeType": "VariableDeclaration",
            "scope": 7759,
            "src": "273:16:79",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 7745,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "273:7:79",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 7757,
              "nodeType": "Block",
              "src": "358:26:79",
              "statements": [
                {
                  "expression": {
                    "id": 7755,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 7753,
                      "name": "x",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7746,
                      "src": "368:1:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 7754,
                      "name": "value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7748,
                      "src": "372:5:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "368:9:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 7756,
                  "nodeType": "ExpressionStatement",
                  "src": "368:9:79"
                }
              ]
            },
            "functionSelector": "fe4b84df",
            "id": 7758,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 7751,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 7750,
                  "name": "initializer",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 9111,
                  "src": "346:11:79"
                },
                "nodeType": "ModifierInvocation",
                "src": "346:11:79"
              }
            ],
            "name": "initialize",
            "nameLocation": "305:10:79",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7749,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7748,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "324:5:79",
                  "nodeType": "VariableDeclaration",
                  "scope": 7758,
                  "src": "316:13:79",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7747,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "316:7:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "315:15:79"
            },
            "returnParameters": {
              "id": 7752,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "358:0:79"
            },
            "scope": 7759,
            "src": "296:88:79",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 7824,
        "src": "224:162:79",
        "usedErrors": []
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 7761,
              "name": "MigratableMockV1",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 7759,
              "src": "529:16:79"
            },
            "id": 7762,
            "nodeType": "InheritanceSpecifier",
            "src": "529:16:79"
          }
        ],
        "canonicalName": "MigratableMockV2",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 7760,
          "nodeType": "StructuredDocumentation",
          "src": "388:111:79",
          "text": " @title MigratableMockV2\n @dev This contract is a mock to test migratable functionality with params"
        },
        "fullyImplemented": true,
        "id": 7792,
        "linearizedBaseContracts": [
          7792,
          7759,
          9112
        ],
        "name": "MigratableMockV2",
        "nameLocation": "509:16:79",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 7764,
            "mutability": "mutable",
            "name": "_migratedV2",
            "nameLocation": "566:11:79",
            "nodeType": "VariableDeclaration",
            "scope": 7792,
            "src": "552:25:79",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 7763,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "552:4:79",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "a56dfe4a",
            "id": 7766,
            "mutability": "mutable",
            "name": "y",
            "nameLocation": "598:1:79",
            "nodeType": "VariableDeclaration",
            "scope": 7792,
            "src": "583:16:79",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 7765,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "583:7:79",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 7790,
              "nodeType": "Block",
              "src": "675:111:79",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 7775,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "693:12:79",
                        "subExpression": {
                          "id": 7774,
                          "name": "_migratedV2",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7764,
                          "src": "694:11:79",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 7773,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "685:7:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 7776,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "685:21:79",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7777,
                  "nodeType": "ExpressionStatement",
                  "src": "685:21:79"
                },
                {
                  "expression": {
                    "id": 7780,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 7778,
                      "name": "x",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7746,
                      "src": "716:1:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 7779,
                      "name": "value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7768,
                      "src": "720:5:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "716:9:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 7781,
                  "nodeType": "ExpressionStatement",
                  "src": "716:9:79"
                },
                {
                  "expression": {
                    "id": 7784,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 7782,
                      "name": "y",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7766,
                      "src": "735:1:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 7783,
                      "name": "anotherValue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7770,
                      "src": "739:12:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "735:16:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 7785,
                  "nodeType": "ExpressionStatement",
                  "src": "735:16:79"
                },
                {
                  "expression": {
                    "id": 7788,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 7786,
                      "name": "_migratedV2",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7764,
                      "src": "761:11:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 7787,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "775:4:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "761:18:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 7789,
                  "nodeType": "ExpressionStatement",
                  "src": "761:18:79"
                }
              ]
            },
            "functionSelector": "3e54bacb",
            "id": 7791,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "migrate",
            "nameLocation": "615:7:79",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7771,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7768,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "631:5:79",
                  "nodeType": "VariableDeclaration",
                  "scope": 7791,
                  "src": "623:13:79",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7767,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "623:7:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7770,
                  "mutability": "mutable",
                  "name": "anotherValue",
                  "nameLocation": "646:12:79",
                  "nodeType": "VariableDeclaration",
                  "scope": 7791,
                  "src": "638:20:79",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7769,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "638:7:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "622:37:79"
            },
            "returnParameters": {
              "id": 7772,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "675:0:79"
            },
            "scope": 7792,
            "src": "606:180:79",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 7824,
        "src": "500:288:79",
        "usedErrors": []
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 7794,
              "name": "MigratableMockV2",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 7792,
              "src": "934:16:79"
            },
            "id": 7795,
            "nodeType": "InheritanceSpecifier",
            "src": "934:16:79"
          }
        ],
        "canonicalName": "MigratableMockV3",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 7793,
          "nodeType": "StructuredDocumentation",
          "src": "790:114:79",
          "text": " @title MigratableMockV3\n @dev This contract is a mock to test migratable functionality without params"
        },
        "fullyImplemented": true,
        "id": 7823,
        "linearizedBaseContracts": [
          7823,
          7792,
          7759,
          9112
        ],
        "name": "MigratableMockV3",
        "nameLocation": "914:16:79",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 7797,
            "mutability": "mutable",
            "name": "_migratedV3",
            "nameLocation": "971:11:79",
            "nodeType": "VariableDeclaration",
            "scope": 7823,
            "src": "957:25:79",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 7796,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "957:4:79",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 7821,
              "nodeType": "Block",
              "src": "1023:125:79",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 7802,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "1041:12:79",
                        "subExpression": {
                          "id": 7801,
                          "name": "_migratedV3",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7797,
                          "src": "1042:11:79",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 7800,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1033:7:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 7803,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1033:21:79",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7804,
                  "nodeType": "ExpressionStatement",
                  "src": "1033:21:79"
                },
                {
                  "assignments": [
                    7806
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7806,
                      "mutability": "mutable",
                      "name": "oldX",
                      "nameLocation": "1072:4:79",
                      "nodeType": "VariableDeclaration",
                      "scope": 7821,
                      "src": "1064:12:79",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 7805,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1064:7:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 7808,
                  "initialValue": {
                    "id": 7807,
                    "name": "x",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 7746,
                    "src": "1079:1:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1064:16:79"
                },
                {
                  "expression": {
                    "id": 7811,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 7809,
                      "name": "x",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7746,
                      "src": "1090:1:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 7810,
                      "name": "y",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7766,
                      "src": "1094:1:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1090:5:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 7812,
                  "nodeType": "ExpressionStatement",
                  "src": "1090:5:79"
                },
                {
                  "expression": {
                    "id": 7815,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 7813,
                      "name": "y",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7766,
                      "src": "1105:1:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 7814,
                      "name": "oldX",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7806,
                      "src": "1109:4:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1105:8:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 7816,
                  "nodeType": "ExpressionStatement",
                  "src": "1105:8:79"
                },
                {
                  "expression": {
                    "id": 7819,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 7817,
                      "name": "_migratedV3",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7797,
                      "src": "1123:11:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 7818,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1137:4:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1123:18:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 7820,
                  "nodeType": "ExpressionStatement",
                  "src": "1123:18:79"
                }
              ]
            },
            "functionSelector": "8fd3ab80",
            "id": 7822,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "migrate",
            "nameLocation": "998:7:79",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7798,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1005:2:79"
            },
            "returnParameters": {
              "id": 7799,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1023:0:79"
            },
            "scope": 7823,
            "src": "989:159:79",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 7824,
        "src": "905:245:79",
        "usedErrors": []
      }
    ],
    "src": "33:1118:79"
  },
  "bytecode": "608060405234801561001057600080fd5b50610177806100206000396000f3fe6080604052600436106100295760003560e01c80630c55699c1461002e578063fe4b84df14610056575b600080fd5b34801561003a57600080fd5b5061004460015481565b60405190815260200160405180910390f35b610069610064366004610128565b61006b565b005b600054610100900460ff1680610084575060005460ff16155b6100eb5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840160405180910390fd5b600054610100900460ff1615801561010d576000805461ffff19166101011790555b60018290558015610124576000805461ff00191690555b5050565b60006020828403121561013a57600080fd5b503591905056fea26469706673582212204c2e10624c8b622c9c058b8eb9d480bb6bb25199a192860d5df6a55b0eb3ba5564736f6c634300080c0033",
  "bytecodeSha1": "35bfe97f59ad8dad4a9cc4419b946f04d600379e",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.12+commit.f00d7308"
  },
  "contractName": "MigratableMockV1",
  "coverageMap": {
    "branches": {
      "79": {},
      "92": {
        "MigratableMockV1.initialize": {
          "1": [
            1409,
            1422,
            true
          ],
          "2": [
            1427,
            1439,
            true
          ]
        }
      }
    },
    "statements": {
      "79": {
        "MigratableMockV1.initialize": {
          "0": [
            368,
            377
          ]
        }
      },
      "92": {}
    }
  },
  "dependencies": [
    "Initializable"
  ],
  "deployedBytecode": "6080604052600436106100295760003560e01c80630c55699c1461002e578063fe4b84df14610056575b600080fd5b34801561003a57600080fd5b5061004460015481565b60405190815260200160405180910390f35b610069610064366004610128565b61006b565b005b600054610100900460ff1680610084575060005460ff16155b6100eb5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840160405180910390fd5b600054610100900460ff1615801561010d576000805461ffff19166101011790555b60018290558015610124576000805461ff00191690555b5050565b60006020828403121561013a57600080fd5b503591905056fea26469706673582212204c2e10624c8b622c9c058b8eb9d480bb6bb25199a192860d5df6a55b0eb3ba5564736f6c634300080c0033",
  "deployedSourceMap": "224:162:79:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;273:16;;;;;;;;;;;;;;;;;;;160:25:169;;;148:2;133:18;273:16:79;;;;;;;296:88;;;;;;:::i;:::-;;:::i;:::-;;;1409:13:92;;;;;;;;:30;;-1:-1:-1;1427:12:92;;;;1426:13;1409:30;1401:89;;;;-1:-1:-1;;;1401:89:92;;583:2:169;1401:89:92;;;565:21:169;622:2;602:18;;;595:30;661:34;641:18;;;634:62;-1:-1:-1;;;712:18:169;;;705:44;766:19;;1401:89:92;;;;;;;;1501:19;1524:13;;;;;;1523:14;1547:98;;;;1581:13;:20;;-1:-1:-1;;1615:19:92;;;;;1547:98;368:1:79::1;:9:::0;;;1667:66:92;;;;1717:5;1701:21;;-1:-1:-1;;1701:21:92;;;1667:66;1391:348;296:88:79;:::o;196:180:169:-;255:6;308:2;296:9;287:7;283:23;279:32;276:52;;;324:1;321;314:12;276:52;-1:-1:-1;347:23:169;;196:180;-1:-1:-1;196:180:169:o",
  "language": "Solidity",
  "natspec": {
    "details": "This contract is a mock to test initializable functionality through migrations",
    "kind": "dev",
    "methods": {},
    "title": "MigratableMockV1",
    "version": 1
  },
  "offset": [
    224,
    386
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x29 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xC55699C EQ PUSH2 0x2E JUMPI DUP1 PUSH4 0xFE4B84DF EQ PUSH2 0x56 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x44 PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x69 PUSH2 0x64 CALLDATASIZE PUSH1 0x4 PUSH2 0x128 JUMP JUMPDEST PUSH2 0x6B JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x84 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0xEB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x191E481A5B9A5D1A585B1A5E9959 PUSH1 0x92 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x10D JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFFFF NOT AND PUSH2 0x101 OR SWAP1 SSTORE JUMPDEST PUSH1 0x1 DUP3 SWAP1 SSTORE DUP1 ISZERO PUSH2 0x124 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x13A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4C 0x2E LT PUSH3 0x4C8B62 0x2C SWAP13 SDIV DUP12 DUP15 0xB9 0xD4 DUP1 0xBB PUSH12 0xB25199A192860D5DF6A55B0E 0xB3 0xBA SSTORE PUSH5 0x736F6C6343 STOP ADDMOD 0xC STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        224,
        386
      ],
      "op": "PUSH1",
      "path": "79",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        224,
        386
      ],
      "op": "PUSH1",
      "path": "79",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        224,
        386
      ],
      "op": "MSTORE",
      "path": "79"
    },
    "5": {
      "fn": null,
      "offset": [
        224,
        386
      ],
      "op": "PUSH1",
      "path": "79",
      "value": "0x4"
    },
    "7": {
      "fn": null,
      "offset": [
        224,
        386
      ],
      "op": "CALLDATASIZE",
      "path": "79"
    },
    "8": {
      "fn": null,
      "offset": [
        224,
        386
      ],
      "op": "LT",
      "path": "79"
    },
    "9": {
      "fn": null,
      "offset": [
        224,
        386
      ],
      "op": "PUSH2",
      "path": "79",
      "value": "0x29"
    },
    "12": {
      "fn": null,
      "offset": [
        224,
        386
      ],
      "op": "JUMPI",
      "path": "79"
    },
    "13": {
      "fn": null,
      "offset": [
        224,
        386
      ],
      "op": "PUSH1",
      "path": "79",
      "value": "0x0"
    },
    "15": {
      "fn": null,
      "offset": [
        224,
        386
      ],
      "op": "CALLDATALOAD",
      "path": "79"
    },
    "16": {
      "fn": null,
      "offset": [
        224,
        386
      ],
      "op": "PUSH1",
      "path": "79",
      "value": "0xE0"
    },
    "18": {
      "fn": null,
      "offset": [
        224,
        386
      ],
      "op": "SHR",
      "path": "79"
    },
    "19": {
      "fn": null,
      "offset": [
        224,
        386
      ],
      "op": "DUP1",
      "path": "79"
    },
    "20": {
      "fn": null,
      "offset": [
        224,
        386
      ],
      "op": "PUSH4",
      "path": "79",
      "value": "0xC55699C"
    },
    "25": {
      "fn": null,
      "offset": [
        224,
        386
      ],
      "op": "EQ",
      "path": "79"
    },
    "26": {
      "fn": null,
      "offset": [
        224,
        386
      ],
      "op": "PUSH2",
      "path": "79",
      "value": "0x2E"
    },
    "29": {
      "fn": null,
      "offset": [
        224,
        386
      ],
      "op": "JUMPI",
      "path": "79"
    },
    "30": {
      "fn": null,
      "offset": [
        224,
        386
      ],
      "op": "DUP1",
      "path": "79"
    },
    "31": {
      "fn": null,
      "offset": [
        224,
        386
      ],
      "op": "PUSH4",
      "path": "79",
      "value": "0xFE4B84DF"
    },
    "36": {
      "fn": null,
      "offset": [
        224,
        386
      ],
      "op": "EQ",
      "path": "79"
    },
    "37": {
      "fn": null,
      "offset": [
        224,
        386
      ],
      "op": "PUSH2",
      "path": "79",
      "value": "0x56"
    },
    "40": {
      "fn": null,
      "offset": [
        224,
        386
      ],
      "op": "JUMPI",
      "path": "79"
    },
    "41": {
      "fn": null,
      "offset": [
        224,
        386
      ],
      "op": "JUMPDEST",
      "path": "79"
    },
    "42": {
      "fn": null,
      "offset": [
        224,
        386
      ],
      "op": "PUSH1",
      "path": "79",
      "value": "0x0"
    },
    "44": {
      "fn": null,
      "offset": [
        224,
        386
      ],
      "op": "DUP1",
      "path": "79"
    },
    "45": {
      "first_revert": true,
      "fn": null,
      "offset": [
        224,
        386
      ],
      "op": "REVERT",
      "path": "79"
    },
    "46": {
      "offset": [
        273,
        289
      ],
      "op": "JUMPDEST",
      "path": "79"
    },
    "47": {
      "fn": null,
      "offset": [
        273,
        289
      ],
      "op": "CALLVALUE",
      "path": "79"
    },
    "48": {
      "fn": null,
      "offset": [
        273,
        289
      ],
      "op": "DUP1",
      "path": "79"
    },
    "49": {
      "fn": null,
      "offset": [
        273,
        289
      ],
      "op": "ISZERO",
      "path": "79"
    },
    "50": {
      "fn": null,
      "offset": [
        273,
        289
      ],
      "op": "PUSH2",
      "path": "79",
      "value": "0x3A"
    },
    "53": {
      "fn": null,
      "offset": [
        273,
        289
      ],
      "op": "JUMPI",
      "path": "79"
    },
    "54": {
      "fn": null,
      "offset": [
        273,
        289
      ],
      "op": "PUSH1",
      "path": "79",
      "value": "0x0"
    },
    "56": {
      "fn": null,
      "offset": [
        273,
        289
      ],
      "op": "DUP1",
      "path": "79"
    },
    "57": {
      "fn": null,
      "offset": [
        273,
        289
      ],
      "op": "REVERT",
      "path": "79"
    },
    "58": {
      "fn": null,
      "offset": [
        273,
        289
      ],
      "op": "JUMPDEST",
      "path": "79"
    },
    "59": {
      "fn": null,
      "offset": [
        273,
        289
      ],
      "op": "POP",
      "path": "79"
    },
    "60": {
      "fn": null,
      "offset": [
        273,
        289
      ],
      "op": "PUSH2",
      "path": "79",
      "value": "0x44"
    },
    "63": {
      "fn": null,
      "offset": [
        273,
        289
      ],
      "op": "PUSH1",
      "path": "79",
      "value": "0x1"
    },
    "65": {
      "fn": null,
      "offset": [
        273,
        289
      ],
      "op": "SLOAD",
      "path": "79"
    },
    "66": {
      "fn": null,
      "offset": [
        273,
        289
      ],
      "op": "DUP2",
      "path": "79"
    },
    "67": {
      "fn": null,
      "offset": [
        273,
        289
      ],
      "op": "JUMP",
      "path": "79"
    },
    "68": {
      "fn": null,
      "offset": [
        273,
        289
      ],
      "op": "JUMPDEST",
      "path": "79"
    },
    "69": {
      "fn": null,
      "offset": [
        273,
        289
      ],
      "op": "PUSH1",
      "path": "79",
      "value": "0x40"
    },
    "71": {
      "fn": null,
      "offset": [
        273,
        289
      ],
      "op": "MLOAD",
      "path": "79"
    },
    "72": {
      "op": "SWAP1"
    },
    "73": {
      "op": "DUP2"
    },
    "74": {
      "op": "MSTORE"
    },
    "75": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "77": {
      "op": "ADD"
    },
    "78": {
      "offset": [
        273,
        289
      ],
      "op": "PUSH1",
      "path": "79",
      "value": "0x40"
    },
    "80": {
      "fn": null,
      "offset": [
        273,
        289
      ],
      "op": "MLOAD",
      "path": "79"
    },
    "81": {
      "fn": null,
      "offset": [
        273,
        289
      ],
      "op": "DUP1",
      "path": "79"
    },
    "82": {
      "fn": null,
      "offset": [
        273,
        289
      ],
      "op": "SWAP2",
      "path": "79"
    },
    "83": {
      "fn": null,
      "offset": [
        273,
        289
      ],
      "op": "SUB",
      "path": "79"
    },
    "84": {
      "fn": null,
      "offset": [
        273,
        289
      ],
      "op": "SWAP1",
      "path": "79"
    },
    "85": {
      "fn": null,
      "offset": [
        273,
        289
      ],
      "op": "RETURN",
      "path": "79"
    },
    "86": {
      "fn": "MigratableMockV1.initialize",
      "offset": [
        296,
        384
      ],
      "op": "JUMPDEST",
      "path": "79"
    },
    "87": {
      "fn": "MigratableMockV1.initialize",
      "offset": [
        296,
        384
      ],
      "op": "PUSH2",
      "path": "79",
      "value": "0x69"
    },
    "90": {
      "fn": "MigratableMockV1.initialize",
      "offset": [
        296,
        384
      ],
      "op": "PUSH2",
      "path": "79",
      "value": "0x64"
    },
    "93": {
      "fn": "MigratableMockV1.initialize",
      "offset": [
        296,
        384
      ],
      "op": "CALLDATASIZE",
      "path": "79"
    },
    "94": {
      "fn": "MigratableMockV1.initialize",
      "offset": [
        296,
        384
      ],
      "op": "PUSH1",
      "path": "79",
      "value": "0x4"
    },
    "96": {
      "fn": "MigratableMockV1.initialize",
      "offset": [
        296,
        384
      ],
      "op": "PUSH2",
      "path": "79",
      "value": "0x128"
    },
    "99": {
      "fn": "MigratableMockV1.initialize",
      "jump": "i",
      "offset": [
        296,
        384
      ],
      "op": "JUMP",
      "path": "79"
    },
    "100": {
      "fn": "MigratableMockV1.initialize",
      "offset": [
        296,
        384
      ],
      "op": "JUMPDEST",
      "path": "79"
    },
    "101": {
      "fn": "MigratableMockV1.initialize",
      "offset": [
        296,
        384
      ],
      "op": "PUSH2",
      "path": "79",
      "value": "0x6B"
    },
    "104": {
      "fn": "MigratableMockV1.initialize",
      "jump": "i",
      "offset": [
        296,
        384
      ],
      "op": "JUMP",
      "path": "79"
    },
    "105": {
      "fn": "MigratableMockV1.initialize",
      "offset": [
        296,
        384
      ],
      "op": "JUMPDEST",
      "path": "79"
    },
    "106": {
      "fn": "MigratableMockV1.initialize",
      "offset": [
        296,
        384
      ],
      "op": "STOP",
      "path": "79"
    },
    "107": {
      "fn": "MigratableMockV1.initialize",
      "offset": [
        296,
        384
      ],
      "op": "JUMPDEST",
      "path": "79"
    },
    "108": {
      "offset": [
        1409,
        1422
      ],
      "op": "PUSH1",
      "path": "92",
      "value": "0x0"
    },
    "110": {
      "fn": "MigratableMockV1.initialize",
      "offset": [
        1409,
        1422
      ],
      "op": "SLOAD",
      "path": "92"
    },
    "111": {
      "fn": "MigratableMockV1.initialize",
      "offset": [
        1409,
        1422
      ],
      "op": "PUSH2",
      "path": "92",
      "value": "0x100"
    },
    "114": {
      "fn": "MigratableMockV1.initialize",
      "offset": [
        1409,
        1422
      ],
      "op": "SWAP1",
      "path": "92"
    },
    "115": {
      "fn": "MigratableMockV1.initialize",
      "offset": [
        1409,
        1422
      ],
      "op": "DIV",
      "path": "92"
    },
    "116": {
      "fn": "MigratableMockV1.initialize",
      "offset": [
        1409,
        1422
      ],
      "op": "PUSH1",
      "path": "92",
      "value": "0xFF"
    },
    "118": {
      "fn": "MigratableMockV1.initialize",
      "offset": [
        1409,
        1422
      ],
      "op": "AND",
      "path": "92"
    },
    "119": {
      "branch": 1,
      "fn": "MigratableMockV1.initialize",
      "offset": [
        1409,
        1422
      ],
      "op": "DUP1",
      "path": "92"
    },
    "120": {
      "offset": [
        1409,
        1439
      ],
      "op": "PUSH2",
      "path": "92",
      "value": "0x84"
    },
    "123": {
      "branch": 1,
      "offset": [
        1409,
        1439
      ],
      "op": "JUMPI",
      "path": "92"
    },
    "124": {
      "op": "POP"
    },
    "125": {
      "offset": [
        1427,
        1439
      ],
      "op": "PUSH1",
      "path": "92",
      "value": "0x0"
    },
    "127": {
      "fn": "MigratableMockV1.initialize",
      "offset": [
        1427,
        1439
      ],
      "op": "SLOAD",
      "path": "92"
    },
    "128": {
      "fn": "MigratableMockV1.initialize",
      "offset": [
        1427,
        1439
      ],
      "op": "PUSH1",
      "path": "92",
      "value": "0xFF"
    },
    "130": {
      "branch": 2,
      "fn": "MigratableMockV1.initialize",
      "offset": [
        1427,
        1439
      ],
      "op": "AND",
      "path": "92"
    },
    "131": {
      "offset": [
        1426,
        1439
      ],
      "op": "ISZERO",
      "path": "92"
    },
    "132": {
      "offset": [
        1409,
        1439
      ],
      "op": "JUMPDEST",
      "path": "92"
    },
    "133": {
      "offset": [
        1401,
        1490
      ],
      "op": "PUSH2",
      "path": "92",
      "value": "0xEB"
    },
    "136": {
      "branch": 2,
      "offset": [
        1401,
        1490
      ],
      "op": "JUMPI",
      "path": "92"
    },
    "137": {
      "fn": "MigratableMockV1.initialize",
      "offset": [
        1401,
        1490
      ],
      "op": "PUSH1",
      "path": "92",
      "value": "0x40"
    },
    "139": {
      "fn": "MigratableMockV1.initialize",
      "offset": [
        1401,
        1490
      ],
      "op": "MLOAD",
      "path": "92"
    },
    "140": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "144": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "146": {
      "op": "SHL"
    },
    "147": {
      "offset": [
        1401,
        1490
      ],
      "op": "DUP2",
      "path": "92"
    },
    "148": {
      "fn": "MigratableMockV1.initialize",
      "offset": [
        1401,
        1490
      ],
      "op": "MSTORE",
      "path": "92"
    },
    "149": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "151": {
      "offset": [
        1401,
        1490
      ],
      "op": "PUSH1",
      "path": "92",
      "value": "0x4"
    },
    "153": {
      "fn": "MigratableMockV1.initialize",
      "offset": [
        1401,
        1490
      ],
      "op": "DUP3",
      "path": "92"
    },
    "154": {
      "fn": "MigratableMockV1.initialize",
      "offset": [
        1401,
        1490
      ],
      "op": "ADD",
      "path": "92"
    },
    "155": {
      "op": "MSTORE"
    },
    "156": {
      "op": "PUSH1",
      "value": "0x2E"
    },
    "158": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "160": {
      "op": "DUP3"
    },
    "161": {
      "op": "ADD"
    },
    "162": {
      "op": "MSTORE"
    },
    "163": {
      "op": "PUSH32",
      "value": "0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561"
    },
    "196": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "198": {
      "op": "DUP3"
    },
    "199": {
      "op": "ADD"
    },
    "200": {
      "op": "MSTORE"
    },
    "201": {
      "op": "PUSH14",
      "value": "0x191E481A5B9A5D1A585B1A5E9959"
    },
    "216": {
      "op": "PUSH1",
      "value": "0x92"
    },
    "218": {
      "op": "SHL"
    },
    "219": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "221": {
      "op": "DUP3"
    },
    "222": {
      "op": "ADD"
    },
    "223": {
      "op": "MSTORE"
    },
    "224": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "226": {
      "op": "ADD"
    },
    "227": {
      "offset": [
        1401,
        1490
      ],
      "op": "PUSH1",
      "path": "92",
      "value": "0x40"
    },
    "229": {
      "fn": "MigratableMockV1.initialize",
      "offset": [
        1401,
        1490
      ],
      "op": "MLOAD",
      "path": "92"
    },
    "230": {
      "fn": "MigratableMockV1.initialize",
      "offset": [
        1401,
        1490
      ],
      "op": "DUP1",
      "path": "92"
    },
    "231": {
      "fn": "MigratableMockV1.initialize",
      "offset": [
        1401,
        1490
      ],
      "op": "SWAP2",
      "path": "92"
    },
    "232": {
      "fn": "MigratableMockV1.initialize",
      "offset": [
        1401,
        1490
      ],
      "op": "SUB",
      "path": "92"
    },
    "233": {
      "fn": "MigratableMockV1.initialize",
      "offset": [
        1401,
        1490
      ],
      "op": "SWAP1",
      "path": "92"
    },
    "234": {
      "fn": "MigratableMockV1.initialize",
      "offset": [
        1401,
        1490
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "92"
    },
    "235": {
      "fn": "MigratableMockV1.initialize",
      "offset": [
        1401,
        1490
      ],
      "op": "JUMPDEST",
      "path": "92"
    },
    "236": {
      "offset": [
        1501,
        1520
      ],
      "op": "PUSH1",
      "path": "92",
      "value": "0x0"
    },
    "238": {
      "offset": [
        1524,
        1537
      ],
      "op": "SLOAD",
      "path": "92"
    },
    "239": {
      "fn": "MigratableMockV1.initialize",
      "offset": [
        1524,
        1537
      ],
      "op": "PUSH2",
      "path": "92",
      "value": "0x100"
    },
    "242": {
      "fn": "MigratableMockV1.initialize",
      "offset": [
        1524,
        1537
      ],
      "op": "SWAP1",
      "path": "92"
    },
    "243": {
      "fn": "MigratableMockV1.initialize",
      "offset": [
        1524,
        1537
      ],
      "op": "DIV",
      "path": "92"
    },
    "244": {
      "fn": "MigratableMockV1.initialize",
      "offset": [
        1524,
        1537
      ],
      "op": "PUSH1",
      "path": "92",
      "value": "0xFF"
    },
    "246": {
      "fn": "MigratableMockV1.initialize",
      "offset": [
        1524,
        1537
      ],
      "op": "AND",
      "path": "92"
    },
    "247": {
      "offset": [
        1523,
        1537
      ],
      "op": "ISZERO",
      "path": "92"
    },
    "248": {
      "offset": [
        1547,
        1645
      ],
      "op": "DUP1",
      "path": "92"
    },
    "249": {
      "fn": "MigratableMockV1.initialize",
      "offset": [
        1547,
        1645
      ],
      "op": "ISZERO",
      "path": "92"
    },
    "250": {
      "fn": "MigratableMockV1.initialize",
      "offset": [
        1547,
        1645
      ],
      "op": "PUSH2",
      "path": "92",
      "value": "0x10D"
    },
    "253": {
      "fn": "MigratableMockV1.initialize",
      "offset": [
        1547,
        1645
      ],
      "op": "JUMPI",
      "path": "92"
    },
    "254": {
      "offset": [
        1581,
        1594
      ],
      "op": "PUSH1",
      "path": "92",
      "value": "0x0"
    },
    "256": {
      "offset": [
        1581,
        1601
      ],
      "op": "DUP1",
      "path": "92"
    },
    "257": {
      "fn": "MigratableMockV1.initialize",
      "offset": [
        1581,
        1601
      ],
      "op": "SLOAD",
      "path": "92"
    },
    "258": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "261": {
      "op": "NOT"
    },
    "262": {
      "offset": [
        1615,
        1634
      ],
      "op": "AND",
      "path": "92"
    },
    "263": {
      "fn": "MigratableMockV1.initialize",
      "offset": [
        1615,
        1634
      ],
      "op": "PUSH2",
      "path": "92",
      "value": "0x101"
    },
    "266": {
      "fn": "MigratableMockV1.initialize",
      "offset": [
        1615,
        1634
      ],
      "op": "OR",
      "path": "92"
    },
    "267": {
      "fn": "MigratableMockV1.initialize",
      "offset": [
        1615,
        1634
      ],
      "op": "SWAP1",
      "path": "92"
    },
    "268": {
      "fn": "MigratableMockV1.initialize",
      "offset": [
        1615,
        1634
      ],
      "op": "SSTORE",
      "path": "92"
    },
    "269": {
      "offset": [
        1547,
        1645
      ],
      "op": "JUMPDEST",
      "path": "92"
    },
    "270": {
      "fn": "MigratableMockV1.initialize",
      "offset": [
        368,
        369
      ],
      "op": "PUSH1",
      "path": "79",
      "statement": 0,
      "value": "0x1"
    },
    "272": {
      "fn": "MigratableMockV1.initialize",
      "offset": [
        368,
        377
      ],
      "op": "DUP3",
      "path": "79"
    },
    "273": {
      "fn": "MigratableMockV1.initialize",
      "offset": [
        368,
        377
      ],
      "op": "SWAP1",
      "path": "79"
    },
    "274": {
      "fn": "MigratableMockV1.initialize",
      "offset": [
        368,
        377
      ],
      "op": "SSTORE",
      "path": "79"
    },
    "275": {
      "offset": [
        1667,
        1733
      ],
      "op": "DUP1",
      "path": "92"
    },
    "276": {
      "fn": "MigratableMockV1.initialize",
      "offset": [
        1667,
        1733
      ],
      "op": "ISZERO",
      "path": "92"
    },
    "277": {
      "fn": "MigratableMockV1.initialize",
      "offset": [
        1667,
        1733
      ],
      "op": "PUSH2",
      "path": "92",
      "value": "0x124"
    },
    "280": {
      "fn": "MigratableMockV1.initialize",
      "offset": [
        1667,
        1733
      ],
      "op": "JUMPI",
      "path": "92"
    },
    "281": {
      "offset": [
        1717,
        1722
      ],
      "op": "PUSH1",
      "path": "92",
      "value": "0x0"
    },
    "283": {
      "offset": [
        1701,
        1722
      ],
      "op": "DUP1",
      "path": "92"
    },
    "284": {
      "fn": "MigratableMockV1.initialize",
      "offset": [
        1701,
        1722
      ],
      "op": "SLOAD",
      "path": "92"
    },
    "285": {
      "op": "PUSH2",
      "value": "0xFF00"
    },
    "288": {
      "op": "NOT"
    },
    "289": {
      "offset": [
        1701,
        1722
      ],
      "op": "AND",
      "path": "92"
    },
    "290": {
      "fn": "MigratableMockV1.initialize",
      "offset": [
        1701,
        1722
      ],
      "op": "SWAP1",
      "path": "92"
    },
    "291": {
      "fn": "MigratableMockV1.initialize",
      "offset": [
        1701,
        1722
      ],
      "op": "SSTORE",
      "path": "92"
    },
    "292": {
      "offset": [
        1667,
        1733
      ],
      "op": "JUMPDEST",
      "path": "92"
    },
    "293": {
      "offset": [
        1391,
        1739
      ],
      "op": "POP",
      "path": "92"
    },
    "294": {
      "fn": "MigratableMockV1.initialize",
      "offset": [
        296,
        384
      ],
      "op": "POP",
      "path": "79"
    },
    "295": {
      "fn": "MigratableMockV1.initialize",
      "jump": "o",
      "offset": [
        296,
        384
      ],
      "op": "JUMP",
      "path": "79"
    },
    "296": {
      "op": "JUMPDEST"
    },
    "297": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "299": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "301": {
      "op": "DUP3"
    },
    "302": {
      "op": "DUP5"
    },
    "303": {
      "op": "SUB"
    },
    "304": {
      "op": "SLT"
    },
    "305": {
      "op": "ISZERO"
    },
    "306": {
      "op": "PUSH2",
      "value": "0x13A"
    },
    "309": {
      "op": "JUMPI"
    },
    "310": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "312": {
      "op": "DUP1"
    },
    "313": {
      "op": "REVERT"
    },
    "314": {
      "op": "JUMPDEST"
    },
    "315": {
      "op": "POP"
    },
    "316": {
      "op": "CALLDATALOAD"
    },
    "317": {
      "op": "SWAP2"
    },
    "318": {
      "op": "SWAP1"
    },
    "319": {
      "op": "POP"
    },
    "320": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "cddf6f8075a4690819e13422616a1f61eeb64b20",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"../proxy/utils/Initializable.sol\";\n\n/**\n * @title MigratableMockV1\n * @dev This contract is a mock to test initializable functionality through migrations\n */\ncontract MigratableMockV1 is Initializable {\n    uint256 public x;\n\n    function initialize(uint256 value) public payable initializer {\n        x = value;\n    }\n}\n\n/**\n * @title MigratableMockV2\n * @dev This contract is a mock to test migratable functionality with params\n */\ncontract MigratableMockV2 is MigratableMockV1 {\n    bool internal _migratedV2;\n    uint256 public y;\n\n    function migrate(uint256 value, uint256 anotherValue) public payable {\n        require(!_migratedV2);\n        x = value;\n        y = anotherValue;\n        _migratedV2 = true;\n    }\n}\n\n/**\n * @title MigratableMockV3\n * @dev This contract is a mock to test migratable functionality without params\n */\ncontract MigratableMockV3 is MigratableMockV2 {\n    bool internal _migratedV3;\n\n    function migrate() public payable {\n        require(!_migratedV3);\n        uint256 oldX = x;\n        x = y;\n        y = oldX;\n        _migratedV3 = true;\n    }\n}\n",
  "sourceMap": "224:162:79:-:0;;;;;;;;;;;;;;;;;;;",
  "sourcePath": "contracts/openzeppelin/contracts/mocks/SingleInheritanceInitializableMocks.sol",
  "type": "contract"
}