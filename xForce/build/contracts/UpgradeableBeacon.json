{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "implementation_",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "implementation",
          "type": "address"
        }
      ],
      "name": "Upgraded",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "implementation",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newImplementation",
          "type": "address"
        }
      ],
      "name": "upgradeTo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "140": "contracts/openzeppelin/contracts/utils/Address.sol",
    "142": "contracts/openzeppelin/contracts/utils/Context.sol",
    "2": "contracts/openzeppelin/contracts/access/Ownable.sol",
    "88": "contracts/openzeppelin/contracts/proxy/beacon/IBeacon.sol",
    "89": "contracts/openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol"
  },
  "ast": {
    "absolutePath": "contracts/openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol",
    "exportedSymbols": {
      "Address": [
        17462
      ],
      "Context": [
        17568
      ],
      "IBeacon": [
        8691
      ],
      "Ownable": [
        661
      ],
      "UpgradeableBeacon": [
        8766
      ]
    },
    "id": 8767,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 8693,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:89"
      },
      {
        "absolutePath": "contracts/openzeppelin/contracts/proxy/beacon/IBeacon.sol",
        "file": "./IBeacon.sol",
        "id": 8694,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 8767,
        "sourceUnit": 8692,
        "src": "58:23:89",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/openzeppelin/contracts/access/Ownable.sol",
        "file": "../../access/Ownable.sol",
        "id": 8695,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 8767,
        "sourceUnit": 662,
        "src": "82:34:89",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/openzeppelin/contracts/utils/Address.sol",
        "file": "../../utils/Address.sol",
        "id": 8696,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 8767,
        "sourceUnit": 17463,
        "src": "117:33:89",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 8698,
              "name": "IBeacon",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 8691,
              "src": "503:7:89"
            },
            "id": 8699,
            "nodeType": "InheritanceSpecifier",
            "src": "503:7:89"
          },
          {
            "baseName": {
              "id": 8700,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 661,
              "src": "512:7:89"
            },
            "id": 8701,
            "nodeType": "InheritanceSpecifier",
            "src": "512:7:89"
          }
        ],
        "canonicalName": "UpgradeableBeacon",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 8697,
          "nodeType": "StructuredDocumentation",
          "src": "152:320:89",
          "text": " @dev This contract is used in conjunction with one or more instances of {BeaconProxy} to determine their\n implementation contract, which is where they will delegate all function calls.\n An owner is able to change the implementation the beacon points to, thus upgrading the proxies that use this beacon."
        },
        "fullyImplemented": true,
        "id": 8766,
        "linearizedBaseContracts": [
          8766,
          661,
          17568,
          8691
        ],
        "name": "UpgradeableBeacon",
        "nameLocation": "482:17:89",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 8703,
            "mutability": "mutable",
            "name": "_implementation",
            "nameLocation": "542:15:89",
            "nodeType": "VariableDeclaration",
            "scope": 8766,
            "src": "526:31:89",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 8702,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "526:7:89",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "private"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 8704,
              "nodeType": "StructuredDocumentation",
              "src": "564:90:89",
              "text": " @dev Emitted when the implementation returned by the beacon is changed."
            },
            "id": 8708,
            "name": "Upgraded",
            "nameLocation": "665:8:89",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 8707,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8706,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "implementation",
                  "nameLocation": "690:14:89",
                  "nodeType": "VariableDeclaration",
                  "scope": 8708,
                  "src": "674:30:89",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8705,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "674:7:89",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "673:32:89"
            },
            "src": "659:47:89"
          },
          {
            "body": {
              "id": 8718,
              "nodeType": "Block",
              "src": "898:52:89",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 8715,
                        "name": "implementation_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8711,
                        "src": "927:15:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 8714,
                      "name": "_setImplementation",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8765,
                      "src": "908:18:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 8716,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "908:35:89",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8717,
                  "nodeType": "ExpressionStatement",
                  "src": "908:35:89"
                }
              ]
            },
            "documentation": {
              "id": 8709,
              "nodeType": "StructuredDocumentation",
              "src": "712:144:89",
              "text": " @dev Sets the address of the initial implementation, and the deployer account as the owner who can upgrade the\n beacon."
            },
            "id": 8719,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8712,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8711,
                  "mutability": "mutable",
                  "name": "implementation_",
                  "nameLocation": "881:15:89",
                  "nodeType": "VariableDeclaration",
                  "scope": 8719,
                  "src": "873:23:89",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8710,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "873:7:89",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "872:25:89"
            },
            "returnParameters": {
              "id": 8713,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "898:0:89"
            },
            "scope": 8766,
            "src": "861:89:89",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              8690
            ],
            "body": {
              "id": 8728,
              "nodeType": "Block",
              "src": "1101:39:89",
              "statements": [
                {
                  "expression": {
                    "id": 8726,
                    "name": "_implementation",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 8703,
                    "src": "1118:15:89",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 8725,
                  "id": 8727,
                  "nodeType": "Return",
                  "src": "1111:22:89"
                }
              ]
            },
            "documentation": {
              "id": 8720,
              "nodeType": "StructuredDocumentation",
              "src": "956:67:89",
              "text": " @dev Returns the current implementation address."
            },
            "functionSelector": "5c60da1b",
            "id": 8729,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "implementation",
            "nameLocation": "1037:14:89",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 8722,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1074:8:89"
            },
            "parameters": {
              "id": 8721,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1051:2:89"
            },
            "returnParameters": {
              "id": 8725,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8724,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 8729,
                  "src": "1092:7:89",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8723,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1092:7:89",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1091:9:89"
            },
            "scope": 8766,
            "src": "1028:112:89",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 8745,
              "nodeType": "Block",
              "src": "1470:96:89",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 8738,
                        "name": "newImplementation",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8732,
                        "src": "1499:17:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 8737,
                      "name": "_setImplementation",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8765,
                      "src": "1480:18:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 8739,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1480:37:89",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8740,
                  "nodeType": "ExpressionStatement",
                  "src": "1480:37:89"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 8742,
                        "name": "newImplementation",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8732,
                        "src": "1541:17:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 8741,
                      "name": "Upgraded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8708,
                      "src": "1532:8:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 8743,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1532:27:89",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8744,
                  "nodeType": "EmitStatement",
                  "src": "1527:32:89"
                }
              ]
            },
            "documentation": {
              "id": 8730,
              "nodeType": "StructuredDocumentation",
              "src": "1146:248:89",
              "text": " @dev Upgrades the beacon to a new implementation.\n Emits an {Upgraded} event.\n Requirements:\n - msg.sender must be the owner of the contract.\n - `newImplementation` must be a contract."
            },
            "functionSelector": "3659cfe6",
            "id": 8746,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 8735,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 8734,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 604,
                  "src": "1460:9:89"
                },
                "nodeType": "ModifierInvocation",
                "src": "1460:9:89"
              }
            ],
            "name": "upgradeTo",
            "nameLocation": "1408:9:89",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8733,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8732,
                  "mutability": "mutable",
                  "name": "newImplementation",
                  "nameLocation": "1426:17:89",
                  "nodeType": "VariableDeclaration",
                  "scope": 8746,
                  "src": "1418:25:89",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8731,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1418:7:89",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1417:27:89"
            },
            "returnParameters": {
              "id": 8736,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1470:0:89"
            },
            "scope": 8766,
            "src": "1399:167:89",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 8764,
              "nodeType": "Block",
              "src": "1804:163:89",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 8755,
                            "name": "newImplementation",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8749,
                            "src": "1841:17:89",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 8753,
                            "name": "Address",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 17462,
                            "src": "1822:7:89",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_Address_$17462_$",
                              "typeString": "type(library Address)"
                            }
                          },
                          "id": 8754,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isContract",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 17186,
                          "src": "1822:18:89",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view returns (bool)"
                          }
                        },
                        "id": 8756,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1822:37:89",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5570677261646561626c65426561636f6e3a20696d706c656d656e746174696f6e206973206e6f74206120636f6e7472616374",
                        "id": 8757,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1861:53:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5ccca6b0666a32006e874c0f8fc30910124098b6e8e91ea2ea1baa45ce41f1e6",
                          "typeString": "literal_string \"UpgradeableBeacon: implementation is not a contract\""
                        },
                        "value": "UpgradeableBeacon: implementation is not a contract"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5ccca6b0666a32006e874c0f8fc30910124098b6e8e91ea2ea1baa45ce41f1e6",
                          "typeString": "literal_string \"UpgradeableBeacon: implementation is not a contract\""
                        }
                      ],
                      "id": 8752,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1814:7:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8758,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1814:101:89",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8759,
                  "nodeType": "ExpressionStatement",
                  "src": "1814:101:89"
                },
                {
                  "expression": {
                    "id": 8762,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 8760,
                      "name": "_implementation",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8703,
                      "src": "1925:15:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 8761,
                      "name": "newImplementation",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8749,
                      "src": "1943:17:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1925:35:89",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 8763,
                  "nodeType": "ExpressionStatement",
                  "src": "1925:35:89"
                }
              ]
            },
            "documentation": {
              "id": 8747,
              "nodeType": "StructuredDocumentation",
              "src": "1572:164:89",
              "text": " @dev Sets the implementation contract address for this beacon\n Requirements:\n - `newImplementation` must be a contract."
            },
            "id": 8765,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_setImplementation",
            "nameLocation": "1750:18:89",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8750,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8749,
                  "mutability": "mutable",
                  "name": "newImplementation",
                  "nameLocation": "1777:17:89",
                  "nodeType": "VariableDeclaration",
                  "scope": 8765,
                  "src": "1769:25:89",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8748,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1769:7:89",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1768:27:89"
            },
            "returnParameters": {
              "id": 8751,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1804:0:89"
            },
            "scope": 8766,
            "src": "1741:226:89",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          }
        ],
        "scope": 8767,
        "src": "473:1496:89",
        "usedErrors": []
      }
    ],
    "src": "33:1937:89"
  },
  "bytecode": "608060405234801561001057600080fd5b5060405161050e38038061050e83398101604081905261002f91610148565b61003833610047565b61004181610097565b50610178565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6100aa8161014260201b61020a1760201c565b6101205760405162461bcd60e51b815260206004820152603360248201527f5570677261646561626c65426561636f6e3a20696d706c656d656e746174696f60448201527f6e206973206e6f74206120636f6e747261637400000000000000000000000000606482015260840160405180910390fd5b600180546001600160a01b0319166001600160a01b0392909216919091179055565b3b151590565b60006020828403121561015a57600080fd5b81516001600160a01b038116811461017157600080fd5b9392505050565b610387806101876000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80633659cfe61461005c5780635c60da1b14610071578063715018a61461009a5780638da5cb5b146100a2578063f2fde38b146100b3575b600080fd5b61006f61006a3660046102ec565b6100c6565b005b6001546001600160a01b03165b6040516001600160a01b03909116815260200160405180910390f35b61006f610139565b6000546001600160a01b031661007e565b61006f6100c13660046102ec565b61016f565b6000546001600160a01b031633146100f95760405162461bcd60e51b81526004016100f09061031c565b60405180910390fd5b61010281610210565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b6000546001600160a01b031633146101635760405162461bcd60e51b81526004016100f09061031c565b61016d600061029c565b565b6000546001600160a01b031633146101995760405162461bcd60e51b81526004016100f09061031c565b6001600160a01b0381166101fe5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016100f0565b6102078161029c565b50565b3b151590565b803b61027a5760405162461bcd60e51b815260206004820152603360248201527f5570677261646561626c65426561636f6e3a20696d706c656d656e746174696f6044820152721b881a5cc81b9bdd08184818dbdb9d1c9858dd606a1b60648201526084016100f0565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156102fe57600080fd5b81356001600160a01b038116811461031557600080fd5b9392505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260408201526060019056fea2646970667358221220a8e2c67488ed5089e77f8765abdbd0a4f08ca80328c50c9973cd43f40a45e82764736f6c634300080c0033",
  "bytecodeSha1": "b24cec76637e5846a5e0e8e17df10c7f3b4b4053",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.12+commit.f00d7308"
  },
  "contractName": "UpgradeableBeacon",
  "coverageMap": {
    "branches": {
      "140": {},
      "142": {},
      "2": {
        "Ownable.transferOwnership": {
          "13": [
            1934,
            1956,
            true
          ]
        }
      },
      "88": {},
      "89": {}
    },
    "statements": {
      "140": {
        "Address.isContract": {
          "8": [
            1073,
            1088
          ]
        }
      },
      "142": {
        "Context._msgSender": {
          "2": [
            658,
            675
          ]
        }
      },
      "2": {
        "Ownable._setOwner": {
          "11": [
            2131,
            2148
          ],
          "12": [
            2158,
            2203
          ]
        },
        "Ownable.owner": {
          "1": [
            1038,
            1051
          ]
        },
        "Ownable.renounceOwnership": {
          "5": [
            1669,
            1690
          ]
        },
        "Ownable.transferOwnership": {
          "6": [
            1926,
            1999
          ],
          "7": [
            2009,
            2028
          ]
        }
      },
      "88": {},
      "89": {
        "UpgradeableBeacon._setImplementation": {
          "9": [
            1814,
            1915
          ],
          "10": [
            1925,
            1960
          ]
        },
        "UpgradeableBeacon.implementation": {
          "0": [
            1111,
            1133
          ]
        },
        "UpgradeableBeacon.upgradeTo": {
          "3": [
            1480,
            1517
          ],
          "4": [
            1527,
            1559
          ]
        }
      }
    }
  },
  "dependencies": [
    "Address",
    "Context",
    "IBeacon",
    "Ownable"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106100575760003560e01c80633659cfe61461005c5780635c60da1b14610071578063715018a61461009a5780638da5cb5b146100a2578063f2fde38b146100b3575b600080fd5b61006f61006a3660046102ec565b6100c6565b005b6001546001600160a01b03165b6040516001600160a01b03909116815260200160405180910390f35b61006f610139565b6000546001600160a01b031661007e565b61006f6100c13660046102ec565b61016f565b6000546001600160a01b031633146100f95760405162461bcd60e51b81526004016100f09061031c565b60405180910390fd5b61010281610210565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b6000546001600160a01b031633146101635760405162461bcd60e51b81526004016100f09061031c565b61016d600061029c565b565b6000546001600160a01b031633146101995760405162461bcd60e51b81526004016100f09061031c565b6001600160a01b0381166101fe5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016100f0565b6102078161029c565b50565b3b151590565b803b61027a5760405162461bcd60e51b815260206004820152603360248201527f5570677261646561626c65426561636f6e3a20696d706c656d656e746174696f6044820152721b881a5cc81b9bdd08184818dbdb9d1c9858dd606a1b60648201526084016100f0565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156102fe57600080fd5b81356001600160a01b038116811461031557600080fd5b9392505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260408201526060019056fea2646970667358221220a8e2c67488ed5089e77f8765abdbd0a4f08ca80328c50c9973cd43f40a45e82764736f6c634300080c0033",
  "deployedSourceMap": "473:1496:89:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1399:167;;;;;;:::i;:::-;;:::i;:::-;;1028:112;1118:15;;-1:-1:-1;;;;;1118:15:89;1028:112;;;-1:-1:-1;;;;;469:32:169;;;451:51;;439:2;424:18;1028:112:89;;;;;;;1605:92:2;;;:::i;973:85::-;1019:7;1045:6;-1:-1:-1;;;;;1045:6:2;973:85;;1846:189;;;;;;:::i;:::-;;:::i;1399:167:89:-;1019:7:2;1045:6;-1:-1:-1;;;;;1045:6:2;665:10:142;1185:23:2;1177:68;;;;-1:-1:-1;;;1177:68:2;;;;;;;:::i;:::-;;;;;;;;;1480:37:89::1;1499:17;1480:18;:37::i;:::-;1532:27;::::0;-1:-1:-1;;;;;1532:27:89;::::1;::::0;::::1;::::0;;;::::1;1399:167:::0;:::o;1605:92:2:-;1019:7;1045:6;-1:-1:-1;;;;;1045:6:2;665:10:142;1185:23:2;1177:68;;;;-1:-1:-1;;;1177:68:2;;;;;;;:::i;:::-;1669:21:::1;1687:1;1669:9;:21::i;:::-;1605:92::o:0;1846:189::-;1019:7;1045:6;-1:-1:-1;;;;;1045:6:2;665:10:142;1185:23:2;1177:68;;;;-1:-1:-1;;;1177:68:2;;;;;;;:::i;:::-;-1:-1:-1;;;;;1934:22:2;::::1;1926:73;;;::::0;-1:-1:-1;;;1926:73:2;;1076:2:169;1926:73:2::1;::::0;::::1;1058:21:169::0;1115:2;1095:18;;;1088:30;1154:34;1134:18;;;1127:62;-1:-1:-1;;;1205:18:169;;;1198:36;1251:19;;1926:73:2::1;874:402:169::0;1926:73:2::1;2009:19;2019:8;2009:9;:19::i;:::-;1846:189:::0;:::o;718:377:140:-;1034:20;1080:8;;;718:377::o;1741:226:89:-;1034:20:140;;1814:101:89;;;;-1:-1:-1;;;1814:101:89;;1483:2:169;1814:101:89;;;1465:21:169;1522:2;1502:18;;;1495:30;1561:34;1541:18;;;1534:62;-1:-1:-1;;;1612:18:169;;;1605:49;1671:19;;1814:101:89;1281:415:169;1814:101:89;1925:15;:35;;-1:-1:-1;;;;;;1925:35:89;-1:-1:-1;;;;;1925:35:89;;;;;;;;;;1741:226::o;2041:169:2:-;2096:16;2115:6;;-1:-1:-1;;;;;2131:17:2;;;-1:-1:-1;;;;;;2131:17:2;;;;;;2163:40;;2115:6;;;;;;;2163:40;;2096:16;2163:40;2086:124;2041:169;:::o;14:286:169:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;168:23;;-1:-1:-1;;;;;220:31:169;;210:42;;200:70;;266:1;263;256:12;200:70;289:5;14:286;-1:-1:-1;;;14:286:169:o;513:356::-;715:2;697:21;;;734:18;;;727:30;793:34;788:2;773:18;;766:62;860:2;845:18;;513:356::o",
  "language": "Solidity",
  "natspec": {
    "details": "This contract is used in conjunction with one or more instances of {BeaconProxy} to determine their implementation contract, which is where they will delegate all function calls. An owner is able to change the implementation the beacon points to, thus upgrading the proxies that use this beacon.",
    "events": {
      "Upgraded(address)": {
        "details": "Emitted when the implementation returned by the beacon is changed."
      }
    },
    "kind": "dev",
    "methods": {
      "constructor": {
        "details": "Sets the address of the initial implementation, and the deployer account as the owner who can upgrade the beacon."
      },
      "implementation()": {
        "details": "Returns the current implementation address."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "upgradeTo(address)": {
        "details": "Upgrades the beacon to a new implementation. Emits an {Upgraded} event. Requirements: - msg.sender must be the owner of the contract. - `newImplementation` must be a contract."
      }
    },
    "version": 1
  },
  "offset": [
    473,
    1969
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x57 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3659CFE6 EQ PUSH2 0x5C JUMPI DUP1 PUSH4 0x5C60DA1B EQ PUSH2 0x71 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x9A JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xA2 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xB3 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6F PUSH2 0x6A CALLDATASIZE PUSH1 0x4 PUSH2 0x2EC JUMP JUMPDEST PUSH2 0xC6 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6F PUSH2 0x139 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x7E JUMP JUMPDEST PUSH2 0x6F PUSH2 0xC1 CALLDATASIZE PUSH1 0x4 PUSH2 0x2EC JUMP JUMPDEST PUSH2 0x16F JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xF9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF0 SWAP1 PUSH2 0x31C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x102 DUP2 PUSH2 0x210 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x163 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF0 SWAP1 PUSH2 0x31C JUMP JUMPDEST PUSH2 0x16D PUSH1 0x0 PUSH2 0x29C JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x199 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF0 SWAP1 PUSH2 0x31C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1FE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xF0 JUMP JUMPDEST PUSH2 0x207 DUP2 PUSH2 0x29C JUMP JUMPDEST POP JUMP JUMPDEST EXTCODESIZE ISZERO ISZERO SWAP1 JUMP JUMPDEST DUP1 EXTCODESIZE PUSH2 0x27A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x33 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5570677261646561626C65426561636F6E3A20696D706C656D656E746174696F PUSH1 0x44 DUP3 ADD MSTORE PUSH19 0x1B881A5CC81B9BDD08184818DBDB9D1C9858DD PUSH1 0x6A SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xF0 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x315 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA8 0xE2 0xC6 PUSH21 0x88ED5089E77F8765ABDBD0A4F08CA80328C50C9973 0xCD NUMBER DELEGATECALL EXP GASLIMIT 0xE8 0x27 PUSH5 0x736F6C6343 STOP ADDMOD 0xC STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        473,
        1969
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        473,
        1969
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        473,
        1969
      ],
      "op": "MSTORE",
      "path": "89"
    },
    "5": {
      "fn": null,
      "offset": [
        473,
        1969
      ],
      "op": "CALLVALUE",
      "path": "89"
    },
    "6": {
      "fn": null,
      "offset": [
        473,
        1969
      ],
      "op": "DUP1",
      "path": "89"
    },
    "7": {
      "fn": null,
      "offset": [
        473,
        1969
      ],
      "op": "ISZERO",
      "path": "89"
    },
    "8": {
      "fn": null,
      "offset": [
        473,
        1969
      ],
      "op": "PUSH2",
      "path": "89",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        473,
        1969
      ],
      "op": "JUMPI",
      "path": "89"
    },
    "12": {
      "fn": null,
      "offset": [
        473,
        1969
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        473,
        1969
      ],
      "op": "DUP1",
      "path": "89"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        473,
        1969
      ],
      "op": "REVERT",
      "path": "89"
    },
    "16": {
      "fn": null,
      "offset": [
        473,
        1969
      ],
      "op": "JUMPDEST",
      "path": "89"
    },
    "17": {
      "fn": null,
      "offset": [
        473,
        1969
      ],
      "op": "POP",
      "path": "89"
    },
    "18": {
      "fn": null,
      "offset": [
        473,
        1969
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        473,
        1969
      ],
      "op": "CALLDATASIZE",
      "path": "89"
    },
    "21": {
      "fn": null,
      "offset": [
        473,
        1969
      ],
      "op": "LT",
      "path": "89"
    },
    "22": {
      "fn": null,
      "offset": [
        473,
        1969
      ],
      "op": "PUSH2",
      "path": "89",
      "value": "0x57"
    },
    "25": {
      "fn": null,
      "offset": [
        473,
        1969
      ],
      "op": "JUMPI",
      "path": "89"
    },
    "26": {
      "fn": null,
      "offset": [
        473,
        1969
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        473,
        1969
      ],
      "op": "CALLDATALOAD",
      "path": "89"
    },
    "29": {
      "fn": null,
      "offset": [
        473,
        1969
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        473,
        1969
      ],
      "op": "SHR",
      "path": "89"
    },
    "32": {
      "fn": null,
      "offset": [
        473,
        1969
      ],
      "op": "DUP1",
      "path": "89"
    },
    "33": {
      "fn": null,
      "offset": [
        473,
        1969
      ],
      "op": "PUSH4",
      "path": "89",
      "value": "0x3659CFE6"
    },
    "38": {
      "fn": null,
      "offset": [
        473,
        1969
      ],
      "op": "EQ",
      "path": "89"
    },
    "39": {
      "fn": null,
      "offset": [
        473,
        1969
      ],
      "op": "PUSH2",
      "path": "89",
      "value": "0x5C"
    },
    "42": {
      "fn": null,
      "offset": [
        473,
        1969
      ],
      "op": "JUMPI",
      "path": "89"
    },
    "43": {
      "fn": null,
      "offset": [
        473,
        1969
      ],
      "op": "DUP1",
      "path": "89"
    },
    "44": {
      "fn": null,
      "offset": [
        473,
        1969
      ],
      "op": "PUSH4",
      "path": "89",
      "value": "0x5C60DA1B"
    },
    "49": {
      "fn": null,
      "offset": [
        473,
        1969
      ],
      "op": "EQ",
      "path": "89"
    },
    "50": {
      "fn": null,
      "offset": [
        473,
        1969
      ],
      "op": "PUSH2",
      "path": "89",
      "value": "0x71"
    },
    "53": {
      "fn": null,
      "offset": [
        473,
        1969
      ],
      "op": "JUMPI",
      "path": "89"
    },
    "54": {
      "fn": null,
      "offset": [
        473,
        1969
      ],
      "op": "DUP1",
      "path": "89"
    },
    "55": {
      "fn": null,
      "offset": [
        473,
        1969
      ],
      "op": "PUSH4",
      "path": "89",
      "value": "0x715018A6"
    },
    "60": {
      "fn": null,
      "offset": [
        473,
        1969
      ],
      "op": "EQ",
      "path": "89"
    },
    "61": {
      "fn": null,
      "offset": [
        473,
        1969
      ],
      "op": "PUSH2",
      "path": "89",
      "value": "0x9A"
    },
    "64": {
      "fn": null,
      "offset": [
        473,
        1969
      ],
      "op": "JUMPI",
      "path": "89"
    },
    "65": {
      "fn": null,
      "offset": [
        473,
        1969
      ],
      "op": "DUP1",
      "path": "89"
    },
    "66": {
      "fn": null,
      "offset": [
        473,
        1969
      ],
      "op": "PUSH4",
      "path": "89",
      "value": "0x8DA5CB5B"
    },
    "71": {
      "fn": null,
      "offset": [
        473,
        1969
      ],
      "op": "EQ",
      "path": "89"
    },
    "72": {
      "fn": null,
      "offset": [
        473,
        1969
      ],
      "op": "PUSH2",
      "path": "89",
      "value": "0xA2"
    },
    "75": {
      "fn": null,
      "offset": [
        473,
        1969
      ],
      "op": "JUMPI",
      "path": "89"
    },
    "76": {
      "fn": null,
      "offset": [
        473,
        1969
      ],
      "op": "DUP1",
      "path": "89"
    },
    "77": {
      "fn": null,
      "offset": [
        473,
        1969
      ],
      "op": "PUSH4",
      "path": "89",
      "value": "0xF2FDE38B"
    },
    "82": {
      "fn": null,
      "offset": [
        473,
        1969
      ],
      "op": "EQ",
      "path": "89"
    },
    "83": {
      "fn": null,
      "offset": [
        473,
        1969
      ],
      "op": "PUSH2",
      "path": "89",
      "value": "0xB3"
    },
    "86": {
      "fn": null,
      "offset": [
        473,
        1969
      ],
      "op": "JUMPI",
      "path": "89"
    },
    "87": {
      "fn": null,
      "offset": [
        473,
        1969
      ],
      "op": "JUMPDEST",
      "path": "89"
    },
    "88": {
      "fn": null,
      "offset": [
        473,
        1969
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x0"
    },
    "90": {
      "fn": null,
      "offset": [
        473,
        1969
      ],
      "op": "DUP1",
      "path": "89"
    },
    "91": {
      "first_revert": true,
      "fn": null,
      "offset": [
        473,
        1969
      ],
      "op": "REVERT",
      "path": "89"
    },
    "92": {
      "fn": "UpgradeableBeacon.upgradeTo",
      "offset": [
        1399,
        1566
      ],
      "op": "JUMPDEST",
      "path": "89"
    },
    "93": {
      "fn": "UpgradeableBeacon.upgradeTo",
      "offset": [
        1399,
        1566
      ],
      "op": "PUSH2",
      "path": "89",
      "value": "0x6F"
    },
    "96": {
      "fn": "UpgradeableBeacon.upgradeTo",
      "offset": [
        1399,
        1566
      ],
      "op": "PUSH2",
      "path": "89",
      "value": "0x6A"
    },
    "99": {
      "fn": "UpgradeableBeacon.upgradeTo",
      "offset": [
        1399,
        1566
      ],
      "op": "CALLDATASIZE",
      "path": "89"
    },
    "100": {
      "fn": "UpgradeableBeacon.upgradeTo",
      "offset": [
        1399,
        1566
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x4"
    },
    "102": {
      "fn": "UpgradeableBeacon.upgradeTo",
      "offset": [
        1399,
        1566
      ],
      "op": "PUSH2",
      "path": "89",
      "value": "0x2EC"
    },
    "105": {
      "fn": "UpgradeableBeacon.upgradeTo",
      "jump": "i",
      "offset": [
        1399,
        1566
      ],
      "op": "JUMP",
      "path": "89"
    },
    "106": {
      "fn": "UpgradeableBeacon.upgradeTo",
      "offset": [
        1399,
        1566
      ],
      "op": "JUMPDEST",
      "path": "89"
    },
    "107": {
      "fn": "UpgradeableBeacon.upgradeTo",
      "offset": [
        1399,
        1566
      ],
      "op": "PUSH2",
      "path": "89",
      "value": "0xC6"
    },
    "110": {
      "fn": "UpgradeableBeacon.upgradeTo",
      "jump": "i",
      "offset": [
        1399,
        1566
      ],
      "op": "JUMP",
      "path": "89"
    },
    "111": {
      "fn": "UpgradeableBeacon.upgradeTo",
      "offset": [
        1399,
        1566
      ],
      "op": "JUMPDEST",
      "path": "89"
    },
    "112": {
      "fn": "UpgradeableBeacon.upgradeTo",
      "offset": [
        1399,
        1566
      ],
      "op": "STOP",
      "path": "89"
    },
    "113": {
      "fn": "UpgradeableBeacon.implementation",
      "offset": [
        1028,
        1140
      ],
      "op": "JUMPDEST",
      "path": "89"
    },
    "114": {
      "fn": "UpgradeableBeacon.implementation",
      "offset": [
        1118,
        1133
      ],
      "op": "PUSH1",
      "path": "89",
      "statement": 0,
      "value": "0x1"
    },
    "116": {
      "fn": "UpgradeableBeacon.implementation",
      "offset": [
        1118,
        1133
      ],
      "op": "SLOAD",
      "path": "89"
    },
    "117": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "119": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "121": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "123": {
      "op": "SHL"
    },
    "124": {
      "op": "SUB"
    },
    "125": {
      "fn": "UpgradeableBeacon.implementation",
      "offset": [
        1118,
        1133
      ],
      "op": "AND",
      "path": "89"
    },
    "126": {
      "fn": "UpgradeableBeacon.implementation",
      "offset": [
        1028,
        1140
      ],
      "op": "JUMPDEST",
      "path": "89"
    },
    "127": {
      "fn": "UpgradeableBeacon.implementation",
      "offset": [
        1028,
        1140
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x40"
    },
    "129": {
      "fn": "UpgradeableBeacon.implementation",
      "offset": [
        1028,
        1140
      ],
      "op": "MLOAD",
      "path": "89"
    },
    "130": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "132": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "134": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "136": {
      "op": "SHL"
    },
    "137": {
      "op": "SUB"
    },
    "138": {
      "op": "SWAP1"
    },
    "139": {
      "op": "SWAP2"
    },
    "140": {
      "op": "AND"
    },
    "141": {
      "op": "DUP2"
    },
    "142": {
      "op": "MSTORE"
    },
    "143": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "145": {
      "op": "ADD"
    },
    "146": {
      "fn": "UpgradeableBeacon.implementation",
      "offset": [
        1028,
        1140
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x40"
    },
    "148": {
      "fn": "UpgradeableBeacon.implementation",
      "offset": [
        1028,
        1140
      ],
      "op": "MLOAD",
      "path": "89"
    },
    "149": {
      "fn": "UpgradeableBeacon.implementation",
      "offset": [
        1028,
        1140
      ],
      "op": "DUP1",
      "path": "89"
    },
    "150": {
      "fn": "UpgradeableBeacon.implementation",
      "offset": [
        1028,
        1140
      ],
      "op": "SWAP2",
      "path": "89"
    },
    "151": {
      "fn": "UpgradeableBeacon.implementation",
      "offset": [
        1028,
        1140
      ],
      "op": "SUB",
      "path": "89"
    },
    "152": {
      "fn": "UpgradeableBeacon.implementation",
      "offset": [
        1028,
        1140
      ],
      "op": "SWAP1",
      "path": "89"
    },
    "153": {
      "fn": "UpgradeableBeacon.implementation",
      "offset": [
        1028,
        1140
      ],
      "op": "RETURN",
      "path": "89"
    },
    "154": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1605,
        1697
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "155": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1605,
        1697
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x6F"
    },
    "158": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1605,
        1697
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x139"
    },
    "161": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1605,
        1697
      ],
      "op": "JUMP",
      "path": "2"
    },
    "162": {
      "fn": "Ownable.owner",
      "offset": [
        973,
        1058
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "163": {
      "fn": "Ownable.owner",
      "offset": [
        1019,
        1026
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "165": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "SLOAD",
      "path": "2",
      "statement": 1
    },
    "166": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "168": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "170": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "172": {
      "op": "SHL"
    },
    "173": {
      "op": "SUB"
    },
    "174": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "AND",
      "path": "2"
    },
    "175": {
      "fn": "Ownable.owner",
      "offset": [
        973,
        1058
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x7E"
    },
    "178": {
      "fn": "Ownable.owner",
      "offset": [
        973,
        1058
      ],
      "op": "JUMP",
      "path": "2"
    },
    "179": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "180": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x6F"
    },
    "183": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC1"
    },
    "186": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "187": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "189": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2EC"
    },
    "192": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1846,
        2035
      ],
      "op": "JUMP",
      "path": "2"
    },
    "193": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "194": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x16F"
    },
    "197": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1846,
        2035
      ],
      "op": "JUMP",
      "path": "2"
    },
    "198": {
      "fn": "UpgradeableBeacon.upgradeTo",
      "offset": [
        1399,
        1566
      ],
      "op": "JUMPDEST",
      "path": "89"
    },
    "199": {
      "fn": "Ownable.owner",
      "offset": [
        1019,
        1026
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "201": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "202": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "204": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "206": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "208": {
      "op": "SHL"
    },
    "209": {
      "op": "SUB"
    },
    "210": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "AND",
      "path": "2"
    },
    "211": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "142",
      "statement": 2
    },
    "212": {
      "offset": [
        1185,
        1208
      ],
      "op": "EQ",
      "path": "2"
    },
    "213": {
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xF9"
    },
    "216": {
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "217": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "219": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "220": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "224": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "226": {
      "op": "SHL"
    },
    "227": {
      "offset": [
        1177,
        1245
      ],
      "op": "DUP2",
      "path": "2"
    },
    "228": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "229": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "231": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "ADD",
      "path": "2"
    },
    "232": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xF0"
    },
    "235": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "236": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x31C"
    },
    "239": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMP",
      "path": "2"
    },
    "240": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "241": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "243": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "244": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "DUP1",
      "path": "2"
    },
    "245": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "246": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SUB",
      "path": "2"
    },
    "247": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "248": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "2"
    },
    "249": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "250": {
      "fn": "UpgradeableBeacon.upgradeTo",
      "offset": [
        1480,
        1517
      ],
      "op": "PUSH2",
      "path": "89",
      "statement": 3,
      "value": "0x102"
    },
    "253": {
      "fn": "UpgradeableBeacon.upgradeTo",
      "offset": [
        1499,
        1516
      ],
      "op": "DUP2",
      "path": "89"
    },
    "254": {
      "fn": "UpgradeableBeacon.upgradeTo",
      "offset": [
        1480,
        1498
      ],
      "op": "PUSH2",
      "path": "89",
      "value": "0x210"
    },
    "257": {
      "fn": "UpgradeableBeacon.upgradeTo",
      "jump": "i",
      "offset": [
        1480,
        1517
      ],
      "op": "JUMP",
      "path": "89"
    },
    "258": {
      "fn": "UpgradeableBeacon.upgradeTo",
      "offset": [
        1480,
        1517
      ],
      "op": "JUMPDEST",
      "path": "89"
    },
    "259": {
      "fn": "UpgradeableBeacon.upgradeTo",
      "offset": [
        1532,
        1559
      ],
      "op": "PUSH1",
      "path": "89",
      "statement": 4,
      "value": "0x40"
    },
    "261": {
      "fn": "UpgradeableBeacon.upgradeTo",
      "offset": [
        1532,
        1559
      ],
      "op": "MLOAD",
      "path": "89"
    },
    "262": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "264": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "266": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "268": {
      "op": "SHL"
    },
    "269": {
      "op": "SUB"
    },
    "270": {
      "fn": "UpgradeableBeacon.upgradeTo",
      "offset": [
        1532,
        1559
      ],
      "op": "DUP3",
      "path": "89"
    },
    "271": {
      "fn": "UpgradeableBeacon.upgradeTo",
      "offset": [
        1532,
        1559
      ],
      "op": "AND",
      "path": "89"
    },
    "272": {
      "fn": "UpgradeableBeacon.upgradeTo",
      "offset": [
        1532,
        1559
      ],
      "op": "SWAP1",
      "path": "89"
    },
    "273": {
      "fn": "UpgradeableBeacon.upgradeTo",
      "offset": [
        1532,
        1559
      ],
      "op": "PUSH32",
      "path": "89",
      "value": "0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B"
    },
    "306": {
      "fn": "UpgradeableBeacon.upgradeTo",
      "offset": [
        1532,
        1559
      ],
      "op": "SWAP1",
      "path": "89"
    },
    "307": {
      "fn": "UpgradeableBeacon.upgradeTo",
      "offset": [
        1532,
        1559
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x0"
    },
    "309": {
      "fn": "UpgradeableBeacon.upgradeTo",
      "offset": [
        1532,
        1559
      ],
      "op": "SWAP1",
      "path": "89"
    },
    "310": {
      "fn": "UpgradeableBeacon.upgradeTo",
      "offset": [
        1532,
        1559
      ],
      "op": "LOG2",
      "path": "89"
    },
    "311": {
      "fn": "UpgradeableBeacon.upgradeTo",
      "offset": [
        1399,
        1566
      ],
      "op": "POP",
      "path": "89"
    },
    "312": {
      "fn": "UpgradeableBeacon.upgradeTo",
      "jump": "o",
      "offset": [
        1399,
        1566
      ],
      "op": "JUMP",
      "path": "89"
    },
    "313": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1605,
        1697
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "314": {
      "fn": "Ownable.owner",
      "offset": [
        1019,
        1026
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "316": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "317": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "319": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "321": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "323": {
      "op": "SHL"
    },
    "324": {
      "op": "SUB"
    },
    "325": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "AND",
      "path": "2"
    },
    "326": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "142"
    },
    "327": {
      "offset": [
        1185,
        1208
      ],
      "op": "EQ",
      "path": "2"
    },
    "328": {
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x163"
    },
    "331": {
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "332": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "334": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "335": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "339": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "341": {
      "op": "SHL"
    },
    "342": {
      "offset": [
        1177,
        1245
      ],
      "op": "DUP2",
      "path": "2"
    },
    "343": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "344": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "346": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "ADD",
      "path": "2"
    },
    "347": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xF0"
    },
    "350": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "351": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x31C"
    },
    "354": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMP",
      "path": "2"
    },
    "355": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "356": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1669,
        1690
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 5,
      "value": "0x16D"
    },
    "359": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1687,
        1688
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "361": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1669,
        1678
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x29C"
    },
    "364": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1669,
        1690
      ],
      "op": "JUMP",
      "path": "2"
    },
    "365": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1669,
        1690
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "366": {
      "fn": "Ownable.renounceOwnership",
      "jump": "o",
      "offset": [
        1605,
        1697
      ],
      "op": "JUMP",
      "path": "2"
    },
    "367": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "368": {
      "fn": "Ownable.owner",
      "offset": [
        1019,
        1026
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "370": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "371": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "373": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "375": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "377": {
      "op": "SHL"
    },
    "378": {
      "op": "SUB"
    },
    "379": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "AND",
      "path": "2"
    },
    "380": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "142"
    },
    "381": {
      "offset": [
        1185,
        1208
      ],
      "op": "EQ",
      "path": "2"
    },
    "382": {
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x199"
    },
    "385": {
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "386": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "388": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "389": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "393": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "395": {
      "op": "SHL"
    },
    "396": {
      "offset": [
        1177,
        1245
      ],
      "op": "DUP2",
      "path": "2"
    },
    "397": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "398": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "400": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "ADD",
      "path": "2"
    },
    "401": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xF0"
    },
    "404": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "405": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x31C"
    },
    "408": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMP",
      "path": "2"
    },
    "409": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "410": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "412": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "414": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "416": {
      "op": "SHL"
    },
    "417": {
      "op": "SUB"
    },
    "418": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1934,
        1956
      ],
      "op": "DUP2",
      "path": "2",
      "statement": 6
    },
    "419": {
      "branch": 13,
      "fn": "Ownable.transferOwnership",
      "offset": [
        1934,
        1956
      ],
      "op": "AND",
      "path": "2"
    },
    "420": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1FE"
    },
    "423": {
      "branch": 13,
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "424": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "426": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "427": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "431": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "433": {
      "op": "SHL"
    },
    "434": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "DUP2",
      "path": "2"
    },
    "435": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "436": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "438": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "440": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "DUP3",
      "path": "2"
    },
    "441": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "ADD",
      "path": "2"
    },
    "442": {
      "op": "MSTORE"
    },
    "443": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "445": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "447": {
      "op": "DUP3"
    },
    "448": {
      "op": "ADD"
    },
    "449": {
      "op": "MSTORE"
    },
    "450": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
    },
    "483": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "485": {
      "op": "DUP3"
    },
    "486": {
      "op": "ADD"
    },
    "487": {
      "op": "MSTORE"
    },
    "488": {
      "op": "PUSH6",
      "value": "0x646472657373"
    },
    "495": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "497": {
      "op": "SHL"
    },
    "498": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "500": {
      "op": "DUP3"
    },
    "501": {
      "op": "ADD"
    },
    "502": {
      "op": "MSTORE"
    },
    "503": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "505": {
      "op": "ADD"
    },
    "506": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xF0"
    },
    "509": {
      "op": "JUMP"
    },
    "510": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "511": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2009,
        2028
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 7,
      "value": "0x207"
    },
    "514": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2019,
        2027
      ],
      "op": "DUP2",
      "path": "2"
    },
    "515": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2009,
        2018
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x29C"
    },
    "518": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        2009,
        2028
      ],
      "op": "JUMP",
      "path": "2"
    },
    "519": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2009,
        2028
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "520": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "POP",
      "path": "2"
    },
    "521": {
      "fn": "Ownable.transferOwnership",
      "jump": "o",
      "offset": [
        1846,
        2035
      ],
      "op": "JUMP",
      "path": "2"
    },
    "522": {
      "fn": "Address.isContract",
      "offset": [
        718,
        1095
      ],
      "op": "JUMPDEST",
      "path": "140"
    },
    "523": {
      "fn": "Address.isContract",
      "offset": [
        1034,
        1054
      ],
      "op": "EXTCODESIZE",
      "path": "140"
    },
    "524": {
      "fn": "Address.isContract",
      "offset": [
        1080,
        1088
      ],
      "op": "ISZERO",
      "path": "140",
      "statement": 8
    },
    "525": {
      "fn": "Address.isContract",
      "offset": [
        1080,
        1088
      ],
      "op": "ISZERO",
      "path": "140"
    },
    "526": {
      "fn": "Address.isContract",
      "offset": [
        1080,
        1088
      ],
      "op": "SWAP1",
      "path": "140"
    },
    "527": {
      "fn": "Address.isContract",
      "jump": "o",
      "offset": [
        718,
        1095
      ],
      "op": "JUMP",
      "path": "140"
    },
    "528": {
      "fn": "UpgradeableBeacon._setImplementation",
      "offset": [
        1741,
        1967
      ],
      "op": "JUMPDEST",
      "path": "89"
    },
    "529": {
      "fn": "Address.isContract",
      "offset": [
        1034,
        1054
      ],
      "op": "DUP1",
      "path": "140"
    },
    "530": {
      "fn": "Address.isContract",
      "offset": [
        1034,
        1054
      ],
      "op": "EXTCODESIZE",
      "path": "140"
    },
    "531": {
      "fn": "UpgradeableBeacon._setImplementation",
      "offset": [
        1814,
        1915
      ],
      "op": "PUSH2",
      "path": "89",
      "statement": 9,
      "value": "0x27A"
    },
    "534": {
      "fn": "UpgradeableBeacon._setImplementation",
      "offset": [
        1814,
        1915
      ],
      "op": "JUMPI",
      "path": "89"
    },
    "535": {
      "fn": "UpgradeableBeacon._setImplementation",
      "offset": [
        1814,
        1915
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x40"
    },
    "537": {
      "fn": "UpgradeableBeacon._setImplementation",
      "offset": [
        1814,
        1915
      ],
      "op": "MLOAD",
      "path": "89"
    },
    "538": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "542": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "544": {
      "op": "SHL"
    },
    "545": {
      "fn": "UpgradeableBeacon._setImplementation",
      "offset": [
        1814,
        1915
      ],
      "op": "DUP2",
      "path": "89"
    },
    "546": {
      "fn": "UpgradeableBeacon._setImplementation",
      "offset": [
        1814,
        1915
      ],
      "op": "MSTORE",
      "path": "89"
    },
    "547": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "549": {
      "fn": "UpgradeableBeacon._setImplementation",
      "offset": [
        1814,
        1915
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x4"
    },
    "551": {
      "fn": "UpgradeableBeacon._setImplementation",
      "offset": [
        1814,
        1915
      ],
      "op": "DUP3",
      "path": "89"
    },
    "552": {
      "fn": "UpgradeableBeacon._setImplementation",
      "offset": [
        1814,
        1915
      ],
      "op": "ADD",
      "path": "89"
    },
    "553": {
      "op": "MSTORE"
    },
    "554": {
      "op": "PUSH1",
      "value": "0x33"
    },
    "556": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "558": {
      "op": "DUP3"
    },
    "559": {
      "op": "ADD"
    },
    "560": {
      "op": "MSTORE"
    },
    "561": {
      "op": "PUSH32",
      "value": "0x5570677261646561626C65426561636F6E3A20696D706C656D656E746174696F"
    },
    "594": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "596": {
      "op": "DUP3"
    },
    "597": {
      "op": "ADD"
    },
    "598": {
      "op": "MSTORE"
    },
    "599": {
      "op": "PUSH19",
      "value": "0x1B881A5CC81B9BDD08184818DBDB9D1C9858DD"
    },
    "619": {
      "op": "PUSH1",
      "value": "0x6A"
    },
    "621": {
      "op": "SHL"
    },
    "622": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "624": {
      "op": "DUP3"
    },
    "625": {
      "op": "ADD"
    },
    "626": {
      "op": "MSTORE"
    },
    "627": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "629": {
      "op": "ADD"
    },
    "630": {
      "fn": "UpgradeableBeacon._setImplementation",
      "offset": [
        1814,
        1915
      ],
      "op": "PUSH2",
      "path": "89",
      "value": "0xF0"
    },
    "633": {
      "op": "JUMP"
    },
    "634": {
      "fn": "UpgradeableBeacon._setImplementation",
      "offset": [
        1814,
        1915
      ],
      "op": "JUMPDEST",
      "path": "89"
    },
    "635": {
      "fn": "UpgradeableBeacon._setImplementation",
      "offset": [
        1925,
        1940
      ],
      "op": "PUSH1",
      "path": "89",
      "statement": 10,
      "value": "0x1"
    },
    "637": {
      "fn": "UpgradeableBeacon._setImplementation",
      "offset": [
        1925,
        1960
      ],
      "op": "DUP1",
      "path": "89"
    },
    "638": {
      "fn": "UpgradeableBeacon._setImplementation",
      "offset": [
        1925,
        1960
      ],
      "op": "SLOAD",
      "path": "89"
    },
    "639": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "641": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "643": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "645": {
      "op": "SHL"
    },
    "646": {
      "op": "SUB"
    },
    "647": {
      "op": "NOT"
    },
    "648": {
      "fn": "UpgradeableBeacon._setImplementation",
      "offset": [
        1925,
        1960
      ],
      "op": "AND",
      "path": "89"
    },
    "649": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "651": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "653": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "655": {
      "op": "SHL"
    },
    "656": {
      "op": "SUB"
    },
    "657": {
      "fn": "UpgradeableBeacon._setImplementation",
      "offset": [
        1925,
        1960
      ],
      "op": "SWAP3",
      "path": "89"
    },
    "658": {
      "fn": "UpgradeableBeacon._setImplementation",
      "offset": [
        1925,
        1960
      ],
      "op": "SWAP1",
      "path": "89"
    },
    "659": {
      "fn": "UpgradeableBeacon._setImplementation",
      "offset": [
        1925,
        1960
      ],
      "op": "SWAP3",
      "path": "89"
    },
    "660": {
      "fn": "UpgradeableBeacon._setImplementation",
      "offset": [
        1925,
        1960
      ],
      "op": "AND",
      "path": "89"
    },
    "661": {
      "fn": "UpgradeableBeacon._setImplementation",
      "offset": [
        1925,
        1960
      ],
      "op": "SWAP2",
      "path": "89"
    },
    "662": {
      "fn": "UpgradeableBeacon._setImplementation",
      "offset": [
        1925,
        1960
      ],
      "op": "SWAP1",
      "path": "89"
    },
    "663": {
      "fn": "UpgradeableBeacon._setImplementation",
      "offset": [
        1925,
        1960
      ],
      "op": "SWAP2",
      "path": "89"
    },
    "664": {
      "fn": "UpgradeableBeacon._setImplementation",
      "offset": [
        1925,
        1960
      ],
      "op": "OR",
      "path": "89"
    },
    "665": {
      "fn": "UpgradeableBeacon._setImplementation",
      "offset": [
        1925,
        1960
      ],
      "op": "SWAP1",
      "path": "89"
    },
    "666": {
      "fn": "UpgradeableBeacon._setImplementation",
      "offset": [
        1925,
        1960
      ],
      "op": "SSTORE",
      "path": "89"
    },
    "667": {
      "fn": "UpgradeableBeacon._setImplementation",
      "jump": "o",
      "offset": [
        1741,
        1967
      ],
      "op": "JUMP",
      "path": "89"
    },
    "668": {
      "fn": "Ownable._setOwner",
      "offset": [
        2041,
        2210
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "669": {
      "fn": "Ownable._setOwner",
      "offset": [
        2096,
        2112
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "671": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "DUP1",
      "path": "2"
    },
    "672": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "673": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "675": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "677": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "679": {
      "op": "SHL"
    },
    "680": {
      "op": "SUB"
    },
    "681": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "DUP4",
      "path": "2",
      "statement": 11
    },
    "682": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "DUP2",
      "path": "2"
    },
    "683": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "AND",
      "path": "2"
    },
    "684": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "686": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "688": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "690": {
      "op": "SHL"
    },
    "691": {
      "op": "SUB"
    },
    "692": {
      "op": "NOT"
    },
    "693": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "DUP4",
      "path": "2"
    },
    "694": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "AND",
      "path": "2"
    },
    "695": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "DUP2",
      "path": "2"
    },
    "696": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "OR",
      "path": "2"
    },
    "697": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "DUP5",
      "path": "2"
    },
    "698": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "699": {
      "fn": "Ownable._setOwner",
      "offset": [
        2163,
        2203
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 12,
      "value": "0x40"
    },
    "701": {
      "fn": "Ownable._setOwner",
      "offset": [
        2163,
        2203
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "702": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "703": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "704": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "705": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "AND",
      "path": "2"
    },
    "706": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "707": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "DUP4",
      "path": "2"
    },
    "708": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "709": {
      "fn": "Ownable._setOwner",
      "offset": [
        2163,
        2203
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "742": {
      "fn": "Ownable._setOwner",
      "offset": [
        2163,
        2203
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "743": {
      "fn": "Ownable._setOwner",
      "offset": [
        2096,
        2112
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "744": {
      "fn": "Ownable._setOwner",
      "offset": [
        2163,
        2203
      ],
      "op": "LOG3",
      "path": "2"
    },
    "745": {
      "fn": "Ownable._setOwner",
      "offset": [
        2086,
        2210
      ],
      "op": "POP",
      "path": "2"
    },
    "746": {
      "fn": "Ownable._setOwner",
      "offset": [
        2041,
        2210
      ],
      "op": "POP",
      "path": "2"
    },
    "747": {
      "fn": "Ownable._setOwner",
      "jump": "o",
      "offset": [
        2041,
        2210
      ],
      "op": "JUMP",
      "path": "2"
    },
    "748": {
      "op": "JUMPDEST"
    },
    "749": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "751": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "753": {
      "op": "DUP3"
    },
    "754": {
      "op": "DUP5"
    },
    "755": {
      "op": "SUB"
    },
    "756": {
      "op": "SLT"
    },
    "757": {
      "op": "ISZERO"
    },
    "758": {
      "op": "PUSH2",
      "value": "0x2FE"
    },
    "761": {
      "op": "JUMPI"
    },
    "762": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "764": {
      "op": "DUP1"
    },
    "765": {
      "op": "REVERT"
    },
    "766": {
      "op": "JUMPDEST"
    },
    "767": {
      "op": "DUP2"
    },
    "768": {
      "op": "CALLDATALOAD"
    },
    "769": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "771": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "773": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "775": {
      "op": "SHL"
    },
    "776": {
      "op": "SUB"
    },
    "777": {
      "op": "DUP2"
    },
    "778": {
      "op": "AND"
    },
    "779": {
      "op": "DUP2"
    },
    "780": {
      "op": "EQ"
    },
    "781": {
      "op": "PUSH2",
      "value": "0x315"
    },
    "784": {
      "op": "JUMPI"
    },
    "785": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "787": {
      "op": "DUP1"
    },
    "788": {
      "op": "REVERT"
    },
    "789": {
      "op": "JUMPDEST"
    },
    "790": {
      "op": "SWAP4"
    },
    "791": {
      "op": "SWAP3"
    },
    "792": {
      "op": "POP"
    },
    "793": {
      "op": "POP"
    },
    "794": {
      "op": "POP"
    },
    "795": {
      "jump": "o",
      "op": "JUMP"
    },
    "796": {
      "op": "JUMPDEST"
    },
    "797": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "799": {
      "op": "DUP1"
    },
    "800": {
      "op": "DUP3"
    },
    "801": {
      "op": "MSTORE"
    },
    "802": {
      "op": "DUP2"
    },
    "803": {
      "op": "DUP2"
    },
    "804": {
      "op": "ADD"
    },
    "805": {
      "op": "MSTORE"
    },
    "806": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
    },
    "839": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "841": {
      "op": "DUP3"
    },
    "842": {
      "op": "ADD"
    },
    "843": {
      "op": "MSTORE"
    },
    "844": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "846": {
      "op": "ADD"
    },
    "847": {
      "op": "SWAP1"
    },
    "848": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "19ed1ec6b69fec234f8b13f7878c84c63b1c9f28",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"./IBeacon.sol\";\nimport \"../../access/Ownable.sol\";\nimport \"../../utils/Address.sol\";\n\n/**\n * @dev This contract is used in conjunction with one or more instances of {BeaconProxy} to determine their\n * implementation contract, which is where they will delegate all function calls.\n *\n * An owner is able to change the implementation the beacon points to, thus upgrading the proxies that use this beacon.\n */\ncontract UpgradeableBeacon is IBeacon, Ownable {\n    address private _implementation;\n\n    /**\n     * @dev Emitted when the implementation returned by the beacon is changed.\n     */\n    event Upgraded(address indexed implementation);\n\n    /**\n     * @dev Sets the address of the initial implementation, and the deployer account as the owner who can upgrade the\n     * beacon.\n     */\n    constructor(address implementation_) {\n        _setImplementation(implementation_);\n    }\n\n    /**\n     * @dev Returns the current implementation address.\n     */\n    function implementation() public view virtual override returns (address) {\n        return _implementation;\n    }\n\n    /**\n     * @dev Upgrades the beacon to a new implementation.\n     *\n     * Emits an {Upgraded} event.\n     *\n     * Requirements:\n     *\n     * - msg.sender must be the owner of the contract.\n     * - `newImplementation` must be a contract.\n     */\n    function upgradeTo(address newImplementation) public virtual onlyOwner {\n        _setImplementation(newImplementation);\n        emit Upgraded(newImplementation);\n    }\n\n    /**\n     * @dev Sets the implementation contract address for this beacon\n     *\n     * Requirements:\n     *\n     * - `newImplementation` must be a contract.\n     */\n    function _setImplementation(address newImplementation) private {\n        require(Address.isContract(newImplementation), \"UpgradeableBeacon: implementation is not a contract\");\n        _implementation = newImplementation;\n    }\n}\n",
  "sourceMap": "473:1496:89:-:0;;;861:89;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;867:23:2;665:10:142;867:9:2;:23::i;:::-;908:35:89;927:15;908:18;:35::i;:::-;861:89;473:1496;;2041:169:2;2096:16;2115:6;;-1:-1:-1;;;;;2131:17:2;;;-1:-1:-1;;;;;;2131:17:2;;;;;;2163:40;;2115:6;;;;;;;2163:40;;2096:16;2163:40;2086:124;2041:169;:::o;1741:226:89:-;1822:37;1841:17;1822:18;;;;;:37;;:::i;:::-;1814:101;;;;-1:-1:-1;;;1814:101:89;;511:2:169;1814:101:89;;;493:21:169;550:2;530:18;;;523:30;589:34;569:18;;;562:62;660:21;640:18;;;633:49;699:19;;1814:101:89;;;;;;;;1925:15;:35;;-1:-1:-1;;;;;;1925:35:89;-1:-1:-1;;;;;1925:35:89;;;;;;;;;;1741:226::o;718:377:140:-;1034:20;1080:8;;;718:377::o;14:290:169:-;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:169;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:169:o;309:415::-;473:1496:89;;;;;;",
  "sourcePath": "contracts/openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol",
  "type": "contract"
}