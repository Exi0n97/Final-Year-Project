{
  "abi": [],
  "allSourcePaths": {
    "140": "contracts/openzeppelin/contracts/utils/Address.sol",
    "148": "contracts/openzeppelin/contracts/utils/cryptography/ECDSA.sol",
    "150": "contracts/openzeppelin/contracts/utils/cryptography/SignatureChecker.sol",
    "5": "contracts/openzeppelin/contracts/interfaces/IERC1271.sol"
  },
  "ast": {
    "absolutePath": "contracts/openzeppelin/contracts/utils/cryptography/SignatureChecker.sol",
    "exportedSymbols": {
      "Address": [
        17462
      ],
      "ECDSA": [
        18254
      ],
      "IERC1271": [
        1738
      ],
      "SignatureChecker": [
        18384
      ]
    },
    "id": 18385,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 18327,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:150"
      },
      {
        "absolutePath": "contracts/openzeppelin/contracts/utils/cryptography/ECDSA.sol",
        "file": "./ECDSA.sol",
        "id": 18328,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 18385,
        "sourceUnit": 18255,
        "src": "58:21:150",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/openzeppelin/contracts/utils/Address.sol",
        "file": "../Address.sol",
        "id": 18329,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 18385,
        "sourceUnit": 17463,
        "src": "80:24:150",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/openzeppelin/contracts/interfaces/IERC1271.sol",
        "file": "../../interfaces/IERC1271.sol",
        "id": 18330,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 18385,
        "sourceUnit": 1739,
        "src": "105:39:150",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "SignatureChecker",
        "contractDependencies": [],
        "contractKind": "library",
        "documentation": {
          "id": 18331,
          "nodeType": "StructuredDocumentation",
          "src": "146:538:150",
          "text": " @dev Signature verification helper: Provide a single mechanism to verify both private-key (EOA) ECDSA signature and\n ERC1271 contract sigantures. Using this instead of ECDSA.recover in your contract will make them compatible with\n smart contract wallets such as Argent and Gnosis.\n Note: unlike ECDSA signatures, contract signature's are revocable, and the outcome of this function can thus change\n through time. It could return true at block N and false at block N+1 (or the opposite).\n _Available since v4.1._"
        },
        "fullyImplemented": true,
        "id": 18384,
        "linearizedBaseContracts": [
          18384
        ],
        "name": "SignatureChecker",
        "nameLocation": "693:16:150",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 18382,
              "nodeType": "Block",
              "src": "858:381:150",
              "statements": [
                {
                  "condition": {
                    "arguments": [
                      {
                        "id": 18344,
                        "name": "signer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18333,
                        "src": "891:6:150",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 18342,
                        "name": "Address",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17462,
                        "src": "872:7:150",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Address_$17462_$",
                          "typeString": "type(library Address)"
                        }
                      },
                      "id": 18343,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "isContract",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17186,
                      "src": "872:18:150",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                        "typeString": "function (address) view returns (bool)"
                      }
                    },
                    "id": 18345,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "872:26:150",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 18380,
                    "nodeType": "Block",
                    "src": "1161:72:150",
                    "statements": [
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 18378,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "id": 18374,
                                "name": "hash",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 18335,
                                "src": "1196:4:150",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              {
                                "id": 18375,
                                "name": "signature",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 18337,
                                "src": "1202:9:150",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                },
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "expression": {
                                "id": 18372,
                                "name": "ECDSA",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 18254,
                                "src": "1182:5:150",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ECDSA_$18254_$",
                                  "typeString": "type(library ECDSA)"
                                }
                              },
                              "id": 18373,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "recover",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 18132,
                              "src": "1182:13:150",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$",
                                "typeString": "function (bytes32,bytes memory) pure returns (address)"
                              }
                            },
                            "id": 18376,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1182:30:150",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 18377,
                            "name": "signer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18333,
                            "src": "1216:6:150",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1182:40:150",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 18341,
                        "id": 18379,
                        "nodeType": "Return",
                        "src": "1175:47:150"
                      }
                    ]
                  },
                  "id": 18381,
                  "nodeType": "IfStatement",
                  "src": "868:365:150",
                  "trueBody": {
                    "id": 18371,
                    "nodeType": "Block",
                    "src": "900:255:150",
                    "statements": [
                      {
                        "clauses": [
                          {
                            "block": {
                              "id": 18364,
                              "nodeType": "Block",
                              "src": "997:96:150",
                              "statements": [
                                {
                                  "expression": {
                                    "commonType": {
                                      "typeIdentifier": "t_bytes4",
                                      "typeString": "bytes4"
                                    },
                                    "id": 18362,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 18356,
                                      "name": "magicValue",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 18354,
                                      "src": "1022:10:150",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes4",
                                        "typeString": "bytes4"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "==",
                                    "rightExpression": {
                                      "expression": {
                                        "expression": {
                                          "arguments": [
                                            {
                                              "id": 18358,
                                              "name": "signer",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 18333,
                                              "src": "1045:6:150",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            ],
                                            "id": 18357,
                                            "name": "IERC1271",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1738,
                                            "src": "1036:8:150",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_contract$_IERC1271_$1738_$",
                                              "typeString": "type(contract IERC1271)"
                                            }
                                          },
                                          "id": 18359,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "typeConversion",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "1036:16:150",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_IERC1271_$1738",
                                            "typeString": "contract IERC1271"
                                          }
                                        },
                                        "id": 18360,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "isValidSignature",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 1737,
                                        "src": "1036:33:150",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_external_view$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
                                          "typeString": "function (bytes32,bytes memory) view external returns (bytes4)"
                                        }
                                      },
                                      "id": 18361,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "selector",
                                      "nodeType": "MemberAccess",
                                      "src": "1036:42:150",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes4",
                                        "typeString": "bytes4"
                                      }
                                    },
                                    "src": "1022:56:150",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "functionReturnParameters": 18341,
                                  "id": 18363,
                                  "nodeType": "Return",
                                  "src": "1015:63:150"
                                }
                              ]
                            },
                            "errorName": "",
                            "id": 18365,
                            "nodeType": "TryCatchClause",
                            "parameters": {
                              "id": 18355,
                              "nodeType": "ParameterList",
                              "parameters": [
                                {
                                  "constant": false,
                                  "id": 18354,
                                  "mutability": "mutable",
                                  "name": "magicValue",
                                  "nameLocation": "985:10:150",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 18365,
                                  "src": "978:17:150",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  },
                                  "typeName": {
                                    "id": 18353,
                                    "name": "bytes4",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "978:6:150",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes4",
                                      "typeString": "bytes4"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "src": "977:19:150"
                            },
                            "src": "969:124:150"
                          },
                          {
                            "block": {
                              "id": 18368,
                              "nodeType": "Block",
                              "src": "1100:45:150",
                              "statements": [
                                {
                                  "expression": {
                                    "hexValue": "66616c7365",
                                    "id": 18366,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "bool",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "1125:5:150",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    "value": "false"
                                  },
                                  "functionReturnParameters": 18341,
                                  "id": 18367,
                                  "nodeType": "Return",
                                  "src": "1118:12:150"
                                }
                              ]
                            },
                            "errorName": "",
                            "id": 18369,
                            "nodeType": "TryCatchClause",
                            "src": "1094:51:150"
                          }
                        ],
                        "externalCall": {
                          "arguments": [
                            {
                              "id": 18350,
                              "name": "hash",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 18335,
                              "src": "952:4:150",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "id": 18351,
                              "name": "signature",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 18337,
                              "src": "958:9:150",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 18347,
                                  "name": "signer",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 18333,
                                  "src": "927:6:150",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 18346,
                                "name": "IERC1271",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1738,
                                "src": "918:8:150",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC1271_$1738_$",
                                  "typeString": "type(contract IERC1271)"
                                }
                              },
                              "id": 18348,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "918:16:150",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC1271_$1738",
                                "typeString": "contract IERC1271"
                              }
                            },
                            "id": 18349,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "isValidSignature",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1737,
                            "src": "918:33:150",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
                              "typeString": "function (bytes32,bytes memory) view external returns (bytes4)"
                            }
                          },
                          "id": 18352,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "918:50:150",
                          "tryCall": true,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "id": 18370,
                        "nodeType": "TryStatement",
                        "src": "914:231:150"
                      }
                    ]
                  }
                }
              ]
            },
            "id": 18383,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isValidSignatureNow",
            "nameLocation": "725:19:150",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 18338,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 18333,
                  "mutability": "mutable",
                  "name": "signer",
                  "nameLocation": "762:6:150",
                  "nodeType": "VariableDeclaration",
                  "scope": 18383,
                  "src": "754:14:150",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 18332,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "754:7:150",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 18335,
                  "mutability": "mutable",
                  "name": "hash",
                  "nameLocation": "786:4:150",
                  "nodeType": "VariableDeclaration",
                  "scope": 18383,
                  "src": "778:12:150",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 18334,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "778:7:150",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 18337,
                  "mutability": "mutable",
                  "name": "signature",
                  "nameLocation": "813:9:150",
                  "nodeType": "VariableDeclaration",
                  "scope": 18383,
                  "src": "800:22:150",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 18336,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "800:5:150",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "744:84:150"
            },
            "returnParameters": {
              "id": 18341,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 18340,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 18383,
                  "src": "852:4:150",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 18339,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "852:4:150",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "851:6:150"
            },
            "scope": 18384,
            "src": "716:523:150",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 18385,
        "src": "685:556:150",
        "usedErrors": []
      }
    ],
    "src": "33:1209:150"
  },
  "bytecode": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220597a9a86763b2df3e413beead031953bb53f98074a2496bb7239aa2dfd74fdc564736f6c634300080c0033",
  "bytecodeSha1": "1ce946f6a4eaa185320328620ccf999b9e86db7c",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.12+commit.f00d7308"
  },
  "contractName": "SignatureChecker",
  "coverageMap": {
    "branches": {
      "140": {},
      "148": {},
      "150": {},
      "5": {}
    },
    "statements": {
      "140": {},
      "148": {},
      "150": {},
      "5": {}
    }
  },
  "dependencies": [
    "Address",
    "ECDSA",
    "IERC1271"
  ],
  "deployedBytecode": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220597a9a86763b2df3e413beead031953bb53f98074a2496bb7239aa2dfd74fdc564736f6c634300080c0033",
  "deployedSourceMap": "685:556:150:-:0;;;;;;;;",
  "language": "Solidity",
  "natspec": {
    "details": "Signature verification helper: Provide a single mechanism to verify both private-key (EOA) ECDSA signature and ERC1271 contract sigantures. Using this instead of ECDSA.recover in your contract will make them compatible with smart contract wallets such as Argent and Gnosis. Note: unlike ECDSA signatures, contract signature's are revocable, and the outcome of this function can thus change through time. It could return true at block N and false at block N+1 (or the opposite). _Available since v4.1._",
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "offset": [
    685,
    1241
  ],
  "opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MSIZE PUSH27 0x9A86763B2DF3E413BEEAD031953BB53F98074A2496BB7239AA2DFD PUSH21 0xFDC564736F6C634300080C00330000000000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        685,
        1241
      ],
      "op": "PUSH20",
      "path": "150",
      "value": "0x0"
    },
    "21": {
      "fn": null,
      "offset": [
        685,
        1241
      ],
      "op": "ADDRESS",
      "path": "150"
    },
    "22": {
      "fn": null,
      "offset": [
        685,
        1241
      ],
      "op": "EQ",
      "path": "150"
    },
    "23": {
      "fn": null,
      "offset": [
        685,
        1241
      ],
      "op": "PUSH1",
      "path": "150",
      "value": "0x80"
    },
    "25": {
      "fn": null,
      "offset": [
        685,
        1241
      ],
      "op": "PUSH1",
      "path": "150",
      "value": "0x40"
    },
    "27": {
      "fn": null,
      "offset": [
        685,
        1241
      ],
      "op": "MSTORE",
      "path": "150"
    },
    "28": {
      "fn": null,
      "offset": [
        685,
        1241
      ],
      "op": "PUSH1",
      "path": "150",
      "value": "0x0"
    },
    "30": {
      "fn": null,
      "offset": [
        685,
        1241
      ],
      "op": "DUP1",
      "path": "150"
    },
    "31": {
      "fn": null,
      "offset": [
        685,
        1241
      ],
      "op": "REVERT",
      "path": "150"
    }
  },
  "sha1": "2d0eda0a710fdae4dda8c99c8f0682fd57188c1e",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"./ECDSA.sol\";\nimport \"../Address.sol\";\nimport \"../../interfaces/IERC1271.sol\";\n\n/**\n * @dev Signature verification helper: Provide a single mechanism to verify both private-key (EOA) ECDSA signature and\n * ERC1271 contract sigantures. Using this instead of ECDSA.recover in your contract will make them compatible with\n * smart contract wallets such as Argent and Gnosis.\n *\n * Note: unlike ECDSA signatures, contract signature's are revocable, and the outcome of this function can thus change\n * through time. It could return true at block N and false at block N+1 (or the opposite).\n *\n * _Available since v4.1._\n */\nlibrary SignatureChecker {\n    function isValidSignatureNow(\n        address signer,\n        bytes32 hash,\n        bytes memory signature\n    ) internal view returns (bool) {\n        if (Address.isContract(signer)) {\n            try IERC1271(signer).isValidSignature(hash, signature) returns (bytes4 magicValue) {\n                return magicValue == IERC1271(signer).isValidSignature.selector;\n            } catch {\n                return false;\n            }\n        } else {\n            return ECDSA.recover(hash, signature) == signer;\n        }\n    }\n}\n",
  "sourceMap": "685:556:150:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;685:556:150;;;;;;;;;;;;;;;;;",
  "sourcePath": "contracts/openzeppelin/contracts/utils/cryptography/SignatureChecker.sol",
  "type": "library"
}