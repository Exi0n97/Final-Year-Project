{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "a",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "b",
          "type": "uint256"
        }
      ],
      "name": "average",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "a",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "b",
          "type": "uint256"
        }
      ],
      "name": "ceilDiv",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "a",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "b",
          "type": "uint256"
        }
      ],
      "name": "max",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "a",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "b",
          "type": "uint256"
        }
      ],
      "name": "min",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "162": "contracts/openzeppelin/contracts/utils/math/Math.sol",
    "63": "contracts/openzeppelin/contracts/mocks/MathMock.sol"
  },
  "ast": {
    "absolutePath": "contracts/openzeppelin/contracts/mocks/MathMock.sol",
    "exportedSymbols": {
      "Math": [
        19386
      ],
      "MathMock": [
        6075
      ]
    },
    "id": 6076,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 6009,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:63"
      },
      {
        "absolutePath": "contracts/openzeppelin/contracts/utils/math/Math.sol",
        "file": "../utils/math/Math.sol",
        "id": 6010,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 6076,
        "sourceUnit": 19387,
        "src": "58:32:63",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "MathMock",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 6075,
        "linearizedBaseContracts": [
          6075
        ],
        "name": "MathMock",
        "nameLocation": "101:8:63",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 6025,
              "nodeType": "Block",
              "src": "181:38:63",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 6021,
                        "name": "a",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6012,
                        "src": "207:1:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 6022,
                        "name": "b",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6014,
                        "src": "210:1:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 6019,
                        "name": "Math",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19386,
                        "src": "198:4:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Math_$19386_$",
                          "typeString": "type(library Math)"
                        }
                      },
                      "id": 6020,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "max",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 19307,
                      "src": "198:8:63",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 6023,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "198:14:63",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 6018,
                  "id": 6024,
                  "nodeType": "Return",
                  "src": "191:21:63"
                }
              ]
            },
            "functionSelector": "6d5433e6",
            "id": 6026,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "max",
            "nameLocation": "125:3:63",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6015,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6012,
                  "mutability": "mutable",
                  "name": "a",
                  "nameLocation": "137:1:63",
                  "nodeType": "VariableDeclaration",
                  "scope": 6026,
                  "src": "129:9:63",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6011,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "129:7:63",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6014,
                  "mutability": "mutable",
                  "name": "b",
                  "nameLocation": "148:1:63",
                  "nodeType": "VariableDeclaration",
                  "scope": 6026,
                  "src": "140:9:63",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6013,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "140:7:63",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "128:22:63"
            },
            "returnParameters": {
              "id": 6018,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6017,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 6026,
                  "src": "172:7:63",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6016,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "172:7:63",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "171:9:63"
            },
            "scope": 6075,
            "src": "116:103:63",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 6041,
              "nodeType": "Block",
              "src": "290:38:63",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 6037,
                        "name": "a",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6028,
                        "src": "316:1:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 6038,
                        "name": "b",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6030,
                        "src": "319:1:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 6035,
                        "name": "Math",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19386,
                        "src": "307:4:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Math_$19386_$",
                          "typeString": "type(library Math)"
                        }
                      },
                      "id": 6036,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "min",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 19325,
                      "src": "307:8:63",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 6039,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "307:14:63",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 6034,
                  "id": 6040,
                  "nodeType": "Return",
                  "src": "300:21:63"
                }
              ]
            },
            "functionSelector": "7ae2b5c7",
            "id": 6042,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "min",
            "nameLocation": "234:3:63",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6031,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6028,
                  "mutability": "mutable",
                  "name": "a",
                  "nameLocation": "246:1:63",
                  "nodeType": "VariableDeclaration",
                  "scope": 6042,
                  "src": "238:9:63",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6027,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "238:7:63",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6030,
                  "mutability": "mutable",
                  "name": "b",
                  "nameLocation": "257:1:63",
                  "nodeType": "VariableDeclaration",
                  "scope": 6042,
                  "src": "249:9:63",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6029,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "249:7:63",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "237:22:63"
            },
            "returnParameters": {
              "id": 6034,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6033,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 6042,
                  "src": "281:7:63",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6032,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "281:7:63",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "280:9:63"
            },
            "scope": 6075,
            "src": "225:103:63",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 6057,
              "nodeType": "Block",
              "src": "403:42:63",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 6053,
                        "name": "a",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6044,
                        "src": "433:1:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 6054,
                        "name": "b",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6046,
                        "src": "436:1:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 6051,
                        "name": "Math",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19386,
                        "src": "420:4:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Math_$19386_$",
                          "typeString": "type(library Math)"
                        }
                      },
                      "id": 6052,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "average",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 19360,
                      "src": "420:12:63",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 6055,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "420:18:63",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 6050,
                  "id": 6056,
                  "nodeType": "Return",
                  "src": "413:25:63"
                }
              ]
            },
            "functionSelector": "2b7423ab",
            "id": 6058,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "average",
            "nameLocation": "343:7:63",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6047,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6044,
                  "mutability": "mutable",
                  "name": "a",
                  "nameLocation": "359:1:63",
                  "nodeType": "VariableDeclaration",
                  "scope": 6058,
                  "src": "351:9:63",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6043,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "351:7:63",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6046,
                  "mutability": "mutable",
                  "name": "b",
                  "nameLocation": "370:1:63",
                  "nodeType": "VariableDeclaration",
                  "scope": 6058,
                  "src": "362:9:63",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6045,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "362:7:63",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "350:22:63"
            },
            "returnParameters": {
              "id": 6050,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6049,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 6058,
                  "src": "394:7:63",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6048,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "394:7:63",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "393:9:63"
            },
            "scope": 6075,
            "src": "334:111:63",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 6073,
              "nodeType": "Block",
              "src": "520:42:63",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 6069,
                        "name": "a",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6060,
                        "src": "550:1:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 6070,
                        "name": "b",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6062,
                        "src": "553:1:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 6067,
                        "name": "Math",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19386,
                        "src": "537:4:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Math_$19386_$",
                          "typeString": "type(library Math)"
                        }
                      },
                      "id": 6068,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "ceilDiv",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 19385,
                      "src": "537:12:63",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 6071,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "537:18:63",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 6066,
                  "id": 6072,
                  "nodeType": "Return",
                  "src": "530:25:63"
                }
              ]
            },
            "functionSelector": "9cb35327",
            "id": 6074,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "ceilDiv",
            "nameLocation": "460:7:63",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6063,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6060,
                  "mutability": "mutable",
                  "name": "a",
                  "nameLocation": "476:1:63",
                  "nodeType": "VariableDeclaration",
                  "scope": 6074,
                  "src": "468:9:63",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6059,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "468:7:63",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6062,
                  "mutability": "mutable",
                  "name": "b",
                  "nameLocation": "487:1:63",
                  "nodeType": "VariableDeclaration",
                  "scope": 6074,
                  "src": "479:9:63",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6061,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "479:7:63",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "467:22:63"
            },
            "returnParameters": {
              "id": 6066,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6065,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 6074,
                  "src": "511:7:63",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6064,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "511:7:63",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "510:9:63"
            },
            "scope": 6075,
            "src": "451:111:63",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 6076,
        "src": "92:472:63",
        "usedErrors": []
      }
    ],
    "src": "33:532:63"
  },
  "bytecode": "608060405234801561001057600080fd5b50610247806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80632b7423ab146100515780636d5433e6146100765780637ae2b5c7146100895780639cb353271461009c575b600080fd5b61006461005f36600461018b565b6100af565b60405190815260200160405180910390f35b61006461008436600461018b565b6100c2565b61006461009736600461018b565b6100ce565b6100646100aa36600461018b565b6100da565b60006100bb83836100e6565b9392505050565b60006100bb838361013d565b60006100bb8383610154565b60006100bb8383610163565b600060026100f481846101c3565b6100ff6002866101c3565b61010991906101d7565b61011391906101fd565b61011e6002846101fd565b6101296002866101fd565b61013391906101d7565b6100bb91906101d7565b60008183101561014d57816100bb565b5090919050565b600081831061014d57816100bb565b600061016f82846101c3565b1561017b57600161017e565b60005b60ff1661013383856101fd565b6000806040838503121561019e57600080fd5b50508035926020909101359150565b634e487b7160e01b600052601260045260246000fd5b6000826101d2576101d26101ad565b500690565b600082198211156101f857634e487b7160e01b600052601160045260246000fd5b500190565b60008261020c5761020c6101ad565b50049056fea2646970667358221220c8404759a8afa6af9b0771b0f4ba3fdc3f9d2378402b97af58a10200a252624164736f6c634300080c0033",
  "bytecodeSha1": "226f5bb0ec0dfda1733101ecbfd093881cc9ee06",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.12+commit.f00d7308"
  },
  "contractName": "MathMock",
  "coverageMap": {
    "branches": {
      "162": {
        "Math.ceilDiv": {
          "10": [
            1170,
            1180,
            true
          ]
        },
        "Math.max": {
          "8": [
            299,
            305,
            true
          ]
        },
        "Math.min": {
          "9": [
            475,
            480,
            true
          ]
        }
      },
      "63": {}
    },
    "statements": {
      "162": {
        "Math.average": {
          "4": [
            744,
            796
          ]
        },
        "Math.ceilDiv": {
          "7": [
            1154,
            1189
          ]
        },
        "Math.max": {
          "5": [
            292,
            313
          ]
        },
        "Math.min": {
          "6": [
            468,
            488
          ]
        }
      },
      "63": {
        "MathMock.average": {
          "0": [
            413,
            438
          ]
        },
        "MathMock.ceilDiv": {
          "3": [
            530,
            555
          ]
        },
        "MathMock.max": {
          "1": [
            191,
            212
          ]
        },
        "MathMock.min": {
          "2": [
            300,
            321
          ]
        }
      }
    }
  },
  "dependencies": [
    "Math"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b506004361061004c5760003560e01c80632b7423ab146100515780636d5433e6146100765780637ae2b5c7146100895780639cb353271461009c575b600080fd5b61006461005f36600461018b565b6100af565b60405190815260200160405180910390f35b61006461008436600461018b565b6100c2565b61006461009736600461018b565b6100ce565b6100646100aa36600461018b565b6100da565b60006100bb83836100e6565b9392505050565b60006100bb838361013d565b60006100bb8383610154565b60006100bb8383610163565b600060026100f481846101c3565b6100ff6002866101c3565b61010991906101d7565b61011391906101fd565b61011e6002846101fd565b6101296002866101fd565b61013391906101d7565b6100bb91906101d7565b60008183101561014d57816100bb565b5090919050565b600081831061014d57816100bb565b600061016f82846101c3565b1561017b57600161017e565b60005b60ff1661013383856101fd565b6000806040838503121561019e57600080fd5b50508035926020909101359150565b634e487b7160e01b600052601260045260246000fd5b6000826101d2576101d26101ad565b500690565b600082198211156101f857634e487b7160e01b600052601160045260246000fd5b500190565b60008261020c5761020c6101ad565b50049056fea2646970667358221220c8404759a8afa6af9b0771b0f4ba3fdc3f9d2378402b97af58a10200a252624164736f6c634300080c0033",
  "deployedSourceMap": "92:472:63:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;334:111;;;;;;:::i;:::-;;:::i;:::-;;;413:25:169;;;401:2;386:18;334:111:63;;;;;;;116:103;;;;;;:::i;:::-;;:::i;225:::-;;;;;;:::i;:::-;;:::i;451:111::-;;;;;;:::i;:::-;;:::i;334:::-;394:7;420:18;433:1;436;420:12;:18::i;:::-;413:25;334:111;-1:-1:-1;;;334:111:63:o;116:103::-;172:7;198:14;207:1;210;198:8;:14::i;225:103::-;281:7;307:14;316:1;319;307:8;:14::i;451:111::-;511:7;537:18;550:1;553;537:12;:18::i;608:195:162:-;670:7;794:1;784:5;794:1;784;:5;:::i;:::-;774;778:1;774;:5;:::i;:::-;773:17;;;;:::i;:::-;772:23;;;;:::i;:::-;762:5;766:1;762;:5;:::i;:::-;752;756:1;752;:5;:::i;:::-;751:17;;;;:::i;:::-;:45;;;;:::i;215:105::-;273:7;304:1;299;:6;;:14;;312:1;299:14;;;-1:-1:-1;308:1:162;;215:105;-1:-1:-1;215:105:162:o;391:104::-;449:7;479:1;475;:5;:13;;487:1;475:13;;1002:194;1064:7;1170:5;1174:1;1170;:5;:::i;:::-;:10;:18;;1187:1;1170:18;;;1183:1;1170:18;1161:28;;:5;1165:1;1161;:5;:::i;14:248:169:-;82:6;90;143:2;131:9;122:7;118:23;114:32;111:52;;;159:1;156;149:12;111:52;-1:-1:-1;;182:23:169;;;252:2;237:18;;;224:32;;-1:-1:-1;14:248:169:o;449:127::-;510:10;505:3;501:20;498:1;491:31;541:4;538:1;531:15;565:4;562:1;555:15;581:112;613:1;639;629:35;;644:18;;:::i;:::-;-1:-1:-1;678:9:169;;581:112::o;698:225::-;738:3;769:1;765:6;762:1;759:13;756:136;;;814:10;809:3;805:20;802:1;795:31;849:4;846:1;839:15;877:4;874:1;867:15;756:136;-1:-1:-1;908:9:169;;698:225::o;928:120::-;968:1;994;984:35;;999:18;;:::i;:::-;-1:-1:-1;1033:9:169;;928:120::o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "offset": [
    92,
    564
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x2B7423AB EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0x6D5433E6 EQ PUSH2 0x76 JUMPI DUP1 PUSH4 0x7AE2B5C7 EQ PUSH2 0x89 JUMPI DUP1 PUSH4 0x9CB35327 EQ PUSH2 0x9C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x64 PUSH2 0x5F CALLDATASIZE PUSH1 0x4 PUSH2 0x18B JUMP JUMPDEST PUSH2 0xAF JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x64 PUSH2 0x84 CALLDATASIZE PUSH1 0x4 PUSH2 0x18B JUMP JUMPDEST PUSH2 0xC2 JUMP JUMPDEST PUSH2 0x64 PUSH2 0x97 CALLDATASIZE PUSH1 0x4 PUSH2 0x18B JUMP JUMPDEST PUSH2 0xCE JUMP JUMPDEST PUSH2 0x64 PUSH2 0xAA CALLDATASIZE PUSH1 0x4 PUSH2 0x18B JUMP JUMPDEST PUSH2 0xDA JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBB DUP4 DUP4 PUSH2 0xE6 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBB DUP4 DUP4 PUSH2 0x13D JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBB DUP4 DUP4 PUSH2 0x154 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBB DUP4 DUP4 PUSH2 0x163 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH2 0xF4 DUP2 DUP5 PUSH2 0x1C3 JUMP JUMPDEST PUSH2 0xFF PUSH1 0x2 DUP7 PUSH2 0x1C3 JUMP JUMPDEST PUSH2 0x109 SWAP2 SWAP1 PUSH2 0x1D7 JUMP JUMPDEST PUSH2 0x113 SWAP2 SWAP1 PUSH2 0x1FD JUMP JUMPDEST PUSH2 0x11E PUSH1 0x2 DUP5 PUSH2 0x1FD JUMP JUMPDEST PUSH2 0x129 PUSH1 0x2 DUP7 PUSH2 0x1FD JUMP JUMPDEST PUSH2 0x133 SWAP2 SWAP1 PUSH2 0x1D7 JUMP JUMPDEST PUSH2 0xBB SWAP2 SWAP1 PUSH2 0x1D7 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 LT ISZERO PUSH2 0x14D JUMPI DUP2 PUSH2 0xBB JUMP JUMPDEST POP SWAP1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 LT PUSH2 0x14D JUMPI DUP2 PUSH2 0xBB JUMP JUMPDEST PUSH1 0x0 PUSH2 0x16F DUP3 DUP5 PUSH2 0x1C3 JUMP JUMPDEST ISZERO PUSH2 0x17B JUMPI PUSH1 0x1 PUSH2 0x17E JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0xFF AND PUSH2 0x133 DUP4 DUP6 PUSH2 0x1FD JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x19E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1D2 JUMPI PUSH2 0x1D2 PUSH2 0x1AD JUMP JUMPDEST POP MOD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x1F8 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x20C JUMPI PUSH2 0x20C PUSH2 0x1AD JUMP JUMPDEST POP DIV SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC8 BLOCKHASH SELFBALANCE MSIZE 0xA8 0xAF 0xA6 0xAF SWAP12 SMOD PUSH18 0xB0F4BA3FDC3F9D2378402B97AF58A10200A2 MSTORE PUSH3 0x416473 PUSH16 0x6C634300080C00330000000000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        92,
        564
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        92,
        564
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        92,
        564
      ],
      "op": "MSTORE",
      "path": "63"
    },
    "5": {
      "fn": null,
      "offset": [
        92,
        564
      ],
      "op": "CALLVALUE",
      "path": "63"
    },
    "6": {
      "fn": null,
      "offset": [
        92,
        564
      ],
      "op": "DUP1",
      "path": "63"
    },
    "7": {
      "fn": null,
      "offset": [
        92,
        564
      ],
      "op": "ISZERO",
      "path": "63"
    },
    "8": {
      "fn": null,
      "offset": [
        92,
        564
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        92,
        564
      ],
      "op": "JUMPI",
      "path": "63"
    },
    "12": {
      "fn": null,
      "offset": [
        92,
        564
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        92,
        564
      ],
      "op": "DUP1",
      "path": "63"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        92,
        564
      ],
      "op": "REVERT",
      "path": "63"
    },
    "16": {
      "fn": null,
      "offset": [
        92,
        564
      ],
      "op": "JUMPDEST",
      "path": "63"
    },
    "17": {
      "fn": null,
      "offset": [
        92,
        564
      ],
      "op": "POP",
      "path": "63"
    },
    "18": {
      "fn": null,
      "offset": [
        92,
        564
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        92,
        564
      ],
      "op": "CALLDATASIZE",
      "path": "63"
    },
    "21": {
      "fn": null,
      "offset": [
        92,
        564
      ],
      "op": "LT",
      "path": "63"
    },
    "22": {
      "fn": null,
      "offset": [
        92,
        564
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x4C"
    },
    "25": {
      "fn": null,
      "offset": [
        92,
        564
      ],
      "op": "JUMPI",
      "path": "63"
    },
    "26": {
      "fn": null,
      "offset": [
        92,
        564
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        92,
        564
      ],
      "op": "CALLDATALOAD",
      "path": "63"
    },
    "29": {
      "fn": null,
      "offset": [
        92,
        564
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        92,
        564
      ],
      "op": "SHR",
      "path": "63"
    },
    "32": {
      "fn": null,
      "offset": [
        92,
        564
      ],
      "op": "DUP1",
      "path": "63"
    },
    "33": {
      "fn": null,
      "offset": [
        92,
        564
      ],
      "op": "PUSH4",
      "path": "63",
      "value": "0x2B7423AB"
    },
    "38": {
      "fn": null,
      "offset": [
        92,
        564
      ],
      "op": "EQ",
      "path": "63"
    },
    "39": {
      "fn": null,
      "offset": [
        92,
        564
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x51"
    },
    "42": {
      "fn": null,
      "offset": [
        92,
        564
      ],
      "op": "JUMPI",
      "path": "63"
    },
    "43": {
      "fn": null,
      "offset": [
        92,
        564
      ],
      "op": "DUP1",
      "path": "63"
    },
    "44": {
      "fn": null,
      "offset": [
        92,
        564
      ],
      "op": "PUSH4",
      "path": "63",
      "value": "0x6D5433E6"
    },
    "49": {
      "fn": null,
      "offset": [
        92,
        564
      ],
      "op": "EQ",
      "path": "63"
    },
    "50": {
      "fn": null,
      "offset": [
        92,
        564
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x76"
    },
    "53": {
      "fn": null,
      "offset": [
        92,
        564
      ],
      "op": "JUMPI",
      "path": "63"
    },
    "54": {
      "fn": null,
      "offset": [
        92,
        564
      ],
      "op": "DUP1",
      "path": "63"
    },
    "55": {
      "fn": null,
      "offset": [
        92,
        564
      ],
      "op": "PUSH4",
      "path": "63",
      "value": "0x7AE2B5C7"
    },
    "60": {
      "fn": null,
      "offset": [
        92,
        564
      ],
      "op": "EQ",
      "path": "63"
    },
    "61": {
      "fn": null,
      "offset": [
        92,
        564
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x89"
    },
    "64": {
      "fn": null,
      "offset": [
        92,
        564
      ],
      "op": "JUMPI",
      "path": "63"
    },
    "65": {
      "fn": null,
      "offset": [
        92,
        564
      ],
      "op": "DUP1",
      "path": "63"
    },
    "66": {
      "fn": null,
      "offset": [
        92,
        564
      ],
      "op": "PUSH4",
      "path": "63",
      "value": "0x9CB35327"
    },
    "71": {
      "fn": null,
      "offset": [
        92,
        564
      ],
      "op": "EQ",
      "path": "63"
    },
    "72": {
      "fn": null,
      "offset": [
        92,
        564
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x9C"
    },
    "75": {
      "fn": null,
      "offset": [
        92,
        564
      ],
      "op": "JUMPI",
      "path": "63"
    },
    "76": {
      "fn": null,
      "offset": [
        92,
        564
      ],
      "op": "JUMPDEST",
      "path": "63"
    },
    "77": {
      "fn": null,
      "offset": [
        92,
        564
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x0"
    },
    "79": {
      "fn": null,
      "offset": [
        92,
        564
      ],
      "op": "DUP1",
      "path": "63"
    },
    "80": {
      "first_revert": true,
      "fn": null,
      "offset": [
        92,
        564
      ],
      "op": "REVERT",
      "path": "63"
    },
    "81": {
      "fn": "MathMock.average",
      "offset": [
        334,
        445
      ],
      "op": "JUMPDEST",
      "path": "63"
    },
    "82": {
      "fn": "MathMock.average",
      "offset": [
        334,
        445
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x64"
    },
    "85": {
      "fn": "MathMock.average",
      "offset": [
        334,
        445
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x5F"
    },
    "88": {
      "fn": "MathMock.average",
      "offset": [
        334,
        445
      ],
      "op": "CALLDATASIZE",
      "path": "63"
    },
    "89": {
      "fn": "MathMock.average",
      "offset": [
        334,
        445
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x4"
    },
    "91": {
      "fn": "MathMock.average",
      "offset": [
        334,
        445
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x18B"
    },
    "94": {
      "fn": "MathMock.average",
      "jump": "i",
      "offset": [
        334,
        445
      ],
      "op": "JUMP",
      "path": "63"
    },
    "95": {
      "fn": "MathMock.average",
      "offset": [
        334,
        445
      ],
      "op": "JUMPDEST",
      "path": "63"
    },
    "96": {
      "fn": "MathMock.average",
      "offset": [
        334,
        445
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0xAF"
    },
    "99": {
      "fn": "MathMock.average",
      "jump": "i",
      "offset": [
        334,
        445
      ],
      "op": "JUMP",
      "path": "63"
    },
    "100": {
      "fn": "MathMock.average",
      "offset": [
        334,
        445
      ],
      "op": "JUMPDEST",
      "path": "63"
    },
    "101": {
      "fn": "MathMock.average",
      "offset": [
        334,
        445
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x40"
    },
    "103": {
      "fn": "MathMock.average",
      "offset": [
        334,
        445
      ],
      "op": "MLOAD",
      "path": "63"
    },
    "104": {
      "op": "SWAP1"
    },
    "105": {
      "op": "DUP2"
    },
    "106": {
      "op": "MSTORE"
    },
    "107": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "109": {
      "op": "ADD"
    },
    "110": {
      "fn": "MathMock.average",
      "offset": [
        334,
        445
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x40"
    },
    "112": {
      "fn": "MathMock.average",
      "offset": [
        334,
        445
      ],
      "op": "MLOAD",
      "path": "63"
    },
    "113": {
      "fn": "MathMock.average",
      "offset": [
        334,
        445
      ],
      "op": "DUP1",
      "path": "63"
    },
    "114": {
      "fn": "MathMock.average",
      "offset": [
        334,
        445
      ],
      "op": "SWAP2",
      "path": "63"
    },
    "115": {
      "fn": "MathMock.average",
      "offset": [
        334,
        445
      ],
      "op": "SUB",
      "path": "63"
    },
    "116": {
      "fn": "MathMock.average",
      "offset": [
        334,
        445
      ],
      "op": "SWAP1",
      "path": "63"
    },
    "117": {
      "fn": "MathMock.average",
      "offset": [
        334,
        445
      ],
      "op": "RETURN",
      "path": "63"
    },
    "118": {
      "fn": "MathMock.max",
      "offset": [
        116,
        219
      ],
      "op": "JUMPDEST",
      "path": "63"
    },
    "119": {
      "fn": "MathMock.max",
      "offset": [
        116,
        219
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x64"
    },
    "122": {
      "fn": "MathMock.max",
      "offset": [
        116,
        219
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x84"
    },
    "125": {
      "fn": "MathMock.max",
      "offset": [
        116,
        219
      ],
      "op": "CALLDATASIZE",
      "path": "63"
    },
    "126": {
      "fn": "MathMock.max",
      "offset": [
        116,
        219
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x4"
    },
    "128": {
      "fn": "MathMock.max",
      "offset": [
        116,
        219
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x18B"
    },
    "131": {
      "fn": "MathMock.max",
      "jump": "i",
      "offset": [
        116,
        219
      ],
      "op": "JUMP",
      "path": "63"
    },
    "132": {
      "fn": "MathMock.max",
      "offset": [
        116,
        219
      ],
      "op": "JUMPDEST",
      "path": "63"
    },
    "133": {
      "fn": "MathMock.max",
      "offset": [
        116,
        219
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0xC2"
    },
    "136": {
      "fn": "MathMock.max",
      "jump": "i",
      "offset": [
        116,
        219
      ],
      "op": "JUMP",
      "path": "63"
    },
    "137": {
      "fn": "MathMock.min",
      "offset": [
        225,
        328
      ],
      "op": "JUMPDEST",
      "path": "63"
    },
    "138": {
      "fn": "MathMock.min",
      "offset": [
        225,
        328
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x64"
    },
    "141": {
      "fn": "MathMock.min",
      "offset": [
        225,
        328
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x97"
    },
    "144": {
      "fn": "MathMock.min",
      "offset": [
        225,
        328
      ],
      "op": "CALLDATASIZE",
      "path": "63"
    },
    "145": {
      "fn": "MathMock.min",
      "offset": [
        225,
        328
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x4"
    },
    "147": {
      "fn": "MathMock.min",
      "offset": [
        225,
        328
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x18B"
    },
    "150": {
      "fn": "MathMock.min",
      "jump": "i",
      "offset": [
        225,
        328
      ],
      "op": "JUMP",
      "path": "63"
    },
    "151": {
      "fn": "MathMock.min",
      "offset": [
        225,
        328
      ],
      "op": "JUMPDEST",
      "path": "63"
    },
    "152": {
      "fn": "MathMock.min",
      "offset": [
        225,
        328
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0xCE"
    },
    "155": {
      "fn": "MathMock.min",
      "jump": "i",
      "offset": [
        225,
        328
      ],
      "op": "JUMP",
      "path": "63"
    },
    "156": {
      "fn": "MathMock.ceilDiv",
      "offset": [
        451,
        562
      ],
      "op": "JUMPDEST",
      "path": "63"
    },
    "157": {
      "fn": "MathMock.ceilDiv",
      "offset": [
        451,
        562
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x64"
    },
    "160": {
      "fn": "MathMock.ceilDiv",
      "offset": [
        451,
        562
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0xAA"
    },
    "163": {
      "fn": "MathMock.ceilDiv",
      "offset": [
        451,
        562
      ],
      "op": "CALLDATASIZE",
      "path": "63"
    },
    "164": {
      "fn": "MathMock.ceilDiv",
      "offset": [
        451,
        562
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x4"
    },
    "166": {
      "fn": "MathMock.ceilDiv",
      "offset": [
        451,
        562
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x18B"
    },
    "169": {
      "fn": "MathMock.ceilDiv",
      "jump": "i",
      "offset": [
        451,
        562
      ],
      "op": "JUMP",
      "path": "63"
    },
    "170": {
      "fn": "MathMock.ceilDiv",
      "offset": [
        451,
        562
      ],
      "op": "JUMPDEST",
      "path": "63"
    },
    "171": {
      "fn": "MathMock.ceilDiv",
      "offset": [
        451,
        562
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0xDA"
    },
    "174": {
      "fn": "MathMock.ceilDiv",
      "jump": "i",
      "offset": [
        451,
        562
      ],
      "op": "JUMP",
      "path": "63"
    },
    "175": {
      "fn": "MathMock.average",
      "offset": [
        334,
        445
      ],
      "op": "JUMPDEST",
      "path": "63"
    },
    "176": {
      "fn": "MathMock.average",
      "offset": [
        394,
        401
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x0"
    },
    "178": {
      "fn": "MathMock.average",
      "offset": [
        420,
        438
      ],
      "op": "PUSH2",
      "path": "63",
      "statement": 0,
      "value": "0xBB"
    },
    "181": {
      "fn": "MathMock.average",
      "offset": [
        433,
        434
      ],
      "op": "DUP4",
      "path": "63"
    },
    "182": {
      "fn": "MathMock.average",
      "offset": [
        436,
        437
      ],
      "op": "DUP4",
      "path": "63"
    },
    "183": {
      "fn": "MathMock.average",
      "offset": [
        420,
        432
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0xE6"
    },
    "186": {
      "fn": "MathMock.average",
      "jump": "i",
      "offset": [
        420,
        438
      ],
      "op": "JUMP",
      "path": "63"
    },
    "187": {
      "fn": "MathMock.average",
      "offset": [
        420,
        438
      ],
      "op": "JUMPDEST",
      "path": "63"
    },
    "188": {
      "fn": "MathMock.average",
      "offset": [
        413,
        438
      ],
      "op": "SWAP4",
      "path": "63"
    },
    "189": {
      "fn": "MathMock.average",
      "offset": [
        334,
        445
      ],
      "op": "SWAP3",
      "path": "63"
    },
    "190": {
      "op": "POP"
    },
    "191": {
      "op": "POP"
    },
    "192": {
      "op": "POP"
    },
    "193": {
      "fn": "MathMock.average",
      "jump": "o",
      "offset": [
        334,
        445
      ],
      "op": "JUMP",
      "path": "63"
    },
    "194": {
      "fn": "MathMock.max",
      "offset": [
        116,
        219
      ],
      "op": "JUMPDEST",
      "path": "63"
    },
    "195": {
      "fn": "MathMock.max",
      "offset": [
        172,
        179
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x0"
    },
    "197": {
      "fn": "MathMock.max",
      "offset": [
        198,
        212
      ],
      "op": "PUSH2",
      "path": "63",
      "statement": 1,
      "value": "0xBB"
    },
    "200": {
      "fn": "MathMock.max",
      "offset": [
        207,
        208
      ],
      "op": "DUP4",
      "path": "63"
    },
    "201": {
      "fn": "MathMock.max",
      "offset": [
        210,
        211
      ],
      "op": "DUP4",
      "path": "63"
    },
    "202": {
      "fn": "MathMock.max",
      "offset": [
        198,
        206
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x13D"
    },
    "205": {
      "fn": "MathMock.max",
      "jump": "i",
      "offset": [
        198,
        212
      ],
      "op": "JUMP",
      "path": "63"
    },
    "206": {
      "fn": "MathMock.min",
      "offset": [
        225,
        328
      ],
      "op": "JUMPDEST",
      "path": "63"
    },
    "207": {
      "fn": "MathMock.min",
      "offset": [
        281,
        288
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x0"
    },
    "209": {
      "fn": "MathMock.min",
      "offset": [
        307,
        321
      ],
      "op": "PUSH2",
      "path": "63",
      "statement": 2,
      "value": "0xBB"
    },
    "212": {
      "fn": "MathMock.min",
      "offset": [
        316,
        317
      ],
      "op": "DUP4",
      "path": "63"
    },
    "213": {
      "fn": "MathMock.min",
      "offset": [
        319,
        320
      ],
      "op": "DUP4",
      "path": "63"
    },
    "214": {
      "fn": "MathMock.min",
      "offset": [
        307,
        315
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x154"
    },
    "217": {
      "fn": "MathMock.min",
      "jump": "i",
      "offset": [
        307,
        321
      ],
      "op": "JUMP",
      "path": "63"
    },
    "218": {
      "fn": "MathMock.ceilDiv",
      "offset": [
        451,
        562
      ],
      "op": "JUMPDEST",
      "path": "63"
    },
    "219": {
      "fn": "MathMock.ceilDiv",
      "offset": [
        511,
        518
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x0"
    },
    "221": {
      "fn": "MathMock.ceilDiv",
      "offset": [
        537,
        555
      ],
      "op": "PUSH2",
      "path": "63",
      "statement": 3,
      "value": "0xBB"
    },
    "224": {
      "fn": "MathMock.ceilDiv",
      "offset": [
        550,
        551
      ],
      "op": "DUP4",
      "path": "63"
    },
    "225": {
      "fn": "MathMock.ceilDiv",
      "offset": [
        553,
        554
      ],
      "op": "DUP4",
      "path": "63"
    },
    "226": {
      "fn": "MathMock.ceilDiv",
      "offset": [
        537,
        549
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x163"
    },
    "229": {
      "fn": "MathMock.ceilDiv",
      "jump": "i",
      "offset": [
        537,
        555
      ],
      "op": "JUMP",
      "path": "63"
    },
    "230": {
      "fn": "Math.average",
      "offset": [
        608,
        803
      ],
      "op": "JUMPDEST",
      "path": "162"
    },
    "231": {
      "fn": "Math.average",
      "offset": [
        670,
        677
      ],
      "op": "PUSH1",
      "path": "162",
      "value": "0x0"
    },
    "233": {
      "fn": "Math.average",
      "offset": [
        794,
        795
      ],
      "op": "PUSH1",
      "path": "162",
      "statement": 4,
      "value": "0x2"
    },
    "235": {
      "fn": "Math.average",
      "offset": [
        784,
        789
      ],
      "op": "PUSH2",
      "path": "162",
      "value": "0xF4"
    },
    "238": {
      "fn": "Math.average",
      "offset": [
        794,
        795
      ],
      "op": "DUP2",
      "path": "162"
    },
    "239": {
      "fn": "Math.average",
      "offset": [
        784,
        785
      ],
      "op": "DUP5",
      "path": "162"
    },
    "240": {
      "fn": "Math.average",
      "offset": [
        784,
        789
      ],
      "op": "PUSH2",
      "path": "162",
      "value": "0x1C3"
    },
    "243": {
      "fn": "Math.average",
      "jump": "i",
      "offset": [
        784,
        789
      ],
      "op": "JUMP",
      "path": "162"
    },
    "244": {
      "fn": "Math.average",
      "offset": [
        784,
        789
      ],
      "op": "JUMPDEST",
      "path": "162"
    },
    "245": {
      "fn": "Math.average",
      "offset": [
        774,
        779
      ],
      "op": "PUSH2",
      "path": "162",
      "value": "0xFF"
    },
    "248": {
      "fn": "Math.average",
      "offset": [
        778,
        779
      ],
      "op": "PUSH1",
      "path": "162",
      "value": "0x2"
    },
    "250": {
      "fn": "Math.average",
      "offset": [
        774,
        775
      ],
      "op": "DUP7",
      "path": "162"
    },
    "251": {
      "fn": "Math.average",
      "offset": [
        774,
        779
      ],
      "op": "PUSH2",
      "path": "162",
      "value": "0x1C3"
    },
    "254": {
      "fn": "Math.average",
      "jump": "i",
      "offset": [
        774,
        779
      ],
      "op": "JUMP",
      "path": "162"
    },
    "255": {
      "fn": "Math.average",
      "offset": [
        774,
        779
      ],
      "op": "JUMPDEST",
      "path": "162"
    },
    "256": {
      "fn": "Math.average",
      "offset": [
        773,
        790
      ],
      "op": "PUSH2",
      "path": "162",
      "value": "0x109"
    },
    "259": {
      "fn": "Math.average",
      "offset": [
        773,
        790
      ],
      "op": "SWAP2",
      "path": "162"
    },
    "260": {
      "fn": "Math.average",
      "offset": [
        773,
        790
      ],
      "op": "SWAP1",
      "path": "162"
    },
    "261": {
      "fn": "Math.average",
      "offset": [
        773,
        790
      ],
      "op": "PUSH2",
      "path": "162",
      "value": "0x1D7"
    },
    "264": {
      "fn": "Math.average",
      "jump": "i",
      "offset": [
        773,
        790
      ],
      "op": "JUMP",
      "path": "162"
    },
    "265": {
      "fn": "Math.average",
      "offset": [
        773,
        790
      ],
      "op": "JUMPDEST",
      "path": "162"
    },
    "266": {
      "fn": "Math.average",
      "offset": [
        772,
        795
      ],
      "op": "PUSH2",
      "path": "162",
      "value": "0x113"
    },
    "269": {
      "fn": "Math.average",
      "offset": [
        772,
        795
      ],
      "op": "SWAP2",
      "path": "162"
    },
    "270": {
      "fn": "Math.average",
      "offset": [
        772,
        795
      ],
      "op": "SWAP1",
      "path": "162"
    },
    "271": {
      "fn": "Math.average",
      "offset": [
        772,
        795
      ],
      "op": "PUSH2",
      "path": "162",
      "value": "0x1FD"
    },
    "274": {
      "fn": "Math.average",
      "jump": "i",
      "offset": [
        772,
        795
      ],
      "op": "JUMP",
      "path": "162"
    },
    "275": {
      "fn": "Math.average",
      "offset": [
        772,
        795
      ],
      "op": "JUMPDEST",
      "path": "162"
    },
    "276": {
      "fn": "Math.average",
      "offset": [
        762,
        767
      ],
      "op": "PUSH2",
      "path": "162",
      "value": "0x11E"
    },
    "279": {
      "fn": "Math.average",
      "offset": [
        766,
        767
      ],
      "op": "PUSH1",
      "path": "162",
      "value": "0x2"
    },
    "281": {
      "fn": "Math.average",
      "offset": [
        762,
        763
      ],
      "op": "DUP5",
      "path": "162"
    },
    "282": {
      "fn": "Math.average",
      "offset": [
        762,
        767
      ],
      "op": "PUSH2",
      "path": "162",
      "value": "0x1FD"
    },
    "285": {
      "fn": "Math.average",
      "jump": "i",
      "offset": [
        762,
        767
      ],
      "op": "JUMP",
      "path": "162"
    },
    "286": {
      "fn": "Math.average",
      "offset": [
        762,
        767
      ],
      "op": "JUMPDEST",
      "path": "162"
    },
    "287": {
      "fn": "Math.average",
      "offset": [
        752,
        757
      ],
      "op": "PUSH2",
      "path": "162",
      "value": "0x129"
    },
    "290": {
      "fn": "Math.average",
      "offset": [
        756,
        757
      ],
      "op": "PUSH1",
      "path": "162",
      "value": "0x2"
    },
    "292": {
      "fn": "Math.average",
      "offset": [
        752,
        753
      ],
      "op": "DUP7",
      "path": "162"
    },
    "293": {
      "fn": "Math.average",
      "offset": [
        752,
        757
      ],
      "op": "PUSH2",
      "path": "162",
      "value": "0x1FD"
    },
    "296": {
      "fn": "Math.average",
      "jump": "i",
      "offset": [
        752,
        757
      ],
      "op": "JUMP",
      "path": "162"
    },
    "297": {
      "fn": "Math.average",
      "offset": [
        752,
        757
      ],
      "op": "JUMPDEST",
      "path": "162"
    },
    "298": {
      "fn": "Math.average",
      "offset": [
        751,
        768
      ],
      "op": "PUSH2",
      "path": "162",
      "value": "0x133"
    },
    "301": {
      "fn": "Math.average",
      "offset": [
        751,
        768
      ],
      "op": "SWAP2",
      "path": "162"
    },
    "302": {
      "fn": "Math.average",
      "offset": [
        751,
        768
      ],
      "op": "SWAP1",
      "path": "162"
    },
    "303": {
      "fn": "Math.average",
      "offset": [
        751,
        768
      ],
      "op": "PUSH2",
      "path": "162",
      "value": "0x1D7"
    },
    "306": {
      "fn": "Math.average",
      "jump": "i",
      "offset": [
        751,
        768
      ],
      "op": "JUMP",
      "path": "162"
    },
    "307": {
      "fn": "Math.average",
      "offset": [
        751,
        768
      ],
      "op": "JUMPDEST",
      "path": "162"
    },
    "308": {
      "fn": "Math.average",
      "offset": [
        751,
        796
      ],
      "op": "PUSH2",
      "path": "162",
      "value": "0xBB"
    },
    "311": {
      "fn": "Math.average",
      "offset": [
        751,
        796
      ],
      "op": "SWAP2",
      "path": "162"
    },
    "312": {
      "fn": "Math.average",
      "offset": [
        751,
        796
      ],
      "op": "SWAP1",
      "path": "162"
    },
    "313": {
      "fn": "Math.average",
      "offset": [
        751,
        796
      ],
      "op": "PUSH2",
      "path": "162",
      "value": "0x1D7"
    },
    "316": {
      "fn": "Math.average",
      "jump": "i",
      "offset": [
        751,
        796
      ],
      "op": "JUMP",
      "path": "162"
    },
    "317": {
      "fn": "Math.max",
      "offset": [
        215,
        320
      ],
      "op": "JUMPDEST",
      "path": "162"
    },
    "318": {
      "fn": "Math.max",
      "offset": [
        273,
        280
      ],
      "op": "PUSH1",
      "path": "162",
      "value": "0x0"
    },
    "320": {
      "fn": "Math.max",
      "offset": [
        304,
        305
      ],
      "op": "DUP2",
      "path": "162",
      "statement": 5
    },
    "321": {
      "fn": "Math.max",
      "offset": [
        299,
        300
      ],
      "op": "DUP4",
      "path": "162"
    },
    "322": {
      "fn": "Math.max",
      "offset": [
        299,
        305
      ],
      "op": "LT",
      "path": "162"
    },
    "323": {
      "branch": 8,
      "fn": "Math.max",
      "offset": [
        299,
        305
      ],
      "op": "ISZERO",
      "path": "162"
    },
    "324": {
      "fn": "Math.max",
      "offset": [
        299,
        313
      ],
      "op": "PUSH2",
      "path": "162",
      "value": "0x14D"
    },
    "327": {
      "branch": 8,
      "fn": "Math.max",
      "offset": [
        299,
        313
      ],
      "op": "JUMPI",
      "path": "162"
    },
    "328": {
      "fn": "Math.max",
      "offset": [
        312,
        313
      ],
      "op": "DUP2",
      "path": "162"
    },
    "329": {
      "fn": "Math.max",
      "offset": [
        299,
        313
      ],
      "op": "PUSH2",
      "path": "162",
      "value": "0xBB"
    },
    "332": {
      "fn": "Math.max",
      "offset": [
        299,
        313
      ],
      "op": "JUMP",
      "path": "162"
    },
    "333": {
      "fn": "Math.max",
      "offset": [
        299,
        313
      ],
      "op": "JUMPDEST",
      "path": "162"
    },
    "334": {
      "op": "POP"
    },
    "335": {
      "fn": "Math.max",
      "offset": [
        308,
        309
      ],
      "op": "SWAP1",
      "path": "162"
    },
    "336": {
      "fn": "Math.max",
      "offset": [
        308,
        309
      ],
      "op": "SWAP2",
      "path": "162"
    },
    "337": {
      "fn": "Math.max",
      "offset": [
        215,
        320
      ],
      "op": "SWAP1",
      "path": "162"
    },
    "338": {
      "op": "POP"
    },
    "339": {
      "fn": "Math.max",
      "jump": "o",
      "offset": [
        215,
        320
      ],
      "op": "JUMP",
      "path": "162"
    },
    "340": {
      "fn": "Math.min",
      "offset": [
        391,
        495
      ],
      "op": "JUMPDEST",
      "path": "162"
    },
    "341": {
      "fn": "Math.min",
      "offset": [
        449,
        456
      ],
      "op": "PUSH1",
      "path": "162",
      "value": "0x0"
    },
    "343": {
      "fn": "Math.min",
      "offset": [
        479,
        480
      ],
      "op": "DUP2",
      "path": "162",
      "statement": 6
    },
    "344": {
      "fn": "Math.min",
      "offset": [
        475,
        476
      ],
      "op": "DUP4",
      "path": "162"
    },
    "345": {
      "branch": 9,
      "fn": "Math.min",
      "offset": [
        475,
        480
      ],
      "op": "LT",
      "path": "162"
    },
    "346": {
      "fn": "Math.min",
      "offset": [
        475,
        488
      ],
      "op": "PUSH2",
      "path": "162",
      "value": "0x14D"
    },
    "349": {
      "branch": 9,
      "fn": "Math.min",
      "offset": [
        475,
        488
      ],
      "op": "JUMPI",
      "path": "162"
    },
    "350": {
      "fn": "Math.min",
      "offset": [
        487,
        488
      ],
      "op": "DUP2",
      "path": "162"
    },
    "351": {
      "fn": "Math.min",
      "offset": [
        475,
        488
      ],
      "op": "PUSH2",
      "path": "162",
      "value": "0xBB"
    },
    "354": {
      "fn": "Math.min",
      "offset": [
        475,
        488
      ],
      "op": "JUMP",
      "path": "162"
    },
    "355": {
      "fn": "Math.ceilDiv",
      "offset": [
        1002,
        1196
      ],
      "op": "JUMPDEST",
      "path": "162"
    },
    "356": {
      "fn": "Math.ceilDiv",
      "offset": [
        1064,
        1071
      ],
      "op": "PUSH1",
      "path": "162",
      "value": "0x0"
    },
    "358": {
      "fn": "Math.ceilDiv",
      "offset": [
        1170,
        1175
      ],
      "op": "PUSH2",
      "path": "162",
      "statement": 7,
      "value": "0x16F"
    },
    "361": {
      "fn": "Math.ceilDiv",
      "offset": [
        1174,
        1175
      ],
      "op": "DUP3",
      "path": "162"
    },
    "362": {
      "fn": "Math.ceilDiv",
      "offset": [
        1170,
        1171
      ],
      "op": "DUP5",
      "path": "162"
    },
    "363": {
      "fn": "Math.ceilDiv",
      "offset": [
        1170,
        1175
      ],
      "op": "PUSH2",
      "path": "162",
      "value": "0x1C3"
    },
    "366": {
      "fn": "Math.ceilDiv",
      "jump": "i",
      "offset": [
        1170,
        1175
      ],
      "op": "JUMP",
      "path": "162"
    },
    "367": {
      "fn": "Math.ceilDiv",
      "offset": [
        1170,
        1175
      ],
      "op": "JUMPDEST",
      "path": "162"
    },
    "368": {
      "branch": 10,
      "fn": "Math.ceilDiv",
      "offset": [
        1170,
        1180
      ],
      "op": "ISZERO",
      "path": "162"
    },
    "369": {
      "fn": "Math.ceilDiv",
      "offset": [
        1170,
        1188
      ],
      "op": "PUSH2",
      "path": "162",
      "value": "0x17B"
    },
    "372": {
      "branch": 10,
      "fn": "Math.ceilDiv",
      "offset": [
        1170,
        1188
      ],
      "op": "JUMPI",
      "path": "162"
    },
    "373": {
      "fn": "Math.ceilDiv",
      "offset": [
        1187,
        1188
      ],
      "op": "PUSH1",
      "path": "162",
      "value": "0x1"
    },
    "375": {
      "fn": "Math.ceilDiv",
      "offset": [
        1170,
        1188
      ],
      "op": "PUSH2",
      "path": "162",
      "value": "0x17E"
    },
    "378": {
      "fn": "Math.ceilDiv",
      "offset": [
        1170,
        1188
      ],
      "op": "JUMP",
      "path": "162"
    },
    "379": {
      "fn": "Math.ceilDiv",
      "offset": [
        1170,
        1188
      ],
      "op": "JUMPDEST",
      "path": "162"
    },
    "380": {
      "fn": "Math.ceilDiv",
      "offset": [
        1183,
        1184
      ],
      "op": "PUSH1",
      "path": "162",
      "value": "0x0"
    },
    "382": {
      "fn": "Math.ceilDiv",
      "offset": [
        1170,
        1188
      ],
      "op": "JUMPDEST",
      "path": "162"
    },
    "383": {
      "fn": "Math.ceilDiv",
      "offset": [
        1161,
        1189
      ],
      "op": "PUSH1",
      "path": "162",
      "value": "0xFF"
    },
    "385": {
      "fn": "Math.ceilDiv",
      "offset": [
        1161,
        1189
      ],
      "op": "AND",
      "path": "162"
    },
    "386": {
      "fn": "Math.ceilDiv",
      "offset": [
        1161,
        1166
      ],
      "op": "PUSH2",
      "path": "162",
      "value": "0x133"
    },
    "389": {
      "fn": "Math.ceilDiv",
      "offset": [
        1165,
        1166
      ],
      "op": "DUP4",
      "path": "162"
    },
    "390": {
      "fn": "Math.ceilDiv",
      "offset": [
        1161,
        1162
      ],
      "op": "DUP6",
      "path": "162"
    },
    "391": {
      "fn": "Math.ceilDiv",
      "offset": [
        1161,
        1166
      ],
      "op": "PUSH2",
      "path": "162",
      "value": "0x1FD"
    },
    "394": {
      "fn": "Math.ceilDiv",
      "jump": "i",
      "offset": [
        1161,
        1166
      ],
      "op": "JUMP",
      "path": "162"
    },
    "395": {
      "op": "JUMPDEST"
    },
    "396": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "398": {
      "op": "DUP1"
    },
    "399": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "401": {
      "op": "DUP4"
    },
    "402": {
      "op": "DUP6"
    },
    "403": {
      "op": "SUB"
    },
    "404": {
      "op": "SLT"
    },
    "405": {
      "op": "ISZERO"
    },
    "406": {
      "op": "PUSH2",
      "value": "0x19E"
    },
    "409": {
      "op": "JUMPI"
    },
    "410": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "412": {
      "op": "DUP1"
    },
    "413": {
      "op": "REVERT"
    },
    "414": {
      "op": "JUMPDEST"
    },
    "415": {
      "op": "POP"
    },
    "416": {
      "op": "POP"
    },
    "417": {
      "op": "DUP1"
    },
    "418": {
      "op": "CALLDATALOAD"
    },
    "419": {
      "op": "SWAP3"
    },
    "420": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "422": {
      "op": "SWAP1"
    },
    "423": {
      "op": "SWAP2"
    },
    "424": {
      "op": "ADD"
    },
    "425": {
      "op": "CALLDATALOAD"
    },
    "426": {
      "op": "SWAP2"
    },
    "427": {
      "op": "POP"
    },
    "428": {
      "jump": "o",
      "op": "JUMP"
    },
    "429": {
      "op": "JUMPDEST"
    },
    "430": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "435": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "437": {
      "op": "SHL"
    },
    "438": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "440": {
      "op": "MSTORE"
    },
    "441": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "443": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "445": {
      "op": "MSTORE"
    },
    "446": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "448": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "450": {
      "op": "REVERT"
    },
    "451": {
      "op": "JUMPDEST"
    },
    "452": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "454": {
      "op": "DUP3"
    },
    "455": {
      "op": "PUSH2",
      "value": "0x1D2"
    },
    "458": {
      "op": "JUMPI"
    },
    "459": {
      "op": "PUSH2",
      "value": "0x1D2"
    },
    "462": {
      "op": "PUSH2",
      "value": "0x1AD"
    },
    "465": {
      "jump": "i",
      "op": "JUMP"
    },
    "466": {
      "op": "JUMPDEST"
    },
    "467": {
      "op": "POP"
    },
    "468": {
      "op": "MOD"
    },
    "469": {
      "op": "SWAP1"
    },
    "470": {
      "jump": "o",
      "op": "JUMP"
    },
    "471": {
      "op": "JUMPDEST"
    },
    "472": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "474": {
      "op": "DUP3"
    },
    "475": {
      "op": "NOT"
    },
    "476": {
      "op": "DUP3"
    },
    "477": {
      "op": "GT"
    },
    "478": {
      "op": "ISZERO"
    },
    "479": {
      "op": "PUSH2",
      "value": "0x1F8"
    },
    "482": {
      "op": "JUMPI"
    },
    "483": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "488": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "490": {
      "op": "SHL"
    },
    "491": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "493": {
      "op": "MSTORE"
    },
    "494": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "496": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "498": {
      "op": "MSTORE"
    },
    "499": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "501": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "503": {
      "op": "REVERT"
    },
    "504": {
      "op": "JUMPDEST"
    },
    "505": {
      "op": "POP"
    },
    "506": {
      "op": "ADD"
    },
    "507": {
      "op": "SWAP1"
    },
    "508": {
      "jump": "o",
      "op": "JUMP"
    },
    "509": {
      "op": "JUMPDEST"
    },
    "510": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "512": {
      "op": "DUP3"
    },
    "513": {
      "op": "PUSH2",
      "value": "0x20C"
    },
    "516": {
      "op": "JUMPI"
    },
    "517": {
      "op": "PUSH2",
      "value": "0x20C"
    },
    "520": {
      "op": "PUSH2",
      "value": "0x1AD"
    },
    "523": {
      "jump": "i",
      "op": "JUMP"
    },
    "524": {
      "op": "JUMPDEST"
    },
    "525": {
      "op": "POP"
    },
    "526": {
      "op": "DIV"
    },
    "527": {
      "op": "SWAP1"
    },
    "528": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "3f32babf12eca3aa789c016a8b2893198904fc6a",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"../utils/math/Math.sol\";\n\ncontract MathMock {\n    function max(uint256 a, uint256 b) public pure returns (uint256) {\n        return Math.max(a, b);\n    }\n\n    function min(uint256 a, uint256 b) public pure returns (uint256) {\n        return Math.min(a, b);\n    }\n\n    function average(uint256 a, uint256 b) public pure returns (uint256) {\n        return Math.average(a, b);\n    }\n\n    function ceilDiv(uint256 a, uint256 b) public pure returns (uint256) {\n        return Math.ceilDiv(a, b);\n    }\n}\n",
  "sourceMap": "92:472:63:-:0;;;;;;;;;;;;;;;;;;;",
  "sourcePath": "contracts/openzeppelin/contracts/mocks/MathMock.sol",
  "type": "contract"
}