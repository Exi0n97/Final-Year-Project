{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name_",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol_",
          "type": "string"
        },
        {
          "internalType": "address[]",
          "name": "defaultOperators_",
          "type": "address[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "tokenHolder",
          "type": "address"
        }
      ],
      "name": "AuthorizedOperator",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "operatorData",
          "type": "bytes"
        }
      ],
      "name": "Burned",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "operatorData",
          "type": "bytes"
        }
      ],
      "name": "Minted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "tokenHolder",
          "type": "address"
        }
      ],
      "name": "RevokedOperator",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "operatorData",
          "type": "bytes"
        }
      ],
      "name": "Sent",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "holder",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "authorizeOperator",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenHolder",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "defaultOperators",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "granularity",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "tokenHolder",
          "type": "address"
        }
      ],
      "name": "isOperatorFor",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "operatorData",
          "type": "bytes"
        }
      ],
      "name": "operatorBurn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "operatorData",
          "type": "bytes"
        }
      ],
      "name": "operatorSend",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "revokeOperator",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "send",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "holder",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "108": "contracts/openzeppelin/contracts/token/ERC20/IERC20.sol",
    "135": "contracts/openzeppelin/contracts/token/ERC777/ERC777.sol",
    "136": "contracts/openzeppelin/contracts/token/ERC777/IERC777.sol",
    "137": "contracts/openzeppelin/contracts/token/ERC777/IERC777Recipient.sol",
    "138": "contracts/openzeppelin/contracts/token/ERC777/IERC777Sender.sol",
    "140": "contracts/openzeppelin/contracts/utils/Address.sol",
    "142": "contracts/openzeppelin/contracts/utils/Context.sol",
    "161": "contracts/openzeppelin/contracts/utils/introspection/IERC1820Registry.sol"
  },
  "ast": {
    "absolutePath": "contracts/openzeppelin/contracts/token/ERC777/ERC777.sol",
    "exportedSymbols": {
      "Address": [
        17462
      ],
      "Context": [
        17568
      ],
      "ERC777": [
        16932
      ],
      "IERC1820Registry": [
        19286
      ],
      "IERC20": [
        11834
      ],
      "IERC777": [
        17091
      ],
      "IERC777Recipient": [
        17111
      ],
      "IERC777Sender": [
        17131
      ]
    },
    "id": 16933,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 15797,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:135"
      },
      {
        "absolutePath": "contracts/openzeppelin/contracts/token/ERC777/IERC777.sol",
        "file": "./IERC777.sol",
        "id": 15798,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 16933,
        "sourceUnit": 17092,
        "src": "58:23:135",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/openzeppelin/contracts/token/ERC777/IERC777Recipient.sol",
        "file": "./IERC777Recipient.sol",
        "id": 15799,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 16933,
        "sourceUnit": 17112,
        "src": "82:32:135",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/openzeppelin/contracts/token/ERC777/IERC777Sender.sol",
        "file": "./IERC777Sender.sol",
        "id": 15800,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 16933,
        "sourceUnit": 17132,
        "src": "115:29:135",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "../ERC20/IERC20.sol",
        "id": 15801,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 16933,
        "sourceUnit": 11835,
        "src": "145:29:135",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/openzeppelin/contracts/utils/Address.sol",
        "file": "../../utils/Address.sol",
        "id": 15802,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 16933,
        "sourceUnit": 17463,
        "src": "175:33:135",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/openzeppelin/contracts/utils/Context.sol",
        "file": "../../utils/Context.sol",
        "id": 15803,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 16933,
        "sourceUnit": 17569,
        "src": "209:33:135",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/openzeppelin/contracts/utils/introspection/IERC1820Registry.sol",
        "file": "../../utils/introspection/IERC1820Registry.sol",
        "id": 15804,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 16933,
        "sourceUnit": 19287,
        "src": "243:56:135",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 15806,
              "name": "Context",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 17568,
              "src": "1033:7:135"
            },
            "id": 15807,
            "nodeType": "InheritanceSpecifier",
            "src": "1033:7:135"
          },
          {
            "baseName": {
              "id": 15808,
              "name": "IERC777",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 17091,
              "src": "1042:7:135"
            },
            "id": 15809,
            "nodeType": "InheritanceSpecifier",
            "src": "1042:7:135"
          },
          {
            "baseName": {
              "id": 15810,
              "name": "IERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 11834,
              "src": "1051:6:135"
            },
            "id": 15811,
            "nodeType": "InheritanceSpecifier",
            "src": "1051:6:135"
          }
        ],
        "canonicalName": "ERC777",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 15805,
          "nodeType": "StructuredDocumentation",
          "src": "301:712:135",
          "text": " @dev Implementation of the {IERC777} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n Support for ERC20 is included in this contract, as specified by the EIP: both\n the ERC777 and ERC20 interfaces can be safely used when interacting with it.\n Both {IERC777-Sent} and {IERC20-Transfer} events are emitted on token\n movements.\n Additionally, the {IERC777-granularity} value is hard-coded to `1`, meaning that there\n are no special restrictions in the amount of tokens that created, moved, or\n destroyed. This makes integration with ERC20 applications seamless."
        },
        "fullyImplemented": true,
        "id": 16932,
        "linearizedBaseContracts": [
          16932,
          11834,
          17091,
          17568
        ],
        "name": "ERC777",
        "nameLocation": "1023:6:135",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 15814,
            "libraryName": {
              "id": 15812,
              "name": "Address",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 17462,
              "src": "1070:7:135"
            },
            "nodeType": "UsingForDirective",
            "src": "1064:26:135",
            "typeName": {
              "id": 15813,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1082:7:135",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            }
          },
          {
            "constant": true,
            "id": 15820,
            "mutability": "constant",
            "name": "_ERC1820_REGISTRY",
            "nameLocation": "1131:17:135",
            "nodeType": "VariableDeclaration",
            "scope": 16932,
            "src": "1096:115:135",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC1820Registry_$19286",
              "typeString": "contract IERC1820Registry"
            },
            "typeName": {
              "id": 15816,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 15815,
                "name": "IERC1820Registry",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 19286,
                "src": "1096:16:135"
              },
              "referencedDeclaration": 19286,
              "src": "1096:16:135",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC1820Registry_$19286",
                "typeString": "contract IERC1820Registry"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "307831383230613442373631384264453731446365386364633733614142364339353930356661443234",
                  "id": 15818,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1168:42:135",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "value": "0x1820a4B7618BdE71Dce8cdc73aAB6C95905faD24"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 15817,
                "name": "IERC1820Registry",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 19286,
                "src": "1151:16:135",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_contract$_IERC1820Registry_$19286_$",
                  "typeString": "type(contract IERC1820Registry)"
                }
              },
              "id": 15819,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1151:60:135",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC1820Registry_$19286",
                "typeString": "contract IERC1820Registry"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 15824,
            "mutability": "mutable",
            "name": "_balances",
            "nameLocation": "1254:9:135",
            "nodeType": "VariableDeclaration",
            "scope": 16932,
            "src": "1218:45:135",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 15823,
              "keyType": {
                "id": 15821,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1226:7:135",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1218:27:135",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 15822,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1237:7:135",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 15826,
            "mutability": "mutable",
            "name": "_totalSupply",
            "nameLocation": "1286:12:135",
            "nodeType": "VariableDeclaration",
            "scope": 16932,
            "src": "1270:28:135",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 15825,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1270:7:135",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 15828,
            "mutability": "mutable",
            "name": "_name",
            "nameLocation": "1320:5:135",
            "nodeType": "VariableDeclaration",
            "scope": 16932,
            "src": "1305:20:135",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 15827,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "1305:6:135",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 15830,
            "mutability": "mutable",
            "name": "_symbol",
            "nameLocation": "1346:7:135",
            "nodeType": "VariableDeclaration",
            "scope": 16932,
            "src": "1331:22:135",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 15829,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "1331:6:135",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "private"
          },
          {
            "constant": true,
            "id": 15835,
            "mutability": "constant",
            "name": "_TOKENS_SENDER_INTERFACE_HASH",
            "nameLocation": "1385:29:135",
            "nodeType": "VariableDeclaration",
            "scope": 16932,
            "src": "1360:88:135",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 15831,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "1360:7:135",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "455243373737546f6b656e7353656e646572",
                  "id": 15833,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1427:20:135",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_29ddb589b1fb5fc7cf394961c1adf5f8c6454761adf795e67fe149f658abe895",
                    "typeString": "literal_string \"ERC777TokensSender\""
                  },
                  "value": "ERC777TokensSender"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_29ddb589b1fb5fc7cf394961c1adf5f8c6454761adf795e67fe149f658abe895",
                    "typeString": "literal_string \"ERC777TokensSender\""
                  }
                ],
                "id": 15832,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": -8,
                "src": "1417:9:135",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 15834,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1417:31:135",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "private"
          },
          {
            "constant": true,
            "id": 15840,
            "mutability": "constant",
            "name": "_TOKENS_RECIPIENT_INTERFACE_HASH",
            "nameLocation": "1479:32:135",
            "nodeType": "VariableDeclaration",
            "scope": 16932,
            "src": "1454:94:135",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 15836,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "1454:7:135",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "455243373737546f6b656e73526563697069656e74",
                  "id": 15838,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1524:23:135",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_b281fc8c12954d22544db45de3159a39272895b169a852b314f9cc762e44c53b",
                    "typeString": "literal_string \"ERC777TokensRecipient\""
                  },
                  "value": "ERC777TokensRecipient"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_b281fc8c12954d22544db45de3159a39272895b169a852b314f9cc762e44c53b",
                    "typeString": "literal_string \"ERC777TokensRecipient\""
                  }
                ],
                "id": 15837,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": -8,
                "src": "1514:9:135",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 15839,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1514:34:135",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 15843,
            "mutability": "mutable",
            "name": "_defaultOperatorsArray",
            "nameLocation": "1665:22:135",
            "nodeType": "VariableDeclaration",
            "scope": 16932,
            "src": "1647:40:135",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 15841,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1647:7:135",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 15842,
              "nodeType": "ArrayTypeName",
              "src": "1647:9:135",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 15847,
            "mutability": "mutable",
            "name": "_defaultOperators",
            "nameLocation": "1814:17:135",
            "nodeType": "VariableDeclaration",
            "scope": 16932,
            "src": "1781:50:135",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 15846,
              "keyType": {
                "id": 15844,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1789:7:135",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1781:24:135",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 15845,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "1800:4:135",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 15853,
            "mutability": "mutable",
            "name": "_operators",
            "nameLocation": "1974:10:135",
            "nodeType": "VariableDeclaration",
            "scope": 16932,
            "src": "1921:63:135",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
              "typeString": "mapping(address => mapping(address => bool))"
            },
            "typeName": {
              "id": 15852,
              "keyType": {
                "id": 15848,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1929:7:135",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1921:44:135",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                "typeString": "mapping(address => mapping(address => bool))"
              },
              "valueType": {
                "id": 15851,
                "keyType": {
                  "id": 15849,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1948:7:135",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "1940:24:135",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                  "typeString": "mapping(address => bool)"
                },
                "valueType": {
                  "id": 15850,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "1959:4:135",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 15859,
            "mutability": "mutable",
            "name": "_revokedDefaultOperators",
            "nameLocation": "2043:24:135",
            "nodeType": "VariableDeclaration",
            "scope": 16932,
            "src": "1990:77:135",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
              "typeString": "mapping(address => mapping(address => bool))"
            },
            "typeName": {
              "id": 15858,
              "keyType": {
                "id": 15854,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1998:7:135",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1990:44:135",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                "typeString": "mapping(address => mapping(address => bool))"
              },
              "valueType": {
                "id": 15857,
                "keyType": {
                  "id": 15855,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "2017:7:135",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "2009:24:135",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                  "typeString": "mapping(address => bool)"
                },
                "valueType": {
                  "id": 15856,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "2028:4:135",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 15865,
            "mutability": "mutable",
            "name": "_allowances",
            "nameLocation": "2154:11:135",
            "nodeType": "VariableDeclaration",
            "scope": 16932,
            "src": "2098:67:135",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
              "typeString": "mapping(address => mapping(address => uint256))"
            },
            "typeName": {
              "id": 15864,
              "keyType": {
                "id": 15860,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "2106:7:135",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "2098:47:135",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                "typeString": "mapping(address => mapping(address => uint256))"
              },
              "valueType": {
                "id": 15863,
                "keyType": {
                  "id": 15861,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "2125:7:135",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "2117:27:135",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                  "typeString": "mapping(address => uint256)"
                },
                "valueType": {
                  "id": 15862,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "2136:7:135",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                }
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 15941,
              "nodeType": "Block",
              "src": "2364:490:135",
              "statements": [
                {
                  "expression": {
                    "id": 15878,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 15876,
                      "name": "_name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15828,
                      "src": "2374:5:135",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 15877,
                      "name": "name_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15868,
                      "src": "2382:5:135",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "2374:13:135",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 15879,
                  "nodeType": "ExpressionStatement",
                  "src": "2374:13:135"
                },
                {
                  "expression": {
                    "id": 15882,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 15880,
                      "name": "_symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15830,
                      "src": "2397:7:135",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 15881,
                      "name": "symbol_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15870,
                      "src": "2407:7:135",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "2397:17:135",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 15883,
                  "nodeType": "ExpressionStatement",
                  "src": "2397:17:135"
                },
                {
                  "expression": {
                    "id": 15886,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 15884,
                      "name": "_defaultOperatorsArray",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15843,
                      "src": "2425:22:135",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                        "typeString": "address[] storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 15885,
                      "name": "defaultOperators_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15873,
                      "src": "2450:17:135",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[] memory"
                      }
                    },
                    "src": "2425:42:135",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                      "typeString": "address[] storage ref"
                    }
                  },
                  "id": 15887,
                  "nodeType": "ExpressionStatement",
                  "src": "2425:42:135"
                },
                {
                  "body": {
                    "id": 15907,
                    "nodeType": "Block",
                    "src": "2532:71:135",
                    "statements": [
                      {
                        "expression": {
                          "id": 15905,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 15899,
                              "name": "_defaultOperators",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 15847,
                              "src": "2546:17:135",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 15903,
                            "indexExpression": {
                              "baseExpression": {
                                "id": 15900,
                                "name": "defaultOperators_",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 15873,
                                "src": "2564:17:135",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                  "typeString": "address[] memory"
                                }
                              },
                              "id": 15902,
                              "indexExpression": {
                                "id": 15901,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 15889,
                                "src": "2582:1:135",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2564:20:135",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2546:39:135",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 15904,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2588:4:135",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "2546:46:135",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 15906,
                        "nodeType": "ExpressionStatement",
                        "src": "2546:46:135"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 15895,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 15892,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15889,
                      "src": "2497:1:135",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 15893,
                        "name": "defaultOperators_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15873,
                        "src": "2501:17:135",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 15894,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "2501:24:135",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2497:28:135",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 15908,
                  "initializationExpression": {
                    "assignments": [
                      15889
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 15889,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "2490:1:135",
                        "nodeType": "VariableDeclaration",
                        "scope": 15908,
                        "src": "2482:9:135",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 15888,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2482:7:135",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 15891,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 15890,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2494:1:135",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "2482:13:135"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 15897,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "2527:3:135",
                      "subExpression": {
                        "id": 15896,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15889,
                        "src": "2527:1:135",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 15898,
                    "nodeType": "ExpressionStatement",
                    "src": "2527:3:135"
                  },
                  "nodeType": "ForStatement",
                  "src": "2477:126:135"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 15914,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "2694:4:135",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC777_$16932",
                              "typeString": "contract ERC777"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC777_$16932",
                              "typeString": "contract ERC777"
                            }
                          ],
                          "id": 15913,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2686:7:135",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 15912,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2686:7:135",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 15915,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2686:13:135",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "455243373737546f6b656e",
                            "id": 15917,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2711:13:135",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_ac7fbab5f54a3ca8194167523c6753bfeb96a445279294b6125b68cce2177054",
                              "typeString": "literal_string \"ERC777Token\""
                            },
                            "value": "ERC777Token"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_ac7fbab5f54a3ca8194167523c6753bfeb96a445279294b6125b68cce2177054",
                              "typeString": "literal_string \"ERC777Token\""
                            }
                          ],
                          "id": 15916,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "2701:9:135",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 15918,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2701:24:135",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 15921,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "2735:4:135",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC777_$16932",
                              "typeString": "contract ERC777"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC777_$16932",
                              "typeString": "contract ERC777"
                            }
                          ],
                          "id": 15920,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2727:7:135",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 15919,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2727:7:135",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 15922,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2727:13:135",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 15909,
                        "name": "_ERC1820_REGISTRY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15820,
                        "src": "2644:17:135",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC1820Registry_$19286",
                          "typeString": "contract IERC1820Registry"
                        }
                      },
                      "id": 15911,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setInterfaceImplementer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 19225,
                      "src": "2644:41:135",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (address,bytes32,address) external"
                      }
                    },
                    "id": 15923,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2644:97:135",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15924,
                  "nodeType": "ExpressionStatement",
                  "src": "2644:97:135"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 15930,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "2801:4:135",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC777_$16932",
                              "typeString": "contract ERC777"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC777_$16932",
                              "typeString": "contract ERC777"
                            }
                          ],
                          "id": 15929,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2793:7:135",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 15928,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2793:7:135",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 15931,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2793:13:135",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "4552433230546f6b656e",
                            "id": 15933,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2818:12:135",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_aea199e31a596269b42cdafd93407f14436db6e4cad65417994c2eb37381e05a",
                              "typeString": "literal_string \"ERC20Token\""
                            },
                            "value": "ERC20Token"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_aea199e31a596269b42cdafd93407f14436db6e4cad65417994c2eb37381e05a",
                              "typeString": "literal_string \"ERC20Token\""
                            }
                          ],
                          "id": 15932,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "2808:9:135",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 15934,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2808:23:135",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 15937,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "2841:4:135",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC777_$16932",
                              "typeString": "contract ERC777"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC777_$16932",
                              "typeString": "contract ERC777"
                            }
                          ],
                          "id": 15936,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2833:7:135",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 15935,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2833:7:135",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 15938,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2833:13:135",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 15925,
                        "name": "_ERC1820_REGISTRY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15820,
                        "src": "2751:17:135",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC1820Registry_$19286",
                          "typeString": "contract IERC1820Registry"
                        }
                      },
                      "id": 15927,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setInterfaceImplementer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 19225,
                      "src": "2751:41:135",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (address,bytes32,address) external"
                      }
                    },
                    "id": 15939,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2751:96:135",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15940,
                  "nodeType": "ExpressionStatement",
                  "src": "2751:96:135"
                }
              ]
            },
            "documentation": {
              "id": 15866,
              "nodeType": "StructuredDocumentation",
              "src": "2172:65:135",
              "text": " @dev `defaultOperators` may be an empty array."
            },
            "id": 15942,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 15874,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15868,
                  "mutability": "mutable",
                  "name": "name_",
                  "nameLocation": "2277:5:135",
                  "nodeType": "VariableDeclaration",
                  "scope": 15942,
                  "src": "2263:19:135",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 15867,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2263:6:135",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15870,
                  "mutability": "mutable",
                  "name": "symbol_",
                  "nameLocation": "2306:7:135",
                  "nodeType": "VariableDeclaration",
                  "scope": 15942,
                  "src": "2292:21:135",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 15869,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2292:6:135",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15873,
                  "mutability": "mutable",
                  "name": "defaultOperators_",
                  "nameLocation": "2340:17:135",
                  "nodeType": "VariableDeclaration",
                  "scope": 15942,
                  "src": "2323:34:135",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 15871,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "2323:7:135",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 15872,
                    "nodeType": "ArrayTypeName",
                    "src": "2323:9:135",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2253:110:135"
            },
            "returnParameters": {
              "id": 15875,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2364:0:135"
            },
            "scope": 16932,
            "src": "2242:612:135",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              16941
            ],
            "body": {
              "id": 15951,
              "nodeType": "Block",
              "src": "2977:29:135",
              "statements": [
                {
                  "expression": {
                    "id": 15949,
                    "name": "_name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 15828,
                    "src": "2994:5:135",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 15948,
                  "id": 15950,
                  "nodeType": "Return",
                  "src": "2987:12:135"
                }
              ]
            },
            "documentation": {
              "id": 15943,
              "nodeType": "StructuredDocumentation",
              "src": "2860:43:135",
              "text": " @dev See {IERC777-name}."
            },
            "functionSelector": "06fdde03",
            "id": 15952,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "name",
            "nameLocation": "2917:4:135",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 15945,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2944:8:135"
            },
            "parameters": {
              "id": 15944,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2921:2:135"
            },
            "returnParameters": {
              "id": 15948,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15947,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 15952,
                  "src": "2962:13:135",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 15946,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2962:6:135",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2961:15:135"
            },
            "scope": 16932,
            "src": "2908:98:135",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              16947
            ],
            "body": {
              "id": 15961,
              "nodeType": "Block",
              "src": "3133:31:135",
              "statements": [
                {
                  "expression": {
                    "id": 15959,
                    "name": "_symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 15830,
                    "src": "3150:7:135",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 15958,
                  "id": 15960,
                  "nodeType": "Return",
                  "src": "3143:14:135"
                }
              ]
            },
            "documentation": {
              "id": 15953,
              "nodeType": "StructuredDocumentation",
              "src": "3012:45:135",
              "text": " @dev See {IERC777-symbol}."
            },
            "functionSelector": "95d89b41",
            "id": 15962,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "symbol",
            "nameLocation": "3071:6:135",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 15955,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3100:8:135"
            },
            "parameters": {
              "id": 15954,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3077:2:135"
            },
            "returnParameters": {
              "id": 15958,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15957,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 15962,
                  "src": "3118:13:135",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 15956,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3118:6:135",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3117:15:135"
            },
            "scope": 16932,
            "src": "3062:102:135",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 15970,
              "nodeType": "Block",
              "src": "3404:26:135",
              "statements": [
                {
                  "expression": {
                    "hexValue": "3138",
                    "id": 15968,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3421:2:135",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_18_by_1",
                      "typeString": "int_const 18"
                    },
                    "value": "18"
                  },
                  "functionReturnParameters": 15967,
                  "id": 15969,
                  "nodeType": "Return",
                  "src": "3414:9:135"
                }
              ]
            },
            "documentation": {
              "id": 15963,
              "nodeType": "StructuredDocumentation",
              "src": "3170:173:135",
              "text": " @dev See {ERC20-decimals}.\n Always returns 18, as per the\n [ERC777 EIP](https://eips.ethereum.org/EIPS/eip-777#backward-compatibility)."
            },
            "functionSelector": "313ce567",
            "id": 15971,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "decimals",
            "nameLocation": "3357:8:135",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 15964,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3365:2:135"
            },
            "returnParameters": {
              "id": 15967,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15966,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 15971,
                  "src": "3397:5:135",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 15965,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "3397:5:135",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3396:7:135"
            },
            "scope": 16932,
            "src": "3348:82:135",
            "stateMutability": "pure",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              16953
            ],
            "body": {
              "id": 15980,
              "nodeType": "Block",
              "src": "3615:25:135",
              "statements": [
                {
                  "expression": {
                    "hexValue": "31",
                    "id": 15978,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3632:1:135",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1_by_1",
                      "typeString": "int_const 1"
                    },
                    "value": "1"
                  },
                  "functionReturnParameters": 15977,
                  "id": 15979,
                  "nodeType": "Return",
                  "src": "3625:8:135"
                }
              ]
            },
            "documentation": {
              "id": 15972,
              "nodeType": "StructuredDocumentation",
              "src": "3436:104:135",
              "text": " @dev See {IERC777-granularity}.\n This implementation always returns `1`."
            },
            "functionSelector": "556f0dc7",
            "id": 15981,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "granularity",
            "nameLocation": "3554:11:135",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 15974,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3588:8:135"
            },
            "parameters": {
              "id": 15973,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3565:2:135"
            },
            "returnParameters": {
              "id": 15977,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15976,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 15981,
                  "src": "3606:7:135",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 15975,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3606:7:135",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3605:9:135"
            },
            "scope": 16932,
            "src": "3545:95:135",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              11765,
              16959
            ],
            "body": {
              "id": 15992,
              "nodeType": "Block",
              "src": "3788:36:135",
              "statements": [
                {
                  "expression": {
                    "id": 15990,
                    "name": "_totalSupply",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 15826,
                    "src": "3805:12:135",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 15989,
                  "id": 15991,
                  "nodeType": "Return",
                  "src": "3798:19:135"
                }
              ]
            },
            "documentation": {
              "id": 15982,
              "nodeType": "StructuredDocumentation",
              "src": "3646:50:135",
              "text": " @dev See {IERC777-totalSupply}."
            },
            "functionSelector": "18160ddd",
            "id": 15993,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "totalSupply",
            "nameLocation": "3710:11:135",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 15986,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 15984,
                  "name": "IERC20",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 11834,
                  "src": "3753:6:135"
                },
                {
                  "id": 15985,
                  "name": "IERC777",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 17091,
                  "src": "3761:7:135"
                }
              ],
              "src": "3744:25:135"
            },
            "parameters": {
              "id": 15983,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3721:2:135"
            },
            "returnParameters": {
              "id": 15989,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15988,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 15993,
                  "src": "3779:7:135",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 15987,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3779:7:135",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3778:9:135"
            },
            "scope": 16932,
            "src": "3701:123:135",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              11773,
              16967
            ],
            "body": {
              "id": 16008,
              "nodeType": "Block",
              "src": "4028:46:135",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 16004,
                      "name": "_balances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15824,
                      "src": "4045:9:135",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 16006,
                    "indexExpression": {
                      "id": 16005,
                      "name": "tokenHolder",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15996,
                      "src": "4055:11:135",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4045:22:135",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 16003,
                  "id": 16007,
                  "nodeType": "Return",
                  "src": "4038:29:135"
                }
              ]
            },
            "documentation": {
              "id": 15994,
              "nodeType": "StructuredDocumentation",
              "src": "3830:89:135",
              "text": " @dev Returns the amount of tokens owned by an account (`tokenHolder`)."
            },
            "functionSelector": "70a08231",
            "id": 16009,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOf",
            "nameLocation": "3933:9:135",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 16000,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 15998,
                  "name": "IERC20",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 11834,
                  "src": "3993:6:135"
                },
                {
                  "id": 15999,
                  "name": "IERC777",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 17091,
                  "src": "4001:7:135"
                }
              ],
              "src": "3984:25:135"
            },
            "parameters": {
              "id": 15997,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15996,
                  "mutability": "mutable",
                  "name": "tokenHolder",
                  "nameLocation": "3951:11:135",
                  "nodeType": "VariableDeclaration",
                  "scope": 16009,
                  "src": "3943:19:135",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 15995,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3943:7:135",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3942:21:135"
            },
            "returnParameters": {
              "id": 16003,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16002,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 16009,
                  "src": "4019:7:135",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 16001,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4019:7:135",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4018:9:135"
            },
            "scope": 16932,
            "src": "3924:150:135",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              16977
            ],
            "body": {
              "id": 16030,
              "nodeType": "Block",
              "src": "4326:71:135",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 16021,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 17558,
                          "src": "4342:10:135",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 16022,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4342:12:135",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 16023,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16012,
                        "src": "4356:9:135",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 16024,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16014,
                        "src": "4367:6:135",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 16025,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16016,
                        "src": "4375:4:135",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 16026,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4381:2:135",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      },
                      {
                        "hexValue": "74727565",
                        "id": 16027,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4385:4:135",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 16020,
                      "name": "_send",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16611,
                      "src": "4336:5:135",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bool_$returns$__$",
                        "typeString": "function (address,address,uint256,bytes memory,bytes memory,bool)"
                      }
                    },
                    "id": 16028,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4336:54:135",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 16029,
                  "nodeType": "ExpressionStatement",
                  "src": "4336:54:135"
                }
              ]
            },
            "documentation": {
              "id": 16010,
              "nodeType": "StructuredDocumentation",
              "src": "4080:119:135",
              "text": " @dev See {IERC777-send}.\n Also emits a {IERC20-Transfer} event for ERC20 compatibility."
            },
            "functionSelector": "9bd9bbc6",
            "id": 16031,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "send",
            "nameLocation": "4213:4:135",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 16018,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4317:8:135"
            },
            "parameters": {
              "id": 16017,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16012,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "4235:9:135",
                  "nodeType": "VariableDeclaration",
                  "scope": 16031,
                  "src": "4227:17:135",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 16011,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4227:7:135",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16014,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "4262:6:135",
                  "nodeType": "VariableDeclaration",
                  "scope": 16031,
                  "src": "4254:14:135",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 16013,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4254:7:135",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16016,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "4291:4:135",
                  "nodeType": "VariableDeclaration",
                  "scope": 16031,
                  "src": "4278:17:135",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 16015,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "4278:5:135",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4217:84:135"
            },
            "returnParameters": {
              "id": 16019,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4326:0:135"
            },
            "scope": 16932,
            "src": "4204:193:135",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              11783
            ],
            "body": {
              "id": 16087,
              "nodeType": "Block",
              "src": "4720:347:135",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 16048,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 16043,
                          "name": "recipient",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16034,
                          "src": "4738:9:135",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 16046,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4759:1:135",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 16045,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4751:7:135",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 16044,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4751:7:135",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 16047,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4751:10:135",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "4738:23:135",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433737373a207472616e7366657220746f20746865207a65726f2061646472657373",
                        "id": 16049,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4763:38:135",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ad1e0a820fe2a50167f341463ad5f6754fad4cf77d809141bc408c516e69c59a",
                          "typeString": "literal_string \"ERC777: transfer to the zero address\""
                        },
                        "value": "ERC777: transfer to the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ad1e0a820fe2a50167f341463ad5f6754fad4cf77d809141bc408c516e69c59a",
                          "typeString": "literal_string \"ERC777: transfer to the zero address\""
                        }
                      ],
                      "id": 16042,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4730:7:135",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 16050,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4730:72:135",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 16051,
                  "nodeType": "ExpressionStatement",
                  "src": "4730:72:135"
                },
                {
                  "assignments": [
                    16053
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 16053,
                      "mutability": "mutable",
                      "name": "from",
                      "nameLocation": "4821:4:135",
                      "nodeType": "VariableDeclaration",
                      "scope": 16087,
                      "src": "4813:12:135",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 16052,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4813:7:135",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 16056,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 16054,
                      "name": "_msgSender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17558,
                      "src": "4828:10:135",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 16055,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4828:12:135",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4813:27:135"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 16058,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16053,
                        "src": "4869:4:135",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 16059,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16053,
                        "src": "4875:4:135",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 16060,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16034,
                        "src": "4881:9:135",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 16061,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16036,
                        "src": "4892:6:135",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 16062,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4900:2:135",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      },
                      {
                        "hexValue": "",
                        "id": 16063,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4904:2:135",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "id": 16057,
                      "name": "_callTokensToSend",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16860,
                      "src": "4851:17:135",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,address,uint256,bytes memory,bytes memory)"
                      }
                    },
                    "id": 16064,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4851:56:135",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 16065,
                  "nodeType": "ExpressionStatement",
                  "src": "4851:56:135"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 16067,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16053,
                        "src": "4924:4:135",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 16068,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16053,
                        "src": "4930:4:135",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 16069,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16034,
                        "src": "4936:9:135",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 16070,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16036,
                        "src": "4947:6:135",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 16071,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4955:2:135",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      },
                      {
                        "hexValue": "",
                        "id": 16072,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4959:2:135",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "id": 16066,
                      "name": "_move",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16770,
                      "src": "4918:5:135",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,address,uint256,bytes memory,bytes memory)"
                      }
                    },
                    "id": 16073,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4918:44:135",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 16074,
                  "nodeType": "ExpressionStatement",
                  "src": "4918:44:135"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 16076,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16053,
                        "src": "4993:4:135",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 16077,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16053,
                        "src": "4999:4:135",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 16078,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16034,
                        "src": "5005:9:135",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 16079,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16036,
                        "src": "5016:6:135",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 16080,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5024:2:135",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      },
                      {
                        "hexValue": "",
                        "id": 16081,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5028:2:135",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 16082,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5032:5:135",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 16075,
                      "name": "_callTokensReceived",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16918,
                      "src": "4973:19:135",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bool_$returns$__$",
                        "typeString": "function (address,address,address,uint256,bytes memory,bytes memory,bool)"
                      }
                    },
                    "id": 16083,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4973:65:135",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 16084,
                  "nodeType": "ExpressionStatement",
                  "src": "4973:65:135"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 16085,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "5056:4:135",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 16041,
                  "id": 16086,
                  "nodeType": "Return",
                  "src": "5049:11:135"
                }
              ]
            },
            "documentation": {
              "id": 16032,
              "nodeType": "StructuredDocumentation",
              "src": "4403:220:135",
              "text": " @dev See {IERC20-transfer}.\n Unlike `send`, `recipient` is _not_ required to implement the {IERC777Recipient}\n interface if it is a contract.\n Also emits a {Sent} event."
            },
            "functionSelector": "a9059cbb",
            "id": 16088,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transfer",
            "nameLocation": "4637:8:135",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 16038,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4696:8:135"
            },
            "parameters": {
              "id": 16037,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16034,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "4654:9:135",
                  "nodeType": "VariableDeclaration",
                  "scope": 16088,
                  "src": "4646:17:135",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 16033,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4646:7:135",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16036,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "4673:6:135",
                  "nodeType": "VariableDeclaration",
                  "scope": 16088,
                  "src": "4665:14:135",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 16035,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4665:7:135",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4645:35:135"
            },
            "returnParameters": {
              "id": 16041,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16040,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 16088,
                  "src": "4714:4:135",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 16039,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4714:4:135",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4713:6:135"
            },
            "scope": 16932,
            "src": "4628:439:135",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              16985
            ],
            "body": {
              "id": 16105,
              "nodeType": "Block",
              "src": "5270:54:135",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 16098,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 17558,
                          "src": "5286:10:135",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 16099,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5286:12:135",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 16100,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16091,
                        "src": "5300:6:135",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 16101,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16093,
                        "src": "5308:4:135",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 16102,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5314:2:135",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "id": 16097,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16704,
                      "src": "5280:5:135",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,bytes memory,bytes memory)"
                      }
                    },
                    "id": 16103,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5280:37:135",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 16104,
                  "nodeType": "ExpressionStatement",
                  "src": "5280:37:135"
                }
              ]
            },
            "documentation": {
              "id": 16089,
              "nodeType": "StructuredDocumentation",
              "src": "5073:119:135",
              "text": " @dev See {IERC777-burn}.\n Also emits a {IERC20-Transfer} event for ERC20 compatibility."
            },
            "functionSelector": "fe9d9303",
            "id": 16106,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "burn",
            "nameLocation": "5206:4:135",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 16095,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5261:8:135"
            },
            "parameters": {
              "id": 16094,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16091,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "5219:6:135",
                  "nodeType": "VariableDeclaration",
                  "scope": 16106,
                  "src": "5211:14:135",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 16090,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5211:7:135",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16093,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "5240:4:135",
                  "nodeType": "VariableDeclaration",
                  "scope": 16106,
                  "src": "5227:17:135",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 16092,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "5227:5:135",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5210:35:135"
            },
            "returnParameters": {
              "id": 16096,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5270:0:135"
            },
            "scope": 16932,
            "src": "5197:127:135",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              16995
            ],
            "body": {
              "id": 16139,
              "nodeType": "Block",
              "src": "5493:205:135",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 16137,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 16131,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 16119,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 16117,
                          "name": "operator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16109,
                          "src": "5522:8:135",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 16118,
                          "name": "tokenHolder",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16111,
                          "src": "5534:11:135",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "5522:23:135",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "||",
                      "rightExpression": {
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "id": 16129,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "baseExpression": {
                                "id": 16120,
                                "name": "_defaultOperators",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 15847,
                                "src": "5562:17:135",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                  "typeString": "mapping(address => bool)"
                                }
                              },
                              "id": 16122,
                              "indexExpression": {
                                "id": 16121,
                                "name": "operator",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 16109,
                                "src": "5580:8:135",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "5562:27:135",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "&&",
                            "rightExpression": {
                              "id": 16128,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "!",
                              "prefix": true,
                              "src": "5593:48:135",
                              "subExpression": {
                                "baseExpression": {
                                  "baseExpression": {
                                    "id": 16123,
                                    "name": "_revokedDefaultOperators",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 15859,
                                    "src": "5594:24:135",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                                      "typeString": "mapping(address => mapping(address => bool))"
                                    }
                                  },
                                  "id": 16125,
                                  "indexExpression": {
                                    "id": 16124,
                                    "name": "tokenHolder",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 16111,
                                    "src": "5619:11:135",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "5594:37:135",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                    "typeString": "mapping(address => bool)"
                                  }
                                },
                                "id": 16127,
                                "indexExpression": {
                                  "id": 16126,
                                  "name": "operator",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 16109,
                                  "src": "5632:8:135",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "5594:47:135",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "src": "5562:79:135",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          }
                        ],
                        "id": 16130,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "5561:81:135",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "src": "5522:120:135",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 16132,
                          "name": "_operators",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15853,
                          "src": "5658:10:135",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                            "typeString": "mapping(address => mapping(address => bool))"
                          }
                        },
                        "id": 16134,
                        "indexExpression": {
                          "id": 16133,
                          "name": "tokenHolder",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16111,
                          "src": "5669:11:135",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5658:23:135",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 16136,
                      "indexExpression": {
                        "id": 16135,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16109,
                        "src": "5682:8:135",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "5658:33:135",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "5522:169:135",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 16116,
                  "id": 16138,
                  "nodeType": "Return",
                  "src": "5503:188:135"
                }
              ]
            },
            "documentation": {
              "id": 16107,
              "nodeType": "StructuredDocumentation",
              "src": "5330:52:135",
              "text": " @dev See {IERC777-isOperatorFor}."
            },
            "functionSelector": "d95b6371",
            "id": 16140,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isOperatorFor",
            "nameLocation": "5396:13:135",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 16113,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5469:8:135"
            },
            "parameters": {
              "id": 16112,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16109,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "5418:8:135",
                  "nodeType": "VariableDeclaration",
                  "scope": 16140,
                  "src": "5410:16:135",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 16108,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5410:7:135",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16111,
                  "mutability": "mutable",
                  "name": "tokenHolder",
                  "nameLocation": "5436:11:135",
                  "nodeType": "VariableDeclaration",
                  "scope": 16140,
                  "src": "5428:19:135",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 16110,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5428:7:135",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5409:39:135"
            },
            "returnParameters": {
              "id": 16116,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16115,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 16140,
                  "src": "5487:4:135",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 16114,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5487:4:135",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5486:6:135"
            },
            "scope": 16932,
            "src": "5387:311:135",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              17001
            ],
            "body": {
              "id": 16184,
              "nodeType": "Block",
              "src": "5834:343:135",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 16151,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 16148,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 17558,
                            "src": "5852:10:135",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 16149,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5852:12:135",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 16150,
                          "name": "operator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16143,
                          "src": "5868:8:135",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "5852:24:135",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433737373a20617574686f72697a696e672073656c66206173206f70657261746f72",
                        "id": 16152,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5878:38:135",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4682b297c30e70ba17ae545f9c27f948e3607c0cc7dd469250dfcf8daa94218c",
                          "typeString": "literal_string \"ERC777: authorizing self as operator\""
                        },
                        "value": "ERC777: authorizing self as operator"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4682b297c30e70ba17ae545f9c27f948e3607c0cc7dd469250dfcf8daa94218c",
                          "typeString": "literal_string \"ERC777: authorizing self as operator\""
                        }
                      ],
                      "id": 16147,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5844:7:135",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 16153,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5844:73:135",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 16154,
                  "nodeType": "ExpressionStatement",
                  "src": "5844:73:135"
                },
                {
                  "condition": {
                    "baseExpression": {
                      "id": 16155,
                      "name": "_defaultOperators",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15847,
                      "src": "5932:17:135",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      }
                    },
                    "id": 16157,
                    "indexExpression": {
                      "id": 16156,
                      "name": "operator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16143,
                      "src": "5950:8:135",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "5932:27:135",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 16176,
                    "nodeType": "Block",
                    "src": "6047:66:135",
                    "statements": [
                      {
                        "expression": {
                          "id": 16174,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 16167,
                                "name": "_operators",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 15853,
                                "src": "6061:10:135",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                                  "typeString": "mapping(address => mapping(address => bool))"
                                }
                              },
                              "id": 16171,
                              "indexExpression": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 16168,
                                  "name": "_msgSender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 17558,
                                  "src": "6072:10:135",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                    "typeString": "function () view returns (address)"
                                  }
                                },
                                "id": 16169,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6072:12:135",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "6061:24:135",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 16172,
                            "indexExpression": {
                              "id": 16170,
                              "name": "operator",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 16143,
                              "src": "6086:8:135",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "6061:34:135",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 16173,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6098:4:135",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "6061:41:135",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 16175,
                        "nodeType": "ExpressionStatement",
                        "src": "6061:41:135"
                      }
                    ]
                  },
                  "id": 16177,
                  "nodeType": "IfStatement",
                  "src": "5928:185:135",
                  "trueBody": {
                    "id": 16166,
                    "nodeType": "Block",
                    "src": "5961:80:135",
                    "statements": [
                      {
                        "expression": {
                          "id": 16164,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "delete",
                          "prefix": true,
                          "src": "5975:55:135",
                          "subExpression": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 16158,
                                "name": "_revokedDefaultOperators",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 15859,
                                "src": "5982:24:135",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                                  "typeString": "mapping(address => mapping(address => bool))"
                                }
                              },
                              "id": 16161,
                              "indexExpression": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 16159,
                                  "name": "_msgSender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 17558,
                                  "src": "6007:10:135",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                    "typeString": "function () view returns (address)"
                                  }
                                },
                                "id": 16160,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6007:12:135",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "5982:38:135",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 16163,
                            "indexExpression": {
                              "id": 16162,
                              "name": "operator",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 16143,
                              "src": "6021:8:135",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "5982:48:135",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 16165,
                        "nodeType": "ExpressionStatement",
                        "src": "5975:55:135"
                      }
                    ]
                  }
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 16179,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16143,
                        "src": "6147:8:135",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 16180,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 17558,
                          "src": "6157:10:135",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 16181,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6157:12:135",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 16178,
                      "name": "AuthorizedOperator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17084,
                      "src": "6128:18:135",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 16182,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6128:42:135",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 16183,
                  "nodeType": "EmitStatement",
                  "src": "6123:47:135"
                }
              ]
            },
            "documentation": {
              "id": 16141,
              "nodeType": "StructuredDocumentation",
              "src": "5704:56:135",
              "text": " @dev See {IERC777-authorizeOperator}."
            },
            "functionSelector": "959b8c3f",
            "id": 16185,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "authorizeOperator",
            "nameLocation": "5774:17:135",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 16145,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5825:8:135"
            },
            "parameters": {
              "id": 16144,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16143,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "5800:8:135",
                  "nodeType": "VariableDeclaration",
                  "scope": 16185,
                  "src": "5792:16:135",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 16142,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5792:7:135",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5791:18:135"
            },
            "returnParameters": {
              "id": 16146,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5834:0:135"
            },
            "scope": 16932,
            "src": "5765:412:135",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              17007
            ],
            "body": {
              "id": 16229,
              "nodeType": "Block",
              "src": "6307:337:135",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 16196,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 16193,
                          "name": "operator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16188,
                          "src": "6325:8:135",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 16194,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 17558,
                            "src": "6337:10:135",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 16195,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6337:12:135",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "6325:24:135",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433737373a207265766f6b696e672073656c66206173206f70657261746f72",
                        "id": 16197,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6351:35:135",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_67ce503bd3a359eb530c6f3a909afa9e71899e0352d883198e721fd5fceefab5",
                          "typeString": "literal_string \"ERC777: revoking self as operator\""
                        },
                        "value": "ERC777: revoking self as operator"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_67ce503bd3a359eb530c6f3a909afa9e71899e0352d883198e721fd5fceefab5",
                          "typeString": "literal_string \"ERC777: revoking self as operator\""
                        }
                      ],
                      "id": 16192,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6317:7:135",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 16198,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6317:70:135",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 16199,
                  "nodeType": "ExpressionStatement",
                  "src": "6317:70:135"
                },
                {
                  "condition": {
                    "baseExpression": {
                      "id": 16200,
                      "name": "_defaultOperators",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15847,
                      "src": "6402:17:135",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      }
                    },
                    "id": 16202,
                    "indexExpression": {
                      "id": 16201,
                      "name": "operator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16188,
                      "src": "6420:8:135",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "6402:27:135",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 16221,
                    "nodeType": "Block",
                    "src": "6517:66:135",
                    "statements": [
                      {
                        "expression": {
                          "id": 16219,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "delete",
                          "prefix": true,
                          "src": "6531:41:135",
                          "subExpression": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 16213,
                                "name": "_operators",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 15853,
                                "src": "6538:10:135",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                                  "typeString": "mapping(address => mapping(address => bool))"
                                }
                              },
                              "id": 16216,
                              "indexExpression": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 16214,
                                  "name": "_msgSender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 17558,
                                  "src": "6549:10:135",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                    "typeString": "function () view returns (address)"
                                  }
                                },
                                "id": 16215,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6549:12:135",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "6538:24:135",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 16218,
                            "indexExpression": {
                              "id": 16217,
                              "name": "operator",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 16188,
                              "src": "6563:8:135",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "6538:34:135",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 16220,
                        "nodeType": "ExpressionStatement",
                        "src": "6531:41:135"
                      }
                    ]
                  },
                  "id": 16222,
                  "nodeType": "IfStatement",
                  "src": "6398:185:135",
                  "trueBody": {
                    "id": 16212,
                    "nodeType": "Block",
                    "src": "6431:80:135",
                    "statements": [
                      {
                        "expression": {
                          "id": 16210,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 16203,
                                "name": "_revokedDefaultOperators",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 15859,
                                "src": "6445:24:135",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                                  "typeString": "mapping(address => mapping(address => bool))"
                                }
                              },
                              "id": 16207,
                              "indexExpression": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 16204,
                                  "name": "_msgSender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 17558,
                                  "src": "6470:10:135",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                    "typeString": "function () view returns (address)"
                                  }
                                },
                                "id": 16205,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6470:12:135",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "6445:38:135",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 16208,
                            "indexExpression": {
                              "id": 16206,
                              "name": "operator",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 16188,
                              "src": "6484:8:135",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "6445:48:135",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 16209,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6496:4:135",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "6445:55:135",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 16211,
                        "nodeType": "ExpressionStatement",
                        "src": "6445:55:135"
                      }
                    ]
                  }
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 16224,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16188,
                        "src": "6614:8:135",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 16225,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 17558,
                          "src": "6624:10:135",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 16226,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6624:12:135",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 16223,
                      "name": "RevokedOperator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17090,
                      "src": "6598:15:135",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 16227,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6598:39:135",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 16228,
                  "nodeType": "EmitStatement",
                  "src": "6593:44:135"
                }
              ]
            },
            "documentation": {
              "id": 16186,
              "nodeType": "StructuredDocumentation",
              "src": "6183:53:135",
              "text": " @dev See {IERC777-revokeOperator}."
            },
            "functionSelector": "fad8b32a",
            "id": 16230,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "revokeOperator",
            "nameLocation": "6250:14:135",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 16190,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "6298:8:135"
            },
            "parameters": {
              "id": 16189,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16188,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "6273:8:135",
                  "nodeType": "VariableDeclaration",
                  "scope": 16230,
                  "src": "6265:16:135",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 16187,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6265:7:135",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6264:18:135"
            },
            "returnParameters": {
              "id": 16191,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6307:0:135"
            },
            "scope": 16932,
            "src": "6241:403:135",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              17014
            ],
            "body": {
              "id": 16240,
              "nodeType": "Block",
              "src": "6794:46:135",
              "statements": [
                {
                  "expression": {
                    "id": 16238,
                    "name": "_defaultOperatorsArray",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 15843,
                    "src": "6811:22:135",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                      "typeString": "address[] storage ref"
                    }
                  },
                  "functionReturnParameters": 16237,
                  "id": 16239,
                  "nodeType": "Return",
                  "src": "6804:29:135"
                }
              ]
            },
            "documentation": {
              "id": 16231,
              "nodeType": "StructuredDocumentation",
              "src": "6650:55:135",
              "text": " @dev See {IERC777-defaultOperators}."
            },
            "functionSelector": "06e48538",
            "id": 16241,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "defaultOperators",
            "nameLocation": "6719:16:135",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 16233,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "6758:8:135"
            },
            "parameters": {
              "id": 16232,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6735:2:135"
            },
            "returnParameters": {
              "id": 16237,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16236,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 16241,
                  "src": "6776:16:135",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 16234,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "6776:7:135",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 16235,
                    "nodeType": "ArrayTypeName",
                    "src": "6776:9:135",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6775:18:135"
            },
            "scope": 16932,
            "src": "6710:130:135",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              17028
            ],
            "body": {
              "id": 16274,
              "nodeType": "Block",
              "src": "7148:177:135",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 16258,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 17558,
                              "src": "7180:10:135",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 16259,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7180:12:135",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 16260,
                            "name": "sender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 16244,
                            "src": "7194:6:135",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 16257,
                          "name": "isOperatorFor",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16140,
                          "src": "7166:13:135",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address,address) view returns (bool)"
                          }
                        },
                        "id": 16261,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7166:35:135",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433737373a2063616c6c6572206973206e6f7420616e206f70657261746f7220666f7220686f6c646572",
                        "id": 16262,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7203:46:135",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d0e912496dc7a0050c7f3e14272d4929a90a242e3fdaef730410cdf35f965235",
                          "typeString": "literal_string \"ERC777: caller is not an operator for holder\""
                        },
                        "value": "ERC777: caller is not an operator for holder"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d0e912496dc7a0050c7f3e14272d4929a90a242e3fdaef730410cdf35f965235",
                          "typeString": "literal_string \"ERC777: caller is not an operator for holder\""
                        }
                      ],
                      "id": 16256,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7158:7:135",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 16263,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7158:92:135",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 16264,
                  "nodeType": "ExpressionStatement",
                  "src": "7158:92:135"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 16266,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16244,
                        "src": "7266:6:135",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 16267,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16246,
                        "src": "7274:9:135",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 16268,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16248,
                        "src": "7285:6:135",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 16269,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16250,
                        "src": "7293:4:135",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "id": 16270,
                        "name": "operatorData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16252,
                        "src": "7299:12:135",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 16271,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7313:4:135",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 16265,
                      "name": "_send",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16611,
                      "src": "7260:5:135",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bool_$returns$__$",
                        "typeString": "function (address,address,uint256,bytes memory,bytes memory,bool)"
                      }
                    },
                    "id": 16272,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7260:58:135",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 16273,
                  "nodeType": "ExpressionStatement",
                  "src": "7260:58:135"
                }
              ]
            },
            "documentation": {
              "id": 16242,
              "nodeType": "StructuredDocumentation",
              "src": "6846:108:135",
              "text": " @dev See {IERC777-operatorSend}.\n Emits {Sent} and {IERC20-Transfer} events."
            },
            "functionSelector": "62ad1b83",
            "id": 16275,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "operatorSend",
            "nameLocation": "6968:12:135",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 16254,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "7139:8:135"
            },
            "parameters": {
              "id": 16253,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16244,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "6998:6:135",
                  "nodeType": "VariableDeclaration",
                  "scope": 16275,
                  "src": "6990:14:135",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 16243,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6990:7:135",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16246,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "7022:9:135",
                  "nodeType": "VariableDeclaration",
                  "scope": 16275,
                  "src": "7014:17:135",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 16245,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7014:7:135",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16248,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "7049:6:135",
                  "nodeType": "VariableDeclaration",
                  "scope": 16275,
                  "src": "7041:14:135",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 16247,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7041:7:135",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16250,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "7078:4:135",
                  "nodeType": "VariableDeclaration",
                  "scope": 16275,
                  "src": "7065:17:135",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 16249,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "7065:5:135",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16252,
                  "mutability": "mutable",
                  "name": "operatorData",
                  "nameLocation": "7105:12:135",
                  "nodeType": "VariableDeclaration",
                  "scope": 16275,
                  "src": "7092:25:135",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 16251,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "7092:5:135",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6980:143:135"
            },
            "returnParameters": {
              "id": 16255,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7148:0:135"
            },
            "scope": 16932,
            "src": "6959:366:135",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              17040
            ],
            "body": {
              "id": 16304,
              "nodeType": "Block",
              "src": "7609:162:135",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 16290,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 17558,
                              "src": "7641:10:135",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 16291,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7641:12:135",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 16292,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 16278,
                            "src": "7655:7:135",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 16289,
                          "name": "isOperatorFor",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16140,
                          "src": "7627:13:135",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address,address) view returns (bool)"
                          }
                        },
                        "id": 16293,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7627:36:135",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433737373a2063616c6c6572206973206e6f7420616e206f70657261746f7220666f7220686f6c646572",
                        "id": 16294,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7665:46:135",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d0e912496dc7a0050c7f3e14272d4929a90a242e3fdaef730410cdf35f965235",
                          "typeString": "literal_string \"ERC777: caller is not an operator for holder\""
                        },
                        "value": "ERC777: caller is not an operator for holder"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d0e912496dc7a0050c7f3e14272d4929a90a242e3fdaef730410cdf35f965235",
                          "typeString": "literal_string \"ERC777: caller is not an operator for holder\""
                        }
                      ],
                      "id": 16288,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7619:7:135",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 16295,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7619:93:135",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 16296,
                  "nodeType": "ExpressionStatement",
                  "src": "7619:93:135"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 16298,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16278,
                        "src": "7728:7:135",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 16299,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16280,
                        "src": "7737:6:135",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 16300,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16282,
                        "src": "7745:4:135",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "id": 16301,
                        "name": "operatorData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16284,
                        "src": "7751:12:135",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 16297,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16704,
                      "src": "7722:5:135",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,bytes memory,bytes memory)"
                      }
                    },
                    "id": 16302,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7722:42:135",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 16303,
                  "nodeType": "ExpressionStatement",
                  "src": "7722:42:135"
                }
              ]
            },
            "documentation": {
              "id": 16276,
              "nodeType": "StructuredDocumentation",
              "src": "7331:110:135",
              "text": " @dev See {IERC777-operatorBurn}.\n Emits {Burned} and {IERC20-Transfer} events."
            },
            "functionSelector": "fc673c4f",
            "id": 16305,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "operatorBurn",
            "nameLocation": "7455:12:135",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 16286,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "7600:8:135"
            },
            "parameters": {
              "id": 16285,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16278,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "7485:7:135",
                  "nodeType": "VariableDeclaration",
                  "scope": 16305,
                  "src": "7477:15:135",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 16277,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7477:7:135",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16280,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "7510:6:135",
                  "nodeType": "VariableDeclaration",
                  "scope": 16305,
                  "src": "7502:14:135",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 16279,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7502:7:135",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16282,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "7539:4:135",
                  "nodeType": "VariableDeclaration",
                  "scope": 16305,
                  "src": "7526:17:135",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 16281,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "7526:5:135",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16284,
                  "mutability": "mutable",
                  "name": "operatorData",
                  "nameLocation": "7566:12:135",
                  "nodeType": "VariableDeclaration",
                  "scope": 16305,
                  "src": "7553:25:135",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 16283,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "7553:5:135",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7467:117:135"
            },
            "returnParameters": {
              "id": 16287,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7609:0:135"
            },
            "scope": 16932,
            "src": "7446:325:135",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              11793
            ],
            "body": {
              "id": 16322,
              "nodeType": "Block",
              "src": "8109:52:135",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 16316,
                        "name": "_allowances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15865,
                        "src": "8126:11:135",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                          "typeString": "mapping(address => mapping(address => uint256))"
                        }
                      },
                      "id": 16318,
                      "indexExpression": {
                        "id": 16317,
                        "name": "holder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16308,
                        "src": "8138:6:135",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "8126:19:135",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 16320,
                    "indexExpression": {
                      "id": 16319,
                      "name": "spender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16310,
                      "src": "8146:7:135",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "8126:28:135",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 16315,
                  "id": 16321,
                  "nodeType": "Return",
                  "src": "8119:35:135"
                }
              ]
            },
            "documentation": {
              "id": 16306,
              "nodeType": "StructuredDocumentation",
              "src": "7777:228:135",
              "text": " @dev See {IERC20-allowance}.\n Note that operator and allowance concepts are orthogonal: operators may\n not have allowance, and accounts with allowance may not be operators\n themselves."
            },
            "functionSelector": "dd62ed3e",
            "id": 16323,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "allowance",
            "nameLocation": "8019:9:135",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 16312,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "8082:8:135"
            },
            "parameters": {
              "id": 16311,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16308,
                  "mutability": "mutable",
                  "name": "holder",
                  "nameLocation": "8037:6:135",
                  "nodeType": "VariableDeclaration",
                  "scope": 16323,
                  "src": "8029:14:135",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 16307,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8029:7:135",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16310,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "8053:7:135",
                  "nodeType": "VariableDeclaration",
                  "scope": 16323,
                  "src": "8045:15:135",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 16309,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8045:7:135",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8028:33:135"
            },
            "returnParameters": {
              "id": 16315,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16314,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 16323,
                  "src": "8100:7:135",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 16313,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8100:7:135",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8099:9:135"
            },
            "scope": 16932,
            "src": "8010:151:135",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              11803
            ],
            "body": {
              "id": 16347,
              "nodeType": "Block",
              "src": "8387:109:135",
              "statements": [
                {
                  "assignments": [
                    16335
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 16335,
                      "mutability": "mutable",
                      "name": "holder",
                      "nameLocation": "8405:6:135",
                      "nodeType": "VariableDeclaration",
                      "scope": 16347,
                      "src": "8397:14:135",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 16334,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "8397:7:135",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 16338,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 16336,
                      "name": "_msgSender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17558,
                      "src": "8414:10:135",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 16337,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8414:12:135",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8397:29:135"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 16340,
                        "name": "holder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16335,
                        "src": "8445:6:135",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 16341,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16326,
                        "src": "8453:7:135",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 16342,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16328,
                        "src": "8462:5:135",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 16339,
                      "name": "_approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16815,
                      "src": "8436:8:135",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 16343,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8436:32:135",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 16344,
                  "nodeType": "ExpressionStatement",
                  "src": "8436:32:135"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 16345,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "8485:4:135",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 16333,
                  "id": 16346,
                  "nodeType": "Return",
                  "src": "8478:11:135"
                }
              ]
            },
            "documentation": {
              "id": 16324,
              "nodeType": "StructuredDocumentation",
              "src": "8167:127:135",
              "text": " @dev See {IERC20-approve}.\n Note that accounts cannot have allowance issued by their operators."
            },
            "functionSelector": "095ea7b3",
            "id": 16348,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "approve",
            "nameLocation": "8308:7:135",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 16330,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "8363:8:135"
            },
            "parameters": {
              "id": 16329,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16326,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "8324:7:135",
                  "nodeType": "VariableDeclaration",
                  "scope": 16348,
                  "src": "8316:15:135",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 16325,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8316:7:135",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16328,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "8341:5:135",
                  "nodeType": "VariableDeclaration",
                  "scope": 16348,
                  "src": "8333:13:135",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 16327,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8333:7:135",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8315:32:135"
            },
            "returnParameters": {
              "id": 16333,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16332,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 16348,
                  "src": "8381:4:135",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 16331,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "8381:4:135",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8380:6:135"
            },
            "scope": 16932,
            "src": "8299:197:135",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              11815
            ],
            "body": {
              "id": 16439,
              "nodeType": "Block",
              "src": "9012:664:135",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 16367,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 16362,
                          "name": "recipient",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16353,
                          "src": "9030:9:135",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 16365,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9051:1:135",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 16364,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "9043:7:135",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 16363,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "9043:7:135",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 16366,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9043:10:135",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "9030:23:135",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433737373a207472616e7366657220746f20746865207a65726f2061646472657373",
                        "id": 16368,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9055:38:135",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ad1e0a820fe2a50167f341463ad5f6754fad4cf77d809141bc408c516e69c59a",
                          "typeString": "literal_string \"ERC777: transfer to the zero address\""
                        },
                        "value": "ERC777: transfer to the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ad1e0a820fe2a50167f341463ad5f6754fad4cf77d809141bc408c516e69c59a",
                          "typeString": "literal_string \"ERC777: transfer to the zero address\""
                        }
                      ],
                      "id": 16361,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9022:7:135",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 16369,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9022:72:135",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 16370,
                  "nodeType": "ExpressionStatement",
                  "src": "9022:72:135"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 16377,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 16372,
                          "name": "holder",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16351,
                          "src": "9112:6:135",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 16375,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9130:1:135",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 16374,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "9122:7:135",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 16373,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "9122:7:135",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 16376,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9122:10:135",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "9112:20:135",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433737373a207472616e736665722066726f6d20746865207a65726f2061646472657373",
                        "id": 16378,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9134:40:135",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e354b0408f2a1e89707ec9f6aaa5427ceb97704ace0785924c7421e8f577dc7a",
                          "typeString": "literal_string \"ERC777: transfer from the zero address\""
                        },
                        "value": "ERC777: transfer from the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e354b0408f2a1e89707ec9f6aaa5427ceb97704ace0785924c7421e8f577dc7a",
                          "typeString": "literal_string \"ERC777: transfer from the zero address\""
                        }
                      ],
                      "id": 16371,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9104:7:135",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 16379,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9104:71:135",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 16380,
                  "nodeType": "ExpressionStatement",
                  "src": "9104:71:135"
                },
                {
                  "assignments": [
                    16382
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 16382,
                      "mutability": "mutable",
                      "name": "spender",
                      "nameLocation": "9194:7:135",
                      "nodeType": "VariableDeclaration",
                      "scope": 16439,
                      "src": "9186:15:135",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 16381,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "9186:7:135",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 16385,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 16383,
                      "name": "_msgSender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17558,
                      "src": "9204:10:135",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 16384,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9204:12:135",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9186:30:135"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 16387,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16382,
                        "src": "9245:7:135",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 16388,
                        "name": "holder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16351,
                        "src": "9254:6:135",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 16389,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16353,
                        "src": "9262:9:135",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 16390,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16355,
                        "src": "9273:6:135",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 16391,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9281:2:135",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      },
                      {
                        "hexValue": "",
                        "id": 16392,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9285:2:135",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "id": 16386,
                      "name": "_callTokensToSend",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16860,
                      "src": "9227:17:135",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,address,uint256,bytes memory,bytes memory)"
                      }
                    },
                    "id": 16393,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9227:61:135",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 16394,
                  "nodeType": "ExpressionStatement",
                  "src": "9227:61:135"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 16396,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16382,
                        "src": "9305:7:135",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 16397,
                        "name": "holder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16351,
                        "src": "9314:6:135",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 16398,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16353,
                        "src": "9322:9:135",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 16399,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16355,
                        "src": "9333:6:135",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 16400,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9341:2:135",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      },
                      {
                        "hexValue": "",
                        "id": 16401,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9345:2:135",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "id": 16395,
                      "name": "_move",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16770,
                      "src": "9299:5:135",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,address,uint256,bytes memory,bytes memory)"
                      }
                    },
                    "id": 16402,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9299:49:135",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 16403,
                  "nodeType": "ExpressionStatement",
                  "src": "9299:49:135"
                },
                {
                  "assignments": [
                    16405
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 16405,
                      "mutability": "mutable",
                      "name": "currentAllowance",
                      "nameLocation": "9367:16:135",
                      "nodeType": "VariableDeclaration",
                      "scope": 16439,
                      "src": "9359:24:135",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 16404,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9359:7:135",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 16411,
                  "initialValue": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 16406,
                        "name": "_allowances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15865,
                        "src": "9386:11:135",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                          "typeString": "mapping(address => mapping(address => uint256))"
                        }
                      },
                      "id": 16408,
                      "indexExpression": {
                        "id": 16407,
                        "name": "holder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16351,
                        "src": "9398:6:135",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "9386:19:135",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 16410,
                    "indexExpression": {
                      "id": 16409,
                      "name": "spender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16382,
                      "src": "9406:7:135",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "9386:28:135",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9359:55:135"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 16415,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 16413,
                          "name": "currentAllowance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16405,
                          "src": "9432:16:135",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 16414,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16355,
                          "src": "9452:6:135",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "9432:26:135",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433737373a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
                        "id": 16416,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9460:43:135",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d8bf23f1408d4800b3aee66cb36df9b55f0e49735257afe214dda2085ed7cd5c",
                          "typeString": "literal_string \"ERC777: transfer amount exceeds allowance\""
                        },
                        "value": "ERC777: transfer amount exceeds allowance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d8bf23f1408d4800b3aee66cb36df9b55f0e49735257afe214dda2085ed7cd5c",
                          "typeString": "literal_string \"ERC777: transfer amount exceeds allowance\""
                        }
                      ],
                      "id": 16412,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9424:7:135",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 16417,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9424:80:135",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 16418,
                  "nodeType": "ExpressionStatement",
                  "src": "9424:80:135"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 16420,
                        "name": "holder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16351,
                        "src": "9523:6:135",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 16421,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16382,
                        "src": "9531:7:135",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 16424,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 16422,
                          "name": "currentAllowance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16405,
                          "src": "9540:16:135",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "id": 16423,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16355,
                          "src": "9559:6:135",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "9540:25:135",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 16419,
                      "name": "_approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16815,
                      "src": "9514:8:135",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 16425,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9514:52:135",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 16426,
                  "nodeType": "ExpressionStatement",
                  "src": "9514:52:135"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 16428,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16382,
                        "src": "9597:7:135",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 16429,
                        "name": "holder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16351,
                        "src": "9606:6:135",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 16430,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16353,
                        "src": "9614:9:135",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 16431,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16355,
                        "src": "9625:6:135",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 16432,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9633:2:135",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      },
                      {
                        "hexValue": "",
                        "id": 16433,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9637:2:135",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 16434,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9641:5:135",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 16427,
                      "name": "_callTokensReceived",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16918,
                      "src": "9577:19:135",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bool_$returns$__$",
                        "typeString": "function (address,address,address,uint256,bytes memory,bytes memory,bool)"
                      }
                    },
                    "id": 16435,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9577:70:135",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 16436,
                  "nodeType": "ExpressionStatement",
                  "src": "9577:70:135"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 16437,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "9665:4:135",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 16360,
                  "id": 16438,
                  "nodeType": "Return",
                  "src": "9658:11:135"
                }
              ]
            },
            "documentation": {
              "id": 16349,
              "nodeType": "StructuredDocumentation",
              "src": "8502:363:135",
              "text": " @dev See {IERC20-transferFrom}.\n Note that operator and allowance concepts are orthogonal: operators cannot\n call `transferFrom` (unless they have allowance), and accounts with\n allowance cannot call `operatorSend` (unless they are operators).\n Emits {Sent}, {IERC20-Transfer} and {IERC20-Approval} events."
            },
            "functionSelector": "23b872dd",
            "id": 16440,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferFrom",
            "nameLocation": "8879:12:135",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 16357,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "8988:8:135"
            },
            "parameters": {
              "id": 16356,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16351,
                  "mutability": "mutable",
                  "name": "holder",
                  "nameLocation": "8909:6:135",
                  "nodeType": "VariableDeclaration",
                  "scope": 16440,
                  "src": "8901:14:135",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 16350,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8901:7:135",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16353,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "8933:9:135",
                  "nodeType": "VariableDeclaration",
                  "scope": 16440,
                  "src": "8925:17:135",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 16352,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8925:7:135",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16355,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "8960:6:135",
                  "nodeType": "VariableDeclaration",
                  "scope": 16440,
                  "src": "8952:14:135",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 16354,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8952:7:135",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8891:81:135"
            },
            "returnParameters": {
              "id": 16360,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16359,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 16440,
                  "src": "9006:4:135",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 16358,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "9006:4:135",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9005:6:135"
            },
            "scope": 16932,
            "src": "8870:806:135",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 16460,
              "nodeType": "Block",
              "src": "10399:69:135",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 16453,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16443,
                        "src": "10415:7:135",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 16454,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16445,
                        "src": "10424:6:135",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 16455,
                        "name": "userData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16447,
                        "src": "10432:8:135",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "id": 16456,
                        "name": "operatorData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16449,
                        "src": "10442:12:135",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 16457,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10456:4:135",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 16452,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        16461,
                        16541
                      ],
                      "referencedDeclaration": 16541,
                      "src": "10409:5:135",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bool_$returns$__$",
                        "typeString": "function (address,uint256,bytes memory,bytes memory,bool)"
                      }
                    },
                    "id": 16458,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10409:52:135",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 16459,
                  "nodeType": "ExpressionStatement",
                  "src": "10409:52:135"
                }
              ]
            },
            "documentation": {
              "id": 16441,
              "nodeType": "StructuredDocumentation",
              "src": "9682:559:135",
              "text": " @dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n If a send hook is registered for `account`, the corresponding function\n will be called with `operator`, `data` and `operatorData`.\n See {IERC777Sender} and {IERC777Recipient}.\n Emits {Minted} and {IERC20-Transfer} events.\n Requirements\n - `account` cannot be the zero address.\n - if `account` is a contract, it must implement the {IERC777Recipient}\n interface."
            },
            "id": 16461,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_mint",
            "nameLocation": "10255:5:135",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 16450,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16443,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "10278:7:135",
                  "nodeType": "VariableDeclaration",
                  "scope": 16461,
                  "src": "10270:15:135",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 16442,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10270:7:135",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16445,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "10303:6:135",
                  "nodeType": "VariableDeclaration",
                  "scope": 16461,
                  "src": "10295:14:135",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 16444,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10295:7:135",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16447,
                  "mutability": "mutable",
                  "name": "userData",
                  "nameLocation": "10332:8:135",
                  "nodeType": "VariableDeclaration",
                  "scope": 16461,
                  "src": "10319:21:135",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 16446,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "10319:5:135",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16449,
                  "mutability": "mutable",
                  "name": "operatorData",
                  "nameLocation": "10363:12:135",
                  "nodeType": "VariableDeclaration",
                  "scope": 16461,
                  "src": "10350:25:135",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 16448,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "10350:5:135",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10260:121:135"
            },
            "returnParameters": {
              "id": 16451,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10399:0:135"
            },
            "scope": 16932,
            "src": "10246:222:135",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 16540,
              "nodeType": "Block",
              "src": "11277:539:135",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 16481,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 16476,
                          "name": "account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16464,
                          "src": "11295:7:135",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 16479,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "11314:1:135",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 16478,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "11306:7:135",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 16477,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "11306:7:135",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 16480,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11306:10:135",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "11295:21:135",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433737373a206d696e7420746f20746865207a65726f2061646472657373",
                        "id": 16482,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11318:34:135",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8ce4f759423d0a519cbdf8529f47ad13e03ab9baec6702bc39e1fd5147c7e080",
                          "typeString": "literal_string \"ERC777: mint to the zero address\""
                        },
                        "value": "ERC777: mint to the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8ce4f759423d0a519cbdf8529f47ad13e03ab9baec6702bc39e1fd5147c7e080",
                          "typeString": "literal_string \"ERC777: mint to the zero address\""
                        }
                      ],
                      "id": 16475,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "11287:7:135",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 16483,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11287:66:135",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 16484,
                  "nodeType": "ExpressionStatement",
                  "src": "11287:66:135"
                },
                {
                  "assignments": [
                    16486
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 16486,
                      "mutability": "mutable",
                      "name": "operator",
                      "nameLocation": "11372:8:135",
                      "nodeType": "VariableDeclaration",
                      "scope": 16540,
                      "src": "11364:16:135",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 16485,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "11364:7:135",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 16489,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 16487,
                      "name": "_msgSender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17558,
                      "src": "11383:10:135",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 16488,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11383:12:135",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11364:31:135"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 16491,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16486,
                        "src": "11427:8:135",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 16494,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "11445:1:135",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 16493,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "11437:7:135",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 16492,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "11437:7:135",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 16495,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11437:10:135",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 16496,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16464,
                        "src": "11449:7:135",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 16497,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16466,
                        "src": "11458:6:135",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 16490,
                      "name": "_beforeTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16931,
                      "src": "11406:20:135",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address,uint256)"
                      }
                    },
                    "id": 16498,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11406:59:135",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 16499,
                  "nodeType": "ExpressionStatement",
                  "src": "11406:59:135"
                },
                {
                  "expression": {
                    "id": 16502,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 16500,
                      "name": "_totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15826,
                      "src": "11510:12:135",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 16501,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16466,
                      "src": "11526:6:135",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11510:22:135",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 16503,
                  "nodeType": "ExpressionStatement",
                  "src": "11510:22:135"
                },
                {
                  "expression": {
                    "id": 16508,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 16504,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15824,
                        "src": "11542:9:135",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 16506,
                      "indexExpression": {
                        "id": 16505,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16464,
                        "src": "11552:7:135",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "11542:18:135",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 16507,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16466,
                      "src": "11564:6:135",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11542:28:135",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 16509,
                  "nodeType": "ExpressionStatement",
                  "src": "11542:28:135"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 16511,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16486,
                        "src": "11601:8:135",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 16514,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "11619:1:135",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 16513,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "11611:7:135",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 16512,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "11611:7:135",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 16515,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11611:10:135",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 16516,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16464,
                        "src": "11623:7:135",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 16517,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16466,
                        "src": "11632:6:135",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 16518,
                        "name": "userData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16468,
                        "src": "11640:8:135",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "id": 16519,
                        "name": "operatorData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16470,
                        "src": "11650:12:135",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "id": 16520,
                        "name": "requireReceptionAck",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16472,
                        "src": "11664:19:135",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 16510,
                      "name": "_callTokensReceived",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16918,
                      "src": "11581:19:135",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bool_$returns$__$",
                        "typeString": "function (address,address,address,uint256,bytes memory,bytes memory,bool)"
                      }
                    },
                    "id": 16521,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11581:103:135",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 16522,
                  "nodeType": "ExpressionStatement",
                  "src": "11581:103:135"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 16524,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16486,
                        "src": "11707:8:135",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 16525,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16464,
                        "src": "11717:7:135",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 16526,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16466,
                        "src": "11726:6:135",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 16527,
                        "name": "userData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16468,
                        "src": "11734:8:135",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "id": 16528,
                        "name": "operatorData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16470,
                        "src": "11744:12:135",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 16523,
                      "name": "Minted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17066,
                      "src": "11700:6:135",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256,bytes memory,bytes memory)"
                      }
                    },
                    "id": 16529,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11700:57:135",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 16530,
                  "nodeType": "EmitStatement",
                  "src": "11695:62:135"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 16534,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "11789:1:135",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 16533,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "11781:7:135",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 16532,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "11781:7:135",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 16535,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11781:10:135",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 16536,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16464,
                        "src": "11793:7:135",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 16537,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16466,
                        "src": "11802:6:135",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 16531,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11824,
                      "src": "11772:8:135",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 16538,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11772:37:135",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 16539,
                  "nodeType": "EmitStatement",
                  "src": "11767:42:135"
                }
              ]
            },
            "documentation": {
              "id": 16462,
              "nodeType": "StructuredDocumentation",
              "src": "10474:611:135",
              "text": " @dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n If `requireReceptionAck` is set to true, and if a send hook is\n registered for `account`, the corresponding function will be called with\n `operator`, `data` and `operatorData`.\n See {IERC777Sender} and {IERC777Recipient}.\n Emits {Minted} and {IERC20-Transfer} events.\n Requirements\n - `account` cannot be the zero address.\n - if `account` is a contract, it must implement the {IERC777Recipient}\n interface."
            },
            "id": 16541,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_mint",
            "nameLocation": "11099:5:135",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 16473,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16464,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "11122:7:135",
                  "nodeType": "VariableDeclaration",
                  "scope": 16541,
                  "src": "11114:15:135",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 16463,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11114:7:135",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16466,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "11147:6:135",
                  "nodeType": "VariableDeclaration",
                  "scope": 16541,
                  "src": "11139:14:135",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 16465,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11139:7:135",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16468,
                  "mutability": "mutable",
                  "name": "userData",
                  "nameLocation": "11176:8:135",
                  "nodeType": "VariableDeclaration",
                  "scope": 16541,
                  "src": "11163:21:135",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 16467,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "11163:5:135",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16470,
                  "mutability": "mutable",
                  "name": "operatorData",
                  "nameLocation": "11207:12:135",
                  "nodeType": "VariableDeclaration",
                  "scope": 16541,
                  "src": "11194:25:135",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 16469,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "11194:5:135",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16472,
                  "mutability": "mutable",
                  "name": "requireReceptionAck",
                  "nameLocation": "11234:19:135",
                  "nodeType": "VariableDeclaration",
                  "scope": 16541,
                  "src": "11229:24:135",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 16471,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "11229:4:135",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11104:155:135"
            },
            "returnParameters": {
              "id": 16474,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11277:0:135"
            },
            "scope": 16932,
            "src": "11090:726:135",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 16610,
              "nodeType": "Block",
              "src": "12496:446:135",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 16563,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 16558,
                          "name": "from",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16544,
                          "src": "12514:4:135",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 16561,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "12530:1:135",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 16560,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "12522:7:135",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 16559,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "12522:7:135",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 16562,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12522:10:135",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "12514:18:135",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433737373a2073656e642066726f6d20746865207a65726f2061646472657373",
                        "id": 16564,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12534:36:135",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_14f76295ace7a8386ec01140ee9cd688544ad4113a371d47f5a5fb46ac01c401",
                          "typeString": "literal_string \"ERC777: send from the zero address\""
                        },
                        "value": "ERC777: send from the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_14f76295ace7a8386ec01140ee9cd688544ad4113a371d47f5a5fb46ac01c401",
                          "typeString": "literal_string \"ERC777: send from the zero address\""
                        }
                      ],
                      "id": 16557,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "12506:7:135",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 16565,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12506:65:135",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 16566,
                  "nodeType": "ExpressionStatement",
                  "src": "12506:65:135"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 16573,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 16568,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16546,
                          "src": "12589:2:135",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 16571,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "12603:1:135",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 16570,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "12595:7:135",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 16569,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "12595:7:135",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 16572,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12595:10:135",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "12589:16:135",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433737373a2073656e6420746f20746865207a65726f2061646472657373",
                        "id": 16574,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12607:34:135",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ed80ea5132cda6a72ccf7da466e28cf5f3b5c217583b1b7e92c137a9f3d6b4c3",
                          "typeString": "literal_string \"ERC777: send to the zero address\""
                        },
                        "value": "ERC777: send to the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ed80ea5132cda6a72ccf7da466e28cf5f3b5c217583b1b7e92c137a9f3d6b4c3",
                          "typeString": "literal_string \"ERC777: send to the zero address\""
                        }
                      ],
                      "id": 16567,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "12581:7:135",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 16575,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12581:61:135",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 16576,
                  "nodeType": "ExpressionStatement",
                  "src": "12581:61:135"
                },
                {
                  "assignments": [
                    16578
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 16578,
                      "mutability": "mutable",
                      "name": "operator",
                      "nameLocation": "12661:8:135",
                      "nodeType": "VariableDeclaration",
                      "scope": 16610,
                      "src": "12653:16:135",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 16577,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "12653:7:135",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 16581,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 16579,
                      "name": "_msgSender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17558,
                      "src": "12672:10:135",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 16580,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12672:12:135",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12653:31:135"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 16583,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16578,
                        "src": "12713:8:135",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 16584,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16544,
                        "src": "12723:4:135",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 16585,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16546,
                        "src": "12729:2:135",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 16586,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16548,
                        "src": "12733:6:135",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 16587,
                        "name": "userData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16550,
                        "src": "12741:8:135",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "id": 16588,
                        "name": "operatorData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16552,
                        "src": "12751:12:135",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 16582,
                      "name": "_callTokensToSend",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16860,
                      "src": "12695:17:135",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,address,uint256,bytes memory,bytes memory)"
                      }
                    },
                    "id": 16589,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12695:69:135",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 16590,
                  "nodeType": "ExpressionStatement",
                  "src": "12695:69:135"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 16592,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16578,
                        "src": "12781:8:135",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 16593,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16544,
                        "src": "12791:4:135",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 16594,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16546,
                        "src": "12797:2:135",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 16595,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16548,
                        "src": "12801:6:135",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 16596,
                        "name": "userData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16550,
                        "src": "12809:8:135",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "id": 16597,
                        "name": "operatorData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16552,
                        "src": "12819:12:135",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 16591,
                      "name": "_move",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16770,
                      "src": "12775:5:135",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,address,uint256,bytes memory,bytes memory)"
                      }
                    },
                    "id": 16598,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12775:57:135",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 16599,
                  "nodeType": "ExpressionStatement",
                  "src": "12775:57:135"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 16601,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16578,
                        "src": "12863:8:135",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 16602,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16544,
                        "src": "12873:4:135",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 16603,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16546,
                        "src": "12879:2:135",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 16604,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16548,
                        "src": "12883:6:135",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 16605,
                        "name": "userData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16550,
                        "src": "12891:8:135",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "id": 16606,
                        "name": "operatorData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16552,
                        "src": "12901:12:135",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "id": 16607,
                        "name": "requireReceptionAck",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16554,
                        "src": "12915:19:135",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 16600,
                      "name": "_callTokensReceived",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16918,
                      "src": "12843:19:135",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bool_$returns$__$",
                        "typeString": "function (address,address,address,uint256,bytes memory,bytes memory,bool)"
                      }
                    },
                    "id": 16608,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12843:92:135",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 16609,
                  "nodeType": "ExpressionStatement",
                  "src": "12843:92:135"
                }
              ]
            },
            "documentation": {
              "id": 16542,
              "nodeType": "StructuredDocumentation",
              "src": "11822:465:135",
              "text": " @dev Send tokens\n @param from address token holder address\n @param to address recipient address\n @param amount uint256 amount of tokens to transfer\n @param userData bytes extra information provided by the token holder (if any)\n @param operatorData bytes extra information provided by the operator (if any)\n @param requireReceptionAck if true, contract recipients are required to implement ERC777TokensRecipient"
            },
            "id": 16611,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_send",
            "nameLocation": "12301:5:135",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 16555,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16544,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "12324:4:135",
                  "nodeType": "VariableDeclaration",
                  "scope": 16611,
                  "src": "12316:12:135",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 16543,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12316:7:135",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16546,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "12346:2:135",
                  "nodeType": "VariableDeclaration",
                  "scope": 16611,
                  "src": "12338:10:135",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 16545,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12338:7:135",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16548,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "12366:6:135",
                  "nodeType": "VariableDeclaration",
                  "scope": 16611,
                  "src": "12358:14:135",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 16547,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12358:7:135",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16550,
                  "mutability": "mutable",
                  "name": "userData",
                  "nameLocation": "12395:8:135",
                  "nodeType": "VariableDeclaration",
                  "scope": 16611,
                  "src": "12382:21:135",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 16549,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "12382:5:135",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16552,
                  "mutability": "mutable",
                  "name": "operatorData",
                  "nameLocation": "12426:12:135",
                  "nodeType": "VariableDeclaration",
                  "scope": 16611,
                  "src": "12413:25:135",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 16551,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "12413:5:135",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16554,
                  "mutability": "mutable",
                  "name": "requireReceptionAck",
                  "nameLocation": "12453:19:135",
                  "nodeType": "VariableDeclaration",
                  "scope": 16611,
                  "src": "12448:24:135",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 16553,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "12448:4:135",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12306:172:135"
            },
            "returnParameters": {
              "id": 16556,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12496:0:135"
            },
            "scope": 16932,
            "src": "12292:650:135",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 16703,
              "nodeType": "Block",
              "src": "13393:665:135",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 16629,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 16624,
                          "name": "from",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16614,
                          "src": "13411:4:135",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 16627,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "13427:1:135",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 16626,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "13419:7:135",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 16625,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "13419:7:135",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 16628,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13419:10:135",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "13411:18:135",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433737373a206275726e2066726f6d20746865207a65726f2061646472657373",
                        "id": 16630,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13431:36:135",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_37e8d125f24ef45023ef8033e82467f588cec434263b3a6b98bcdb3eca4b768c",
                          "typeString": "literal_string \"ERC777: burn from the zero address\""
                        },
                        "value": "ERC777: burn from the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_37e8d125f24ef45023ef8033e82467f588cec434263b3a6b98bcdb3eca4b768c",
                          "typeString": "literal_string \"ERC777: burn from the zero address\""
                        }
                      ],
                      "id": 16623,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "13403:7:135",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 16631,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13403:65:135",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 16632,
                  "nodeType": "ExpressionStatement",
                  "src": "13403:65:135"
                },
                {
                  "assignments": [
                    16634
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 16634,
                      "mutability": "mutable",
                      "name": "operator",
                      "nameLocation": "13487:8:135",
                      "nodeType": "VariableDeclaration",
                      "scope": 16703,
                      "src": "13479:16:135",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 16633,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "13479:7:135",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 16637,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 16635,
                      "name": "_msgSender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17558,
                      "src": "13498:10:135",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 16636,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13498:12:135",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13479:31:135"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 16639,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16634,
                        "src": "13539:8:135",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 16640,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16614,
                        "src": "13549:4:135",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 16643,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "13563:1:135",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 16642,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "13555:7:135",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 16641,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "13555:7:135",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 16644,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13555:10:135",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 16645,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16616,
                        "src": "13567:6:135",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 16646,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16618,
                        "src": "13575:4:135",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "id": 16647,
                        "name": "operatorData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16620,
                        "src": "13581:12:135",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 16638,
                      "name": "_callTokensToSend",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16860,
                      "src": "13521:17:135",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,address,uint256,bytes memory,bytes memory)"
                      }
                    },
                    "id": 16648,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13521:73:135",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 16649,
                  "nodeType": "ExpressionStatement",
                  "src": "13521:73:135"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 16651,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16634,
                        "src": "13626:8:135",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 16652,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16614,
                        "src": "13636:4:135",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 16655,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "13650:1:135",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 16654,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "13642:7:135",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 16653,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "13642:7:135",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 16656,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13642:10:135",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 16657,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16616,
                        "src": "13654:6:135",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 16650,
                      "name": "_beforeTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16931,
                      "src": "13605:20:135",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address,uint256)"
                      }
                    },
                    "id": 16658,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13605:56:135",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 16659,
                  "nodeType": "ExpressionStatement",
                  "src": "13605:56:135"
                },
                {
                  "assignments": [
                    16661
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 16661,
                      "mutability": "mutable",
                      "name": "fromBalance",
                      "nameLocation": "13714:11:135",
                      "nodeType": "VariableDeclaration",
                      "scope": 16703,
                      "src": "13706:19:135",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 16660,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "13706:7:135",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 16665,
                  "initialValue": {
                    "baseExpression": {
                      "id": 16662,
                      "name": "_balances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15824,
                      "src": "13728:9:135",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 16664,
                    "indexExpression": {
                      "id": 16663,
                      "name": "from",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16614,
                      "src": "13738:4:135",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "13728:15:135",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13706:37:135"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 16669,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 16667,
                          "name": "fromBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16661,
                          "src": "13761:11:135",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 16668,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16616,
                          "src": "13776:6:135",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "13761:21:135",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433737373a206275726e20616d6f756e7420657863656564732062616c616e6365",
                        "id": 16670,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13784:37:135",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ecdeb627d2306b8b9bb34685df56bbf05cde6b7bc6e45e0248ca50c1b0bd3ebe",
                          "typeString": "literal_string \"ERC777: burn amount exceeds balance\""
                        },
                        "value": "ERC777: burn amount exceeds balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ecdeb627d2306b8b9bb34685df56bbf05cde6b7bc6e45e0248ca50c1b0bd3ebe",
                          "typeString": "literal_string \"ERC777: burn amount exceeds balance\""
                        }
                      ],
                      "id": 16666,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "13753:7:135",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 16671,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13753:69:135",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 16672,
                  "nodeType": "ExpressionStatement",
                  "src": "13753:69:135"
                },
                {
                  "id": 16681,
                  "nodeType": "UncheckedBlock",
                  "src": "13832:73:135",
                  "statements": [
                    {
                      "expression": {
                        "id": 16679,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "baseExpression": {
                            "id": 16673,
                            "name": "_balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15824,
                            "src": "13856:9:135",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 16675,
                          "indexExpression": {
                            "id": 16674,
                            "name": "from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 16614,
                            "src": "13866:4:135",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "nodeType": "IndexAccess",
                          "src": "13856:15:135",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 16678,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 16676,
                            "name": "fromBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 16661,
                            "src": "13874:11:135",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "id": 16677,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 16616,
                            "src": "13888:6:135",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "13874:20:135",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "13856:38:135",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 16680,
                      "nodeType": "ExpressionStatement",
                      "src": "13856:38:135"
                    }
                  ]
                },
                {
                  "expression": {
                    "id": 16684,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 16682,
                      "name": "_totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15826,
                      "src": "13914:12:135",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 16683,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16616,
                      "src": "13930:6:135",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "13914:22:135",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 16685,
                  "nodeType": "ExpressionStatement",
                  "src": "13914:22:135"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 16687,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16634,
                        "src": "13959:8:135",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 16688,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16614,
                        "src": "13969:4:135",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 16689,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16616,
                        "src": "13975:6:135",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 16690,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16618,
                        "src": "13983:4:135",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "id": 16691,
                        "name": "operatorData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16620,
                        "src": "13989:12:135",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 16686,
                      "name": "Burned",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17078,
                      "src": "13952:6:135",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256,bytes memory,bytes memory)"
                      }
                    },
                    "id": 16692,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13952:50:135",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 16693,
                  "nodeType": "EmitStatement",
                  "src": "13947:55:135"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 16695,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16614,
                        "src": "14026:4:135",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 16698,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "14040:1:135",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 16697,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "14032:7:135",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 16696,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "14032:7:135",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 16699,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14032:10:135",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 16700,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16616,
                        "src": "14044:6:135",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 16694,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11824,
                      "src": "14017:8:135",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 16701,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14017:34:135",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 16702,
                  "nodeType": "EmitStatement",
                  "src": "14012:39:135"
                }
              ]
            },
            "documentation": {
              "id": 16612,
              "nodeType": "StructuredDocumentation",
              "src": "12948:294:135",
              "text": " @dev Burn tokens\n @param from address token holder address\n @param amount uint256 amount of tokens to burn\n @param data bytes extra information provided by the token holder\n @param operatorData bytes extra information provided by the operator (if any)"
            },
            "id": 16704,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_burn",
            "nameLocation": "13256:5:135",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 16621,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16614,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "13279:4:135",
                  "nodeType": "VariableDeclaration",
                  "scope": 16704,
                  "src": "13271:12:135",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 16613,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13271:7:135",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16616,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "13301:6:135",
                  "nodeType": "VariableDeclaration",
                  "scope": 16704,
                  "src": "13293:14:135",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 16615,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13293:7:135",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16618,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "13330:4:135",
                  "nodeType": "VariableDeclaration",
                  "scope": 16704,
                  "src": "13317:17:135",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 16617,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "13317:5:135",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16620,
                  "mutability": "mutable",
                  "name": "operatorData",
                  "nameLocation": "13357:12:135",
                  "nodeType": "VariableDeclaration",
                  "scope": 16704,
                  "src": "13344:25:135",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 16619,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "13344:5:135",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13261:114:135"
            },
            "returnParameters": {
              "id": 16622,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13393:0:135"
            },
            "scope": 16932,
            "src": "13247:811:135",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 16769,
              "nodeType": "Block",
              "src": "14251:424:135",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 16720,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16706,
                        "src": "14282:8:135",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 16721,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16708,
                        "src": "14292:4:135",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 16722,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16710,
                        "src": "14298:2:135",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 16723,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16712,
                        "src": "14302:6:135",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 16719,
                      "name": "_beforeTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16931,
                      "src": "14261:20:135",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address,uint256)"
                      }
                    },
                    "id": 16724,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14261:48:135",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 16725,
                  "nodeType": "ExpressionStatement",
                  "src": "14261:48:135"
                },
                {
                  "assignments": [
                    16727
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 16727,
                      "mutability": "mutable",
                      "name": "fromBalance",
                      "nameLocation": "14328:11:135",
                      "nodeType": "VariableDeclaration",
                      "scope": 16769,
                      "src": "14320:19:135",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 16726,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "14320:7:135",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 16731,
                  "initialValue": {
                    "baseExpression": {
                      "id": 16728,
                      "name": "_balances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15824,
                      "src": "14342:9:135",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 16730,
                    "indexExpression": {
                      "id": 16729,
                      "name": "from",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16708,
                      "src": "14352:4:135",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "14342:15:135",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14320:37:135"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 16735,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 16733,
                          "name": "fromBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16727,
                          "src": "14375:11:135",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 16734,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16712,
                          "src": "14390:6:135",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "14375:21:135",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433737373a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
                        "id": 16736,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14398:41:135",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1f1c21f7056055b190ca6c77528b11af9437bed324def87929bb64fac4d57e6b",
                          "typeString": "literal_string \"ERC777: transfer amount exceeds balance\""
                        },
                        "value": "ERC777: transfer amount exceeds balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1f1c21f7056055b190ca6c77528b11af9437bed324def87929bb64fac4d57e6b",
                          "typeString": "literal_string \"ERC777: transfer amount exceeds balance\""
                        }
                      ],
                      "id": 16732,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "14367:7:135",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 16737,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14367:73:135",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 16738,
                  "nodeType": "ExpressionStatement",
                  "src": "14367:73:135"
                },
                {
                  "id": 16747,
                  "nodeType": "UncheckedBlock",
                  "src": "14450:73:135",
                  "statements": [
                    {
                      "expression": {
                        "id": 16745,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "baseExpression": {
                            "id": 16739,
                            "name": "_balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15824,
                            "src": "14474:9:135",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 16741,
                          "indexExpression": {
                            "id": 16740,
                            "name": "from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 16708,
                            "src": "14484:4:135",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "nodeType": "IndexAccess",
                          "src": "14474:15:135",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 16744,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 16742,
                            "name": "fromBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 16727,
                            "src": "14492:11:135",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "id": 16743,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 16712,
                            "src": "14506:6:135",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "14492:20:135",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "14474:38:135",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 16746,
                      "nodeType": "ExpressionStatement",
                      "src": "14474:38:135"
                    }
                  ]
                },
                {
                  "expression": {
                    "id": 16752,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 16748,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15824,
                        "src": "14532:9:135",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 16750,
                      "indexExpression": {
                        "id": 16749,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16710,
                        "src": "14542:2:135",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "14532:13:135",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 16751,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16712,
                      "src": "14549:6:135",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "14532:23:135",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 16753,
                  "nodeType": "ExpressionStatement",
                  "src": "14532:23:135"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 16755,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16706,
                        "src": "14576:8:135",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 16756,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16708,
                        "src": "14586:4:135",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 16757,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16710,
                        "src": "14592:2:135",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 16758,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16712,
                        "src": "14596:6:135",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 16759,
                        "name": "userData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16714,
                        "src": "14604:8:135",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "id": 16760,
                        "name": "operatorData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16716,
                        "src": "14614:12:135",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 16754,
                      "name": "Sent",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17054,
                      "src": "14571:4:135",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,address,uint256,bytes memory,bytes memory)"
                      }
                    },
                    "id": 16761,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14571:56:135",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 16762,
                  "nodeType": "EmitStatement",
                  "src": "14566:61:135"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 16764,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16708,
                        "src": "14651:4:135",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 16765,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16710,
                        "src": "14657:2:135",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 16766,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16712,
                        "src": "14661:6:135",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 16763,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11824,
                      "src": "14642:8:135",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 16767,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14642:26:135",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 16768,
                  "nodeType": "EmitStatement",
                  "src": "14637:31:135"
                }
              ]
            },
            "id": 16770,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_move",
            "nameLocation": "14073:5:135",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 16717,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16706,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "14096:8:135",
                  "nodeType": "VariableDeclaration",
                  "scope": 16770,
                  "src": "14088:16:135",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 16705,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14088:7:135",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16708,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "14122:4:135",
                  "nodeType": "VariableDeclaration",
                  "scope": 16770,
                  "src": "14114:12:135",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 16707,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14114:7:135",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16710,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "14144:2:135",
                  "nodeType": "VariableDeclaration",
                  "scope": 16770,
                  "src": "14136:10:135",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 16709,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14136:7:135",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16712,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "14164:6:135",
                  "nodeType": "VariableDeclaration",
                  "scope": 16770,
                  "src": "14156:14:135",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 16711,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14156:7:135",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16714,
                  "mutability": "mutable",
                  "name": "userData",
                  "nameLocation": "14193:8:135",
                  "nodeType": "VariableDeclaration",
                  "scope": 16770,
                  "src": "14180:21:135",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 16713,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "14180:5:135",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16716,
                  "mutability": "mutable",
                  "name": "operatorData",
                  "nameLocation": "14224:12:135",
                  "nodeType": "VariableDeclaration",
                  "scope": 16770,
                  "src": "14211:25:135",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 16715,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "14211:5:135",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14078:164:135"
            },
            "returnParameters": {
              "id": 16718,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14251:0:135"
            },
            "scope": 16932,
            "src": "14064:611:135",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 16814,
              "nodeType": "Block",
              "src": "14918:260:135",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 16786,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 16781,
                          "name": "holder",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16773,
                          "src": "14936:6:135",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 16784,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "14954:1:135",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 16783,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "14946:7:135",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 16782,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "14946:7:135",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 16785,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14946:10:135",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "14936:20:135",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433737373a20617070726f76652066726f6d20746865207a65726f2061646472657373",
                        "id": 16787,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14958:39:135",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0e27915827f7e9aa1f9e706fa48897705bd51fdbb8c4e17f0dcc074873455ca7",
                          "typeString": "literal_string \"ERC777: approve from the zero address\""
                        },
                        "value": "ERC777: approve from the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0e27915827f7e9aa1f9e706fa48897705bd51fdbb8c4e17f0dcc074873455ca7",
                          "typeString": "literal_string \"ERC777: approve from the zero address\""
                        }
                      ],
                      "id": 16780,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "14928:7:135",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 16788,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14928:70:135",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 16789,
                  "nodeType": "ExpressionStatement",
                  "src": "14928:70:135"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 16796,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 16791,
                          "name": "spender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16775,
                          "src": "15016:7:135",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 16794,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "15035:1:135",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 16793,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "15027:7:135",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 16792,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "15027:7:135",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 16795,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15027:10:135",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "15016:21:135",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433737373a20617070726f766520746f20746865207a65726f2061646472657373",
                        "id": 16797,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15039:37:135",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f96aab14690ac2986315360e71dcbe877ff7fb69d13c692db6f39f8c2c01f20d",
                          "typeString": "literal_string \"ERC777: approve to the zero address\""
                        },
                        "value": "ERC777: approve to the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f96aab14690ac2986315360e71dcbe877ff7fb69d13c692db6f39f8c2c01f20d",
                          "typeString": "literal_string \"ERC777: approve to the zero address\""
                        }
                      ],
                      "id": 16790,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "15008:7:135",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 16798,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15008:69:135",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 16799,
                  "nodeType": "ExpressionStatement",
                  "src": "15008:69:135"
                },
                {
                  "expression": {
                    "id": 16806,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 16800,
                          "name": "_allowances",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15865,
                          "src": "15088:11:135",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(address => uint256))"
                          }
                        },
                        "id": 16803,
                        "indexExpression": {
                          "id": 16801,
                          "name": "holder",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16773,
                          "src": "15100:6:135",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "15088:19:135",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 16804,
                      "indexExpression": {
                        "id": 16802,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16775,
                        "src": "15108:7:135",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "15088:28:135",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 16805,
                      "name": "value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16777,
                      "src": "15119:5:135",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "15088:36:135",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 16807,
                  "nodeType": "ExpressionStatement",
                  "src": "15088:36:135"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 16809,
                        "name": "holder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16773,
                        "src": "15148:6:135",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 16810,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16775,
                        "src": "15156:7:135",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 16811,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16777,
                        "src": "15165:5:135",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 16808,
                      "name": "Approval",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11833,
                      "src": "15139:8:135",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 16812,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15139:32:135",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 16813,
                  "nodeType": "EmitStatement",
                  "src": "15134:37:135"
                }
              ]
            },
            "documentation": {
              "id": 16771,
              "nodeType": "StructuredDocumentation",
              "src": "14681:127:135",
              "text": " @dev See {ERC20-_approve}.\n Note that accounts cannot have allowance issued by their operators."
            },
            "id": 16815,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_approve",
            "nameLocation": "14822:8:135",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 16778,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16773,
                  "mutability": "mutable",
                  "name": "holder",
                  "nameLocation": "14848:6:135",
                  "nodeType": "VariableDeclaration",
                  "scope": 16815,
                  "src": "14840:14:135",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 16772,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14840:7:135",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16775,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "14872:7:135",
                  "nodeType": "VariableDeclaration",
                  "scope": 16815,
                  "src": "14864:15:135",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 16774,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14864:7:135",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16777,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "14897:5:135",
                  "nodeType": "VariableDeclaration",
                  "scope": 16815,
                  "src": "14889:13:135",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 16776,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14889:7:135",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14830:78:135"
            },
            "returnParameters": {
              "id": 16779,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14918:0:135"
            },
            "scope": 16932,
            "src": "14813:365:135",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 16859,
              "nodeType": "Block",
              "src": "15850:273:135",
              "statements": [
                {
                  "assignments": [
                    16832
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 16832,
                      "mutability": "mutable",
                      "name": "implementer",
                      "nameLocation": "15868:11:135",
                      "nodeType": "VariableDeclaration",
                      "scope": 16859,
                      "src": "15860:19:135",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 16831,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "15860:7:135",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 16838,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 16835,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16820,
                        "src": "15924:4:135",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 16836,
                        "name": "_TOKENS_SENDER_INTERFACE_HASH",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15835,
                        "src": "15930:29:135",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 16833,
                        "name": "_ERC1820_REGISTRY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15820,
                        "src": "15882:17:135",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC1820Registry_$19286",
                          "typeString": "contract IERC1820Registry"
                        }
                      },
                      "id": 16834,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getInterfaceImplementer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 19235,
                      "src": "15882:41:135",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$_t_bytes32_$returns$_t_address_$",
                        "typeString": "function (address,bytes32) view external returns (address)"
                      }
                    },
                    "id": 16837,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15882:78:135",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15860:100:135"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 16844,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 16839,
                      "name": "implementer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16832,
                      "src": "15974:11:135",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 16842,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "15997:1:135",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 16841,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "15989:7:135",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 16840,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "15989:7:135",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 16843,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "15989:10:135",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "15974:25:135",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 16858,
                  "nodeType": "IfStatement",
                  "src": "15970:147:135",
                  "trueBody": {
                    "id": 16857,
                    "nodeType": "Block",
                    "src": "16001:116:135",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 16849,
                              "name": "operator",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 16818,
                              "src": "16055:8:135",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 16850,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 16820,
                              "src": "16065:4:135",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 16851,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 16822,
                              "src": "16071:2:135",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 16852,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 16824,
                              "src": "16075:6:135",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 16853,
                              "name": "userData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 16826,
                              "src": "16083:8:135",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "id": 16854,
                              "name": "operatorData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 16828,
                              "src": "16093:12:135",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 16846,
                                  "name": "implementer",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 16832,
                                  "src": "16029:11:135",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 16845,
                                "name": "IERC777Sender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 17131,
                                "src": "16015:13:135",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC777Sender_$17131_$",
                                  "typeString": "type(contract IERC777Sender)"
                                }
                              },
                              "id": 16847,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "16015:26:135",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC777Sender_$17131",
                                "typeString": "contract IERC777Sender"
                              }
                            },
                            "id": 16848,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "tokensToSend",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 17130,
                            "src": "16015:39:135",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
                              "typeString": "function (address,address,address,uint256,bytes memory,bytes memory) external"
                            }
                          },
                          "id": 16855,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "16015:91:135",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 16856,
                        "nodeType": "ExpressionStatement",
                        "src": "16015:91:135"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 16816,
              "nodeType": "StructuredDocumentation",
              "src": "15184:462:135",
              "text": " @dev Call from.tokensToSend() if the interface is registered\n @param operator address operator requesting the transfer\n @param from address token holder address\n @param to address recipient address\n @param amount uint256 amount of tokens to transfer\n @param userData bytes extra information provided by the token holder (if any)\n @param operatorData bytes extra information provided by the operator (if any)"
            },
            "id": 16860,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_callTokensToSend",
            "nameLocation": "15660:17:135",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 16829,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16818,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "15695:8:135",
                  "nodeType": "VariableDeclaration",
                  "scope": 16860,
                  "src": "15687:16:135",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 16817,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "15687:7:135",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16820,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "15721:4:135",
                  "nodeType": "VariableDeclaration",
                  "scope": 16860,
                  "src": "15713:12:135",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 16819,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "15713:7:135",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16822,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "15743:2:135",
                  "nodeType": "VariableDeclaration",
                  "scope": 16860,
                  "src": "15735:10:135",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 16821,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "15735:7:135",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16824,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "15763:6:135",
                  "nodeType": "VariableDeclaration",
                  "scope": 16860,
                  "src": "15755:14:135",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 16823,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "15755:7:135",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16826,
                  "mutability": "mutable",
                  "name": "userData",
                  "nameLocation": "15792:8:135",
                  "nodeType": "VariableDeclaration",
                  "scope": 16860,
                  "src": "15779:21:135",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 16825,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "15779:5:135",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16828,
                  "mutability": "mutable",
                  "name": "operatorData",
                  "nameLocation": "15823:12:135",
                  "nodeType": "VariableDeclaration",
                  "scope": 16860,
                  "src": "15810:25:135",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 16827,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "15810:5:135",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15677:164:135"
            },
            "returnParameters": {
              "id": 16830,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15850:0:135"
            },
            "scope": 16932,
            "src": "15651:472:135",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 16917,
              "nodeType": "Block",
              "src": "17047:441:135",
              "statements": [
                {
                  "assignments": [
                    16879
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 16879,
                      "mutability": "mutable",
                      "name": "implementer",
                      "nameLocation": "17065:11:135",
                      "nodeType": "VariableDeclaration",
                      "scope": 16917,
                      "src": "17057:19:135",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 16878,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "17057:7:135",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 16885,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 16882,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16867,
                        "src": "17121:2:135",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 16883,
                        "name": "_TOKENS_RECIPIENT_INTERFACE_HASH",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15840,
                        "src": "17125:32:135",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 16880,
                        "name": "_ERC1820_REGISTRY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15820,
                        "src": "17079:17:135",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC1820Registry_$19286",
                          "typeString": "contract IERC1820Registry"
                        }
                      },
                      "id": 16881,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getInterfaceImplementer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 19235,
                      "src": "17079:41:135",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$_t_bytes32_$returns$_t_address_$",
                        "typeString": "function (address,bytes32) view external returns (address)"
                      }
                    },
                    "id": 16884,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17079:79:135",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "17057:101:135"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 16891,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 16886,
                      "name": "implementer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16879,
                      "src": "17172:11:135",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 16889,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "17195:1:135",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 16888,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "17187:7:135",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 16887,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "17187:7:135",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 16890,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "17187:10:135",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "17172:25:135",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "id": 16905,
                      "name": "requireReceptionAck",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16875,
                      "src": "17330:19:135",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "id": 16915,
                    "nodeType": "IfStatement",
                    "src": "17326:156:135",
                    "trueBody": {
                      "id": 16914,
                      "nodeType": "Block",
                      "src": "17351:131:135",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "id": 16910,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "!",
                                "prefix": true,
                                "src": "17373:16:135",
                                "subExpression": {
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "expression": {
                                      "id": 16907,
                                      "name": "to",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 16867,
                                      "src": "17374:2:135",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "id": 16908,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "isContract",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 17186,
                                    "src": "17374:13:135",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$",
                                      "typeString": "function (address) view returns (bool)"
                                    }
                                  },
                                  "id": 16909,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "17374:15:135",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              {
                                "hexValue": "4552433737373a20746f6b656e20726563697069656e7420636f6e747261637420686173206e6f20696d706c656d656e74657220666f7220455243373737546f6b656e73526563697069656e74",
                                "id": 16911,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "17391:79:135",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_9ee9d43e266ccfb7408c78038627d2c5b376a4a82e9fcfbfea2a9c63dc07fa80",
                                  "typeString": "literal_string \"ERC777: token recipient contract has no implementer for ERC777TokensRecipient\""
                                },
                                "value": "ERC777: token recipient contract has no implementer for ERC777TokensRecipient"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_9ee9d43e266ccfb7408c78038627d2c5b376a4a82e9fcfbfea2a9c63dc07fa80",
                                  "typeString": "literal_string \"ERC777: token recipient contract has no implementer for ERC777TokensRecipient\""
                                }
                              ],
                              "id": 16906,
                              "name": "require",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                -18,
                                -18
                              ],
                              "referencedDeclaration": -18,
                              "src": "17365:7:135",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                "typeString": "function (bool,string memory) pure"
                              }
                            },
                            "id": 16912,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "17365:106:135",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 16913,
                          "nodeType": "ExpressionStatement",
                          "src": "17365:106:135"
                        }
                      ]
                    }
                  },
                  "id": 16916,
                  "nodeType": "IfStatement",
                  "src": "17168:314:135",
                  "trueBody": {
                    "id": 16904,
                    "nodeType": "Block",
                    "src": "17199:121:135",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 16896,
                              "name": "operator",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 16863,
                              "src": "17258:8:135",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 16897,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 16865,
                              "src": "17268:4:135",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 16898,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 16867,
                              "src": "17274:2:135",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 16899,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 16869,
                              "src": "17278:6:135",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 16900,
                              "name": "userData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 16871,
                              "src": "17286:8:135",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "id": 16901,
                              "name": "operatorData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 16873,
                              "src": "17296:12:135",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 16893,
                                  "name": "implementer",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 16879,
                                  "src": "17230:11:135",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 16892,
                                "name": "IERC777Recipient",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 17111,
                                "src": "17213:16:135",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC777Recipient_$17111_$",
                                  "typeString": "type(contract IERC777Recipient)"
                                }
                              },
                              "id": 16894,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "17213:29:135",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC777Recipient_$17111",
                                "typeString": "contract IERC777Recipient"
                              }
                            },
                            "id": 16895,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "tokensReceived",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 17110,
                            "src": "17213:44:135",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
                              "typeString": "function (address,address,address,uint256,bytes memory,bytes memory) external"
                            }
                          },
                          "id": 16902,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "17213:96:135",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 16903,
                        "nodeType": "ExpressionStatement",
                        "src": "17213:96:135"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 16861,
              "nodeType": "StructuredDocumentation",
              "src": "16129:678:135",
              "text": " @dev Call to.tokensReceived() if the interface is registered. Reverts if the recipient is a contract but\n tokensReceived() was not registered for the recipient\n @param operator address operator requesting the transfer\n @param from address token holder address\n @param to address recipient address\n @param amount uint256 amount of tokens to transfer\n @param userData bytes extra information provided by the token holder (if any)\n @param operatorData bytes extra information provided by the operator (if any)\n @param requireReceptionAck if true, contract recipients are required to implement ERC777TokensRecipient"
            },
            "id": 16918,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_callTokensReceived",
            "nameLocation": "16821:19:135",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 16876,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16863,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "16858:8:135",
                  "nodeType": "VariableDeclaration",
                  "scope": 16918,
                  "src": "16850:16:135",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 16862,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "16850:7:135",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16865,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "16884:4:135",
                  "nodeType": "VariableDeclaration",
                  "scope": 16918,
                  "src": "16876:12:135",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 16864,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "16876:7:135",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16867,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "16906:2:135",
                  "nodeType": "VariableDeclaration",
                  "scope": 16918,
                  "src": "16898:10:135",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 16866,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "16898:7:135",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16869,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "16926:6:135",
                  "nodeType": "VariableDeclaration",
                  "scope": 16918,
                  "src": "16918:14:135",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 16868,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "16918:7:135",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16871,
                  "mutability": "mutable",
                  "name": "userData",
                  "nameLocation": "16955:8:135",
                  "nodeType": "VariableDeclaration",
                  "scope": 16918,
                  "src": "16942:21:135",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 16870,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "16942:5:135",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16873,
                  "mutability": "mutable",
                  "name": "operatorData",
                  "nameLocation": "16986:12:135",
                  "nodeType": "VariableDeclaration",
                  "scope": 16918,
                  "src": "16973:25:135",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 16872,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "16973:5:135",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16875,
                  "mutability": "mutable",
                  "name": "requireReceptionAck",
                  "nameLocation": "17013:19:135",
                  "nodeType": "VariableDeclaration",
                  "scope": 16918,
                  "src": "17008:24:135",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 16874,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "17008:4:135",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16840:198:135"
            },
            "returnParameters": {
              "id": 16877,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "17047:0:135"
            },
            "scope": 16932,
            "src": "16812:676:135",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 16930,
              "nodeType": "Block",
              "src": "18261:2:135",
              "statements": []
            },
            "documentation": {
              "id": 16919,
              "nodeType": "StructuredDocumentation",
              "src": "17494:617:135",
              "text": " @dev Hook that is called before any token transfer. This includes\n calls to {send}, {transfer}, {operatorSend}, minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be to transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
            },
            "id": 16931,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_beforeTokenTransfer",
            "nameLocation": "18125:20:135",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 16928,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16921,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "18163:8:135",
                  "nodeType": "VariableDeclaration",
                  "scope": 16931,
                  "src": "18155:16:135",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 16920,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "18155:7:135",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16923,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "18189:4:135",
                  "nodeType": "VariableDeclaration",
                  "scope": 16931,
                  "src": "18181:12:135",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 16922,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "18181:7:135",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16925,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "18211:2:135",
                  "nodeType": "VariableDeclaration",
                  "scope": 16931,
                  "src": "18203:10:135",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 16924,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "18203:7:135",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16927,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "18231:6:135",
                  "nodeType": "VariableDeclaration",
                  "scope": 16931,
                  "src": "18223:14:135",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 16926,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "18223:7:135",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "18145:98:135"
            },
            "returnParameters": {
              "id": 16929,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "18261:0:135"
            },
            "scope": 16932,
            "src": "18116:147:135",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "scope": 16933,
        "src": "1014:17251:135",
        "usedErrors": []
      }
    ],
    "src": "33:18233:135"
  },
  "bytecode": "60806040523480156200001157600080fd5b5060405162001d4638038062001d468339810160408190526200003491620003f1565b82516200004990600290602086019062000215565b5081516200005f90600390602085019062000215565b50805162000075906004906020840190620002a4565b5060005b8151811015620000e5576001600560008484815181106200009e576200009e62000508565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff191691151591909117905580620000dc816200051e565b91505062000079565b506040516329965a1d60e01b815230600482018190527fac7fbab5f54a3ca8194167523c6753bfeb96a445279294b6125b68cce217705460248301526044820152731820a4b7618bde71dce8cdc73aab6c95905fad24906329965a1d90606401600060405180830381600087803b1580156200016057600080fd5b505af115801562000175573d6000803e3d6000fd5b50506040516329965a1d60e01b815230600482018190527faea199e31a596269b42cdafd93407f14436db6e4cad65417994c2eb37381e05a60248301526044820152731820a4b7618bde71dce8cdc73aab6c95905fad2492506329965a1d9150606401600060405180830381600087803b158015620001f357600080fd5b505af115801562000208573d6000803e3d6000fd5b5050505050505062000585565b828054620002239062000548565b90600052602060002090601f01602090048101928262000247576000855562000292565b82601f106200026257805160ff191683800117855562000292565b8280016001018555821562000292579182015b828111156200029257825182559160200191906001019062000275565b50620002a0929150620002fc565b5090565b82805482825590600052602060002090810192821562000292579160200282015b828111156200029257825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190620002c5565b5b80821115620002a05760008155600101620002fd565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b038111828210171562000354576200035462000313565b604052919050565b600082601f8301126200036e57600080fd5b81516001600160401b038111156200038a576200038a62000313565b6020620003a0601f8301601f1916820162000329565b8281528582848701011115620003b557600080fd5b60005b83811015620003d5578581018301518282018401528201620003b8565b83811115620003e75760008385840101525b5095945050505050565b6000806000606084860312156200040757600080fd5b83516001600160401b03808211156200041f57600080fd5b6200042d878388016200035c565b94506020915081860151818111156200044557600080fd5b62000453888289016200035c565b9450506040860151818111156200046957600080fd5b8601601f810188136200047b57600080fd5b80518281111562000490576200049062000313565b8060051b9250620004a384840162000329565b818152928201840192848101908a851115620004be57600080fd5b928501925b84841015620004f857835192506001600160a01b0383168314620004e75760008081fd5b8282529285019290850190620004c3565b8096505050505050509250925092565b634e487b7160e01b600052603260045260246000fd5b60006000198214156200054157634e487b7160e01b600052601160045260246000fd5b5060010190565b600181811c908216806200055d57607f821691505b602082108114156200057f57634e487b7160e01b600052602260045260246000fd5b50919050565b6117b180620005956000396000f3fe608060405234801561001057600080fd5b50600436106101165760003560e01c8063959b8c3f116100a2578063d95b637111610071578063d95b63711461022b578063dd62ed3e1461023e578063fad8b32a14610277578063fc673c4f1461028a578063fe9d93031461029d57600080fd5b8063959b8c3f146101ea57806395d89b41146101fd5780639bd9bbc614610205578063a9059cbb1461021857600080fd5b806323b872dd116100e957806323b872dd14610183578063313ce56714610196578063556f0dc7146101a557806362ad1b83146101ac57806370a08231146101c157600080fd5b806306e485381461011b57806306fdde0314610139578063095ea7b31461014e57806318160ddd14610171575b600080fd5b6101236102b0565b60405161013091906111e1565b60405180910390f35b610141610312565b604051610130919061127b565b61016161015c3660046112a6565b61039b565b6040519015158152602001610130565b6001545b604051908152602001610130565b6101616101913660046112d2565b6103b3565b60405160128152602001610130565b6001610175565b6101bf6101ba3660046113b6565b61057c565b005b6101756101cf366004611449565b6001600160a01b031660009081526020819052604090205490565b6101bf6101f8366004611449565b6105b8565b6101416106d6565b6101bf610213366004611466565b6106e5565b6101616102263660046112a6565b610708565b6101616102393660046114bf565b6107bb565b61017561024c3660046114bf565b6001600160a01b03918216600090815260086020908152604080832093909416825291909152205490565b6101bf610285366004611449565b61085d565b6101bf6102983660046114f8565b610979565b6101bf6102ab366004611578565b6109b1565b6060600480548060200260200160405190810160405280929190818152602001828054801561030857602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116102ea575b5050505050905090565b606060028054610321906115bf565b80601f016020809104026020016040519081016040528092919081815260200182805461034d906115bf565b80156103085780601f1061036f57610100808354040283529160200191610308565b820191906000526020600020905b81548152906001019060200180831161037d57509395945050505050565b6000336103a98185856109d0565b5060019392505050565b60006001600160a01b0383166103e45760405162461bcd60e51b81526004016103db906115fa565b60405180910390fd5b6001600160a01b0384166104495760405162461bcd60e51b815260206004820152602660248201527f4552433737373a207472616e736665722066726f6d20746865207a65726f206160448201526564647265737360d01b60648201526084016103db565b600033905061047a818686866040518060200160405280600081525060405180602001604052806000815250610af7565b6104a6818686866040518060200160405280600081525060405180602001604052806000815250610c1f565b6001600160a01b038086166000908152600860209081526040808320938516835292905220548381101561052e5760405162461bcd60e51b815260206004820152602960248201527f4552433737373a207472616e7366657220616d6f756e74206578636565647320604482015268616c6c6f77616e636560b81b60648201526084016103db565b610542868361053d8785611654565b6109d0565b6105708287878760405180602001604052806000815250604051806020016040528060008152506000610d85565b50600195945050505050565b61058633866107bb565b6105a25760405162461bcd60e51b81526004016103db9061166b565b6105b185858585856001610f4a565b5050505050565b336001600160a01b038216141561061d5760405162461bcd60e51b8152602060048201526024808201527f4552433737373a20617574686f72697a696e672073656c66206173206f70657260448201526330ba37b960e11b60648201526084016103db565b6001600160a01b03811660009081526005602052604090205460ff161561066e573360009081526007602090815260408083206001600160a01b03851684529091529020805460ff1916905561069d565b3360009081526006602090815260408083206001600160a01b03851684529091529020805460ff191660011790555b60405133906001600160a01b038316907ff4caeb2d6ca8932a215a353d0703c326ec2d81fc68170f320eb2ab49e9df61f990600090a350565b606060038054610321906115bf565b61070333848484604051806020016040528060008152506001610f4a565b505050565b60006001600160a01b0383166107305760405162461bcd60e51b81526004016103db906115fa565b6000339050610761818286866040518060200160405280600081525060405180602001604052806000815250610af7565b61078d818286866040518060200160405280600081525060405180602001604052806000815250610c1f565b6103a98182868660405180602001604052806000815250604051806020016040528060008152506000610d85565b6000816001600160a01b0316836001600160a01b0316148061082657506001600160a01b03831660009081526005602052604090205460ff16801561082657506001600160a01b0380831660009081526007602090815260408083209387168352929052205460ff16155b8061085657506001600160a01b0380831660009081526006602090815260408083209387168352929052205460ff165b9392505050565b6001600160a01b0381163314156108c05760405162461bcd60e51b815260206004820152602160248201527f4552433737373a207265766f6b696e672073656c66206173206f70657261746f6044820152603960f91b60648201526084016103db565b6001600160a01b03811660009081526005602052604090205460ff1615610914573360009081526007602090815260408083206001600160a01b03851684529091529020805460ff19166001179055610940565b3360009081526006602090815260408083206001600160a01b03851684529091529020805460ff191690555b60405133906001600160a01b038316907f50546e66e5f44d728365dc3908c63bc5cfeeab470722c1677e3073a6ac294aa190600090a350565b61098333856107bb565b61099f5760405162461bcd60e51b81526004016103db9061166b565b6109ab8484848461102d565b50505050565b6109cc3383836040518060200160405280600081525061102d565b5050565b6001600160a01b038316610a345760405162461bcd60e51b815260206004820152602560248201527f4552433737373a20617070726f76652066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016103db565b6001600160a01b038216610a965760405162461bcd60e51b815260206004820152602360248201527f4552433737373a20617070726f766520746f20746865207a65726f206164647260448201526265737360e81b60648201526084016103db565b6001600160a01b0383811660008181526008602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b60405163555ddc6560e11b81526001600160a01b03861660048201527f29ddb589b1fb5fc7cf394961c1adf5f8c6454761adf795e67fe149f658abe8956024820152600090731820a4b7618bde71dce8cdc73aab6c95905fad249063aabbb8ca90604401602060405180830381865afa158015610b78573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b9c91906116b7565b90506001600160a01b03811615610c1657604051633ad5cbc160e11b81526001600160a01b038216906375ab978290610be3908a908a908a908a908a908a906004016116d4565b600060405180830381600087803b158015610bfd57600080fd5b505af1158015610c11573d6000803e3d6000fd5b505050505b50505050505050565b6001600160a01b03851660009081526020819052604090205483811015610c985760405162461bcd60e51b815260206004820152602760248201527f4552433737373a207472616e7366657220616d6f756e7420657863656564732060448201526662616c616e636560c81b60648201526084016103db565b6001600160a01b03808716600090815260208190526040808220878503905591871681529081208054869290610ccf90849061172e565b92505081905550846001600160a01b0316866001600160a01b0316886001600160a01b03167f06b541ddaa720db2b10a4d0cdac39b8d360425fc073085fac19bc82614677987878787604051610d2793929190611746565b60405180910390a4846001600160a01b0316866001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef86604051610d7491815260200190565b60405180910390a350505050505050565b60405163555ddc6560e11b81526001600160a01b03861660048201527fb281fc8c12954d22544db45de3159a39272895b169a852b314f9cc762e44c53b6024820152600090731820a4b7618bde71dce8cdc73aab6c95905fad249063aabbb8ca90604401602060405180830381865afa158015610e06573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e2a91906116b7565b90506001600160a01b03811615610ea6576040516223de2960e01b81526001600160a01b038216906223de2990610e6f908b908b908b908b908b908b906004016116d4565b600060405180830381600087803b158015610e8957600080fd5b505af1158015610e9d573d6000803e3d6000fd5b50505050610f40565b8115610f40576001600160a01b0386163b15610f405760405162461bcd60e51b815260206004820152604d60248201527f4552433737373a20746f6b656e20726563697069656e7420636f6e747261637460448201527f20686173206e6f20696d706c656d656e74657220666f7220455243373737546f60648201526c1ad95b9cd49958da5c1a595b9d609a1b608482015260a4016103db565b5050505050505050565b6001600160a01b038616610fab5760405162461bcd60e51b815260206004820152602260248201527f4552433737373a2073656e642066726f6d20746865207a65726f206164647265604482015261737360f01b60648201526084016103db565b6001600160a01b0385166110015760405162461bcd60e51b815260206004820181905260248201527f4552433737373a2073656e6420746f20746865207a65726f206164647265737360448201526064016103db565b33611010818888888888610af7565b61101e818888888888610c1f565b610c1681888888888888610d85565b6001600160a01b03841661108e5760405162461bcd60e51b815260206004820152602260248201527f4552433737373a206275726e2066726f6d20746865207a65726f206164647265604482015261737360f01b60648201526084016103db565b3361109e81866000878787610af7565b6001600160a01b038516600090815260208190526040902054848110156111135760405162461bcd60e51b815260206004820152602360248201527f4552433737373a206275726e20616d6f756e7420657863656564732062616c616044820152626e636560e81b60648201526084016103db565b6001600160a01b0386166000908152602081905260408120868303905560018054879290611142908490611654565b92505081905550856001600160a01b0316826001600160a01b03167fa78a9be3a7b862d26933ad85fb11d80ef66b8f972d7cbba06621d583943a409887878760405161119093929190611746565b60405180910390a36040518581526000906001600160a01b038816907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a3505050505050565b6020808252825182820181905260009190848201906040850190845b818110156112225783516001600160a01b0316835292840192918401916001016111fd565b50909695505050505050565b6000815180845260005b8181101561125457602081850181015186830182015201611238565b81811115611266576000602083870101525b50601f01601f19169290920160200192915050565b602081526000610856602083018461122e565b6001600160a01b03811681146112a357600080fd5b50565b600080604083850312156112b957600080fd5b82356112c48161128e565b946020939093013593505050565b6000806000606084860312156112e757600080fd5b83356112f28161128e565b925060208401356113028161128e565b929592945050506040919091013590565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261133a57600080fd5b813567ffffffffffffffff8082111561135557611355611313565b604051601f8301601f19908116603f0116810190828211818310171561137d5761137d611313565b8160405283815286602085880101111561139657600080fd5b836020870160208301376000602085830101528094505050505092915050565b600080600080600060a086880312156113ce57600080fd5b85356113d98161128e565b945060208601356113e98161128e565b935060408601359250606086013567ffffffffffffffff8082111561140d57600080fd5b61141989838a01611329565b9350608088013591508082111561142f57600080fd5b5061143c88828901611329565b9150509295509295909350565b60006020828403121561145b57600080fd5b81356108568161128e565b60008060006060848603121561147b57600080fd5b83356114868161128e565b925060208401359150604084013567ffffffffffffffff8111156114a957600080fd5b6114b586828701611329565b9150509250925092565b600080604083850312156114d257600080fd5b82356114dd8161128e565b915060208301356114ed8161128e565b809150509250929050565b6000806000806080858703121561150e57600080fd5b84356115198161128e565b935060208501359250604085013567ffffffffffffffff8082111561153d57600080fd5b61154988838901611329565b9350606087013591508082111561155f57600080fd5b5061156c87828801611329565b91505092959194509250565b6000806040838503121561158b57600080fd5b82359150602083013567ffffffffffffffff8111156115a957600080fd5b6115b585828601611329565b9150509250929050565b600181811c908216806115d357607f821691505b602082108114156115f457634e487b7160e01b600052602260045260246000fd5b50919050565b60208082526024908201527f4552433737373a207472616e7366657220746f20746865207a65726f206164646040820152637265737360e01b606082015260800190565b634e487b7160e01b600052601160045260246000fd5b6000828210156116665761166661163e565b500390565b6020808252602c908201527f4552433737373a2063616c6c6572206973206e6f7420616e206f70657261746f60408201526b39103337b9103437b63232b960a11b606082015260800190565b6000602082840312156116c957600080fd5b81516108568161128e565b6001600160a01b0387811682528681166020830152851660408201526060810184905260c06080820181905260009061170f9083018561122e565b82810360a0840152611721818561122e565b9998505050505050505050565b600082198211156117415761174161163e565b500190565b83815260606020820152600061175f606083018561122e565b8281036040840152611771818561122e565b969550505050505056fea2646970667358221220ef0749673a58a706f81388225ccb3e629d8b581872abc8ac4c28a3146b23ec1a64736f6c634300080c0033",
  "bytecodeSha1": "2701a448155f9993fa7e456560942b50364d525f",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.12+commit.f00d7308"
  },
  "contractName": "ERC777",
  "coverageMap": {
    "branches": {
      "108": {},
      "135": {
        "ERC777._approve": {
          "73": [
            14936,
            14956,
            true
          ],
          "74": [
            15016,
            15037,
            true
          ]
        },
        "ERC777._burn": {
          "81": [
            13411,
            13429,
            true
          ],
          "82": [
            13761,
            13782,
            true
          ]
        },
        "ERC777._callTokensReceived": {
          "77": [
            17172,
            17197,
            false
          ],
          "78": [
            17330,
            17349,
            false
          ]
        },
        "ERC777._callTokensToSend": {
          "75": [
            15974,
            15999,
            false
          ]
        },
        "ERC777._move": {
          "76": [
            14375,
            14396,
            true
          ]
        },
        "ERC777._send": {
          "79": [
            12514,
            12532,
            true
          ],
          "80": [
            12589,
            12605,
            true
          ]
        },
        "ERC777.authorizeOperator": {
          "67": [
            5852,
            5876,
            true
          ],
          "68": [
            5932,
            5959,
            false
          ]
        },
        "ERC777.operatorBurn": {
          "72": [
            7627,
            7663,
            true
          ]
        },
        "ERC777.operatorSend": {
          "66": [
            7166,
            7201,
            true
          ]
        },
        "ERC777.revokeOperator": {
          "70": [
            6325,
            6349,
            true
          ],
          "71": [
            6402,
            6429,
            false
          ]
        },
        "ERC777.transfer": {
          "69": [
            4738,
            4761,
            true
          ]
        },
        "ERC777.transferFrom": {
          "63": [
            9030,
            9053,
            true
          ],
          "64": [
            9112,
            9132,
            true
          ],
          "65": [
            9432,
            9458,
            true
          ]
        }
      },
      "136": {},
      "137": {},
      "138": {},
      "140": {},
      "142": {},
      "161": {}
    },
    "statements": {
      "108": {},
      "135": {
        "ERC777._approve": {
          "38": [
            14928,
            14998
          ],
          "39": [
            15008,
            15077
          ],
          "40": [
            15088,
            15124
          ],
          "41": [
            15134,
            15171
          ]
        },
        "ERC777._burn": {
          "56": [
            13403,
            13468
          ],
          "57": [
            13521,
            13594
          ],
          "58": [
            13753,
            13822
          ],
          "59": [
            13856,
            13894
          ],
          "60": [
            13914,
            13936
          ],
          "61": [
            13947,
            14002
          ],
          "62": [
            14012,
            14051
          ]
        },
        "ERC777._callTokensReceived": {
          "48": [
            17213,
            17309
          ],
          "49": [
            17365,
            17471
          ]
        },
        "ERC777._callTokensToSend": {
          "42": [
            16015,
            16106
          ]
        },
        "ERC777._move": {
          "43": [
            14367,
            14440
          ],
          "44": [
            14474,
            14512
          ],
          "45": [
            14532,
            14555
          ],
          "46": [
            14566,
            14627
          ],
          "47": [
            14637,
            14668
          ]
        },
        "ERC777._send": {
          "51": [
            12506,
            12571
          ],
          "52": [
            12581,
            12642
          ],
          "53": [
            12695,
            12764
          ],
          "54": [
            12775,
            12832
          ],
          "55": [
            12843,
            12935
          ]
        },
        "ERC777.allowance": {
          "4": [
            8119,
            8154
          ]
        },
        "ERC777.approve": {
          "8": [
            8436,
            8468
          ],
          "9": [
            8478,
            8489
          ]
        },
        "ERC777.authorizeOperator": {
          "20": [
            5844,
            5917
          ],
          "21": [
            5975,
            6030
          ],
          "22": [
            6061,
            6102
          ],
          "23": [
            6123,
            6170
          ]
        },
        "ERC777.balanceOf": {
          "3": [
            4038,
            4067
          ]
        },
        "ERC777.burn": {
          "37": [
            5280,
            5317
          ]
        },
        "ERC777.decimals": {
          "1": [
            3414,
            3423
          ]
        },
        "ERC777.defaultOperators": {
          "5": [
            6804,
            6833
          ]
        },
        "ERC777.granularity": {
          "2": [
            3625,
            3633
          ]
        },
        "ERC777.isOperatorFor": {
          "30": [
            5503,
            5691
          ]
        },
        "ERC777.name": {
          "6": [
            2987,
            2999
          ]
        },
        "ERC777.operatorBurn": {
          "35": [
            7619,
            7712
          ],
          "36": [
            7722,
            7764
          ]
        },
        "ERC777.operatorSend": {
          "18": [
            7158,
            7250
          ],
          "19": [
            7260,
            7318
          ]
        },
        "ERC777.revokeOperator": {
          "31": [
            6317,
            6387
          ],
          "32": [
            6445,
            6500
          ],
          "33": [
            6531,
            6572
          ],
          "34": [
            6593,
            6637
          ]
        },
        "ERC777.send": {
          "25": [
            4336,
            4390
          ]
        },
        "ERC777.symbol": {
          "24": [
            3143,
            3157
          ]
        },
        "ERC777.totalSupply": {
          "0": [
            3798,
            3817
          ]
        },
        "ERC777.transfer": {
          "26": [
            4730,
            4802
          ],
          "27": [
            4851,
            4907
          ],
          "28": [
            4918,
            4962
          ],
          "29": [
            4973,
            5038
          ]
        },
        "ERC777.transferFrom": {
          "10": [
            9022,
            9094
          ],
          "11": [
            9104,
            9175
          ],
          "12": [
            9227,
            9288
          ],
          "13": [
            9299,
            9348
          ],
          "14": [
            9424,
            9504
          ],
          "15": [
            9514,
            9566
          ],
          "16": [
            9577,
            9647
          ],
          "17": [
            9658,
            9669
          ]
        }
      },
      "136": {},
      "137": {},
      "138": {},
      "140": {
        "Address.isContract": {
          "50": [
            1073,
            1088
          ]
        }
      },
      "142": {
        "Context._msgSender": {
          "7": [
            658,
            675
          ]
        }
      },
      "161": {}
    }
  },
  "dependencies": [
    "Address",
    "Context",
    "IERC1820Registry",
    "IERC20",
    "IERC777",
    "IERC777Recipient",
    "IERC777Sender"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106101165760003560e01c8063959b8c3f116100a2578063d95b637111610071578063d95b63711461022b578063dd62ed3e1461023e578063fad8b32a14610277578063fc673c4f1461028a578063fe9d93031461029d57600080fd5b8063959b8c3f146101ea57806395d89b41146101fd5780639bd9bbc614610205578063a9059cbb1461021857600080fd5b806323b872dd116100e957806323b872dd14610183578063313ce56714610196578063556f0dc7146101a557806362ad1b83146101ac57806370a08231146101c157600080fd5b806306e485381461011b57806306fdde0314610139578063095ea7b31461014e57806318160ddd14610171575b600080fd5b6101236102b0565b60405161013091906111e1565b60405180910390f35b610141610312565b604051610130919061127b565b61016161015c3660046112a6565b61039b565b6040519015158152602001610130565b6001545b604051908152602001610130565b6101616101913660046112d2565b6103b3565b60405160128152602001610130565b6001610175565b6101bf6101ba3660046113b6565b61057c565b005b6101756101cf366004611449565b6001600160a01b031660009081526020819052604090205490565b6101bf6101f8366004611449565b6105b8565b6101416106d6565b6101bf610213366004611466565b6106e5565b6101616102263660046112a6565b610708565b6101616102393660046114bf565b6107bb565b61017561024c3660046114bf565b6001600160a01b03918216600090815260086020908152604080832093909416825291909152205490565b6101bf610285366004611449565b61085d565b6101bf6102983660046114f8565b610979565b6101bf6102ab366004611578565b6109b1565b6060600480548060200260200160405190810160405280929190818152602001828054801561030857602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116102ea575b5050505050905090565b606060028054610321906115bf565b80601f016020809104026020016040519081016040528092919081815260200182805461034d906115bf565b80156103085780601f1061036f57610100808354040283529160200191610308565b820191906000526020600020905b81548152906001019060200180831161037d57509395945050505050565b6000336103a98185856109d0565b5060019392505050565b60006001600160a01b0383166103e45760405162461bcd60e51b81526004016103db906115fa565b60405180910390fd5b6001600160a01b0384166104495760405162461bcd60e51b815260206004820152602660248201527f4552433737373a207472616e736665722066726f6d20746865207a65726f206160448201526564647265737360d01b60648201526084016103db565b600033905061047a818686866040518060200160405280600081525060405180602001604052806000815250610af7565b6104a6818686866040518060200160405280600081525060405180602001604052806000815250610c1f565b6001600160a01b038086166000908152600860209081526040808320938516835292905220548381101561052e5760405162461bcd60e51b815260206004820152602960248201527f4552433737373a207472616e7366657220616d6f756e74206578636565647320604482015268616c6c6f77616e636560b81b60648201526084016103db565b610542868361053d8785611654565b6109d0565b6105708287878760405180602001604052806000815250604051806020016040528060008152506000610d85565b50600195945050505050565b61058633866107bb565b6105a25760405162461bcd60e51b81526004016103db9061166b565b6105b185858585856001610f4a565b5050505050565b336001600160a01b038216141561061d5760405162461bcd60e51b8152602060048201526024808201527f4552433737373a20617574686f72697a696e672073656c66206173206f70657260448201526330ba37b960e11b60648201526084016103db565b6001600160a01b03811660009081526005602052604090205460ff161561066e573360009081526007602090815260408083206001600160a01b03851684529091529020805460ff1916905561069d565b3360009081526006602090815260408083206001600160a01b03851684529091529020805460ff191660011790555b60405133906001600160a01b038316907ff4caeb2d6ca8932a215a353d0703c326ec2d81fc68170f320eb2ab49e9df61f990600090a350565b606060038054610321906115bf565b61070333848484604051806020016040528060008152506001610f4a565b505050565b60006001600160a01b0383166107305760405162461bcd60e51b81526004016103db906115fa565b6000339050610761818286866040518060200160405280600081525060405180602001604052806000815250610af7565b61078d818286866040518060200160405280600081525060405180602001604052806000815250610c1f565b6103a98182868660405180602001604052806000815250604051806020016040528060008152506000610d85565b6000816001600160a01b0316836001600160a01b0316148061082657506001600160a01b03831660009081526005602052604090205460ff16801561082657506001600160a01b0380831660009081526007602090815260408083209387168352929052205460ff16155b8061085657506001600160a01b0380831660009081526006602090815260408083209387168352929052205460ff165b9392505050565b6001600160a01b0381163314156108c05760405162461bcd60e51b815260206004820152602160248201527f4552433737373a207265766f6b696e672073656c66206173206f70657261746f6044820152603960f91b60648201526084016103db565b6001600160a01b03811660009081526005602052604090205460ff1615610914573360009081526007602090815260408083206001600160a01b03851684529091529020805460ff19166001179055610940565b3360009081526006602090815260408083206001600160a01b03851684529091529020805460ff191690555b60405133906001600160a01b038316907f50546e66e5f44d728365dc3908c63bc5cfeeab470722c1677e3073a6ac294aa190600090a350565b61098333856107bb565b61099f5760405162461bcd60e51b81526004016103db9061166b565b6109ab8484848461102d565b50505050565b6109cc3383836040518060200160405280600081525061102d565b5050565b6001600160a01b038316610a345760405162461bcd60e51b815260206004820152602560248201527f4552433737373a20617070726f76652066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016103db565b6001600160a01b038216610a965760405162461bcd60e51b815260206004820152602360248201527f4552433737373a20617070726f766520746f20746865207a65726f206164647260448201526265737360e81b60648201526084016103db565b6001600160a01b0383811660008181526008602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b60405163555ddc6560e11b81526001600160a01b03861660048201527f29ddb589b1fb5fc7cf394961c1adf5f8c6454761adf795e67fe149f658abe8956024820152600090731820a4b7618bde71dce8cdc73aab6c95905fad249063aabbb8ca90604401602060405180830381865afa158015610b78573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b9c91906116b7565b90506001600160a01b03811615610c1657604051633ad5cbc160e11b81526001600160a01b038216906375ab978290610be3908a908a908a908a908a908a906004016116d4565b600060405180830381600087803b158015610bfd57600080fd5b505af1158015610c11573d6000803e3d6000fd5b505050505b50505050505050565b6001600160a01b03851660009081526020819052604090205483811015610c985760405162461bcd60e51b815260206004820152602760248201527f4552433737373a207472616e7366657220616d6f756e7420657863656564732060448201526662616c616e636560c81b60648201526084016103db565b6001600160a01b03808716600090815260208190526040808220878503905591871681529081208054869290610ccf90849061172e565b92505081905550846001600160a01b0316866001600160a01b0316886001600160a01b03167f06b541ddaa720db2b10a4d0cdac39b8d360425fc073085fac19bc82614677987878787604051610d2793929190611746565b60405180910390a4846001600160a01b0316866001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef86604051610d7491815260200190565b60405180910390a350505050505050565b60405163555ddc6560e11b81526001600160a01b03861660048201527fb281fc8c12954d22544db45de3159a39272895b169a852b314f9cc762e44c53b6024820152600090731820a4b7618bde71dce8cdc73aab6c95905fad249063aabbb8ca90604401602060405180830381865afa158015610e06573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e2a91906116b7565b90506001600160a01b03811615610ea6576040516223de2960e01b81526001600160a01b038216906223de2990610e6f908b908b908b908b908b908b906004016116d4565b600060405180830381600087803b158015610e8957600080fd5b505af1158015610e9d573d6000803e3d6000fd5b50505050610f40565b8115610f40576001600160a01b0386163b15610f405760405162461bcd60e51b815260206004820152604d60248201527f4552433737373a20746f6b656e20726563697069656e7420636f6e747261637460448201527f20686173206e6f20696d706c656d656e74657220666f7220455243373737546f60648201526c1ad95b9cd49958da5c1a595b9d609a1b608482015260a4016103db565b5050505050505050565b6001600160a01b038616610fab5760405162461bcd60e51b815260206004820152602260248201527f4552433737373a2073656e642066726f6d20746865207a65726f206164647265604482015261737360f01b60648201526084016103db565b6001600160a01b0385166110015760405162461bcd60e51b815260206004820181905260248201527f4552433737373a2073656e6420746f20746865207a65726f206164647265737360448201526064016103db565b33611010818888888888610af7565b61101e818888888888610c1f565b610c1681888888888888610d85565b6001600160a01b03841661108e5760405162461bcd60e51b815260206004820152602260248201527f4552433737373a206275726e2066726f6d20746865207a65726f206164647265604482015261737360f01b60648201526084016103db565b3361109e81866000878787610af7565b6001600160a01b038516600090815260208190526040902054848110156111135760405162461bcd60e51b815260206004820152602360248201527f4552433737373a206275726e20616d6f756e7420657863656564732062616c616044820152626e636560e81b60648201526084016103db565b6001600160a01b0386166000908152602081905260408120868303905560018054879290611142908490611654565b92505081905550856001600160a01b0316826001600160a01b03167fa78a9be3a7b862d26933ad85fb11d80ef66b8f972d7cbba06621d583943a409887878760405161119093929190611746565b60405180910390a36040518581526000906001600160a01b038816907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a3505050505050565b6020808252825182820181905260009190848201906040850190845b818110156112225783516001600160a01b0316835292840192918401916001016111fd565b50909695505050505050565b6000815180845260005b8181101561125457602081850181015186830182015201611238565b81811115611266576000602083870101525b50601f01601f19169290920160200192915050565b602081526000610856602083018461122e565b6001600160a01b03811681146112a357600080fd5b50565b600080604083850312156112b957600080fd5b82356112c48161128e565b946020939093013593505050565b6000806000606084860312156112e757600080fd5b83356112f28161128e565b925060208401356113028161128e565b929592945050506040919091013590565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261133a57600080fd5b813567ffffffffffffffff8082111561135557611355611313565b604051601f8301601f19908116603f0116810190828211818310171561137d5761137d611313565b8160405283815286602085880101111561139657600080fd5b836020870160208301376000602085830101528094505050505092915050565b600080600080600060a086880312156113ce57600080fd5b85356113d98161128e565b945060208601356113e98161128e565b935060408601359250606086013567ffffffffffffffff8082111561140d57600080fd5b61141989838a01611329565b9350608088013591508082111561142f57600080fd5b5061143c88828901611329565b9150509295509295909350565b60006020828403121561145b57600080fd5b81356108568161128e565b60008060006060848603121561147b57600080fd5b83356114868161128e565b925060208401359150604084013567ffffffffffffffff8111156114a957600080fd5b6114b586828701611329565b9150509250925092565b600080604083850312156114d257600080fd5b82356114dd8161128e565b915060208301356114ed8161128e565b809150509250929050565b6000806000806080858703121561150e57600080fd5b84356115198161128e565b935060208501359250604085013567ffffffffffffffff8082111561153d57600080fd5b61154988838901611329565b9350606087013591508082111561155f57600080fd5b5061156c87828801611329565b91505092959194509250565b6000806040838503121561158b57600080fd5b82359150602083013567ffffffffffffffff8111156115a957600080fd5b6115b585828601611329565b9150509250929050565b600181811c908216806115d357607f821691505b602082108114156115f457634e487b7160e01b600052602260045260246000fd5b50919050565b60208082526024908201527f4552433737373a207472616e7366657220746f20746865207a65726f206164646040820152637265737360e01b606082015260800190565b634e487b7160e01b600052601160045260246000fd5b6000828210156116665761166661163e565b500390565b6020808252602c908201527f4552433737373a2063616c6c6572206973206e6f7420616e206f70657261746f60408201526b39103337b9103437b63232b960a11b606082015260800190565b6000602082840312156116c957600080fd5b81516108568161128e565b6001600160a01b0387811682528681166020830152851660408201526060810184905260c06080820181905260009061170f9083018561122e565b82810360a0840152611721818561122e565b9998505050505050505050565b600082198211156117415761174161163e565b500190565b83815260606020820152600061175f606083018561122e565b8281036040840152611771818561122e565b969550505050505056fea2646970667358221220ef0749673a58a706f81388225ccb3e629d8b581872abc8ac4c28a3146b23ec1a64736f6c634300080c0033",
  "deployedSourceMap": "1014:17251:135:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6710:130;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2908:98;;;:::i;:::-;;;;;;;:::i;8299:197::-;;;;;;:::i;:::-;;:::i;:::-;;;2000:14:169;;1993:22;1975:41;;1963:2;1948:18;8299:197:135;1835:187:169;3701:123:135;3805:12;;3701:123;;;2173:25:169;;;2161:2;2146:18;3701:123:135;2027:177:169;8870:806:135;;;;;;:::i;:::-;;:::i;3348:82::-;;;3421:2;2812:36:169;;2800:2;2785:18;3348:82:135;2670:184:169;3545:95:135;3632:1;3545:95;;6959:366;;;;;;:::i;:::-;;:::i;:::-;;3924:150;;;;;;:::i;:::-;-1:-1:-1;;;;;4045:22:135;4019:7;4045:22;;;;;;;;;;;;3924:150;5765:412;;;;;;:::i;:::-;;:::i;3062:102::-;;;:::i;4204:193::-;;;;;;:::i;:::-;;:::i;4628:439::-;;;;;;:::i;:::-;;:::i;5387:311::-;;;;;;:::i;:::-;;:::i;8010:151::-;;;;;;:::i;:::-;-1:-1:-1;;;;;8126:19:135;;;8100:7;8126:19;;;:11;:19;;;;;;;;:28;;;;;;;;;;;;;8010:151;6241:403;;;;;;:::i;:::-;;:::i;7446:325::-;;;;;;:::i;:::-;;:::i;5197:127::-;;;;;;:::i;:::-;;:::i;6710:130::-;6776:16;6811:22;6804:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;6804:29:135;;;;;;;;;;;;;;;;;;;;;;;6710:130;:::o;2908:98::-;2962:13;2994:5;2987:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2987:12:135;;2908:98;-1:-1:-1;;;;;2908:98:135:o;8299:197::-;8381:4;665:10:142;8436:32:135;665:10:142;8453:7:135;8462:5;8436:8;:32::i;:::-;-1:-1:-1;8485:4:135;;8299:197;-1:-1:-1;;;8299:197:135:o;8870:806::-;9006:4;-1:-1:-1;;;;;9030:23:135;;9022:72;;;;-1:-1:-1;;;9022:72:135;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;;;;9112:20:135;;9104:71;;;;-1:-1:-1;;;9104:71:135;;7910:2:169;9104:71:135;;;7892:21:169;7949:2;7929:18;;;7922:30;7988:34;7968:18;;;7961:62;-1:-1:-1;;;8039:18:169;;;8032:36;8085:19;;9104:71:135;7708:402:169;9104:71:135;9186:15;665:10:142;9186:30:135;;9227:61;9245:7;9254:6;9262:9;9273:6;9227:61;;;;;;;;;;;;;;;;;;;;;;;;:17;:61::i;:::-;9299:49;9305:7;9314:6;9322:9;9333:6;9299:49;;;;;;;;;;;;;;;;;;;;;;;;:5;:49::i;:::-;-1:-1:-1;;;;;9386:19:135;;;9359:24;9386:19;;;:11;:19;;;;;;;;:28;;;;;;;;;;9432:26;;;;9424:80;;;;-1:-1:-1;;;9424:80:135;;8317:2:169;9424:80:135;;;8299:21:169;8356:2;8336:18;;;8329:30;8395:34;8375:18;;;8368:62;-1:-1:-1;;;8446:18:169;;;8439:39;8495:19;;9424:80:135;8115:405:169;9424:80:135;9514:52;9523:6;9531:7;9540:25;9559:6;9540:16;:25;:::i;:::-;9514:8;:52::i;:::-;9577:70;9597:7;9606:6;9614:9;9625:6;9577:70;;;;;;;;;;;;;;;;;;;;;;;;9641:5;9577:19;:70::i;:::-;-1:-1:-1;9665:4:135;;8870:806;-1:-1:-1;;;;;8870:806:135:o;6959:366::-;7166:35;665:10:142;7194:6:135;7166:13;:35::i;:::-;7158:92;;;;-1:-1:-1;;;7158:92:135;;;;;;;:::i;:::-;7260:58;7266:6;7274:9;7285:6;7293:4;7299:12;7313:4;7260:5;:58::i;:::-;6959:366;;;;;:::o;5765:412::-;665:10:142;-1:-1:-1;;;;;5852:24:135;;;;5844:73;;;;-1:-1:-1;;;5844:73:135;;9402:2:169;5844:73:135;;;9384:21:169;9441:2;9421:18;;;9414:30;9480:34;9460:18;;;9453:62;-1:-1:-1;;;9531:18:169;;;9524:34;9575:19;;5844:73:135;9200:400:169;5844:73:135;-1:-1:-1;;;;;5932:27:135;;;;;;:17;:27;;;;;;;;5928:185;;;665:10:142;5982:38:135;;;;:24;:38;;;;;;;;-1:-1:-1;;;;;5982:48:135;;;;;;;;;5975:55;;-1:-1:-1;;5975:55:135;;;5928:185;;;665:10:142;6061:24:135;;;;:10;:24;;;;;;;;-1:-1:-1;;;;;6061:34:135;;;;;;;;;:41;;-1:-1:-1;;6061:41:135;6098:4;6061:41;;;5928:185;6128:42;;665:10:142;;-1:-1:-1;;;;;6128:42:135;;;;;;;;5765:412;:::o;3062:102::-;3118:13;3150:7;3143:14;;;;;:::i;4204:193::-;4336:54;665:10:142;4356:9:135;4367:6;4375:4;4336:54;;;;;;;;;;;;4385:4;4336:5;:54::i;:::-;4204:193;;;:::o;4628:439::-;4714:4;-1:-1:-1;;;;;4738:23:135;;4730:72;;;;-1:-1:-1;;;4730:72:135;;;;;;;:::i;:::-;4813:12;665:10:142;4813:27:135;;4851:56;4869:4;4875;4881:9;4892:6;4851:56;;;;;;;;;;;;;;;;;;;;;;;;:17;:56::i;:::-;4918:44;4924:4;4930;4936:9;4947:6;4918:44;;;;;;;;;;;;;;;;;;;;;;;;:5;:44::i;:::-;4973:65;4993:4;4999;5005:9;5016:6;4973:65;;;;;;;;;;;;;;;;;;;;;;;;5032:5;4973:19;:65::i;5387:311::-;5487:4;5534:11;-1:-1:-1;;;;;5522:23:135;:8;-1:-1:-1;;;;;5522:23:135;;:120;;;-1:-1:-1;;;;;;5562:27:135;;;;;;:17;:27;;;;;;;;:79;;;;-1:-1:-1;;;;;;5594:37:135;;;;;;;:24;:37;;;;;;;;:47;;;;;;;;;;;;5593:48;5562:79;5522:169;;;-1:-1:-1;;;;;;5658:23:135;;;;;;;:10;:23;;;;;;;;:33;;;;;;;;;;;;5522:169;5503:188;5387:311;-1:-1:-1;;;5387:311:135:o;6241:403::-;-1:-1:-1;;;;;6325:24:135;;665:10:142;6325:24:135;;6317:70;;;;-1:-1:-1;;;6317:70:135;;9807:2:169;6317:70:135;;;9789:21:169;9846:2;9826:18;;;9819:30;9885:34;9865:18;;;9858:62;-1:-1:-1;;;9936:18:169;;;9929:31;9977:19;;6317:70:135;9605:397:169;6317:70:135;-1:-1:-1;;;;;6402:27:135;;;;;;:17;:27;;;;;;;;6398:185;;;665:10:142;6445:38:135;;;;:24;:38;;;;;;;;-1:-1:-1;;;;;6445:48:135;;;;;;;;;:55;;-1:-1:-1;;6445:55:135;6496:4;6445:55;;;6398:185;;;665:10:142;6538:24:135;;;;:10;:24;;;;;;;;-1:-1:-1;;;;;6538:34:135;;;;;;;;;6531:41;;-1:-1:-1;;6531:41:135;;;6398:185;6598:39;;665:10:142;;-1:-1:-1;;;;;6598:39:135;;;;;;;;6241:403;:::o;7446:325::-;7627:36;665:10:142;7655:7:135;7627:13;:36::i;:::-;7619:93;;;;-1:-1:-1;;;7619:93:135;;;;;;;:::i;:::-;7722:42;7728:7;7737:6;7745:4;7751:12;7722:5;:42::i;:::-;7446:325;;;;:::o;5197:127::-;5280:37;665:10:142;5300:6:135;5308:4;5280:37;;;;;;;;;;;;:5;:37::i;:::-;5197:127;;:::o;14813:365::-;-1:-1:-1;;;;;14936:20:135;;14928:70;;;;-1:-1:-1;;;14928:70:135;;10209:2:169;14928:70:135;;;10191:21:169;10248:2;10228:18;;;10221:30;10287:34;10267:18;;;10260:62;-1:-1:-1;;;10338:18:169;;;10331:35;10383:19;;14928:70:135;10007:401:169;14928:70:135;-1:-1:-1;;;;;15016:21:135;;15008:69;;;;-1:-1:-1;;;15008:69:135;;10615:2:169;15008:69:135;;;10597:21:169;10654:2;10634:18;;;10627:30;10693:34;10673:18;;;10666:62;-1:-1:-1;;;10744:18:169;;;10737:33;10787:19;;15008:69:135;10413:399:169;15008:69:135;-1:-1:-1;;;;;15088:19:135;;;;;;;:11;:19;;;;;;;;:28;;;;;;;;;;;;;:36;;;15139:32;;2173:25:169;;;15139:32:135;;2146:18:169;15139:32:135;;;;;;;14813:365;;;:::o;15651:472::-;15882:78;;-1:-1:-1;;;15882:78:135;;-1:-1:-1;;;;;11009:32:169;;15882:78:135;;;10991:51:169;1417:31:135;11058:18:169;;;11051:34;15860:19:135;;1168:42;;15882:41;;10964:18:169;;15882:78:135;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;15860:100;-1:-1:-1;;;;;;15974:25:135;;;15970:147;;16015:91;;-1:-1:-1;;;16015:91:135;;-1:-1:-1;;;;;16015:39:135;;;;;:91;;16055:8;;16065:4;;16071:2;;16075:6;;16083:8;;16093:12;;16015:91;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15970:147;15850:273;15651:472;;;;;;:::o;14064:611::-;-1:-1:-1;;;;;14342:15:135;;14320:19;14342:15;;;;;;;;;;;14375:21;;;;14367:73;;;;-1:-1:-1;;;14367:73:135;;12291:2:169;14367:73:135;;;12273:21:169;12330:2;12310:18;;;12303:30;12369:34;12349:18;;;12342:62;-1:-1:-1;;;12420:18:169;;;12413:37;12467:19;;14367:73:135;12089:403:169;14367:73:135;-1:-1:-1;;;;;14474:15:135;;;:9;:15;;;;;;;;;;;14492:20;;;14474:38;;14532:13;;;;;;;;:23;;14506:6;;14474:9;14532:23;;14506:6;;14532:23;:::i;:::-;;;;;;;;14592:2;-1:-1:-1;;;;;14571:56:135;14586:4;-1:-1:-1;;;;;14571:56:135;14576:8;-1:-1:-1;;;;;14571:56:135;;14596:6;14604:8;14614:12;14571:56;;;;;;;;:::i;:::-;;;;;;;;14657:2;-1:-1:-1;;;;;14642:26:135;14651:4;-1:-1:-1;;;;;14642:26:135;;14661:6;14642:26;;;;2173:25:169;;2161:2;2146:18;;2027:177;14642:26:135;;;;;;;;14251:424;14064:611;;;;;;:::o;16812:676::-;17079:79;;-1:-1:-1;;;17079:79:135;;-1:-1:-1;;;;;11009:32:169;;17079:79:135;;;10991:51:169;1514:34:135;11058:18:169;;;11051:34;17057:19:135;;1168:42;;17079:41;;10964:18:169;;17079:79:135;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;17057:101;-1:-1:-1;;;;;;17172:25:135;;;17168:314;;17213:96;;-1:-1:-1;;;17213:96:135;;-1:-1:-1;;;;;17213:44:135;;;;;:96;;17258:8;;17268:4;;17274:2;;17278:6;;17286:8;;17296:12;;17213:96;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17168:314;;;17330:19;17326:156;;;-1:-1:-1;;;;;17374:13:135;;1034:20:140;1080:8;17365:106:135;;;;-1:-1:-1;;;17365:106:135;;13287:2:169;17365:106:135;;;13269:21:169;13326:2;13306:18;;;13299:30;13365:34;13345:18;;;13338:62;13436:34;13416:18;;;13409:62;-1:-1:-1;;;13487:19:169;;;13480:44;13541:19;;17365:106:135;13085:481:169;17365:106:135;17047:441;16812:676;;;;;;;:::o;12292:650::-;-1:-1:-1;;;;;12514:18:135;;12506:65;;;;-1:-1:-1;;;12506:65:135;;13773:2:169;12506:65:135;;;13755:21:169;13812:2;13792:18;;;13785:30;13851:34;13831:18;;;13824:62;-1:-1:-1;;;13902:18:169;;;13895:32;13944:19;;12506:65:135;13571:398:169;12506:65:135;-1:-1:-1;;;;;12589:16:135;;12581:61;;;;-1:-1:-1;;;12581:61:135;;14176:2:169;12581:61:135;;;14158:21:169;;;14195:18;;;14188:30;14254:34;14234:18;;;14227:62;14306:18;;12581:61:135;13974:356:169;12581:61:135;665:10:142;12695:69:135;665:10:142;12723:4:135;12729:2;12733:6;12741:8;12751:12;12695:17;:69::i;:::-;12775:57;12781:8;12791:4;12797:2;12801:6;12809:8;12819:12;12775:5;:57::i;:::-;12843:92;12863:8;12873:4;12879:2;12883:6;12891:8;12901:12;12915:19;12843;:92::i;13247:811::-;-1:-1:-1;;;;;13411:18:135;;13403:65;;;;-1:-1:-1;;;13403:65:135;;14537:2:169;13403:65:135;;;14519:21:169;14576:2;14556:18;;;14549:30;14615:34;14595:18;;;14588:62;-1:-1:-1;;;14666:18:169;;;14659:32;14708:19;;13403:65:135;14335:398:169;13403:65:135;665:10:142;13521:73:135;665:10:142;13549:4:135;13479:16;13567:6;13575:4;13581:12;13521:17;:73::i;:::-;-1:-1:-1;;;;;13728:15:135;;13706:19;13728:15;;;;;;;;;;;13761:21;;;;13753:69;;;;-1:-1:-1;;;13753:69:135;;14940:2:169;13753:69:135;;;14922:21:169;14979:2;14959:18;;;14952:30;15018:34;14998:18;;;14991:62;-1:-1:-1;;;15069:18:169;;;15062:33;15112:19;;13753:69:135;14738:399:169;13753:69:135;-1:-1:-1;;;;;13856:15:135;;:9;:15;;;;;;;;;;13874:20;;;13856:38;;13914:12;:22;;13888:6;;13856:9;13914:22;;13888:6;;13914:22;:::i;:::-;;;;;;;;13969:4;-1:-1:-1;;;;;13952:50:135;13959:8;-1:-1:-1;;;;;13952:50:135;;13975:6;13983:4;13989:12;13952:50;;;;;;;;:::i;:::-;;;;;;;;14017:34;;2173:25:169;;;14040:1:135;;-1:-1:-1;;;;;14017:34:135;;;;;2161:2:169;2146:18;14017:34:135;;;;;;;13393:665;;13247:811;;;;:::o;14:658:169:-;185:2;237:21;;;307:13;;210:18;;;329:22;;;156:4;;185:2;408:15;;;;382:2;367:18;;;156:4;451:195;465:6;462:1;459:13;451:195;;;530:13;;-1:-1:-1;;;;;526:39:169;514:52;;621:15;;;;586:12;;;;562:1;480:9;451:195;;;-1:-1:-1;663:3:169;;14:658;-1:-1:-1;;;;;;14:658:169:o;677:472::-;719:3;757:5;751:12;784:6;779:3;772:19;809:1;819:162;833:6;830:1;827:13;819:162;;;895:4;951:13;;;947:22;;941:29;923:11;;;919:20;;912:59;848:12;819:162;;;999:6;996:1;993:13;990:87;;;1065:1;1058:4;1049:6;1044:3;1040:16;1036:27;1029:38;990:87;-1:-1:-1;1131:2:169;1110:15;-1:-1:-1;;1106:29:169;1097:39;;;;1138:4;1093:50;;677:472;-1:-1:-1;;677:472:169:o;1154:220::-;1303:2;1292:9;1285:21;1266:4;1323:45;1364:2;1353:9;1349:18;1341:6;1323:45;:::i;1379:131::-;-1:-1:-1;;;;;1454:31:169;;1444:42;;1434:70;;1500:1;1497;1490:12;1434:70;1379:131;:::o;1515:315::-;1583:6;1591;1644:2;1632:9;1623:7;1619:23;1615:32;1612:52;;;1660:1;1657;1650:12;1612:52;1699:9;1686:23;1718:31;1743:5;1718:31;:::i;:::-;1768:5;1820:2;1805:18;;;;1792:32;;-1:-1:-1;;;1515:315:169:o;2209:456::-;2286:6;2294;2302;2355:2;2343:9;2334:7;2330:23;2326:32;2323:52;;;2371:1;2368;2361:12;2323:52;2410:9;2397:23;2429:31;2454:5;2429:31;:::i;:::-;2479:5;-1:-1:-1;2536:2:169;2521:18;;2508:32;2549:33;2508:32;2549:33;:::i;:::-;2209:456;;2601:7;;-1:-1:-1;;;2655:2:169;2640:18;;;;2627:32;;2209:456::o;2859:127::-;2920:10;2915:3;2911:20;2908:1;2901:31;2951:4;2948:1;2941:15;2975:4;2972:1;2965:15;2991:718;3033:5;3086:3;3079:4;3071:6;3067:17;3063:27;3053:55;;3104:1;3101;3094:12;3053:55;3140:6;3127:20;3166:18;3203:2;3199;3196:10;3193:36;;;3209:18;;:::i;:::-;3284:2;3278:9;3252:2;3338:13;;-1:-1:-1;;3334:22:169;;;3358:2;3330:31;3326:40;3314:53;;;3382:18;;;3402:22;;;3379:46;3376:72;;;3428:18;;:::i;:::-;3468:10;3464:2;3457:22;3503:2;3495:6;3488:18;3549:3;3542:4;3537:2;3529:6;3525:15;3521:26;3518:35;3515:55;;;3566:1;3563;3556:12;3515:55;3630:2;3623:4;3615:6;3611:17;3604:4;3596:6;3592:17;3579:54;3677:1;3670:4;3665:2;3657:6;3653:15;3649:26;3642:37;3697:6;3688:15;;;;;;2991:718;;;;:::o;3714:885::-;3827:6;3835;3843;3851;3859;3912:3;3900:9;3891:7;3887:23;3883:33;3880:53;;;3929:1;3926;3919:12;3880:53;3968:9;3955:23;3987:31;4012:5;3987:31;:::i;:::-;4037:5;-1:-1:-1;4094:2:169;4079:18;;4066:32;4107:33;4066:32;4107:33;:::i;:::-;4159:7;-1:-1:-1;4213:2:169;4198:18;;4185:32;;-1:-1:-1;4268:2:169;4253:18;;4240:32;4291:18;4321:14;;;4318:34;;;4348:1;4345;4338:12;4318:34;4371:49;4412:7;4403:6;4392:9;4388:22;4371:49;:::i;:::-;4361:59;;4473:3;4462:9;4458:19;4445:33;4429:49;;4503:2;4493:8;4490:16;4487:36;;;4519:1;4516;4509:12;4487:36;;4542:51;4585:7;4574:8;4563:9;4559:24;4542:51;:::i;:::-;4532:61;;;3714:885;;;;;;;;:::o;4604:247::-;4663:6;4716:2;4704:9;4695:7;4691:23;4687:32;4684:52;;;4732:1;4729;4722:12;4684:52;4771:9;4758:23;4790:31;4815:5;4790:31;:::i;4856:523::-;4942:6;4950;4958;5011:2;4999:9;4990:7;4986:23;4982:32;4979:52;;;5027:1;5024;5017:12;4979:52;5066:9;5053:23;5085:31;5110:5;5085:31;:::i;:::-;5135:5;-1:-1:-1;5187:2:169;5172:18;;5159:32;;-1:-1:-1;5242:2:169;5227:18;;5214:32;5269:18;5258:30;;5255:50;;;5301:1;5298;5291:12;5255:50;5324:49;5365:7;5356:6;5345:9;5341:22;5324:49;:::i;:::-;5314:59;;;4856:523;;;;;:::o;5384:388::-;5452:6;5460;5513:2;5501:9;5492:7;5488:23;5484:32;5481:52;;;5529:1;5526;5519:12;5481:52;5568:9;5555:23;5587:31;5612:5;5587:31;:::i;:::-;5637:5;-1:-1:-1;5694:2:169;5679:18;;5666:32;5707:33;5666:32;5707:33;:::i;:::-;5759:7;5749:17;;;5384:388;;;;;:::o;5777:743::-;5881:6;5889;5897;5905;5958:3;5946:9;5937:7;5933:23;5929:33;5926:53;;;5975:1;5972;5965:12;5926:53;6014:9;6001:23;6033:31;6058:5;6033:31;:::i;:::-;6083:5;-1:-1:-1;6135:2:169;6120:18;;6107:32;;-1:-1:-1;6190:2:169;6175:18;;6162:32;6213:18;6243:14;;;6240:34;;;6270:1;6267;6260:12;6240:34;6293:49;6334:7;6325:6;6314:9;6310:22;6293:49;:::i;:::-;6283:59;;6395:2;6384:9;6380:18;6367:32;6351:48;;6424:2;6414:8;6411:16;6408:36;;;6440:1;6437;6430:12;6408:36;;6463:51;6506:7;6495:8;6484:9;6480:24;6463:51;:::i;:::-;6453:61;;;5777:743;;;;;;;:::o;6525:388::-;6602:6;6610;6663:2;6651:9;6642:7;6638:23;6634:32;6631:52;;;6679:1;6676;6669:12;6631:52;6715:9;6702:23;6692:33;;6776:2;6765:9;6761:18;6748:32;6803:18;6795:6;6792:30;6789:50;;;6835:1;6832;6825:12;6789:50;6858:49;6899:7;6890:6;6879:9;6875:22;6858:49;:::i;:::-;6848:59;;;6525:388;;;;;:::o;6918:380::-;6997:1;6993:12;;;;7040;;;7061:61;;7115:4;7107:6;7103:17;7093:27;;7061:61;7168:2;7160:6;7157:14;7137:18;7134:38;7131:161;;;7214:10;7209:3;7205:20;7202:1;7195:31;7249:4;7246:1;7239:15;7277:4;7274:1;7267:15;7131:161;;6918:380;;;:::o;7303:400::-;7505:2;7487:21;;;7544:2;7524:18;;;7517:30;7583:34;7578:2;7563:18;;7556:62;-1:-1:-1;;;7649:2:169;7634:18;;7627:34;7693:3;7678:19;;7303:400::o;8525:127::-;8586:10;8581:3;8577:20;8574:1;8567:31;8617:4;8614:1;8607:15;8641:4;8638:1;8631:15;8657:125;8697:4;8725:1;8722;8719:8;8716:34;;;8730:18;;:::i;:::-;-1:-1:-1;8767:9:169;;8657:125::o;8787:408::-;8989:2;8971:21;;;9028:2;9008:18;;;9001:30;9067:34;9062:2;9047:18;;9040:62;-1:-1:-1;;;9133:2:169;9118:18;;9111:42;9185:3;9170:19;;8787:408::o;11096:251::-;11166:6;11219:2;11207:9;11198:7;11194:23;11190:32;11187:52;;;11235:1;11232;11225:12;11187:52;11267:9;11261:16;11286:31;11311:5;11286:31;:::i;11352:732::-;-1:-1:-1;;;;;11695:15:169;;;11677:34;;11747:15;;;11742:2;11727:18;;11720:43;11799:15;;11794:2;11779:18;;11772:43;11846:2;11831:18;;11824:34;;;11895:3;11889;11874:19;;11867:32;;;11620:4;;11922:46;;11948:19;;11940:6;11922:46;:::i;:::-;12017:9;12009:6;12005:22;11999:3;11988:9;11984:19;11977:51;12045:33;12071:6;12063;12045:33;:::i;:::-;12037:41;11352:732;-1:-1:-1;;;;;;;;;11352:732:169:o;12497:128::-;12537:3;12568:1;12564:6;12561:1;12558:13;12555:39;;;12574:18;;:::i;:::-;-1:-1:-1;12610:9:169;;12497:128::o;12630:450::-;12851:6;12840:9;12833:25;12894:2;12889;12878:9;12874:18;12867:30;12814:4;12920:45;12961:2;12950:9;12946:18;12938:6;12920:45;:::i;:::-;13013:9;13005:6;13001:22;12996:2;12985:9;12981:18;12974:50;13041:33;13067:6;13059;13041:33;:::i;:::-;13033:41;12630:450;-1:-1:-1;;;;;;12630:450:169:o",
  "language": "Solidity",
  "natspec": {
    "details": "Implementation of the {IERC777} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. Support for ERC20 is included in this contract, as specified by the EIP: both the ERC777 and ERC20 interfaces can be safely used when interacting with it. Both {IERC777-Sent} and {IERC20-Transfer} events are emitted on token movements. Additionally, the {IERC777-granularity} value is hard-coded to `1`, meaning that there are no special restrictions in the amount of tokens that created, moved, or destroyed. This makes integration with ERC20 applications seamless.",
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}. Note that operator and allowance concepts are orthogonal: operators may not have allowance, and accounts with allowance may not be operators themselves."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. Note that accounts cannot have allowance issued by their operators."
      },
      "authorizeOperator(address)": {
        "details": "See {IERC777-authorizeOperator}."
      },
      "balanceOf(address)": {
        "details": "Returns the amount of tokens owned by an account (`tokenHolder`)."
      },
      "burn(uint256,bytes)": {
        "details": "See {IERC777-burn}. Also emits a {IERC20-Transfer} event for ERC20 compatibility."
      },
      "constructor": {
        "details": "`defaultOperators` may be an empty array."
      },
      "decimals()": {
        "details": "See {ERC20-decimals}. Always returns 18, as per the [ERC777 EIP](https://eips.ethereum.org/EIPS/eip-777#backward-compatibility)."
      },
      "defaultOperators()": {
        "details": "See {IERC777-defaultOperators}."
      },
      "granularity()": {
        "details": "See {IERC777-granularity}. This implementation always returns `1`."
      },
      "isOperatorFor(address,address)": {
        "details": "See {IERC777-isOperatorFor}."
      },
      "name()": {
        "details": "See {IERC777-name}."
      },
      "operatorBurn(address,uint256,bytes,bytes)": {
        "details": "See {IERC777-operatorBurn}. Emits {Burned} and {IERC20-Transfer} events."
      },
      "operatorSend(address,address,uint256,bytes,bytes)": {
        "details": "See {IERC777-operatorSend}. Emits {Sent} and {IERC20-Transfer} events."
      },
      "revokeOperator(address)": {
        "details": "See {IERC777-revokeOperator}."
      },
      "send(address,uint256,bytes)": {
        "details": "See {IERC777-send}. Also emits a {IERC20-Transfer} event for ERC20 compatibility."
      },
      "symbol()": {
        "details": "See {IERC777-symbol}."
      },
      "totalSupply()": {
        "details": "See {IERC777-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}. Unlike `send`, `recipient` is _not_ required to implement the {IERC777Recipient} interface if it is a contract. Also emits a {Sent} event."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}. Note that operator and allowance concepts are orthogonal: operators cannot call `transferFrom` (unless they have allowance), and accounts with allowance cannot call `operatorSend` (unless they are operators). Emits {Sent}, {IERC20-Transfer} and {IERC20-Approval} events."
      }
    },
    "version": 1
  },
  "offset": [
    1014,
    18265
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x116 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x959B8C3F GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xD95B6371 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xD95B6371 EQ PUSH2 0x22B JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x23E JUMPI DUP1 PUSH4 0xFAD8B32A EQ PUSH2 0x277 JUMPI DUP1 PUSH4 0xFC673C4F EQ PUSH2 0x28A JUMPI DUP1 PUSH4 0xFE9D9303 EQ PUSH2 0x29D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x959B8C3F EQ PUSH2 0x1EA JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1FD JUMPI DUP1 PUSH4 0x9BD9BBC6 EQ PUSH2 0x205 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x218 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xE9 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x183 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x196 JUMPI DUP1 PUSH4 0x556F0DC7 EQ PUSH2 0x1A5 JUMPI DUP1 PUSH4 0x62AD1B83 EQ PUSH2 0x1AC JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6E48538 EQ PUSH2 0x11B JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x139 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x14E JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x171 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x123 PUSH2 0x2B0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x130 SWAP2 SWAP1 PUSH2 0x11E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x141 PUSH2 0x312 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x130 SWAP2 SWAP1 PUSH2 0x127B JUMP JUMPDEST PUSH2 0x161 PUSH2 0x15C CALLDATASIZE PUSH1 0x4 PUSH2 0x12A6 JUMP JUMPDEST PUSH2 0x39B JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x130 JUMP JUMPDEST PUSH1 0x1 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x130 JUMP JUMPDEST PUSH2 0x161 PUSH2 0x191 CALLDATASIZE PUSH1 0x4 PUSH2 0x12D2 JUMP JUMPDEST PUSH2 0x3B3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x130 JUMP JUMPDEST PUSH1 0x1 PUSH2 0x175 JUMP JUMPDEST PUSH2 0x1BF PUSH2 0x1BA CALLDATASIZE PUSH1 0x4 PUSH2 0x13B6 JUMP JUMPDEST PUSH2 0x57C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x175 PUSH2 0x1CF CALLDATASIZE PUSH1 0x4 PUSH2 0x1449 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1BF PUSH2 0x1F8 CALLDATASIZE PUSH1 0x4 PUSH2 0x1449 JUMP JUMPDEST PUSH2 0x5B8 JUMP JUMPDEST PUSH2 0x141 PUSH2 0x6D6 JUMP JUMPDEST PUSH2 0x1BF PUSH2 0x213 CALLDATASIZE PUSH1 0x4 PUSH2 0x1466 JUMP JUMPDEST PUSH2 0x6E5 JUMP JUMPDEST PUSH2 0x161 PUSH2 0x226 CALLDATASIZE PUSH1 0x4 PUSH2 0x12A6 JUMP JUMPDEST PUSH2 0x708 JUMP JUMPDEST PUSH2 0x161 PUSH2 0x239 CALLDATASIZE PUSH1 0x4 PUSH2 0x14BF JUMP JUMPDEST PUSH2 0x7BB JUMP JUMPDEST PUSH2 0x175 PUSH2 0x24C CALLDATASIZE PUSH1 0x4 PUSH2 0x14BF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1BF PUSH2 0x285 CALLDATASIZE PUSH1 0x4 PUSH2 0x1449 JUMP JUMPDEST PUSH2 0x85D JUMP JUMPDEST PUSH2 0x1BF PUSH2 0x298 CALLDATASIZE PUSH1 0x4 PUSH2 0x14F8 JUMP JUMPDEST PUSH2 0x979 JUMP JUMPDEST PUSH2 0x1BF PUSH2 0x2AB CALLDATASIZE PUSH1 0x4 PUSH2 0x1578 JUMP JUMPDEST PUSH2 0x9B1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x308 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2EA JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x321 SWAP1 PUSH2 0x15BF JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x34D SWAP1 PUSH2 0x15BF JUMP JUMPDEST DUP1 ISZERO PUSH2 0x308 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x36F JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x308 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x37D JUMPI POP SWAP4 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x3A9 DUP2 DUP6 DUP6 PUSH2 0x9D0 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x3E4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3DB SWAP1 PUSH2 0x15FA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x449 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433737373A207472616E736665722066726F6D20746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3DB JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP PUSH2 0x47A DUP2 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xAF7 JUMP JUMPDEST PUSH2 0x4A6 DUP2 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xC1F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP6 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD DUP4 DUP2 LT ISZERO PUSH2 0x52E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433737373A207472616E7366657220616D6F756E74206578636565647320 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x616C6C6F77616E6365 PUSH1 0xB8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3DB JUMP JUMPDEST PUSH2 0x542 DUP7 DUP4 PUSH2 0x53D DUP8 DUP6 PUSH2 0x1654 JUMP JUMPDEST PUSH2 0x9D0 JUMP JUMPDEST PUSH2 0x570 DUP3 DUP8 DUP8 DUP8 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH1 0x0 PUSH2 0xD85 JUMP JUMPDEST POP PUSH1 0x1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x586 CALLER DUP7 PUSH2 0x7BB JUMP JUMPDEST PUSH2 0x5A2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3DB SWAP1 PUSH2 0x166B JUMP JUMPDEST PUSH2 0x5B1 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH1 0x1 PUSH2 0xF4A JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ ISZERO PUSH2 0x61D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4552433737373A20617574686F72697A696E672073656C66206173206F706572 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x30BA37B9 PUSH1 0xE1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3DB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x66E JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH2 0x69D JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMPDEST PUSH1 0x40 MLOAD CALLER SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH32 0xF4CAEB2D6CA8932A215A353D0703C326EC2D81FC68170F320EB2AB49E9DF61F9 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x321 SWAP1 PUSH2 0x15BF JUMP JUMPDEST PUSH2 0x703 CALLER DUP5 DUP5 DUP5 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH1 0x1 PUSH2 0xF4A JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x730 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3DB SWAP1 PUSH2 0x15FA JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP PUSH2 0x761 DUP2 DUP3 DUP7 DUP7 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xAF7 JUMP JUMPDEST PUSH2 0x78D DUP2 DUP3 DUP7 DUP7 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xC1F JUMP JUMPDEST PUSH2 0x3A9 DUP2 DUP3 DUP7 DUP7 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH1 0x0 PUSH2 0xD85 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x826 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP1 ISZERO PUSH2 0x826 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST DUP1 PUSH2 0x856 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND CALLER EQ ISZERO PUSH2 0x8C0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433737373A207265766F6B696E672073656C66206173206F70657261746F PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x39 PUSH1 0xF9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3DB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x914 JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x940 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMPDEST PUSH1 0x40 MLOAD CALLER SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH32 0x50546E66E5F44D728365DC3908C63BC5CFEEAB470722C1677E3073A6AC294AA1 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP JUMP JUMPDEST PUSH2 0x983 CALLER DUP6 PUSH2 0x7BB JUMP JUMPDEST PUSH2 0x99F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3DB SWAP1 PUSH2 0x166B JUMP JUMPDEST PUSH2 0x9AB DUP5 DUP5 DUP5 DUP5 PUSH2 0x102D JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x9CC CALLER DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x102D JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xA34 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433737373A20617070726F76652066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3DB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xA96 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433737373A20617070726F766520746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3DB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x555DDC65 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH32 0x29DDB589B1FB5FC7CF394961C1ADF5F8C6454761ADF795E67FE149F658ABE895 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH20 0x1820A4B7618BDE71DCE8CDC73AAB6C95905FAD24 SWAP1 PUSH4 0xAABBB8CA SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB78 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB9C SWAP2 SWAP1 PUSH2 0x16B7 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0xC16 JUMPI PUSH1 0x40 MLOAD PUSH4 0x3AD5CBC1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH4 0x75AB9782 SWAP1 PUSH2 0xBE3 SWAP1 DUP11 SWAP1 DUP11 SWAP1 DUP11 SWAP1 DUP11 SWAP1 DUP11 SWAP1 DUP11 SWAP1 PUSH1 0x4 ADD PUSH2 0x16D4 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xBFD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xC11 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP4 DUP2 LT ISZERO PUSH2 0xC98 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433737373A207472616E7366657220616D6F756E74206578636565647320 PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x62616C616E6365 PUSH1 0xC8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3DB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP8 DUP6 SUB SWAP1 SSTORE SWAP2 DUP8 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP7 SWAP3 SWAP1 PUSH2 0xCCF SWAP1 DUP5 SWAP1 PUSH2 0x172E JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x6B541DDAA720DB2B10A4D0CDAC39B8D360425FC073085FAC19BC82614677987 DUP8 DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0xD27 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1746 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP7 PUSH1 0x40 MLOAD PUSH2 0xD74 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x555DDC65 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH32 0xB281FC8C12954D22544DB45DE3159A39272895B169A852B314F9CC762E44C53B PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH20 0x1820A4B7618BDE71DCE8CDC73AAB6C95905FAD24 SWAP1 PUSH4 0xAABBB8CA SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xE06 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xE2A SWAP2 SWAP1 PUSH2 0x16B7 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0xEA6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x23DE29 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH3 0x23DE29 SWAP1 PUSH2 0xE6F SWAP1 DUP12 SWAP1 DUP12 SWAP1 DUP12 SWAP1 DUP12 SWAP1 DUP12 SWAP1 DUP12 SWAP1 PUSH1 0x4 ADD PUSH2 0x16D4 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE89 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xE9D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0xF40 JUMP JUMPDEST DUP2 ISZERO PUSH2 0xF40 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND EXTCODESIZE ISZERO PUSH2 0xF40 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x4D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433737373A20746F6B656E20726563697069656E7420636F6E7472616374 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x20686173206E6F20696D706C656D656E74657220666F7220455243373737546F PUSH1 0x64 DUP3 ADD MSTORE PUSH13 0x1AD95B9CD49958DA5C1A595B9D PUSH1 0x9A SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH2 0x3DB JUMP JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH2 0xFAB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433737373A2073656E642066726F6D20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3DB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH2 0x1001 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433737373A2073656E6420746F20746865207A65726F2061646472657373 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3DB JUMP JUMPDEST CALLER PUSH2 0x1010 DUP2 DUP9 DUP9 DUP9 DUP9 DUP9 PUSH2 0xAF7 JUMP JUMPDEST PUSH2 0x101E DUP2 DUP9 DUP9 DUP9 DUP9 DUP9 PUSH2 0xC1F JUMP JUMPDEST PUSH2 0xC16 DUP2 DUP9 DUP9 DUP9 DUP9 DUP9 DUP9 PUSH2 0xD85 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x108E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433737373A206275726E2066726F6D20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3DB JUMP JUMPDEST CALLER PUSH2 0x109E DUP2 DUP7 PUSH1 0x0 DUP8 DUP8 DUP8 PUSH2 0xAF7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP5 DUP2 LT ISZERO PUSH2 0x1113 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433737373A206275726E20616D6F756E7420657863656564732062616C61 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x6E6365 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3DB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP7 DUP4 SUB SWAP1 SSTORE PUSH1 0x1 DUP1 SLOAD DUP8 SWAP3 SWAP1 PUSH2 0x1142 SWAP1 DUP5 SWAP1 PUSH2 0x1654 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xA78A9BE3A7B862D26933AD85FB11D80EF66B8F972D7CBBA06621D583943A4098 DUP8 DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0x1190 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1746 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x40 MLOAD DUP6 DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1222 JUMPI DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x11FD JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1254 JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x1238 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x1266 JUMPI PUSH1 0x0 PUSH1 0x20 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x856 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x122E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x12A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x12B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x12C4 DUP2 PUSH2 0x128E JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x12E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x12F2 DUP2 PUSH2 0x128E JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x1302 DUP2 PUSH2 0x128E JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x133A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1355 JUMPI PUSH2 0x1355 PUSH2 0x1313 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x137D JUMPI PUSH2 0x137D PUSH2 0x1313 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE DUP7 PUSH1 0x20 DUP6 DUP9 ADD ADD GT ISZERO PUSH2 0x1396 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 PUSH1 0x20 DUP8 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP6 DUP4 ADD ADD MSTORE DUP1 SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x13CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH2 0x13D9 DUP2 PUSH2 0x128E JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH2 0x13E9 DUP2 PUSH2 0x128E JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x140D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1419 DUP10 DUP4 DUP11 ADD PUSH2 0x1329 JUMP JUMPDEST SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x142F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x143C DUP9 DUP3 DUP10 ADD PUSH2 0x1329 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x145B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x856 DUP2 PUSH2 0x128E JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x147B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x1486 DUP2 PUSH2 0x128E JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x14A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x14B5 DUP7 DUP3 DUP8 ADD PUSH2 0x1329 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x14D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x14DD DUP2 PUSH2 0x128E JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x14ED DUP2 PUSH2 0x128E JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x150E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH2 0x1519 DUP2 PUSH2 0x128E JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x153D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1549 DUP9 DUP4 DUP10 ADD PUSH2 0x1329 JUMP JUMPDEST SWAP4 POP PUSH1 0x60 DUP8 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x155F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x156C DUP8 DUP3 DUP9 ADD PUSH2 0x1329 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x158B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x15A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x15B5 DUP6 DUP3 DUP7 ADD PUSH2 0x1329 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x15D3 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x15F4 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x24 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433737373A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x40 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x1666 JUMPI PUSH2 0x1666 PUSH2 0x163E JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2C SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433737373A2063616C6C6572206973206E6F7420616E206F70657261746F PUSH1 0x40 DUP3 ADD MSTORE PUSH12 0x39103337B9103437B63232B9 PUSH1 0xA1 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x16C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x856 DUP2 PUSH2 0x128E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND DUP3 MSTORE DUP7 DUP2 AND PUSH1 0x20 DUP4 ADD MSTORE DUP6 AND PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0xC0 PUSH1 0x80 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x170F SWAP1 DUP4 ADD DUP6 PUSH2 0x122E JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0xA0 DUP5 ADD MSTORE PUSH2 0x1721 DUP2 DUP6 PUSH2 0x122E JUMP JUMPDEST SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x1741 JUMPI PUSH2 0x1741 PUSH2 0x163E JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST DUP4 DUP2 MSTORE PUSH1 0x60 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x175F PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x122E JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x40 DUP5 ADD MSTORE PUSH2 0x1771 DUP2 DUP6 PUSH2 0x122E JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEF SMOD 0x49 PUSH8 0x3A58A706F8138822 0x5C 0xCB RETURNDATACOPY PUSH3 0x9D8B58 XOR PUSH19 0xABC8AC4C28A3146B23EC1A64736F6C63430008 0xC STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        1014,
        18265
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "MSTORE",
      "path": "135"
    },
    "5": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "CALLVALUE",
      "path": "135"
    },
    "6": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "DUP1",
      "path": "135"
    },
    "7": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "ISZERO",
      "path": "135"
    },
    "8": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "PUSH2",
      "path": "135",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "JUMPI",
      "path": "135"
    },
    "12": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "DUP1",
      "path": "135"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "REVERT",
      "path": "135"
    },
    "16": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "JUMPDEST",
      "path": "135"
    },
    "17": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "POP",
      "path": "135"
    },
    "18": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "CALLDATASIZE",
      "path": "135"
    },
    "21": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "LT",
      "path": "135"
    },
    "22": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "PUSH2",
      "path": "135",
      "value": "0x116"
    },
    "25": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "JUMPI",
      "path": "135"
    },
    "26": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "CALLDATALOAD",
      "path": "135"
    },
    "29": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "SHR",
      "path": "135"
    },
    "32": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "DUP1",
      "path": "135"
    },
    "33": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "PUSH4",
      "path": "135",
      "value": "0x959B8C3F"
    },
    "38": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "GT",
      "path": "135"
    },
    "39": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "PUSH2",
      "path": "135",
      "value": "0xA2"
    },
    "42": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "JUMPI",
      "path": "135"
    },
    "43": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "DUP1",
      "path": "135"
    },
    "44": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "PUSH4",
      "path": "135",
      "value": "0xD95B6371"
    },
    "49": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "GT",
      "path": "135"
    },
    "50": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "PUSH2",
      "path": "135",
      "value": "0x71"
    },
    "53": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "JUMPI",
      "path": "135"
    },
    "54": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "DUP1",
      "path": "135"
    },
    "55": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "PUSH4",
      "path": "135",
      "value": "0xD95B6371"
    },
    "60": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "EQ",
      "path": "135"
    },
    "61": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "PUSH2",
      "path": "135",
      "value": "0x22B"
    },
    "64": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "JUMPI",
      "path": "135"
    },
    "65": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "DUP1",
      "path": "135"
    },
    "66": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "PUSH4",
      "path": "135",
      "value": "0xDD62ED3E"
    },
    "71": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "EQ",
      "path": "135"
    },
    "72": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "PUSH2",
      "path": "135",
      "value": "0x23E"
    },
    "75": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "JUMPI",
      "path": "135"
    },
    "76": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "DUP1",
      "path": "135"
    },
    "77": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "PUSH4",
      "path": "135",
      "value": "0xFAD8B32A"
    },
    "82": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "EQ",
      "path": "135"
    },
    "83": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "PUSH2",
      "path": "135",
      "value": "0x277"
    },
    "86": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "JUMPI",
      "path": "135"
    },
    "87": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "DUP1",
      "path": "135"
    },
    "88": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "PUSH4",
      "path": "135",
      "value": "0xFC673C4F"
    },
    "93": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "EQ",
      "path": "135"
    },
    "94": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "PUSH2",
      "path": "135",
      "value": "0x28A"
    },
    "97": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "JUMPI",
      "path": "135"
    },
    "98": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "DUP1",
      "path": "135"
    },
    "99": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "PUSH4",
      "path": "135",
      "value": "0xFE9D9303"
    },
    "104": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "EQ",
      "path": "135"
    },
    "105": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "PUSH2",
      "path": "135",
      "value": "0x29D"
    },
    "108": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "JUMPI",
      "path": "135"
    },
    "109": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0x0"
    },
    "111": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "DUP1",
      "path": "135"
    },
    "112": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "REVERT",
      "path": "135"
    },
    "113": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "JUMPDEST",
      "path": "135"
    },
    "114": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "DUP1",
      "path": "135"
    },
    "115": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "PUSH4",
      "path": "135",
      "value": "0x959B8C3F"
    },
    "120": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "EQ",
      "path": "135"
    },
    "121": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "PUSH2",
      "path": "135",
      "value": "0x1EA"
    },
    "124": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "JUMPI",
      "path": "135"
    },
    "125": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "DUP1",
      "path": "135"
    },
    "126": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "PUSH4",
      "path": "135",
      "value": "0x95D89B41"
    },
    "131": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "EQ",
      "path": "135"
    },
    "132": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "PUSH2",
      "path": "135",
      "value": "0x1FD"
    },
    "135": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "JUMPI",
      "path": "135"
    },
    "136": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "DUP1",
      "path": "135"
    },
    "137": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "PUSH4",
      "path": "135",
      "value": "0x9BD9BBC6"
    },
    "142": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "EQ",
      "path": "135"
    },
    "143": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "PUSH2",
      "path": "135",
      "value": "0x205"
    },
    "146": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "JUMPI",
      "path": "135"
    },
    "147": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "DUP1",
      "path": "135"
    },
    "148": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "PUSH4",
      "path": "135",
      "value": "0xA9059CBB"
    },
    "153": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "EQ",
      "path": "135"
    },
    "154": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "PUSH2",
      "path": "135",
      "value": "0x218"
    },
    "157": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "JUMPI",
      "path": "135"
    },
    "158": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0x0"
    },
    "160": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "DUP1",
      "path": "135"
    },
    "161": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "REVERT",
      "path": "135"
    },
    "162": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "JUMPDEST",
      "path": "135"
    },
    "163": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "DUP1",
      "path": "135"
    },
    "164": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "PUSH4",
      "path": "135",
      "value": "0x23B872DD"
    },
    "169": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "GT",
      "path": "135"
    },
    "170": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "PUSH2",
      "path": "135",
      "value": "0xE9"
    },
    "173": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "JUMPI",
      "path": "135"
    },
    "174": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "DUP1",
      "path": "135"
    },
    "175": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "PUSH4",
      "path": "135",
      "value": "0x23B872DD"
    },
    "180": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "EQ",
      "path": "135"
    },
    "181": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "PUSH2",
      "path": "135",
      "value": "0x183"
    },
    "184": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "JUMPI",
      "path": "135"
    },
    "185": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "DUP1",
      "path": "135"
    },
    "186": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "PUSH4",
      "path": "135",
      "value": "0x313CE567"
    },
    "191": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "EQ",
      "path": "135"
    },
    "192": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "PUSH2",
      "path": "135",
      "value": "0x196"
    },
    "195": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "JUMPI",
      "path": "135"
    },
    "196": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "DUP1",
      "path": "135"
    },
    "197": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "PUSH4",
      "path": "135",
      "value": "0x556F0DC7"
    },
    "202": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "EQ",
      "path": "135"
    },
    "203": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "PUSH2",
      "path": "135",
      "value": "0x1A5"
    },
    "206": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "JUMPI",
      "path": "135"
    },
    "207": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "DUP1",
      "path": "135"
    },
    "208": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "PUSH4",
      "path": "135",
      "value": "0x62AD1B83"
    },
    "213": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "EQ",
      "path": "135"
    },
    "214": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "PUSH2",
      "path": "135",
      "value": "0x1AC"
    },
    "217": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "JUMPI",
      "path": "135"
    },
    "218": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "DUP1",
      "path": "135"
    },
    "219": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "PUSH4",
      "path": "135",
      "value": "0x70A08231"
    },
    "224": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "EQ",
      "path": "135"
    },
    "225": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "PUSH2",
      "path": "135",
      "value": "0x1C1"
    },
    "228": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "JUMPI",
      "path": "135"
    },
    "229": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0x0"
    },
    "231": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "DUP1",
      "path": "135"
    },
    "232": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "REVERT",
      "path": "135"
    },
    "233": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "JUMPDEST",
      "path": "135"
    },
    "234": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "DUP1",
      "path": "135"
    },
    "235": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "PUSH4",
      "path": "135",
      "value": "0x6E48538"
    },
    "240": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "EQ",
      "path": "135"
    },
    "241": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "PUSH2",
      "path": "135",
      "value": "0x11B"
    },
    "244": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "JUMPI",
      "path": "135"
    },
    "245": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "DUP1",
      "path": "135"
    },
    "246": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "PUSH4",
      "path": "135",
      "value": "0x6FDDE03"
    },
    "251": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "EQ",
      "path": "135"
    },
    "252": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "PUSH2",
      "path": "135",
      "value": "0x139"
    },
    "255": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "JUMPI",
      "path": "135"
    },
    "256": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "DUP1",
      "path": "135"
    },
    "257": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "PUSH4",
      "path": "135",
      "value": "0x95EA7B3"
    },
    "262": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "EQ",
      "path": "135"
    },
    "263": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "PUSH2",
      "path": "135",
      "value": "0x14E"
    },
    "266": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "JUMPI",
      "path": "135"
    },
    "267": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "DUP1",
      "path": "135"
    },
    "268": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "PUSH4",
      "path": "135",
      "value": "0x18160DDD"
    },
    "273": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "EQ",
      "path": "135"
    },
    "274": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "PUSH2",
      "path": "135",
      "value": "0x171"
    },
    "277": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "JUMPI",
      "path": "135"
    },
    "278": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "JUMPDEST",
      "path": "135"
    },
    "279": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0x0"
    },
    "281": {
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "DUP1",
      "path": "135"
    },
    "282": {
      "first_revert": true,
      "fn": null,
      "offset": [
        1014,
        18265
      ],
      "op": "REVERT",
      "path": "135"
    },
    "283": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6710,
        6840
      ],
      "op": "JUMPDEST",
      "path": "135"
    },
    "284": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6710,
        6840
      ],
      "op": "PUSH2",
      "path": "135",
      "value": "0x123"
    },
    "287": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6710,
        6840
      ],
      "op": "PUSH2",
      "path": "135",
      "value": "0x2B0"
    },
    "290": {
      "fn": "ERC777.defaultOperators",
      "jump": "i",
      "offset": [
        6710,
        6840
      ],
      "op": "JUMP",
      "path": "135"
    },
    "291": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6710,
        6840
      ],
      "op": "JUMPDEST",
      "path": "135"
    },
    "292": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6710,
        6840
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0x40"
    },
    "294": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6710,
        6840
      ],
      "op": "MLOAD",
      "path": "135"
    },
    "295": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6710,
        6840
      ],
      "op": "PUSH2",
      "path": "135",
      "value": "0x130"
    },
    "298": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6710,
        6840
      ],
      "op": "SWAP2",
      "path": "135"
    },
    "299": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6710,
        6840
      ],
      "op": "SWAP1",
      "path": "135"
    },
    "300": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6710,
        6840
      ],
      "op": "PUSH2",
      "path": "135",
      "value": "0x11E1"
    },
    "303": {
      "fn": "ERC777.defaultOperators",
      "jump": "i",
      "offset": [
        6710,
        6840
      ],
      "op": "JUMP",
      "path": "135"
    },
    "304": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6710,
        6840
      ],
      "op": "JUMPDEST",
      "path": "135"
    },
    "305": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6710,
        6840
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0x40"
    },
    "307": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6710,
        6840
      ],
      "op": "MLOAD",
      "path": "135"
    },
    "308": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6710,
        6840
      ],
      "op": "DUP1",
      "path": "135"
    },
    "309": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6710,
        6840
      ],
      "op": "SWAP2",
      "path": "135"
    },
    "310": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6710,
        6840
      ],
      "op": "SUB",
      "path": "135"
    },
    "311": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6710,
        6840
      ],
      "op": "SWAP1",
      "path": "135"
    },
    "312": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6710,
        6840
      ],
      "op": "RETURN",
      "path": "135"
    },
    "313": {
      "fn": "ERC777.name",
      "offset": [
        2908,
        3006
      ],
      "op": "JUMPDEST",
      "path": "135"
    },
    "314": {
      "fn": "ERC777.name",
      "offset": [
        2908,
        3006
      ],
      "op": "PUSH2",
      "path": "135",
      "value": "0x141"
    },
    "317": {
      "fn": "ERC777.name",
      "offset": [
        2908,
        3006
      ],
      "op": "PUSH2",
      "path": "135",
      "value": "0x312"
    },
    "320": {
      "fn": "ERC777.name",
      "jump": "i",
      "offset": [
        2908,
        3006
      ],
      "op": "JUMP",
      "path": "135"
    },
    "321": {
      "fn": "ERC777.name",
      "offset": [
        2908,
        3006
      ],
      "op": "JUMPDEST",
      "path": "135"
    },
    "322": {
      "fn": "ERC777.name",
      "offset": [
        2908,
        3006
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0x40"
    },
    "324": {
      "fn": "ERC777.name",
      "offset": [
        2908,
        3006
      ],
      "op": "MLOAD",
      "path": "135"
    },
    "325": {
      "fn": "ERC777.name",
      "offset": [
        2908,
        3006
      ],
      "op": "PUSH2",
      "path": "135",
      "value": "0x130"
    },
    "328": {
      "fn": "ERC777.name",
      "offset": [
        2908,
        3006
      ],
      "op": "SWAP2",
      "path": "135"
    },
    "329": {
      "fn": "ERC777.name",
      "offset": [
        2908,
        3006
      ],
      "op": "SWAP1",
      "path": "135"
    },
    "330": {
      "fn": "ERC777.name",
      "offset": [
        2908,
        3006
      ],
      "op": "PUSH2",
      "path": "135",
      "value": "0x127B"
    },
    "333": {
      "fn": "ERC777.name",
      "jump": "i",
      "offset": [
        2908,
        3006
      ],
      "op": "JUMP",
      "path": "135"
    },
    "334": {
      "fn": "ERC777.approve",
      "offset": [
        8299,
        8496
      ],
      "op": "JUMPDEST",
      "path": "135"
    },
    "335": {
      "fn": "ERC777.approve",
      "offset": [
        8299,
        8496
      ],
      "op": "PUSH2",
      "path": "135",
      "value": "0x161"
    },
    "338": {
      "fn": "ERC777.approve",
      "offset": [
        8299,
        8496
      ],
      "op": "PUSH2",
      "path": "135",
      "value": "0x15C"
    },
    "341": {
      "fn": "ERC777.approve",
      "offset": [
        8299,
        8496
      ],
      "op": "CALLDATASIZE",
      "path": "135"
    },
    "342": {
      "fn": "ERC777.approve",
      "offset": [
        8299,
        8496
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0x4"
    },
    "344": {
      "fn": "ERC777.approve",
      "offset": [
        8299,
        8496
      ],
      "op": "PUSH2",
      "path": "135",
      "value": "0x12A6"
    },
    "347": {
      "fn": "ERC777.approve",
      "jump": "i",
      "offset": [
        8299,
        8496
      ],
      "op": "JUMP",
      "path": "135"
    },
    "348": {
      "fn": "ERC777.approve",
      "offset": [
        8299,
        8496
      ],
      "op": "JUMPDEST",
      "path": "135"
    },
    "349": {
      "fn": "ERC777.approve",
      "offset": [
        8299,
        8496
      ],
      "op": "PUSH2",
      "path": "135",
      "value": "0x39B"
    },
    "352": {
      "fn": "ERC777.approve",
      "jump": "i",
      "offset": [
        8299,
        8496
      ],
      "op": "JUMP",
      "path": "135"
    },
    "353": {
      "fn": "ERC777.approve",
      "offset": [
        8299,
        8496
      ],
      "op": "JUMPDEST",
      "path": "135"
    },
    "354": {
      "fn": "ERC777.approve",
      "offset": [
        8299,
        8496
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0x40"
    },
    "356": {
      "fn": "ERC777.approve",
      "offset": [
        8299,
        8496
      ],
      "op": "MLOAD",
      "path": "135"
    },
    "357": {
      "op": "SWAP1"
    },
    "358": {
      "op": "ISZERO"
    },
    "359": {
      "op": "ISZERO"
    },
    "360": {
      "op": "DUP2"
    },
    "361": {
      "op": "MSTORE"
    },
    "362": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "364": {
      "op": "ADD"
    },
    "365": {
      "fn": "ERC777.approve",
      "offset": [
        8299,
        8496
      ],
      "op": "PUSH2",
      "path": "135",
      "value": "0x130"
    },
    "368": {
      "op": "JUMP"
    },
    "369": {
      "fn": "ERC777.totalSupply",
      "offset": [
        3701,
        3824
      ],
      "op": "JUMPDEST",
      "path": "135"
    },
    "370": {
      "fn": "ERC777.totalSupply",
      "offset": [
        3805,
        3817
      ],
      "op": "PUSH1",
      "path": "135",
      "statement": 0,
      "value": "0x1"
    },
    "372": {
      "fn": "ERC777.totalSupply",
      "offset": [
        3805,
        3817
      ],
      "op": "SLOAD",
      "path": "135"
    },
    "373": {
      "fn": "ERC777.totalSupply",
      "offset": [
        3701,
        3824
      ],
      "op": "JUMPDEST",
      "path": "135"
    },
    "374": {
      "fn": "ERC777.totalSupply",
      "offset": [
        3701,
        3824
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0x40"
    },
    "376": {
      "fn": "ERC777.totalSupply",
      "offset": [
        3701,
        3824
      ],
      "op": "MLOAD",
      "path": "135"
    },
    "377": {
      "op": "SWAP1"
    },
    "378": {
      "op": "DUP2"
    },
    "379": {
      "op": "MSTORE"
    },
    "380": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "382": {
      "op": "ADD"
    },
    "383": {
      "fn": "ERC777.totalSupply",
      "offset": [
        3701,
        3824
      ],
      "op": "PUSH2",
      "path": "135",
      "value": "0x130"
    },
    "386": {
      "op": "JUMP"
    },
    "387": {
      "fn": "ERC777.transferFrom",
      "offset": [
        8870,
        9676
      ],
      "op": "JUMPDEST",
      "path": "135"
    },
    "388": {
      "fn": "ERC777.transferFrom",
      "offset": [
        8870,
        9676
      ],
      "op": "PUSH2",
      "path": "135",
      "value": "0x161"
    },
    "391": {
      "fn": "ERC777.transferFrom",
      "offset": [
        8870,
        9676
      ],
      "op": "PUSH2",
      "path": "135",
      "value": "0x191"
    },
    "394": {
      "fn": "ERC777.transferFrom",
      "offset": [
        8870,
        9676
      ],
      "op": "CALLDATASIZE",
      "path": "135"
    },
    "395": {
      "fn": "ERC777.transferFrom",
      "offset": [
        8870,
        9676
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0x4"
    },
    "397": {
      "fn": "ERC777.transferFrom",
      "offset": [
        8870,
        9676
      ],
      "op": "PUSH2",
      "path": "135",
      "value": "0x12D2"
    },
    "400": {
      "fn": "ERC777.transferFrom",
      "jump": "i",
      "offset": [
        8870,
        9676
      ],
      "op": "JUMP",
      "path": "135"
    },
    "401": {
      "fn": "ERC777.transferFrom",
      "offset": [
        8870,
        9676
      ],
      "op": "JUMPDEST",
      "path": "135"
    },
    "402": {
      "fn": "ERC777.transferFrom",
      "offset": [
        8870,
        9676
      ],
      "op": "PUSH2",
      "path": "135",
      "value": "0x3B3"
    },
    "405": {
      "fn": "ERC777.transferFrom",
      "jump": "i",
      "offset": [
        8870,
        9676
      ],
      "op": "JUMP",
      "path": "135"
    },
    "406": {
      "fn": "ERC777.decimals",
      "offset": [
        3348,
        3430
      ],
      "op": "JUMPDEST",
      "path": "135"
    },
    "407": {
      "fn": "ERC777.decimals",
      "offset": [
        3348,
        3430
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0x40"
    },
    "409": {
      "fn": "ERC777.decimals",
      "offset": [
        3348,
        3430
      ],
      "op": "MLOAD",
      "path": "135"
    },
    "410": {
      "fn": "ERC777.decimals",
      "offset": [
        3421,
        3423
      ],
      "op": "PUSH1",
      "path": "135",
      "statement": 1,
      "value": "0x12"
    },
    "412": {
      "op": "DUP2"
    },
    "413": {
      "op": "MSTORE"
    },
    "414": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "416": {
      "op": "ADD"
    },
    "417": {
      "fn": "ERC777.decimals",
      "offset": [
        3348,
        3430
      ],
      "op": "PUSH2",
      "path": "135",
      "value": "0x130"
    },
    "420": {
      "op": "JUMP"
    },
    "421": {
      "fn": "ERC777.granularity",
      "offset": [
        3545,
        3640
      ],
      "op": "JUMPDEST",
      "path": "135"
    },
    "422": {
      "fn": "ERC777.granularity",
      "offset": [
        3632,
        3633
      ],
      "op": "PUSH1",
      "path": "135",
      "statement": 2,
      "value": "0x1"
    },
    "424": {
      "fn": "ERC777.granularity",
      "offset": [
        3545,
        3640
      ],
      "op": "PUSH2",
      "path": "135",
      "value": "0x175"
    },
    "427": {
      "fn": "ERC777.granularity",
      "offset": [
        3545,
        3640
      ],
      "op": "JUMP",
      "path": "135"
    },
    "428": {
      "fn": "ERC777.operatorSend",
      "offset": [
        6959,
        7325
      ],
      "op": "JUMPDEST",
      "path": "135"
    },
    "429": {
      "fn": "ERC777.operatorSend",
      "offset": [
        6959,
        7325
      ],
      "op": "PUSH2",
      "path": "135",
      "value": "0x1BF"
    },
    "432": {
      "fn": "ERC777.operatorSend",
      "offset": [
        6959,
        7325
      ],
      "op": "PUSH2",
      "path": "135",
      "value": "0x1BA"
    },
    "435": {
      "fn": "ERC777.operatorSend",
      "offset": [
        6959,
        7325
      ],
      "op": "CALLDATASIZE",
      "path": "135"
    },
    "436": {
      "fn": "ERC777.operatorSend",
      "offset": [
        6959,
        7325
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0x4"
    },
    "438": {
      "fn": "ERC777.operatorSend",
      "offset": [
        6959,
        7325
      ],
      "op": "PUSH2",
      "path": "135",
      "value": "0x13B6"
    },
    "441": {
      "fn": "ERC777.operatorSend",
      "jump": "i",
      "offset": [
        6959,
        7325
      ],
      "op": "JUMP",
      "path": "135"
    },
    "442": {
      "fn": "ERC777.operatorSend",
      "offset": [
        6959,
        7325
      ],
      "op": "JUMPDEST",
      "path": "135"
    },
    "443": {
      "fn": "ERC777.operatorSend",
      "offset": [
        6959,
        7325
      ],
      "op": "PUSH2",
      "path": "135",
      "value": "0x57C"
    },
    "446": {
      "fn": "ERC777.operatorSend",
      "jump": "i",
      "offset": [
        6959,
        7325
      ],
      "op": "JUMP",
      "path": "135"
    },
    "447": {
      "fn": "ERC777.operatorSend",
      "offset": [
        6959,
        7325
      ],
      "op": "JUMPDEST",
      "path": "135"
    },
    "448": {
      "fn": "ERC777.operatorSend",
      "offset": [
        6959,
        7325
      ],
      "op": "STOP",
      "path": "135"
    },
    "449": {
      "fn": "ERC777.balanceOf",
      "offset": [
        3924,
        4074
      ],
      "op": "JUMPDEST",
      "path": "135"
    },
    "450": {
      "fn": "ERC777.balanceOf",
      "offset": [
        3924,
        4074
      ],
      "op": "PUSH2",
      "path": "135",
      "value": "0x175"
    },
    "453": {
      "fn": "ERC777.balanceOf",
      "offset": [
        3924,
        4074
      ],
      "op": "PUSH2",
      "path": "135",
      "value": "0x1CF"
    },
    "456": {
      "fn": "ERC777.balanceOf",
      "offset": [
        3924,
        4074
      ],
      "op": "CALLDATASIZE",
      "path": "135"
    },
    "457": {
      "fn": "ERC777.balanceOf",
      "offset": [
        3924,
        4074
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0x4"
    },
    "459": {
      "fn": "ERC777.balanceOf",
      "offset": [
        3924,
        4074
      ],
      "op": "PUSH2",
      "path": "135",
      "value": "0x1449"
    },
    "462": {
      "fn": "ERC777.balanceOf",
      "jump": "i",
      "offset": [
        3924,
        4074
      ],
      "op": "JUMP",
      "path": "135"
    },
    "463": {
      "fn": "ERC777.balanceOf",
      "offset": [
        3924,
        4074
      ],
      "op": "JUMPDEST",
      "path": "135"
    },
    "464": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "466": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "468": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "470": {
      "op": "SHL"
    },
    "471": {
      "op": "SUB"
    },
    "472": {
      "fn": "ERC777.balanceOf",
      "offset": [
        4045,
        4067
      ],
      "op": "AND",
      "path": "135",
      "statement": 3
    },
    "473": {
      "fn": "ERC777.balanceOf",
      "offset": [
        4019,
        4026
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0x0"
    },
    "475": {
      "fn": "ERC777.balanceOf",
      "offset": [
        4045,
        4067
      ],
      "op": "SWAP1",
      "path": "135"
    },
    "476": {
      "fn": "ERC777.balanceOf",
      "offset": [
        4045,
        4067
      ],
      "op": "DUP2",
      "path": "135"
    },
    "477": {
      "fn": "ERC777.balanceOf",
      "offset": [
        4045,
        4067
      ],
      "op": "MSTORE",
      "path": "135"
    },
    "478": {
      "fn": "ERC777.balanceOf",
      "offset": [
        4045,
        4067
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0x20"
    },
    "480": {
      "fn": "ERC777.balanceOf",
      "offset": [
        4045,
        4067
      ],
      "op": "DUP2",
      "path": "135"
    },
    "481": {
      "fn": "ERC777.balanceOf",
      "offset": [
        4045,
        4067
      ],
      "op": "SWAP1",
      "path": "135"
    },
    "482": {
      "fn": "ERC777.balanceOf",
      "offset": [
        4045,
        4067
      ],
      "op": "MSTORE",
      "path": "135"
    },
    "483": {
      "fn": "ERC777.balanceOf",
      "offset": [
        4045,
        4067
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0x40"
    },
    "485": {
      "fn": "ERC777.balanceOf",
      "offset": [
        4045,
        4067
      ],
      "op": "SWAP1",
      "path": "135"
    },
    "486": {
      "fn": "ERC777.balanceOf",
      "offset": [
        4045,
        4067
      ],
      "op": "KECCAK256",
      "path": "135"
    },
    "487": {
      "fn": "ERC777.balanceOf",
      "offset": [
        4045,
        4067
      ],
      "op": "SLOAD",
      "path": "135"
    },
    "488": {
      "fn": "ERC777.balanceOf",
      "offset": [
        4045,
        4067
      ],
      "op": "SWAP1",
      "path": "135"
    },
    "489": {
      "fn": "ERC777.balanceOf",
      "offset": [
        3924,
        4074
      ],
      "op": "JUMP",
      "path": "135"
    },
    "490": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5765,
        6177
      ],
      "op": "JUMPDEST",
      "path": "135"
    },
    "491": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5765,
        6177
      ],
      "op": "PUSH2",
      "path": "135",
      "value": "0x1BF"
    },
    "494": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5765,
        6177
      ],
      "op": "PUSH2",
      "path": "135",
      "value": "0x1F8"
    },
    "497": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5765,
        6177
      ],
      "op": "CALLDATASIZE",
      "path": "135"
    },
    "498": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5765,
        6177
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0x4"
    },
    "500": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5765,
        6177
      ],
      "op": "PUSH2",
      "path": "135",
      "value": "0x1449"
    },
    "503": {
      "fn": "ERC777.authorizeOperator",
      "jump": "i",
      "offset": [
        5765,
        6177
      ],
      "op": "JUMP",
      "path": "135"
    },
    "504": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5765,
        6177
      ],
      "op": "JUMPDEST",
      "path": "135"
    },
    "505": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5765,
        6177
      ],
      "op": "PUSH2",
      "path": "135",
      "value": "0x5B8"
    },
    "508": {
      "fn": "ERC777.authorizeOperator",
      "jump": "i",
      "offset": [
        5765,
        6177
      ],
      "op": "JUMP",
      "path": "135"
    },
    "509": {
      "fn": "ERC777.symbol",
      "offset": [
        3062,
        3164
      ],
      "op": "JUMPDEST",
      "path": "135"
    },
    "510": {
      "fn": "ERC777.symbol",
      "offset": [
        3062,
        3164
      ],
      "op": "PUSH2",
      "path": "135",
      "value": "0x141"
    },
    "513": {
      "fn": "ERC777.symbol",
      "offset": [
        3062,
        3164
      ],
      "op": "PUSH2",
      "path": "135",
      "value": "0x6D6"
    },
    "516": {
      "fn": "ERC777.symbol",
      "jump": "i",
      "offset": [
        3062,
        3164
      ],
      "op": "JUMP",
      "path": "135"
    },
    "517": {
      "fn": "ERC777.send",
      "offset": [
        4204,
        4397
      ],
      "op": "JUMPDEST",
      "path": "135"
    },
    "518": {
      "fn": "ERC777.send",
      "offset": [
        4204,
        4397
      ],
      "op": "PUSH2",
      "path": "135",
      "value": "0x1BF"
    },
    "521": {
      "fn": "ERC777.send",
      "offset": [
        4204,
        4397
      ],
      "op": "PUSH2",
      "path": "135",
      "value": "0x213"
    },
    "524": {
      "fn": "ERC777.send",
      "offset": [
        4204,
        4397
      ],
      "op": "CALLDATASIZE",
      "path": "135"
    },
    "525": {
      "fn": "ERC777.send",
      "offset": [
        4204,
        4397
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0x4"
    },
    "527": {
      "fn": "ERC777.send",
      "offset": [
        4204,
        4397
      ],
      "op": "PUSH2",
      "path": "135",
      "value": "0x1466"
    },
    "530": {
      "fn": "ERC777.send",
      "jump": "i",
      "offset": [
        4204,
        4397
      ],
      "op": "JUMP",
      "path": "135"
    },
    "531": {
      "fn": "ERC777.send",
      "offset": [
        4204,
        4397
      ],
      "op": "JUMPDEST",
      "path": "135"
    },
    "532": {
      "fn": "ERC777.send",
      "offset": [
        4204,
        4397
      ],
      "op": "PUSH2",
      "path": "135",
      "value": "0x6E5"
    },
    "535": {
      "fn": "ERC777.send",
      "jump": "i",
      "offset": [
        4204,
        4397
      ],
      "op": "JUMP",
      "path": "135"
    },
    "536": {
      "fn": "ERC777.transfer",
      "offset": [
        4628,
        5067
      ],
      "op": "JUMPDEST",
      "path": "135"
    },
    "537": {
      "fn": "ERC777.transfer",
      "offset": [
        4628,
        5067
      ],
      "op": "PUSH2",
      "path": "135",
      "value": "0x161"
    },
    "540": {
      "fn": "ERC777.transfer",
      "offset": [
        4628,
        5067
      ],
      "op": "PUSH2",
      "path": "135",
      "value": "0x226"
    },
    "543": {
      "fn": "ERC777.transfer",
      "offset": [
        4628,
        5067
      ],
      "op": "CALLDATASIZE",
      "path": "135"
    },
    "544": {
      "fn": "ERC777.transfer",
      "offset": [
        4628,
        5067
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0x4"
    },
    "546": {
      "fn": "ERC777.transfer",
      "offset": [
        4628,
        5067
      ],
      "op": "PUSH2",
      "path": "135",
      "value": "0x12A6"
    },
    "549": {
      "fn": "ERC777.transfer",
      "jump": "i",
      "offset": [
        4628,
        5067
      ],
      "op": "JUMP",
      "path": "135"
    },
    "550": {
      "fn": "ERC777.transfer",
      "offset": [
        4628,
        5067
      ],
      "op": "JUMPDEST",
      "path": "135"
    },
    "551": {
      "fn": "ERC777.transfer",
      "offset": [
        4628,
        5067
      ],
      "op": "PUSH2",
      "path": "135",
      "value": "0x708"
    },
    "554": {
      "fn": "ERC777.transfer",
      "jump": "i",
      "offset": [
        4628,
        5067
      ],
      "op": "JUMP",
      "path": "135"
    },
    "555": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5387,
        5698
      ],
      "op": "JUMPDEST",
      "path": "135"
    },
    "556": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5387,
        5698
      ],
      "op": "PUSH2",
      "path": "135",
      "value": "0x161"
    },
    "559": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5387,
        5698
      ],
      "op": "PUSH2",
      "path": "135",
      "value": "0x239"
    },
    "562": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5387,
        5698
      ],
      "op": "CALLDATASIZE",
      "path": "135"
    },
    "563": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5387,
        5698
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0x4"
    },
    "565": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5387,
        5698
      ],
      "op": "PUSH2",
      "path": "135",
      "value": "0x14BF"
    },
    "568": {
      "fn": "ERC777.isOperatorFor",
      "jump": "i",
      "offset": [
        5387,
        5698
      ],
      "op": "JUMP",
      "path": "135"
    },
    "569": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5387,
        5698
      ],
      "op": "JUMPDEST",
      "path": "135"
    },
    "570": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5387,
        5698
      ],
      "op": "PUSH2",
      "path": "135",
      "value": "0x7BB"
    },
    "573": {
      "fn": "ERC777.isOperatorFor",
      "jump": "i",
      "offset": [
        5387,
        5698
      ],
      "op": "JUMP",
      "path": "135"
    },
    "574": {
      "fn": "ERC777.allowance",
      "offset": [
        8010,
        8161
      ],
      "op": "JUMPDEST",
      "path": "135"
    },
    "575": {
      "fn": "ERC777.allowance",
      "offset": [
        8010,
        8161
      ],
      "op": "PUSH2",
      "path": "135",
      "value": "0x175"
    },
    "578": {
      "fn": "ERC777.allowance",
      "offset": [
        8010,
        8161
      ],
      "op": "PUSH2",
      "path": "135",
      "value": "0x24C"
    },
    "581": {
      "fn": "ERC777.allowance",
      "offset": [
        8010,
        8161
      ],
      "op": "CALLDATASIZE",
      "path": "135"
    },
    "582": {
      "fn": "ERC777.allowance",
      "offset": [
        8010,
        8161
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0x4"
    },
    "584": {
      "fn": "ERC777.allowance",
      "offset": [
        8010,
        8161
      ],
      "op": "PUSH2",
      "path": "135",
      "value": "0x14BF"
    },
    "587": {
      "fn": "ERC777.allowance",
      "jump": "i",
      "offset": [
        8010,
        8161
      ],
      "op": "JUMP",
      "path": "135"
    },
    "588": {
      "fn": "ERC777.allowance",
      "offset": [
        8010,
        8161
      ],
      "op": "JUMPDEST",
      "path": "135"
    },
    "589": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "591": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "593": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "595": {
      "op": "SHL"
    },
    "596": {
      "op": "SUB"
    },
    "597": {
      "fn": "ERC777.allowance",
      "offset": [
        8126,
        8145
      ],
      "op": "SWAP2",
      "path": "135",
      "statement": 4
    },
    "598": {
      "fn": "ERC777.allowance",
      "offset": [
        8126,
        8145
      ],
      "op": "DUP3",
      "path": "135"
    },
    "599": {
      "fn": "ERC777.allowance",
      "offset": [
        8126,
        8145
      ],
      "op": "AND",
      "path": "135"
    },
    "600": {
      "fn": "ERC777.allowance",
      "offset": [
        8100,
        8107
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0x0"
    },
    "602": {
      "fn": "ERC777.allowance",
      "offset": [
        8126,
        8145
      ],
      "op": "SWAP1",
      "path": "135"
    },
    "603": {
      "fn": "ERC777.allowance",
      "offset": [
        8126,
        8145
      ],
      "op": "DUP2",
      "path": "135"
    },
    "604": {
      "fn": "ERC777.allowance",
      "offset": [
        8126,
        8145
      ],
      "op": "MSTORE",
      "path": "135"
    },
    "605": {
      "fn": "ERC777.allowance",
      "offset": [
        8126,
        8137
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0x8"
    },
    "607": {
      "fn": "ERC777.allowance",
      "offset": [
        8126,
        8145
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0x20"
    },
    "609": {
      "fn": "ERC777.allowance",
      "offset": [
        8126,
        8145
      ],
      "op": "SWAP1",
      "path": "135"
    },
    "610": {
      "fn": "ERC777.allowance",
      "offset": [
        8126,
        8145
      ],
      "op": "DUP2",
      "path": "135"
    },
    "611": {
      "fn": "ERC777.allowance",
      "offset": [
        8126,
        8145
      ],
      "op": "MSTORE",
      "path": "135"
    },
    "612": {
      "fn": "ERC777.allowance",
      "offset": [
        8126,
        8145
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0x40"
    },
    "614": {
      "fn": "ERC777.allowance",
      "offset": [
        8126,
        8145
      ],
      "op": "DUP1",
      "path": "135"
    },
    "615": {
      "fn": "ERC777.allowance",
      "offset": [
        8126,
        8145
      ],
      "op": "DUP4",
      "path": "135"
    },
    "616": {
      "fn": "ERC777.allowance",
      "offset": [
        8126,
        8145
      ],
      "op": "KECCAK256",
      "path": "135"
    },
    "617": {
      "fn": "ERC777.allowance",
      "offset": [
        8126,
        8154
      ],
      "op": "SWAP4",
      "path": "135"
    },
    "618": {
      "fn": "ERC777.allowance",
      "offset": [
        8126,
        8154
      ],
      "op": "SWAP1",
      "path": "135"
    },
    "619": {
      "fn": "ERC777.allowance",
      "offset": [
        8126,
        8154
      ],
      "op": "SWAP5",
      "path": "135"
    },
    "620": {
      "fn": "ERC777.allowance",
      "offset": [
        8126,
        8154
      ],
      "op": "AND",
      "path": "135"
    },
    "621": {
      "fn": "ERC777.allowance",
      "offset": [
        8126,
        8154
      ],
      "op": "DUP3",
      "path": "135"
    },
    "622": {
      "fn": "ERC777.allowance",
      "offset": [
        8126,
        8154
      ],
      "op": "MSTORE",
      "path": "135"
    },
    "623": {
      "fn": "ERC777.allowance",
      "offset": [
        8126,
        8154
      ],
      "op": "SWAP2",
      "path": "135"
    },
    "624": {
      "fn": "ERC777.allowance",
      "offset": [
        8126,
        8154
      ],
      "op": "SWAP1",
      "path": "135"
    },
    "625": {
      "fn": "ERC777.allowance",
      "offset": [
        8126,
        8154
      ],
      "op": "SWAP2",
      "path": "135"
    },
    "626": {
      "fn": "ERC777.allowance",
      "offset": [
        8126,
        8154
      ],
      "op": "MSTORE",
      "path": "135"
    },
    "627": {
      "fn": "ERC777.allowance",
      "offset": [
        8126,
        8154
      ],
      "op": "KECCAK256",
      "path": "135"
    },
    "628": {
      "fn": "ERC777.allowance",
      "offset": [
        8126,
        8154
      ],
      "op": "SLOAD",
      "path": "135"
    },
    "629": {
      "fn": "ERC777.allowance",
      "offset": [
        8126,
        8154
      ],
      "op": "SWAP1",
      "path": "135"
    },
    "630": {
      "fn": "ERC777.allowance",
      "offset": [
        8010,
        8161
      ],
      "op": "JUMP",
      "path": "135"
    },
    "631": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6241,
        6644
      ],
      "op": "JUMPDEST",
      "path": "135"
    },
    "632": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6241,
        6644
      ],
      "op": "PUSH2",
      "path": "135",
      "value": "0x1BF"
    },
    "635": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6241,
        6644
      ],
      "op": "PUSH2",
      "path": "135",
      "value": "0x285"
    },
    "638": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6241,
        6644
      ],
      "op": "CALLDATASIZE",
      "path": "135"
    },
    "639": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6241,
        6644
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0x4"
    },
    "641": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6241,
        6644
      ],
      "op": "PUSH2",
      "path": "135",
      "value": "0x1449"
    },
    "644": {
      "fn": "ERC777.revokeOperator",
      "jump": "i",
      "offset": [
        6241,
        6644
      ],
      "op": "JUMP",
      "path": "135"
    },
    "645": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6241,
        6644
      ],
      "op": "JUMPDEST",
      "path": "135"
    },
    "646": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6241,
        6644
      ],
      "op": "PUSH2",
      "path": "135",
      "value": "0x85D"
    },
    "649": {
      "fn": "ERC777.revokeOperator",
      "jump": "i",
      "offset": [
        6241,
        6644
      ],
      "op": "JUMP",
      "path": "135"
    },
    "650": {
      "fn": "ERC777.operatorBurn",
      "offset": [
        7446,
        7771
      ],
      "op": "JUMPDEST",
      "path": "135"
    },
    "651": {
      "fn": "ERC777.operatorBurn",
      "offset": [
        7446,
        7771
      ],
      "op": "PUSH2",
      "path": "135",
      "value": "0x1BF"
    },
    "654": {
      "fn": "ERC777.operatorBurn",
      "offset": [
        7446,
        7771
      ],
      "op": "PUSH2",
      "path": "135",
      "value": "0x298"
    },
    "657": {
      "fn": "ERC777.operatorBurn",
      "offset": [
        7446,
        7771
      ],
      "op": "CALLDATASIZE",
      "path": "135"
    },
    "658": {
      "fn": "ERC777.operatorBurn",
      "offset": [
        7446,
        7771
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0x4"
    },
    "660": {
      "fn": "ERC777.operatorBurn",
      "offset": [
        7446,
        7771
      ],
      "op": "PUSH2",
      "path": "135",
      "value": "0x14F8"
    },
    "663": {
      "fn": "ERC777.operatorBurn",
      "jump": "i",
      "offset": [
        7446,
        7771
      ],
      "op": "JUMP",
      "path": "135"
    },
    "664": {
      "fn": "ERC777.operatorBurn",
      "offset": [
        7446,
        7771
      ],
      "op": "JUMPDEST",
      "path": "135"
    },
    "665": {
      "fn": "ERC777.operatorBurn",
      "offset": [
        7446,
        7771
      ],
      "op": "PUSH2",
      "path": "135",
      "value": "0x979"
    },
    "668": {
      "fn": "ERC777.operatorBurn",
      "jump": "i",
      "offset": [
        7446,
        7771
      ],
      "op": "JUMP",
      "path": "135"
    },
    "669": {
      "fn": "ERC777.burn",
      "offset": [
        5197,
        5324
      ],
      "op": "JUMPDEST",
      "path": "135"
    },
    "670": {
      "fn": "ERC777.burn",
      "offset": [
        5197,
        5324
      ],
      "op": "PUSH2",
      "path": "135",
      "value": "0x1BF"
    },
    "673": {
      "fn": "ERC777.burn",
      "offset": [
        5197,
        5324
      ],
      "op": "PUSH2",
      "path": "135",
      "value": "0x2AB"
    },
    "676": {
      "fn": "ERC777.burn",
      "offset": [
        5197,
        5324
      ],
      "op": "CALLDATASIZE",
      "path": "135"
    },
    "677": {
      "fn": "ERC777.burn",
      "offset": [
        5197,
        5324
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0x4"
    },
    "679": {
      "fn": "ERC777.burn",
      "offset": [
        5197,
        5324
      ],
      "op": "PUSH2",
      "path": "135",
      "value": "0x1578"
    },
    "682": {
      "fn": "ERC777.burn",
      "jump": "i",
      "offset": [
        5197,
        5324
      ],
      "op": "JUMP",
      "path": "135"
    },
    "683": {
      "fn": "ERC777.burn",
      "offset": [
        5197,
        5324
      ],
      "op": "JUMPDEST",
      "path": "135"
    },
    "684": {
      "fn": "ERC777.burn",
      "offset": [
        5197,
        5324
      ],
      "op": "PUSH2",
      "path": "135",
      "value": "0x9B1"
    },
    "687": {
      "fn": "ERC777.burn",
      "jump": "i",
      "offset": [
        5197,
        5324
      ],
      "op": "JUMP",
      "path": "135"
    },
    "688": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6710,
        6840
      ],
      "op": "JUMPDEST",
      "path": "135"
    },
    "689": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6776,
        6792
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0x60"
    },
    "691": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6811,
        6833
      ],
      "op": "PUSH1",
      "path": "135",
      "statement": 5,
      "value": "0x4"
    },
    "693": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6804,
        6833
      ],
      "op": "DUP1",
      "path": "135"
    },
    "694": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6804,
        6833
      ],
      "op": "SLOAD",
      "path": "135"
    },
    "695": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6804,
        6833
      ],
      "op": "DUP1",
      "path": "135"
    },
    "696": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6804,
        6833
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0x20"
    },
    "698": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6804,
        6833
      ],
      "op": "MUL",
      "path": "135"
    },
    "699": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6804,
        6833
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0x20"
    },
    "701": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6804,
        6833
      ],
      "op": "ADD",
      "path": "135"
    },
    "702": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6804,
        6833
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0x40"
    },
    "704": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6804,
        6833
      ],
      "op": "MLOAD",
      "path": "135"
    },
    "705": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6804,
        6833
      ],
      "op": "SWAP1",
      "path": "135"
    },
    "706": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6804,
        6833
      ],
      "op": "DUP2",
      "path": "135"
    },
    "707": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6804,
        6833
      ],
      "op": "ADD",
      "path": "135"
    },
    "708": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6804,
        6833
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0x40"
    },
    "710": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6804,
        6833
      ],
      "op": "MSTORE",
      "path": "135"
    },
    "711": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6804,
        6833
      ],
      "op": "DUP1",
      "path": "135"
    },
    "712": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6804,
        6833
      ],
      "op": "SWAP3",
      "path": "135"
    },
    "713": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6804,
        6833
      ],
      "op": "SWAP2",
      "path": "135"
    },
    "714": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6804,
        6833
      ],
      "op": "SWAP1",
      "path": "135"
    },
    "715": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6804,
        6833
      ],
      "op": "DUP2",
      "path": "135"
    },
    "716": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6804,
        6833
      ],
      "op": "DUP2",
      "path": "135"
    },
    "717": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6804,
        6833
      ],
      "op": "MSTORE",
      "path": "135"
    },
    "718": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6804,
        6833
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0x20"
    },
    "720": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6804,
        6833
      ],
      "op": "ADD",
      "path": "135"
    },
    "721": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6804,
        6833
      ],
      "op": "DUP3",
      "path": "135"
    },
    "722": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6804,
        6833
      ],
      "op": "DUP1",
      "path": "135"
    },
    "723": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6804,
        6833
      ],
      "op": "SLOAD",
      "path": "135"
    },
    "724": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6804,
        6833
      ],
      "op": "DUP1",
      "path": "135"
    },
    "725": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6804,
        6833
      ],
      "op": "ISZERO",
      "path": "135"
    },
    "726": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6804,
        6833
      ],
      "op": "PUSH2",
      "path": "135",
      "value": "0x308"
    },
    "729": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6804,
        6833
      ],
      "op": "JUMPI",
      "path": "135"
    },
    "730": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6804,
        6833
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0x20"
    },
    "732": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6804,
        6833
      ],
      "op": "MUL",
      "path": "135"
    },
    "733": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6804,
        6833
      ],
      "op": "DUP3",
      "path": "135"
    },
    "734": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6804,
        6833
      ],
      "op": "ADD",
      "path": "135"
    },
    "735": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6804,
        6833
      ],
      "op": "SWAP2",
      "path": "135"
    },
    "736": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6804,
        6833
      ],
      "op": "SWAP1",
      "path": "135"
    },
    "737": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6804,
        6833
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0x0"
    },
    "739": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6804,
        6833
      ],
      "op": "MSTORE",
      "path": "135"
    },
    "740": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6804,
        6833
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0x20"
    },
    "742": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6804,
        6833
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0x0"
    },
    "744": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6804,
        6833
      ],
      "op": "KECCAK256",
      "path": "135"
    },
    "745": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6804,
        6833
      ],
      "op": "SWAP1",
      "path": "135"
    },
    "746": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6804,
        6833
      ],
      "op": "JUMPDEST",
      "path": "135"
    },
    "747": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6804,
        6833
      ],
      "op": "DUP2",
      "path": "135"
    },
    "748": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6804,
        6833
      ],
      "op": "SLOAD",
      "path": "135"
    },
    "749": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "751": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "753": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "755": {
      "op": "SHL"
    },
    "756": {
      "op": "SUB"
    },
    "757": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6804,
        6833
      ],
      "op": "AND",
      "path": "135"
    },
    "758": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6804,
        6833
      ],
      "op": "DUP2",
      "path": "135"
    },
    "759": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6804,
        6833
      ],
      "op": "MSTORE",
      "path": "135"
    },
    "760": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6804,
        6833
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0x1"
    },
    "762": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6804,
        6833
      ],
      "op": "SWAP1",
      "path": "135"
    },
    "763": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6804,
        6833
      ],
      "op": "SWAP2",
      "path": "135"
    },
    "764": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6804,
        6833
      ],
      "op": "ADD",
      "path": "135"
    },
    "765": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6804,
        6833
      ],
      "op": "SWAP1",
      "path": "135"
    },
    "766": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6804,
        6833
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0x20"
    },
    "768": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6804,
        6833
      ],
      "op": "ADD",
      "path": "135"
    },
    "769": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6804,
        6833
      ],
      "op": "DUP1",
      "path": "135"
    },
    "770": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6804,
        6833
      ],
      "op": "DUP4",
      "path": "135"
    },
    "771": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6804,
        6833
      ],
      "op": "GT",
      "path": "135"
    },
    "772": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6804,
        6833
      ],
      "op": "PUSH2",
      "path": "135",
      "value": "0x2EA"
    },
    "775": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6804,
        6833
      ],
      "op": "JUMPI",
      "path": "135"
    },
    "776": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6804,
        6833
      ],
      "op": "JUMPDEST",
      "path": "135"
    },
    "777": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6804,
        6833
      ],
      "op": "POP",
      "path": "135"
    },
    "778": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6804,
        6833
      ],
      "op": "POP",
      "path": "135"
    },
    "779": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6804,
        6833
      ],
      "op": "POP",
      "path": "135"
    },
    "780": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6804,
        6833
      ],
      "op": "POP",
      "path": "135"
    },
    "781": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6804,
        6833
      ],
      "op": "POP",
      "path": "135"
    },
    "782": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6804,
        6833
      ],
      "op": "SWAP1",
      "path": "135"
    },
    "783": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6804,
        6833
      ],
      "op": "POP",
      "path": "135"
    },
    "784": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6710,
        6840
      ],
      "op": "SWAP1",
      "path": "135"
    },
    "785": {
      "fn": "ERC777.defaultOperators",
      "jump": "o",
      "offset": [
        6710,
        6840
      ],
      "op": "JUMP",
      "path": "135"
    },
    "786": {
      "fn": "ERC777.name",
      "offset": [
        2908,
        3006
      ],
      "op": "JUMPDEST",
      "path": "135"
    },
    "787": {
      "fn": "ERC777.name",
      "offset": [
        2962,
        2975
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0x60"
    },
    "789": {
      "fn": "ERC777.name",
      "offset": [
        2994,
        2999
      ],
      "op": "PUSH1",
      "path": "135",
      "statement": 6,
      "value": "0x2"
    },
    "791": {
      "fn": "ERC777.name",
      "offset": [
        2987,
        2999
      ],
      "op": "DUP1",
      "path": "135"
    },
    "792": {
      "fn": "ERC777.name",
      "offset": [
        2987,
        2999
      ],
      "op": "SLOAD",
      "path": "135"
    },
    "793": {
      "fn": "ERC777.name",
      "offset": [
        2987,
        2999
      ],
      "op": "PUSH2",
      "path": "135",
      "value": "0x321"
    },
    "796": {
      "fn": "ERC777.name",
      "offset": [
        2987,
        2999
      ],
      "op": "SWAP1",
      "path": "135"
    },
    "797": {
      "fn": "ERC777.name",
      "offset": [
        2987,
        2999
      ],
      "op": "PUSH2",
      "path": "135",
      "value": "0x15BF"
    },
    "800": {
      "fn": "ERC777.name",
      "jump": "i",
      "offset": [
        2987,
        2999
      ],
      "op": "JUMP",
      "path": "135"
    },
    "801": {
      "fn": "ERC777.name",
      "offset": [
        2987,
        2999
      ],
      "op": "JUMPDEST",
      "path": "135"
    },
    "802": {
      "fn": "ERC777.name",
      "offset": [
        2987,
        2999
      ],
      "op": "DUP1",
      "path": "135"
    },
    "803": {
      "fn": "ERC777.name",
      "offset": [
        2987,
        2999
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0x1F"
    },
    "805": {
      "fn": "ERC777.name",
      "offset": [
        2987,
        2999
      ],
      "op": "ADD",
      "path": "135"
    },
    "806": {
      "fn": "ERC777.name",
      "offset": [
        2987,
        2999
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0x20"
    },
    "808": {
      "fn": "ERC777.name",
      "offset": [
        2987,
        2999
      ],
      "op": "DUP1",
      "path": "135"
    },
    "809": {
      "fn": "ERC777.name",
      "offset": [
        2987,
        2999
      ],
      "op": "SWAP2",
      "path": "135"
    },
    "810": {
      "fn": "ERC777.name",
      "offset": [
        2987,
        2999
      ],
      "op": "DIV",
      "path": "135"
    },
    "811": {
      "fn": "ERC777.name",
      "offset": [
        2987,
        2999
      ],
      "op": "MUL",
      "path": "135"
    },
    "812": {
      "fn": "ERC777.name",
      "offset": [
        2987,
        2999
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0x20"
    },
    "814": {
      "fn": "ERC777.name",
      "offset": [
        2987,
        2999
      ],
      "op": "ADD",
      "path": "135"
    },
    "815": {
      "fn": "ERC777.name",
      "offset": [
        2987,
        2999
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0x40"
    },
    "817": {
      "fn": "ERC777.name",
      "offset": [
        2987,
        2999
      ],
      "op": "MLOAD",
      "path": "135"
    },
    "818": {
      "fn": "ERC777.name",
      "offset": [
        2987,
        2999
      ],
      "op": "SWAP1",
      "path": "135"
    },
    "819": {
      "fn": "ERC777.name",
      "offset": [
        2987,
        2999
      ],
      "op": "DUP2",
      "path": "135"
    },
    "820": {
      "fn": "ERC777.name",
      "offset": [
        2987,
        2999
      ],
      "op": "ADD",
      "path": "135"
    },
    "821": {
      "fn": "ERC777.name",
      "offset": [
        2987,
        2999
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0x40"
    },
    "823": {
      "fn": "ERC777.name",
      "offset": [
        2987,
        2999
      ],
      "op": "MSTORE",
      "path": "135"
    },
    "824": {
      "fn": "ERC777.name",
      "offset": [
        2987,
        2999
      ],
      "op": "DUP1",
      "path": "135"
    },
    "825": {
      "fn": "ERC777.name",
      "offset": [
        2987,
        2999
      ],
      "op": "SWAP3",
      "path": "135"
    },
    "826": {
      "fn": "ERC777.name",
      "offset": [
        2987,
        2999
      ],
      "op": "SWAP2",
      "path": "135"
    },
    "827": {
      "fn": "ERC777.name",
      "offset": [
        2987,
        2999
      ],
      "op": "SWAP1",
      "path": "135"
    },
    "828": {
      "fn": "ERC777.name",
      "offset": [
        2987,
        2999
      ],
      "op": "DUP2",
      "path": "135"
    },
    "829": {
      "fn": "ERC777.name",
      "offset": [
        2987,
        2999
      ],
      "op": "DUP2",
      "path": "135"
    },
    "830": {
      "fn": "ERC777.name",
      "offset": [
        2987,
        2999
      ],
      "op": "MSTORE",
      "path": "135"
    },
    "831": {
      "fn": "ERC777.name",
      "offset": [
        2987,
        2999
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0x20"
    },
    "833": {
      "fn": "ERC777.name",
      "offset": [
        2987,
        2999
      ],
      "op": "ADD",
      "path": "135"
    },
    "834": {
      "fn": "ERC777.name",
      "offset": [
        2987,
        2999
      ],
      "op": "DUP3",
      "path": "135"
    },
    "835": {
      "fn": "ERC777.name",
      "offset": [
        2987,
        2999
      ],
      "op": "DUP1",
      "path": "135"
    },
    "836": {
      "fn": "ERC777.name",
      "offset": [
        2987,
        2999
      ],
      "op": "SLOAD",
      "path": "135"
    },
    "837": {
      "fn": "ERC777.name",
      "offset": [
        2987,
        2999
      ],
      "op": "PUSH2",
      "path": "135",
      "value": "0x34D"
    },
    "840": {
      "fn": "ERC777.name",
      "offset": [
        2987,
        2999
      ],
      "op": "SWAP1",
      "path": "135"
    },
    "841": {
      "fn": "ERC777.name",
      "offset": [
        2987,
        2999
      ],
      "op": "PUSH2",
      "path": "135",
      "value": "0x15BF"
    },
    "844": {
      "fn": "ERC777.name",
      "jump": "i",
      "offset": [
        2987,
        2999
      ],
      "op": "JUMP",
      "path": "135"
    },
    "845": {
      "fn": "ERC777.name",
      "offset": [
        2987,
        2999
      ],
      "op": "JUMPDEST",
      "path": "135"
    },
    "846": {
      "fn": "ERC777.name",
      "offset": [
        2987,
        2999
      ],
      "op": "DUP1",
      "path": "135"
    },
    "847": {
      "fn": "ERC777.name",
      "offset": [
        2987,
        2999
      ],
      "op": "ISZERO",
      "path": "135"
    },
    "848": {
      "fn": "ERC777.name",
      "offset": [
        2987,
        2999
      ],
      "op": "PUSH2",
      "path": "135",
      "value": "0x308"
    },
    "851": {
      "fn": "ERC777.name",
      "offset": [
        2987,
        2999
      ],
      "op": "JUMPI",
      "path": "135"
    },
    "852": {
      "fn": "ERC777.name",
      "offset": [
        2987,
        2999
      ],
      "op": "DUP1",
      "path": "135"
    },
    "853": {
      "fn": "ERC777.name",
      "offset": [
        2987,
        2999
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0x1F"
    },
    "855": {
      "fn": "ERC777.name",
      "offset": [
        2987,
        2999
      ],
      "op": "LT",
      "path": "135"
    },
    "856": {
      "fn": "ERC777.name",
      "offset": [
        2987,
        2999
      ],
      "op": "PUSH2",
      "path": "135",
      "value": "0x36F"
    },
    "859": {
      "fn": "ERC777.name",
      "offset": [
        2987,
        2999
      ],
      "op": "JUMPI",
      "path": "135"
    },
    "860": {
      "fn": "ERC777.name",
      "offset": [
        2987,
        2999
      ],
      "op": "PUSH2",
      "path": "135",
      "value": "0x100"
    },
    "863": {
      "fn": "ERC777.name",
      "offset": [
        2987,
        2999
      ],
      "op": "DUP1",
      "path": "135"
    },
    "864": {
      "fn": "ERC777.name",
      "offset": [
        2987,
        2999
      ],
      "op": "DUP4",
      "path": "135"
    },
    "865": {
      "fn": "ERC777.name",
      "offset": [
        2987,
        2999
      ],
      "op": "SLOAD",
      "path": "135"
    },
    "866": {
      "fn": "ERC777.name",
      "offset": [
        2987,
        2999
      ],
      "op": "DIV",
      "path": "135"
    },
    "867": {
      "fn": "ERC777.name",
      "offset": [
        2987,
        2999
      ],
      "op": "MUL",
      "path": "135"
    },
    "868": {
      "fn": "ERC777.name",
      "offset": [
        2987,
        2999
      ],
      "op": "DUP4",
      "path": "135"
    },
    "869": {
      "fn": "ERC777.name",
      "offset": [
        2987,
        2999
      ],
      "op": "MSTORE",
      "path": "135"
    },
    "870": {
      "fn": "ERC777.name",
      "offset": [
        2987,
        2999
      ],
      "op": "SWAP2",
      "path": "135"
    },
    "871": {
      "fn": "ERC777.name",
      "offset": [
        2987,
        2999
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0x20"
    },
    "873": {
      "fn": "ERC777.name",
      "offset": [
        2987,
        2999
      ],
      "op": "ADD",
      "path": "135"
    },
    "874": {
      "fn": "ERC777.name",
      "offset": [
        2987,
        2999
      ],
      "op": "SWAP2",
      "path": "135"
    },
    "875": {
      "fn": "ERC777.name",
      "offset": [
        2987,
        2999
      ],
      "op": "PUSH2",
      "path": "135",
      "value": "0x308"
    },
    "878": {
      "fn": "ERC777.name",
      "offset": [
        2987,
        2999
      ],
      "op": "JUMP",
      "path": "135"
    },
    "879": {
      "fn": "ERC777.name",
      "offset": [
        2987,
        2999
      ],
      "op": "JUMPDEST",
      "path": "135"
    },
    "880": {
      "fn": "ERC777.name",
      "offset": [
        2987,
        2999
      ],
      "op": "DUP3",
      "path": "135"
    },
    "881": {
      "fn": "ERC777.name",
      "offset": [
        2987,
        2999
      ],
      "op": "ADD",
      "path": "135"
    },
    "882": {
      "fn": "ERC777.name",
      "offset": [
        2987,
        2999
      ],
      "op": "SWAP2",
      "path": "135"
    },
    "883": {
      "fn": "ERC777.name",
      "offset": [
        2987,
        2999
      ],
      "op": "SWAP1",
      "path": "135"
    },
    "884": {
      "fn": "ERC777.name",
      "offset": [
        2987,
        2999
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0x0"
    },
    "886": {
      "fn": "ERC777.name",
      "offset": [
        2987,
        2999
      ],
      "op": "MSTORE",
      "path": "135"
    },
    "887": {
      "fn": "ERC777.name",
      "offset": [
        2987,
        2999
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0x20"
    },
    "889": {
      "fn": "ERC777.name",
      "offset": [
        2987,
        2999
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0x0"
    },
    "891": {
      "fn": "ERC777.name",
      "offset": [
        2987,
        2999
      ],
      "op": "KECCAK256",
      "path": "135"
    },
    "892": {
      "fn": "ERC777.name",
      "offset": [
        2987,
        2999
      ],
      "op": "SWAP1",
      "path": "135"
    },
    "893": {
      "fn": "ERC777.name",
      "offset": [
        2987,
        2999
      ],
      "op": "JUMPDEST",
      "path": "135"
    },
    "894": {
      "fn": "ERC777.name",
      "offset": [
        2987,
        2999
      ],
      "op": "DUP2",
      "path": "135"
    },
    "895": {
      "fn": "ERC777.name",
      "offset": [
        2987,
        2999
      ],
      "op": "SLOAD",
      "path": "135"
    },
    "896": {
      "fn": "ERC777.name",
      "offset": [
        2987,
        2999
      ],
      "op": "DUP2",
      "path": "135"
    },
    "897": {
      "fn": "ERC777.name",
      "offset": [
        2987,
        2999
      ],
      "op": "MSTORE",
      "path": "135"
    },
    "898": {
      "fn": "ERC777.name",
      "offset": [
        2987,
        2999
      ],
      "op": "SWAP1",
      "path": "135"
    },
    "899": {
      "fn": "ERC777.name",
      "offset": [
        2987,
        2999
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0x1"
    },
    "901": {
      "fn": "ERC777.name",
      "offset": [
        2987,
        2999
      ],
      "op": "ADD",
      "path": "135"
    },
    "902": {
      "fn": "ERC777.name",
      "offset": [
        2987,
        2999
      ],
      "op": "SWAP1",
      "path": "135"
    },
    "903": {
      "fn": "ERC777.name",
      "offset": [
        2987,
        2999
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0x20"
    },
    "905": {
      "fn": "ERC777.name",
      "offset": [
        2987,
        2999
      ],
      "op": "ADD",
      "path": "135"
    },
    "906": {
      "fn": "ERC777.name",
      "offset": [
        2987,
        2999
      ],
      "op": "DUP1",
      "path": "135"
    },
    "907": {
      "fn": "ERC777.name",
      "offset": [
        2987,
        2999
      ],
      "op": "DUP4",
      "path": "135"
    },
    "908": {
      "fn": "ERC777.name",
      "offset": [
        2987,
        2999
      ],
      "op": "GT",
      "path": "135"
    },
    "909": {
      "fn": "ERC777.name",
      "offset": [
        2987,
        2999
      ],
      "op": "PUSH2",
      "path": "135",
      "value": "0x37D"
    },
    "912": {
      "fn": "ERC777.name",
      "offset": [
        2987,
        2999
      ],
      "op": "JUMPI",
      "path": "135"
    },
    "913": {
      "op": "POP"
    },
    "914": {
      "fn": "ERC777.name",
      "offset": [
        2987,
        2999
      ],
      "op": "SWAP4",
      "path": "135"
    },
    "915": {
      "fn": "ERC777.name",
      "offset": [
        2987,
        2999
      ],
      "op": "SWAP6",
      "path": "135"
    },
    "916": {
      "fn": "ERC777.name",
      "offset": [
        2908,
        3006
      ],
      "op": "SWAP5",
      "path": "135"
    },
    "917": {
      "op": "POP"
    },
    "918": {
      "op": "POP"
    },
    "919": {
      "op": "POP"
    },
    "920": {
      "op": "POP"
    },
    "921": {
      "op": "POP"
    },
    "922": {
      "fn": "ERC777.name",
      "jump": "o",
      "offset": [
        2908,
        3006
      ],
      "op": "JUMP",
      "path": "135"
    },
    "923": {
      "fn": "ERC777.approve",
      "offset": [
        8299,
        8496
      ],
      "op": "JUMPDEST",
      "path": "135"
    },
    "924": {
      "fn": "ERC777.approve",
      "offset": [
        8381,
        8385
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0x0"
    },
    "926": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "142",
      "statement": 7
    },
    "927": {
      "fn": "ERC777.approve",
      "offset": [
        8436,
        8468
      ],
      "op": "PUSH2",
      "path": "135",
      "statement": 8,
      "value": "0x3A9"
    },
    "930": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "DUP2",
      "path": "142"
    },
    "931": {
      "fn": "ERC777.approve",
      "offset": [
        8453,
        8460
      ],
      "op": "DUP6",
      "path": "135"
    },
    "932": {
      "fn": "ERC777.approve",
      "offset": [
        8462,
        8467
      ],
      "op": "DUP6",
      "path": "135"
    },
    "933": {
      "fn": "ERC777.approve",
      "offset": [
        8436,
        8444
      ],
      "op": "PUSH2",
      "path": "135",
      "value": "0x9D0"
    },
    "936": {
      "fn": "ERC777.approve",
      "jump": "i",
      "offset": [
        8436,
        8468
      ],
      "op": "JUMP",
      "path": "135"
    },
    "937": {
      "fn": "ERC777.approve",
      "offset": [
        8436,
        8468
      ],
      "op": "JUMPDEST",
      "path": "135"
    },
    "938": {
      "op": "POP"
    },
    "939": {
      "fn": "ERC777.approve",
      "offset": [
        8485,
        8489
      ],
      "op": "PUSH1",
      "path": "135",
      "statement": 9,
      "value": "0x1"
    },
    "941": {
      "fn": "ERC777.approve",
      "offset": [
        8485,
        8489
      ],
      "op": "SWAP4",
      "path": "135"
    },
    "942": {
      "fn": "ERC777.approve",
      "offset": [
        8299,
        8496
      ],
      "op": "SWAP3",
      "path": "135"
    },
    "943": {
      "op": "POP"
    },
    "944": {
      "op": "POP"
    },
    "945": {
      "op": "POP"
    },
    "946": {
      "fn": "ERC777.approve",
      "jump": "o",
      "offset": [
        8299,
        8496
      ],
      "op": "JUMP",
      "path": "135"
    },
    "947": {
      "fn": "ERC777.transferFrom",
      "offset": [
        8870,
        9676
      ],
      "op": "JUMPDEST",
      "path": "135"
    },
    "948": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9006,
        9010
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0x0"
    },
    "950": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "952": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "954": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "956": {
      "op": "SHL"
    },
    "957": {
      "op": "SUB"
    },
    "958": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9030,
        9053
      ],
      "op": "DUP4",
      "path": "135",
      "statement": 10
    },
    "959": {
      "branch": 63,
      "fn": "ERC777.transferFrom",
      "offset": [
        9030,
        9053
      ],
      "op": "AND",
      "path": "135"
    },
    "960": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9022,
        9094
      ],
      "op": "PUSH2",
      "path": "135",
      "value": "0x3E4"
    },
    "963": {
      "branch": 63,
      "fn": "ERC777.transferFrom",
      "offset": [
        9022,
        9094
      ],
      "op": "JUMPI",
      "path": "135"
    },
    "964": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9022,
        9094
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0x40"
    },
    "966": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9022,
        9094
      ],
      "op": "MLOAD",
      "path": "135"
    },
    "967": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "971": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "973": {
      "op": "SHL"
    },
    "974": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9022,
        9094
      ],
      "op": "DUP2",
      "path": "135"
    },
    "975": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9022,
        9094
      ],
      "op": "MSTORE",
      "path": "135"
    },
    "976": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9022,
        9094
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0x4"
    },
    "978": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9022,
        9094
      ],
      "op": "ADD",
      "path": "135"
    },
    "979": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9022,
        9094
      ],
      "op": "PUSH2",
      "path": "135",
      "value": "0x3DB"
    },
    "982": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9022,
        9094
      ],
      "op": "SWAP1",
      "path": "135"
    },
    "983": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9022,
        9094
      ],
      "op": "PUSH2",
      "path": "135",
      "value": "0x15FA"
    },
    "986": {
      "fn": "ERC777.transferFrom",
      "jump": "i",
      "offset": [
        9022,
        9094
      ],
      "op": "JUMP",
      "path": "135"
    },
    "987": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9022,
        9094
      ],
      "op": "JUMPDEST",
      "path": "135"
    },
    "988": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9022,
        9094
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0x40"
    },
    "990": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9022,
        9094
      ],
      "op": "MLOAD",
      "path": "135"
    },
    "991": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9022,
        9094
      ],
      "op": "DUP1",
      "path": "135"
    },
    "992": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9022,
        9094
      ],
      "op": "SWAP2",
      "path": "135"
    },
    "993": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9022,
        9094
      ],
      "op": "SUB",
      "path": "135"
    },
    "994": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9022,
        9094
      ],
      "op": "SWAP1",
      "path": "135"
    },
    "995": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9022,
        9094
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "135"
    },
    "996": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9022,
        9094
      ],
      "op": "JUMPDEST",
      "path": "135"
    },
    "997": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "999": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1001": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1003": {
      "op": "SHL"
    },
    "1004": {
      "op": "SUB"
    },
    "1005": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9112,
        9132
      ],
      "op": "DUP5",
      "path": "135",
      "statement": 11
    },
    "1006": {
      "branch": 64,
      "fn": "ERC777.transferFrom",
      "offset": [
        9112,
        9132
      ],
      "op": "AND",
      "path": "135"
    },
    "1007": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9104,
        9175
      ],
      "op": "PUSH2",
      "path": "135",
      "value": "0x449"
    },
    "1010": {
      "branch": 64,
      "fn": "ERC777.transferFrom",
      "offset": [
        9104,
        9175
      ],
      "op": "JUMPI",
      "path": "135"
    },
    "1011": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9104,
        9175
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0x40"
    },
    "1013": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9104,
        9175
      ],
      "op": "MLOAD",
      "path": "135"
    },
    "1014": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1018": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1020": {
      "op": "SHL"
    },
    "1021": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9104,
        9175
      ],
      "op": "DUP2",
      "path": "135"
    },
    "1022": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9104,
        9175
      ],
      "op": "MSTORE",
      "path": "135"
    },
    "1023": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1025": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9104,
        9175
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0x4"
    },
    "1027": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9104,
        9175
      ],
      "op": "DUP3",
      "path": "135"
    },
    "1028": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9104,
        9175
      ],
      "op": "ADD",
      "path": "135"
    },
    "1029": {
      "op": "MSTORE"
    },
    "1030": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "1032": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1034": {
      "op": "DUP3"
    },
    "1035": {
      "op": "ADD"
    },
    "1036": {
      "op": "MSTORE"
    },
    "1037": {
      "op": "PUSH32",
      "value": "0x4552433737373A207472616E736665722066726F6D20746865207A65726F2061"
    },
    "1070": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1072": {
      "op": "DUP3"
    },
    "1073": {
      "op": "ADD"
    },
    "1074": {
      "op": "MSTORE"
    },
    "1075": {
      "op": "PUSH6",
      "value": "0x646472657373"
    },
    "1082": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "1084": {
      "op": "SHL"
    },
    "1085": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1087": {
      "op": "DUP3"
    },
    "1088": {
      "op": "ADD"
    },
    "1089": {
      "op": "MSTORE"
    },
    "1090": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1092": {
      "op": "ADD"
    },
    "1093": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9104,
        9175
      ],
      "op": "PUSH2",
      "path": "135",
      "value": "0x3DB"
    },
    "1096": {
      "op": "JUMP"
    },
    "1097": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9104,
        9175
      ],
      "op": "JUMPDEST",
      "path": "135"
    },
    "1098": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9186,
        9201
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0x0"
    },
    "1100": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "142"
    },
    "1101": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9186,
        9216
      ],
      "op": "SWAP1",
      "path": "135"
    },
    "1102": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9186,
        9216
      ],
      "op": "POP",
      "path": "135"
    },
    "1103": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9227,
        9288
      ],
      "op": "PUSH2",
      "path": "135",
      "statement": 12,
      "value": "0x47A"
    },
    "1106": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9245,
        9252
      ],
      "op": "DUP2",
      "path": "135"
    },
    "1107": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9254,
        9260
      ],
      "op": "DUP7",
      "path": "135"
    },
    "1108": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9262,
        9271
      ],
      "op": "DUP7",
      "path": "135"
    },
    "1109": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9273,
        9279
      ],
      "op": "DUP7",
      "path": "135"
    },
    "1110": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9227,
        9288
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0x40"
    },
    "1112": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9227,
        9288
      ],
      "op": "MLOAD",
      "path": "135"
    },
    "1113": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9227,
        9288
      ],
      "op": "DUP1",
      "path": "135"
    },
    "1114": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9227,
        9288
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0x20"
    },
    "1116": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9227,
        9288
      ],
      "op": "ADD",
      "path": "135"
    },
    "1117": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9227,
        9288
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0x40"
    },
    "1119": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9227,
        9288
      ],
      "op": "MSTORE",
      "path": "135"
    },
    "1120": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9227,
        9288
      ],
      "op": "DUP1",
      "path": "135"
    },
    "1121": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9227,
        9288
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0x0"
    },
    "1123": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9227,
        9288
      ],
      "op": "DUP2",
      "path": "135"
    },
    "1124": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9227,
        9288
      ],
      "op": "MSTORE",
      "path": "135"
    },
    "1125": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9227,
        9288
      ],
      "op": "POP",
      "path": "135"
    },
    "1126": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9227,
        9288
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0x40"
    },
    "1128": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9227,
        9288
      ],
      "op": "MLOAD",
      "path": "135"
    },
    "1129": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9227,
        9288
      ],
      "op": "DUP1",
      "path": "135"
    },
    "1130": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9227,
        9288
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0x20"
    },
    "1132": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9227,
        9288
      ],
      "op": "ADD",
      "path": "135"
    },
    "1133": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9227,
        9288
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0x40"
    },
    "1135": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9227,
        9288
      ],
      "op": "MSTORE",
      "path": "135"
    },
    "1136": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9227,
        9288
      ],
      "op": "DUP1",
      "path": "135"
    },
    "1137": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9227,
        9288
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0x0"
    },
    "1139": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9227,
        9288
      ],
      "op": "DUP2",
      "path": "135"
    },
    "1140": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9227,
        9288
      ],
      "op": "MSTORE",
      "path": "135"
    },
    "1141": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9227,
        9288
      ],
      "op": "POP",
      "path": "135"
    },
    "1142": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9227,
        9244
      ],
      "op": "PUSH2",
      "path": "135",
      "value": "0xAF7"
    },
    "1145": {
      "fn": "ERC777.transferFrom",
      "jump": "i",
      "offset": [
        9227,
        9288
      ],
      "op": "JUMP",
      "path": "135"
    },
    "1146": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9227,
        9288
      ],
      "op": "JUMPDEST",
      "path": "135"
    },
    "1147": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9299,
        9348
      ],
      "op": "PUSH2",
      "path": "135",
      "statement": 13,
      "value": "0x4A6"
    },
    "1150": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9305,
        9312
      ],
      "op": "DUP2",
      "path": "135"
    },
    "1151": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9314,
        9320
      ],
      "op": "DUP7",
      "path": "135"
    },
    "1152": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9322,
        9331
      ],
      "op": "DUP7",
      "path": "135"
    },
    "1153": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9333,
        9339
      ],
      "op": "DUP7",
      "path": "135"
    },
    "1154": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9299,
        9348
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0x40"
    },
    "1156": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9299,
        9348
      ],
      "op": "MLOAD",
      "path": "135"
    },
    "1157": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9299,
        9348
      ],
      "op": "DUP1",
      "path": "135"
    },
    "1158": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9299,
        9348
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0x20"
    },
    "1160": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9299,
        9348
      ],
      "op": "ADD",
      "path": "135"
    },
    "1161": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9299,
        9348
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0x40"
    },
    "1163": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9299,
        9348
      ],
      "op": "MSTORE",
      "path": "135"
    },
    "1164": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9299,
        9348
      ],
      "op": "DUP1",
      "path": "135"
    },
    "1165": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9299,
        9348
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0x0"
    },
    "1167": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9299,
        9348
      ],
      "op": "DUP2",
      "path": "135"
    },
    "1168": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9299,
        9348
      ],
      "op": "MSTORE",
      "path": "135"
    },
    "1169": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9299,
        9348
      ],
      "op": "POP",
      "path": "135"
    },
    "1170": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9299,
        9348
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0x40"
    },
    "1172": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9299,
        9348
      ],
      "op": "MLOAD",
      "path": "135"
    },
    "1173": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9299,
        9348
      ],
      "op": "DUP1",
      "path": "135"
    },
    "1174": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9299,
        9348
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0x20"
    },
    "1176": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9299,
        9348
      ],
      "op": "ADD",
      "path": "135"
    },
    "1177": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9299,
        9348
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0x40"
    },
    "1179": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9299,
        9348
      ],
      "op": "MSTORE",
      "path": "135"
    },
    "1180": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9299,
        9348
      ],
      "op": "DUP1",
      "path": "135"
    },
    "1181": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9299,
        9348
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0x0"
    },
    "1183": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9299,
        9348
      ],
      "op": "DUP2",
      "path": "135"
    },
    "1184": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9299,
        9348
      ],
      "op": "MSTORE",
      "path": "135"
    },
    "1185": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9299,
        9348
      ],
      "op": "POP",
      "path": "135"
    },
    "1186": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9299,
        9304
      ],
      "op": "PUSH2",
      "path": "135",
      "value": "0xC1F"
    },
    "1189": {
      "fn": "ERC777.transferFrom",
      "jump": "i",
      "offset": [
        9299,
        9348
      ],
      "op": "JUMP",
      "path": "135"
    },
    "1190": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9299,
        9348
      ],
      "op": "JUMPDEST",
      "path": "135"
    },
    "1191": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1193": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1195": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1197": {
      "op": "SHL"
    },
    "1198": {
      "op": "SUB"
    },
    "1199": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9386,
        9405
      ],
      "op": "DUP1",
      "path": "135"
    },
    "1200": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9386,
        9405
      ],
      "op": "DUP7",
      "path": "135"
    },
    "1201": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9386,
        9405
      ],
      "op": "AND",
      "path": "135"
    },
    "1202": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9359,
        9383
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0x0"
    },
    "1204": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9386,
        9405
      ],
      "op": "SWAP1",
      "path": "135"
    },
    "1205": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9386,
        9405
      ],
      "op": "DUP2",
      "path": "135"
    },
    "1206": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9386,
        9405
      ],
      "op": "MSTORE",
      "path": "135"
    },
    "1207": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9386,
        9397
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0x8"
    },
    "1209": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9386,
        9405
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0x20"
    },
    "1211": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9386,
        9405
      ],
      "op": "SWAP1",
      "path": "135"
    },
    "1212": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9386,
        9405
      ],
      "op": "DUP2",
      "path": "135"
    },
    "1213": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9386,
        9405
      ],
      "op": "MSTORE",
      "path": "135"
    },
    "1214": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9386,
        9405
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0x40"
    },
    "1216": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9386,
        9405
      ],
      "op": "DUP1",
      "path": "135"
    },
    "1217": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9386,
        9405
      ],
      "op": "DUP4",
      "path": "135"
    },
    "1218": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9386,
        9405
      ],
      "op": "KECCAK256",
      "path": "135"
    },
    "1219": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9386,
        9414
      ],
      "op": "SWAP4",
      "path": "135"
    },
    "1220": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9386,
        9414
      ],
      "op": "DUP6",
      "path": "135"
    },
    "1221": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9386,
        9414
      ],
      "op": "AND",
      "path": "135"
    },
    "1222": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9386,
        9414
      ],
      "op": "DUP4",
      "path": "135"
    },
    "1223": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9386,
        9414
      ],
      "op": "MSTORE",
      "path": "135"
    },
    "1224": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9386,
        9414
      ],
      "op": "SWAP3",
      "path": "135"
    },
    "1225": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9386,
        9414
      ],
      "op": "SWAP1",
      "path": "135"
    },
    "1226": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9386,
        9414
      ],
      "op": "MSTORE",
      "path": "135"
    },
    "1227": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9386,
        9414
      ],
      "op": "KECCAK256",
      "path": "135"
    },
    "1228": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9386,
        9414
      ],
      "op": "SLOAD",
      "path": "135"
    },
    "1229": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9432,
        9458
      ],
      "op": "DUP4",
      "path": "135",
      "statement": 14
    },
    "1230": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9432,
        9458
      ],
      "op": "DUP2",
      "path": "135"
    },
    "1231": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9432,
        9458
      ],
      "op": "LT",
      "path": "135"
    },
    "1232": {
      "branch": 65,
      "fn": "ERC777.transferFrom",
      "offset": [
        9432,
        9458
      ],
      "op": "ISZERO",
      "path": "135"
    },
    "1233": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9424,
        9504
      ],
      "op": "PUSH2",
      "path": "135",
      "value": "0x52E"
    },
    "1236": {
      "branch": 65,
      "fn": "ERC777.transferFrom",
      "offset": [
        9424,
        9504
      ],
      "op": "JUMPI",
      "path": "135"
    },
    "1237": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9424,
        9504
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0x40"
    },
    "1239": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9424,
        9504
      ],
      "op": "MLOAD",
      "path": "135"
    },
    "1240": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1244": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1246": {
      "op": "SHL"
    },
    "1247": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9424,
        9504
      ],
      "op": "DUP2",
      "path": "135"
    },
    "1248": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9424,
        9504
      ],
      "op": "MSTORE",
      "path": "135"
    },
    "1249": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1251": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9424,
        9504
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0x4"
    },
    "1253": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9424,
        9504
      ],
      "op": "DUP3",
      "path": "135"
    },
    "1254": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9424,
        9504
      ],
      "op": "ADD",
      "path": "135"
    },
    "1255": {
      "op": "MSTORE"
    },
    "1256": {
      "op": "PUSH1",
      "value": "0x29"
    },
    "1258": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1260": {
      "op": "DUP3"
    },
    "1261": {
      "op": "ADD"
    },
    "1262": {
      "op": "MSTORE"
    },
    "1263": {
      "op": "PUSH32",
      "value": "0x4552433737373A207472616E7366657220616D6F756E74206578636565647320"
    },
    "1296": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1298": {
      "op": "DUP3"
    },
    "1299": {
      "op": "ADD"
    },
    "1300": {
      "op": "MSTORE"
    },
    "1301": {
      "op": "PUSH9",
      "value": "0x616C6C6F77616E6365"
    },
    "1311": {
      "op": "PUSH1",
      "value": "0xB8"
    },
    "1313": {
      "op": "SHL"
    },
    "1314": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1316": {
      "op": "DUP3"
    },
    "1317": {
      "op": "ADD"
    },
    "1318": {
      "op": "MSTORE"
    },
    "1319": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1321": {
      "op": "ADD"
    },
    "1322": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9424,
        9504
      ],
      "op": "PUSH2",
      "path": "135",
      "value": "0x3DB"
    },
    "1325": {
      "op": "JUMP"
    },
    "1326": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9424,
        9504
      ],
      "op": "JUMPDEST",
      "path": "135"
    },
    "1327": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9514,
        9566
      ],
      "op": "PUSH2",
      "path": "135",
      "statement": 15,
      "value": "0x542"
    },
    "1330": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9523,
        9529
      ],
      "op": "DUP7",
      "path": "135"
    },
    "1331": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9531,
        9538
      ],
      "op": "DUP4",
      "path": "135"
    },
    "1332": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9540,
        9565
      ],
      "op": "PUSH2",
      "path": "135",
      "value": "0x53D"
    },
    "1335": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9559,
        9565
      ],
      "op": "DUP8",
      "path": "135"
    },
    "1336": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9540,
        9556
      ],
      "op": "DUP6",
      "path": "135"
    },
    "1337": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9540,
        9565
      ],
      "op": "PUSH2",
      "path": "135",
      "value": "0x1654"
    },
    "1340": {
      "fn": "ERC777.transferFrom",
      "jump": "i",
      "offset": [
        9540,
        9565
      ],
      "op": "JUMP",
      "path": "135"
    },
    "1341": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9540,
        9565
      ],
      "op": "JUMPDEST",
      "path": "135"
    },
    "1342": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9514,
        9522
      ],
      "op": "PUSH2",
      "path": "135",
      "value": "0x9D0"
    },
    "1345": {
      "fn": "ERC777.transferFrom",
      "jump": "i",
      "offset": [
        9514,
        9566
      ],
      "op": "JUMP",
      "path": "135"
    },
    "1346": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9514,
        9566
      ],
      "op": "JUMPDEST",
      "path": "135"
    },
    "1347": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9577,
        9647
      ],
      "op": "PUSH2",
      "path": "135",
      "statement": 16,
      "value": "0x570"
    },
    "1350": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9597,
        9604
      ],
      "op": "DUP3",
      "path": "135"
    },
    "1351": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9606,
        9612
      ],
      "op": "DUP8",
      "path": "135"
    },
    "1352": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9614,
        9623
      ],
      "op": "DUP8",
      "path": "135"
    },
    "1353": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9625,
        9631
      ],
      "op": "DUP8",
      "path": "135"
    },
    "1354": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9577,
        9647
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0x40"
    },
    "1356": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9577,
        9647
      ],
      "op": "MLOAD",
      "path": "135"
    },
    "1357": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9577,
        9647
      ],
      "op": "DUP1",
      "path": "135"
    },
    "1358": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9577,
        9647
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0x20"
    },
    "1360": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9577,
        9647
      ],
      "op": "ADD",
      "path": "135"
    },
    "1361": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9577,
        9647
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0x40"
    },
    "1363": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9577,
        9647
      ],
      "op": "MSTORE",
      "path": "135"
    },
    "1364": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9577,
        9647
      ],
      "op": "DUP1",
      "path": "135"
    },
    "1365": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9577,
        9647
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0x0"
    },
    "1367": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9577,
        9647
      ],
      "op": "DUP2",
      "path": "135"
    },
    "1368": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9577,
        9647
      ],
      "op": "MSTORE",
      "path": "135"
    },
    "1369": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9577,
        9647
      ],
      "op": "POP",
      "path": "135"
    },
    "1370": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9577,
        9647
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0x40"
    },
    "1372": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9577,
        9647
      ],
      "op": "MLOAD",
      "path": "135"
    },
    "1373": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9577,
        9647
      ],
      "op": "DUP1",
      "path": "135"
    },
    "1374": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9577,
        9647
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0x20"
    },
    "1376": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9577,
        9647
      ],
      "op": "ADD",
      "path": "135"
    },
    "1377": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9577,
        9647
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0x40"
    },
    "1379": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9577,
        9647
      ],
      "op": "MSTORE",
      "path": "135"
    },
    "1380": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9577,
        9647
      ],
      "op": "DUP1",
      "path": "135"
    },
    "1381": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9577,
        9647
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0x0"
    },
    "1383": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9577,
        9647
      ],
      "op": "DUP2",
      "path": "135"
    },
    "1384": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9577,
        9647
      ],
      "op": "MSTORE",
      "path": "135"
    },
    "1385": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9577,
        9647
      ],
      "op": "POP",
      "path": "135"
    },
    "1386": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9641,
        9646
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0x0"
    },
    "1388": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9577,
        9596
      ],
      "op": "PUSH2",
      "path": "135",
      "value": "0xD85"
    },
    "1391": {
      "fn": "ERC777.transferFrom",
      "jump": "i",
      "offset": [
        9577,
        9647
      ],
      "op": "JUMP",
      "path": "135"
    },
    "1392": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9577,
        9647
      ],
      "op": "JUMPDEST",
      "path": "135"
    },
    "1393": {
      "op": "POP"
    },
    "1394": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9665,
        9669
      ],
      "op": "PUSH1",
      "path": "135",
      "statement": 17,
      "value": "0x1"
    },
    "1396": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9665,
        9669
      ],
      "op": "SWAP6",
      "path": "135"
    },
    "1397": {
      "fn": "ERC777.transferFrom",
      "offset": [
        8870,
        9676
      ],
      "op": "SWAP5",
      "path": "135"
    },
    "1398": {
      "op": "POP"
    },
    "1399": {
      "op": "POP"
    },
    "1400": {
      "op": "POP"
    },
    "1401": {
      "op": "POP"
    },
    "1402": {
      "op": "POP"
    },
    "1403": {
      "fn": "ERC777.transferFrom",
      "jump": "o",
      "offset": [
        8870,
        9676
      ],
      "op": "JUMP",
      "path": "135"
    },
    "1404": {
      "fn": "ERC777.operatorSend",
      "offset": [
        6959,
        7325
      ],
      "op": "JUMPDEST",
      "path": "135"
    },
    "1405": {
      "fn": "ERC777.operatorSend",
      "offset": [
        7166,
        7201
      ],
      "op": "PUSH2",
      "path": "135",
      "statement": 18,
      "value": "0x586"
    },
    "1408": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "142"
    },
    "1409": {
      "fn": "ERC777.operatorSend",
      "offset": [
        7194,
        7200
      ],
      "op": "DUP7",
      "path": "135"
    },
    "1410": {
      "fn": "ERC777.operatorSend",
      "offset": [
        7166,
        7179
      ],
      "op": "PUSH2",
      "path": "135",
      "value": "0x7BB"
    },
    "1413": {
      "fn": "ERC777.operatorSend",
      "jump": "i",
      "offset": [
        7166,
        7201
      ],
      "op": "JUMP",
      "path": "135"
    },
    "1414": {
      "branch": 66,
      "fn": "ERC777.operatorSend",
      "offset": [
        7166,
        7201
      ],
      "op": "JUMPDEST",
      "path": "135"
    },
    "1415": {
      "fn": "ERC777.operatorSend",
      "offset": [
        7158,
        7250
      ],
      "op": "PUSH2",
      "path": "135",
      "value": "0x5A2"
    },
    "1418": {
      "branch": 66,
      "fn": "ERC777.operatorSend",
      "offset": [
        7158,
        7250
      ],
      "op": "JUMPI",
      "path": "135"
    },
    "1419": {
      "fn": "ERC777.operatorSend",
      "offset": [
        7158,
        7250
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0x40"
    },
    "1421": {
      "fn": "ERC777.operatorSend",
      "offset": [
        7158,
        7250
      ],
      "op": "MLOAD",
      "path": "135"
    },
    "1422": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1426": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1428": {
      "op": "SHL"
    },
    "1429": {
      "fn": "ERC777.operatorSend",
      "offset": [
        7158,
        7250
      ],
      "op": "DUP2",
      "path": "135"
    },
    "1430": {
      "fn": "ERC777.operatorSend",
      "offset": [
        7158,
        7250
      ],
      "op": "MSTORE",
      "path": "135"
    },
    "1431": {
      "fn": "ERC777.operatorSend",
      "offset": [
        7158,
        7250
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0x4"
    },
    "1433": {
      "fn": "ERC777.operatorSend",
      "offset": [
        7158,
        7250
      ],
      "op": "ADD",
      "path": "135"
    },
    "1434": {
      "fn": "ERC777.operatorSend",
      "offset": [
        7158,
        7250
      ],
      "op": "PUSH2",
      "path": "135",
      "value": "0x3DB"
    },
    "1437": {
      "fn": "ERC777.operatorSend",
      "offset": [
        7158,
        7250
      ],
      "op": "SWAP1",
      "path": "135"
    },
    "1438": {
      "fn": "ERC777.operatorSend",
      "offset": [
        7158,
        7250
      ],
      "op": "PUSH2",
      "path": "135",
      "value": "0x166B"
    },
    "1441": {
      "fn": "ERC777.operatorSend",
      "jump": "i",
      "offset": [
        7158,
        7250
      ],
      "op": "JUMP",
      "path": "135"
    },
    "1442": {
      "fn": "ERC777.operatorSend",
      "offset": [
        7158,
        7250
      ],
      "op": "JUMPDEST",
      "path": "135"
    },
    "1443": {
      "fn": "ERC777.operatorSend",
      "offset": [
        7260,
        7318
      ],
      "op": "PUSH2",
      "path": "135",
      "statement": 19,
      "value": "0x5B1"
    },
    "1446": {
      "fn": "ERC777.operatorSend",
      "offset": [
        7266,
        7272
      ],
      "op": "DUP6",
      "path": "135"
    },
    "1447": {
      "fn": "ERC777.operatorSend",
      "offset": [
        7274,
        7283
      ],
      "op": "DUP6",
      "path": "135"
    },
    "1448": {
      "fn": "ERC777.operatorSend",
      "offset": [
        7285,
        7291
      ],
      "op": "DUP6",
      "path": "135"
    },
    "1449": {
      "fn": "ERC777.operatorSend",
      "offset": [
        7293,
        7297
      ],
      "op": "DUP6",
      "path": "135"
    },
    "1450": {
      "fn": "ERC777.operatorSend",
      "offset": [
        7299,
        7311
      ],
      "op": "DUP6",
      "path": "135"
    },
    "1451": {
      "fn": "ERC777.operatorSend",
      "offset": [
        7313,
        7317
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0x1"
    },
    "1453": {
      "fn": "ERC777.operatorSend",
      "offset": [
        7260,
        7265
      ],
      "op": "PUSH2",
      "path": "135",
      "value": "0xF4A"
    },
    "1456": {
      "fn": "ERC777.operatorSend",
      "jump": "i",
      "offset": [
        7260,
        7318
      ],
      "op": "JUMP",
      "path": "135"
    },
    "1457": {
      "fn": "ERC777.operatorSend",
      "offset": [
        7260,
        7318
      ],
      "op": "JUMPDEST",
      "path": "135"
    },
    "1458": {
      "fn": "ERC777.operatorSend",
      "offset": [
        6959,
        7325
      ],
      "op": "POP",
      "path": "135"
    },
    "1459": {
      "fn": "ERC777.operatorSend",
      "offset": [
        6959,
        7325
      ],
      "op": "POP",
      "path": "135"
    },
    "1460": {
      "fn": "ERC777.operatorSend",
      "offset": [
        6959,
        7325
      ],
      "op": "POP",
      "path": "135"
    },
    "1461": {
      "fn": "ERC777.operatorSend",
      "offset": [
        6959,
        7325
      ],
      "op": "POP",
      "path": "135"
    },
    "1462": {
      "fn": "ERC777.operatorSend",
      "offset": [
        6959,
        7325
      ],
      "op": "POP",
      "path": "135"
    },
    "1463": {
      "fn": "ERC777.operatorSend",
      "jump": "o",
      "offset": [
        6959,
        7325
      ],
      "op": "JUMP",
      "path": "135"
    },
    "1464": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5765,
        6177
      ],
      "op": "JUMPDEST",
      "path": "135"
    },
    "1465": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "142"
    },
    "1466": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1468": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1470": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1472": {
      "op": "SHL"
    },
    "1473": {
      "op": "SUB"
    },
    "1474": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5852,
        5876
      ],
      "op": "DUP3",
      "path": "135",
      "statement": 20
    },
    "1475": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5852,
        5876
      ],
      "op": "AND",
      "path": "135"
    },
    "1476": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5852,
        5876
      ],
      "op": "EQ",
      "path": "135"
    },
    "1477": {
      "branch": 67,
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5852,
        5876
      ],
      "op": "ISZERO",
      "path": "135"
    },
    "1478": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5844,
        5917
      ],
      "op": "PUSH2",
      "path": "135",
      "value": "0x61D"
    },
    "1481": {
      "branch": 67,
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5844,
        5917
      ],
      "op": "JUMPI",
      "path": "135"
    },
    "1482": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5844,
        5917
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0x40"
    },
    "1484": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5844,
        5917
      ],
      "op": "MLOAD",
      "path": "135"
    },
    "1485": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1489": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1491": {
      "op": "SHL"
    },
    "1492": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5844,
        5917
      ],
      "op": "DUP2",
      "path": "135"
    },
    "1493": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5844,
        5917
      ],
      "op": "MSTORE",
      "path": "135"
    },
    "1494": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1496": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5844,
        5917
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0x4"
    },
    "1498": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5844,
        5917
      ],
      "op": "DUP3",
      "path": "135"
    },
    "1499": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5844,
        5917
      ],
      "op": "ADD",
      "path": "135"
    },
    "1500": {
      "op": "MSTORE"
    },
    "1501": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1503": {
      "op": "DUP1"
    },
    "1504": {
      "op": "DUP3"
    },
    "1505": {
      "op": "ADD"
    },
    "1506": {
      "op": "MSTORE"
    },
    "1507": {
      "op": "PUSH32",
      "value": "0x4552433737373A20617574686F72697A696E672073656C66206173206F706572"
    },
    "1540": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1542": {
      "op": "DUP3"
    },
    "1543": {
      "op": "ADD"
    },
    "1544": {
      "op": "MSTORE"
    },
    "1545": {
      "op": "PUSH4",
      "value": "0x30BA37B9"
    },
    "1550": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "1552": {
      "op": "SHL"
    },
    "1553": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1555": {
      "op": "DUP3"
    },
    "1556": {
      "op": "ADD"
    },
    "1557": {
      "op": "MSTORE"
    },
    "1558": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1560": {
      "op": "ADD"
    },
    "1561": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5844,
        5917
      ],
      "op": "PUSH2",
      "path": "135",
      "value": "0x3DB"
    },
    "1564": {
      "op": "JUMP"
    },
    "1565": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5844,
        5917
      ],
      "op": "JUMPDEST",
      "path": "135"
    },
    "1566": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1568": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1570": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1572": {
      "op": "SHL"
    },
    "1573": {
      "op": "SUB"
    },
    "1574": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5932,
        5959
      ],
      "op": "DUP2",
      "path": "135"
    },
    "1575": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5932,
        5959
      ],
      "op": "AND",
      "path": "135"
    },
    "1576": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5932,
        5959
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0x0"
    },
    "1578": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5932,
        5959
      ],
      "op": "SWAP1",
      "path": "135"
    },
    "1579": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5932,
        5959
      ],
      "op": "DUP2",
      "path": "135"
    },
    "1580": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5932,
        5959
      ],
      "op": "MSTORE",
      "path": "135"
    },
    "1581": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5932,
        5949
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0x5"
    },
    "1583": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5932,
        5959
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0x20"
    },
    "1585": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5932,
        5959
      ],
      "op": "MSTORE",
      "path": "135"
    },
    "1586": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5932,
        5959
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0x40"
    },
    "1588": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5932,
        5959
      ],
      "op": "SWAP1",
      "path": "135"
    },
    "1589": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5932,
        5959
      ],
      "op": "KECCAK256",
      "path": "135"
    },
    "1590": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5932,
        5959
      ],
      "op": "SLOAD",
      "path": "135"
    },
    "1591": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5932,
        5959
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0xFF"
    },
    "1593": {
      "branch": 68,
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5932,
        5959
      ],
      "op": "AND",
      "path": "135"
    },
    "1594": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5928,
        6113
      ],
      "op": "ISZERO",
      "path": "135"
    },
    "1595": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5928,
        6113
      ],
      "op": "PUSH2",
      "path": "135",
      "value": "0x66E"
    },
    "1598": {
      "branch": 68,
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5928,
        6113
      ],
      "op": "JUMPI",
      "path": "135"
    },
    "1599": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "142"
    },
    "1600": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5982,
        6020
      ],
      "op": "PUSH1",
      "path": "135",
      "statement": 21,
      "value": "0x0"
    },
    "1602": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5982,
        6020
      ],
      "op": "SWAP1",
      "path": "135"
    },
    "1603": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5982,
        6020
      ],
      "op": "DUP2",
      "path": "135"
    },
    "1604": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5982,
        6020
      ],
      "op": "MSTORE",
      "path": "135"
    },
    "1605": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5982,
        6006
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0x7"
    },
    "1607": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5982,
        6020
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0x20"
    },
    "1609": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5982,
        6020
      ],
      "op": "SWAP1",
      "path": "135"
    },
    "1610": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5982,
        6020
      ],
      "op": "DUP2",
      "path": "135"
    },
    "1611": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5982,
        6020
      ],
      "op": "MSTORE",
      "path": "135"
    },
    "1612": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5982,
        6020
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0x40"
    },
    "1614": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5982,
        6020
      ],
      "op": "DUP1",
      "path": "135"
    },
    "1615": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5982,
        6020
      ],
      "op": "DUP4",
      "path": "135"
    },
    "1616": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5982,
        6020
      ],
      "op": "KECCAK256",
      "path": "135"
    },
    "1617": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1619": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1621": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1623": {
      "op": "SHL"
    },
    "1624": {
      "op": "SUB"
    },
    "1625": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5982,
        6030
      ],
      "op": "DUP6",
      "path": "135"
    },
    "1626": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5982,
        6030
      ],
      "op": "AND",
      "path": "135"
    },
    "1627": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5982,
        6030
      ],
      "op": "DUP5",
      "path": "135"
    },
    "1628": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5982,
        6030
      ],
      "op": "MSTORE",
      "path": "135"
    },
    "1629": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5982,
        6030
      ],
      "op": "SWAP1",
      "path": "135"
    },
    "1630": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5982,
        6030
      ],
      "op": "SWAP2",
      "path": "135"
    },
    "1631": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5982,
        6030
      ],
      "op": "MSTORE",
      "path": "135"
    },
    "1632": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5982,
        6030
      ],
      "op": "SWAP1",
      "path": "135"
    },
    "1633": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5982,
        6030
      ],
      "op": "KECCAK256",
      "path": "135"
    },
    "1634": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5975,
        6030
      ],
      "op": "DUP1",
      "path": "135"
    },
    "1635": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5975,
        6030
      ],
      "op": "SLOAD",
      "path": "135"
    },
    "1636": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1638": {
      "op": "NOT"
    },
    "1639": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5975,
        6030
      ],
      "op": "AND",
      "path": "135"
    },
    "1640": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5975,
        6030
      ],
      "op": "SWAP1",
      "path": "135"
    },
    "1641": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5975,
        6030
      ],
      "op": "SSTORE",
      "path": "135"
    },
    "1642": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5928,
        6113
      ],
      "op": "PUSH2",
      "path": "135",
      "value": "0x69D"
    },
    "1645": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5928,
        6113
      ],
      "op": "JUMP",
      "path": "135"
    },
    "1646": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5928,
        6113
      ],
      "op": "JUMPDEST",
      "path": "135"
    },
    "1647": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "142"
    },
    "1648": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        6061,
        6085
      ],
      "op": "PUSH1",
      "path": "135",
      "statement": 22,
      "value": "0x0"
    },
    "1650": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        6061,
        6085
      ],
      "op": "SWAP1",
      "path": "135"
    },
    "1651": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        6061,
        6085
      ],
      "op": "DUP2",
      "path": "135"
    },
    "1652": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        6061,
        6085
      ],
      "op": "MSTORE",
      "path": "135"
    },
    "1653": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        6061,
        6071
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0x6"
    },
    "1655": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        6061,
        6085
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0x20"
    },
    "1657": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        6061,
        6085
      ],
      "op": "SWAP1",
      "path": "135"
    },
    "1658": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        6061,
        6085
      ],
      "op": "DUP2",
      "path": "135"
    },
    "1659": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        6061,
        6085
      ],
      "op": "MSTORE",
      "path": "135"
    },
    "1660": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        6061,
        6085
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0x40"
    },
    "1662": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        6061,
        6085
      ],
      "op": "DUP1",
      "path": "135"
    },
    "1663": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        6061,
        6085
      ],
      "op": "DUP4",
      "path": "135"
    },
    "1664": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        6061,
        6085
      ],
      "op": "KECCAK256",
      "path": "135"
    },
    "1665": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1667": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1669": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1671": {
      "op": "SHL"
    },
    "1672": {
      "op": "SUB"
    },
    "1673": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        6061,
        6095
      ],
      "op": "DUP6",
      "path": "135"
    },
    "1674": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        6061,
        6095
      ],
      "op": "AND",
      "path": "135"
    },
    "1675": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        6061,
        6095
      ],
      "op": "DUP5",
      "path": "135"
    },
    "1676": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        6061,
        6095
      ],
      "op": "MSTORE",
      "path": "135"
    },
    "1677": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        6061,
        6095
      ],
      "op": "SWAP1",
      "path": "135"
    },
    "1678": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        6061,
        6095
      ],
      "op": "SWAP2",
      "path": "135"
    },
    "1679": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        6061,
        6095
      ],
      "op": "MSTORE",
      "path": "135"
    },
    "1680": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        6061,
        6095
      ],
      "op": "SWAP1",
      "path": "135"
    },
    "1681": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        6061,
        6095
      ],
      "op": "KECCAK256",
      "path": "135"
    },
    "1682": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        6061,
        6102
      ],
      "op": "DUP1",
      "path": "135"
    },
    "1683": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        6061,
        6102
      ],
      "op": "SLOAD",
      "path": "135"
    },
    "1684": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1686": {
      "op": "NOT"
    },
    "1687": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        6061,
        6102
      ],
      "op": "AND",
      "path": "135"
    },
    "1688": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        6098,
        6102
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0x1"
    },
    "1690": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        6061,
        6102
      ],
      "op": "OR",
      "path": "135"
    },
    "1691": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        6061,
        6102
      ],
      "op": "SWAP1",
      "path": "135"
    },
    "1692": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        6061,
        6102
      ],
      "op": "SSTORE",
      "path": "135"
    },
    "1693": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5928,
        6113
      ],
      "op": "JUMPDEST",
      "path": "135"
    },
    "1694": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        6128,
        6170
      ],
      "op": "PUSH1",
      "path": "135",
      "statement": 23,
      "value": "0x40"
    },
    "1696": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        6128,
        6170
      ],
      "op": "MLOAD",
      "path": "135"
    },
    "1697": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "142"
    },
    "1698": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "SWAP1",
      "path": "142"
    },
    "1699": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1701": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1703": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1705": {
      "op": "SHL"
    },
    "1706": {
      "op": "SUB"
    },
    "1707": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        6128,
        6170
      ],
      "op": "DUP4",
      "path": "135"
    },
    "1708": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        6128,
        6170
      ],
      "op": "AND",
      "path": "135"
    },
    "1709": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        6128,
        6170
      ],
      "op": "SWAP1",
      "path": "135"
    },
    "1710": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        6128,
        6170
      ],
      "op": "PUSH32",
      "path": "135",
      "value": "0xF4CAEB2D6CA8932A215A353D0703C326EC2D81FC68170F320EB2AB49E9DF61F9"
    },
    "1743": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        6128,
        6170
      ],
      "op": "SWAP1",
      "path": "135"
    },
    "1744": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        6128,
        6170
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0x0"
    },
    "1746": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        6128,
        6170
      ],
      "op": "SWAP1",
      "path": "135"
    },
    "1747": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        6128,
        6170
      ],
      "op": "LOG3",
      "path": "135"
    },
    "1748": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5765,
        6177
      ],
      "op": "POP",
      "path": "135"
    },
    "1749": {
      "fn": "ERC777.authorizeOperator",
      "jump": "o",
      "offset": [
        5765,
        6177
      ],
      "op": "JUMP",
      "path": "135"
    },
    "1750": {
      "fn": "ERC777.symbol",
      "offset": [
        3062,
        3164
      ],
      "op": "JUMPDEST",
      "path": "135"
    },
    "1751": {
      "fn": "ERC777.symbol",
      "offset": [
        3118,
        3131
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0x60"
    },
    "1753": {
      "fn": "ERC777.symbol",
      "offset": [
        3150,
        3157
      ],
      "op": "PUSH1",
      "path": "135",
      "statement": 24,
      "value": "0x3"
    },
    "1755": {
      "fn": "ERC777.symbol",
      "offset": [
        3143,
        3157
      ],
      "op": "DUP1",
      "path": "135"
    },
    "1756": {
      "fn": "ERC777.symbol",
      "offset": [
        3143,
        3157
      ],
      "op": "SLOAD",
      "path": "135"
    },
    "1757": {
      "fn": "ERC777.symbol",
      "offset": [
        3143,
        3157
      ],
      "op": "PUSH2",
      "path": "135",
      "value": "0x321"
    },
    "1760": {
      "fn": "ERC777.symbol",
      "offset": [
        3143,
        3157
      ],
      "op": "SWAP1",
      "path": "135"
    },
    "1761": {
      "fn": "ERC777.symbol",
      "offset": [
        3143,
        3157
      ],
      "op": "PUSH2",
      "path": "135",
      "value": "0x15BF"
    },
    "1764": {
      "fn": "ERC777.symbol",
      "jump": "i",
      "offset": [
        3143,
        3157
      ],
      "op": "JUMP",
      "path": "135"
    },
    "1765": {
      "fn": "ERC777.send",
      "offset": [
        4204,
        4397
      ],
      "op": "JUMPDEST",
      "path": "135"
    },
    "1766": {
      "fn": "ERC777.send",
      "offset": [
        4336,
        4390
      ],
      "op": "PUSH2",
      "path": "135",
      "statement": 25,
      "value": "0x703"
    },
    "1769": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "142"
    },
    "1770": {
      "fn": "ERC777.send",
      "offset": [
        4356,
        4365
      ],
      "op": "DUP5",
      "path": "135"
    },
    "1771": {
      "fn": "ERC777.send",
      "offset": [
        4367,
        4373
      ],
      "op": "DUP5",
      "path": "135"
    },
    "1772": {
      "fn": "ERC777.send",
      "offset": [
        4375,
        4379
      ],
      "op": "DUP5",
      "path": "135"
    },
    "1773": {
      "fn": "ERC777.send",
      "offset": [
        4336,
        4390
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0x40"
    },
    "1775": {
      "fn": "ERC777.send",
      "offset": [
        4336,
        4390
      ],
      "op": "MLOAD",
      "path": "135"
    },
    "1776": {
      "fn": "ERC777.send",
      "offset": [
        4336,
        4390
      ],
      "op": "DUP1",
      "path": "135"
    },
    "1777": {
      "fn": "ERC777.send",
      "offset": [
        4336,
        4390
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0x20"
    },
    "1779": {
      "fn": "ERC777.send",
      "offset": [
        4336,
        4390
      ],
      "op": "ADD",
      "path": "135"
    },
    "1780": {
      "fn": "ERC777.send",
      "offset": [
        4336,
        4390
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0x40"
    },
    "1782": {
      "fn": "ERC777.send",
      "offset": [
        4336,
        4390
      ],
      "op": "MSTORE",
      "path": "135"
    },
    "1783": {
      "fn": "ERC777.send",
      "offset": [
        4336,
        4390
      ],
      "op": "DUP1",
      "path": "135"
    },
    "1784": {
      "fn": "ERC777.send",
      "offset": [
        4336,
        4390
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0x0"
    },
    "1786": {
      "fn": "ERC777.send",
      "offset": [
        4336,
        4390
      ],
      "op": "DUP2",
      "path": "135"
    },
    "1787": {
      "fn": "ERC777.send",
      "offset": [
        4336,
        4390
      ],
      "op": "MSTORE",
      "path": "135"
    },
    "1788": {
      "fn": "ERC777.send",
      "offset": [
        4336,
        4390
      ],
      "op": "POP",
      "path": "135"
    },
    "1789": {
      "fn": "ERC777.send",
      "offset": [
        4385,
        4389
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0x1"
    },
    "1791": {
      "fn": "ERC777.send",
      "offset": [
        4336,
        4341
      ],
      "op": "PUSH2",
      "path": "135",
      "value": "0xF4A"
    },
    "1794": {
      "fn": "ERC777.send",
      "jump": "i",
      "offset": [
        4336,
        4390
      ],
      "op": "JUMP",
      "path": "135"
    },
    "1795": {
      "fn": "ERC777.send",
      "offset": [
        4336,
        4390
      ],
      "op": "JUMPDEST",
      "path": "135"
    },
    "1796": {
      "fn": "ERC777.send",
      "offset": [
        4204,
        4397
      ],
      "op": "POP",
      "path": "135"
    },
    "1797": {
      "fn": "ERC777.send",
      "offset": [
        4204,
        4397
      ],
      "op": "POP",
      "path": "135"
    },
    "1798": {
      "fn": "ERC777.send",
      "offset": [
        4204,
        4397
      ],
      "op": "POP",
      "path": "135"
    },
    "1799": {
      "fn": "ERC777.send",
      "jump": "o",
      "offset": [
        4204,
        4397
      ],
      "op": "JUMP",
      "path": "135"
    },
    "1800": {
      "fn": "ERC777.transfer",
      "offset": [
        4628,
        5067
      ],
      "op": "JUMPDEST",
      "path": "135"
    },
    "1801": {
      "fn": "ERC777.transfer",
      "offset": [
        4714,
        4718
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0x0"
    },
    "1803": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1805": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1807": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1809": {
      "op": "SHL"
    },
    "1810": {
      "op": "SUB"
    },
    "1811": {
      "fn": "ERC777.transfer",
      "offset": [
        4738,
        4761
      ],
      "op": "DUP4",
      "path": "135",
      "statement": 26
    },
    "1812": {
      "branch": 69,
      "fn": "ERC777.transfer",
      "offset": [
        4738,
        4761
      ],
      "op": "AND",
      "path": "135"
    },
    "1813": {
      "fn": "ERC777.transfer",
      "offset": [
        4730,
        4802
      ],
      "op": "PUSH2",
      "path": "135",
      "value": "0x730"
    },
    "1816": {
      "branch": 69,
      "fn": "ERC777.transfer",
      "offset": [
        4730,
        4802
      ],
      "op": "JUMPI",
      "path": "135"
    },
    "1817": {
      "fn": "ERC777.transfer",
      "offset": [
        4730,
        4802
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0x40"
    },
    "1819": {
      "fn": "ERC777.transfer",
      "offset": [
        4730,
        4802
      ],
      "op": "MLOAD",
      "path": "135"
    },
    "1820": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1824": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1826": {
      "op": "SHL"
    },
    "1827": {
      "fn": "ERC777.transfer",
      "offset": [
        4730,
        4802
      ],
      "op": "DUP2",
      "path": "135"
    },
    "1828": {
      "fn": "ERC777.transfer",
      "offset": [
        4730,
        4802
      ],
      "op": "MSTORE",
      "path": "135"
    },
    "1829": {
      "fn": "ERC777.transfer",
      "offset": [
        4730,
        4802
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0x4"
    },
    "1831": {
      "fn": "ERC777.transfer",
      "offset": [
        4730,
        4802
      ],
      "op": "ADD",
      "path": "135"
    },
    "1832": {
      "fn": "ERC777.transfer",
      "offset": [
        4730,
        4802
      ],
      "op": "PUSH2",
      "path": "135",
      "value": "0x3DB"
    },
    "1835": {
      "fn": "ERC777.transfer",
      "offset": [
        4730,
        4802
      ],
      "op": "SWAP1",
      "path": "135"
    },
    "1836": {
      "fn": "ERC777.transfer",
      "offset": [
        4730,
        4802
      ],
      "op": "PUSH2",
      "path": "135",
      "value": "0x15FA"
    },
    "1839": {
      "fn": "ERC777.transfer",
      "jump": "i",
      "offset": [
        4730,
        4802
      ],
      "op": "JUMP",
      "path": "135"
    },
    "1840": {
      "fn": "ERC777.transfer",
      "offset": [
        4730,
        4802
      ],
      "op": "JUMPDEST",
      "path": "135"
    },
    "1841": {
      "fn": "ERC777.transfer",
      "offset": [
        4813,
        4825
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0x0"
    },
    "1843": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "142"
    },
    "1844": {
      "fn": "ERC777.transfer",
      "offset": [
        4813,
        4840
      ],
      "op": "SWAP1",
      "path": "135"
    },
    "1845": {
      "fn": "ERC777.transfer",
      "offset": [
        4813,
        4840
      ],
      "op": "POP",
      "path": "135"
    },
    "1846": {
      "fn": "ERC777.transfer",
      "offset": [
        4851,
        4907
      ],
      "op": "PUSH2",
      "path": "135",
      "statement": 27,
      "value": "0x761"
    },
    "1849": {
      "fn": "ERC777.transfer",
      "offset": [
        4869,
        4873
      ],
      "op": "DUP2",
      "path": "135"
    },
    "1850": {
      "fn": "ERC777.transfer",
      "offset": [
        4875,
        4879
      ],
      "op": "DUP3",
      "path": "135"
    },
    "1851": {
      "fn": "ERC777.transfer",
      "offset": [
        4881,
        4890
      ],
      "op": "DUP7",
      "path": "135"
    },
    "1852": {
      "fn": "ERC777.transfer",
      "offset": [
        4892,
        4898
      ],
      "op": "DUP7",
      "path": "135"
    },
    "1853": {
      "fn": "ERC777.transfer",
      "offset": [
        4851,
        4907
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0x40"
    },
    "1855": {
      "fn": "ERC777.transfer",
      "offset": [
        4851,
        4907
      ],
      "op": "MLOAD",
      "path": "135"
    },
    "1856": {
      "fn": "ERC777.transfer",
      "offset": [
        4851,
        4907
      ],
      "op": "DUP1",
      "path": "135"
    },
    "1857": {
      "fn": "ERC777.transfer",
      "offset": [
        4851,
        4907
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0x20"
    },
    "1859": {
      "fn": "ERC777.transfer",
      "offset": [
        4851,
        4907
      ],
      "op": "ADD",
      "path": "135"
    },
    "1860": {
      "fn": "ERC777.transfer",
      "offset": [
        4851,
        4907
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0x40"
    },
    "1862": {
      "fn": "ERC777.transfer",
      "offset": [
        4851,
        4907
      ],
      "op": "MSTORE",
      "path": "135"
    },
    "1863": {
      "fn": "ERC777.transfer",
      "offset": [
        4851,
        4907
      ],
      "op": "DUP1",
      "path": "135"
    },
    "1864": {
      "fn": "ERC777.transfer",
      "offset": [
        4851,
        4907
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0x0"
    },
    "1866": {
      "fn": "ERC777.transfer",
      "offset": [
        4851,
        4907
      ],
      "op": "DUP2",
      "path": "135"
    },
    "1867": {
      "fn": "ERC777.transfer",
      "offset": [
        4851,
        4907
      ],
      "op": "MSTORE",
      "path": "135"
    },
    "1868": {
      "fn": "ERC777.transfer",
      "offset": [
        4851,
        4907
      ],
      "op": "POP",
      "path": "135"
    },
    "1869": {
      "fn": "ERC777.transfer",
      "offset": [
        4851,
        4907
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0x40"
    },
    "1871": {
      "fn": "ERC777.transfer",
      "offset": [
        4851,
        4907
      ],
      "op": "MLOAD",
      "path": "135"
    },
    "1872": {
      "fn": "ERC777.transfer",
      "offset": [
        4851,
        4907
      ],
      "op": "DUP1",
      "path": "135"
    },
    "1873": {
      "fn": "ERC777.transfer",
      "offset": [
        4851,
        4907
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0x20"
    },
    "1875": {
      "fn": "ERC777.transfer",
      "offset": [
        4851,
        4907
      ],
      "op": "ADD",
      "path": "135"
    },
    "1876": {
      "fn": "ERC777.transfer",
      "offset": [
        4851,
        4907
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0x40"
    },
    "1878": {
      "fn": "ERC777.transfer",
      "offset": [
        4851,
        4907
      ],
      "op": "MSTORE",
      "path": "135"
    },
    "1879": {
      "fn": "ERC777.transfer",
      "offset": [
        4851,
        4907
      ],
      "op": "DUP1",
      "path": "135"
    },
    "1880": {
      "fn": "ERC777.transfer",
      "offset": [
        4851,
        4907
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0x0"
    },
    "1882": {
      "fn": "ERC777.transfer",
      "offset": [
        4851,
        4907
      ],
      "op": "DUP2",
      "path": "135"
    },
    "1883": {
      "fn": "ERC777.transfer",
      "offset": [
        4851,
        4907
      ],
      "op": "MSTORE",
      "path": "135"
    },
    "1884": {
      "fn": "ERC777.transfer",
      "offset": [
        4851,
        4907
      ],
      "op": "POP",
      "path": "135"
    },
    "1885": {
      "fn": "ERC777.transfer",
      "offset": [
        4851,
        4868
      ],
      "op": "PUSH2",
      "path": "135",
      "value": "0xAF7"
    },
    "1888": {
      "fn": "ERC777.transfer",
      "jump": "i",
      "offset": [
        4851,
        4907
      ],
      "op": "JUMP",
      "path": "135"
    },
    "1889": {
      "fn": "ERC777.transfer",
      "offset": [
        4851,
        4907
      ],
      "op": "JUMPDEST",
      "path": "135"
    },
    "1890": {
      "fn": "ERC777.transfer",
      "offset": [
        4918,
        4962
      ],
      "op": "PUSH2",
      "path": "135",
      "statement": 28,
      "value": "0x78D"
    },
    "1893": {
      "fn": "ERC777.transfer",
      "offset": [
        4924,
        4928
      ],
      "op": "DUP2",
      "path": "135"
    },
    "1894": {
      "fn": "ERC777.transfer",
      "offset": [
        4930,
        4934
      ],
      "op": "DUP3",
      "path": "135"
    },
    "1895": {
      "fn": "ERC777.transfer",
      "offset": [
        4936,
        4945
      ],
      "op": "DUP7",
      "path": "135"
    },
    "1896": {
      "fn": "ERC777.transfer",
      "offset": [
        4947,
        4953
      ],
      "op": "DUP7",
      "path": "135"
    },
    "1897": {
      "fn": "ERC777.transfer",
      "offset": [
        4918,
        4962
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0x40"
    },
    "1899": {
      "fn": "ERC777.transfer",
      "offset": [
        4918,
        4962
      ],
      "op": "MLOAD",
      "path": "135"
    },
    "1900": {
      "fn": "ERC777.transfer",
      "offset": [
        4918,
        4962
      ],
      "op": "DUP1",
      "path": "135"
    },
    "1901": {
      "fn": "ERC777.transfer",
      "offset": [
        4918,
        4962
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0x20"
    },
    "1903": {
      "fn": "ERC777.transfer",
      "offset": [
        4918,
        4962
      ],
      "op": "ADD",
      "path": "135"
    },
    "1904": {
      "fn": "ERC777.transfer",
      "offset": [
        4918,
        4962
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0x40"
    },
    "1906": {
      "fn": "ERC777.transfer",
      "offset": [
        4918,
        4962
      ],
      "op": "MSTORE",
      "path": "135"
    },
    "1907": {
      "fn": "ERC777.transfer",
      "offset": [
        4918,
        4962
      ],
      "op": "DUP1",
      "path": "135"
    },
    "1908": {
      "fn": "ERC777.transfer",
      "offset": [
        4918,
        4962
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0x0"
    },
    "1910": {
      "fn": "ERC777.transfer",
      "offset": [
        4918,
        4962
      ],
      "op": "DUP2",
      "path": "135"
    },
    "1911": {
      "fn": "ERC777.transfer",
      "offset": [
        4918,
        4962
      ],
      "op": "MSTORE",
      "path": "135"
    },
    "1912": {
      "fn": "ERC777.transfer",
      "offset": [
        4918,
        4962
      ],
      "op": "POP",
      "path": "135"
    },
    "1913": {
      "fn": "ERC777.transfer",
      "offset": [
        4918,
        4962
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0x40"
    },
    "1915": {
      "fn": "ERC777.transfer",
      "offset": [
        4918,
        4962
      ],
      "op": "MLOAD",
      "path": "135"
    },
    "1916": {
      "fn": "ERC777.transfer",
      "offset": [
        4918,
        4962
      ],
      "op": "DUP1",
      "path": "135"
    },
    "1917": {
      "fn": "ERC777.transfer",
      "offset": [
        4918,
        4962
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0x20"
    },
    "1919": {
      "fn": "ERC777.transfer",
      "offset": [
        4918,
        4962
      ],
      "op": "ADD",
      "path": "135"
    },
    "1920": {
      "fn": "ERC777.transfer",
      "offset": [
        4918,
        4962
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0x40"
    },
    "1922": {
      "fn": "ERC777.transfer",
      "offset": [
        4918,
        4962
      ],
      "op": "MSTORE",
      "path": "135"
    },
    "1923": {
      "fn": "ERC777.transfer",
      "offset": [
        4918,
        4962
      ],
      "op": "DUP1",
      "path": "135"
    },
    "1924": {
      "fn": "ERC777.transfer",
      "offset": [
        4918,
        4962
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0x0"
    },
    "1926": {
      "fn": "ERC777.transfer",
      "offset": [
        4918,
        4962
      ],
      "op": "DUP2",
      "path": "135"
    },
    "1927": {
      "fn": "ERC777.transfer",
      "offset": [
        4918,
        4962
      ],
      "op": "MSTORE",
      "path": "135"
    },
    "1928": {
      "fn": "ERC777.transfer",
      "offset": [
        4918,
        4962
      ],
      "op": "POP",
      "path": "135"
    },
    "1929": {
      "fn": "ERC777.transfer",
      "offset": [
        4918,
        4923
      ],
      "op": "PUSH2",
      "path": "135",
      "value": "0xC1F"
    },
    "1932": {
      "fn": "ERC777.transfer",
      "jump": "i",
      "offset": [
        4918,
        4962
      ],
      "op": "JUMP",
      "path": "135"
    },
    "1933": {
      "fn": "ERC777.transfer",
      "offset": [
        4918,
        4962
      ],
      "op": "JUMPDEST",
      "path": "135"
    },
    "1934": {
      "fn": "ERC777.transfer",
      "offset": [
        4973,
        5038
      ],
      "op": "PUSH2",
      "path": "135",
      "statement": 29,
      "value": "0x3A9"
    },
    "1937": {
      "fn": "ERC777.transfer",
      "offset": [
        4993,
        4997
      ],
      "op": "DUP2",
      "path": "135"
    },
    "1938": {
      "fn": "ERC777.transfer",
      "offset": [
        4999,
        5003
      ],
      "op": "DUP3",
      "path": "135"
    },
    "1939": {
      "fn": "ERC777.transfer",
      "offset": [
        5005,
        5014
      ],
      "op": "DUP7",
      "path": "135"
    },
    "1940": {
      "fn": "ERC777.transfer",
      "offset": [
        5016,
        5022
      ],
      "op": "DUP7",
      "path": "135"
    },
    "1941": {
      "fn": "ERC777.transfer",
      "offset": [
        4973,
        5038
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0x40"
    },
    "1943": {
      "fn": "ERC777.transfer",
      "offset": [
        4973,
        5038
      ],
      "op": "MLOAD",
      "path": "135"
    },
    "1944": {
      "fn": "ERC777.transfer",
      "offset": [
        4973,
        5038
      ],
      "op": "DUP1",
      "path": "135"
    },
    "1945": {
      "fn": "ERC777.transfer",
      "offset": [
        4973,
        5038
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0x20"
    },
    "1947": {
      "fn": "ERC777.transfer",
      "offset": [
        4973,
        5038
      ],
      "op": "ADD",
      "path": "135"
    },
    "1948": {
      "fn": "ERC777.transfer",
      "offset": [
        4973,
        5038
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0x40"
    },
    "1950": {
      "fn": "ERC777.transfer",
      "offset": [
        4973,
        5038
      ],
      "op": "MSTORE",
      "path": "135"
    },
    "1951": {
      "fn": "ERC777.transfer",
      "offset": [
        4973,
        5038
      ],
      "op": "DUP1",
      "path": "135"
    },
    "1952": {
      "fn": "ERC777.transfer",
      "offset": [
        4973,
        5038
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0x0"
    },
    "1954": {
      "fn": "ERC777.transfer",
      "offset": [
        4973,
        5038
      ],
      "op": "DUP2",
      "path": "135"
    },
    "1955": {
      "fn": "ERC777.transfer",
      "offset": [
        4973,
        5038
      ],
      "op": "MSTORE",
      "path": "135"
    },
    "1956": {
      "fn": "ERC777.transfer",
      "offset": [
        4973,
        5038
      ],
      "op": "POP",
      "path": "135"
    },
    "1957": {
      "fn": "ERC777.transfer",
      "offset": [
        4973,
        5038
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0x40"
    },
    "1959": {
      "fn": "ERC777.transfer",
      "offset": [
        4973,
        5038
      ],
      "op": "MLOAD",
      "path": "135"
    },
    "1960": {
      "fn": "ERC777.transfer",
      "offset": [
        4973,
        5038
      ],
      "op": "DUP1",
      "path": "135"
    },
    "1961": {
      "fn": "ERC777.transfer",
      "offset": [
        4973,
        5038
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0x20"
    },
    "1963": {
      "fn": "ERC777.transfer",
      "offset": [
        4973,
        5038
      ],
      "op": "ADD",
      "path": "135"
    },
    "1964": {
      "fn": "ERC777.transfer",
      "offset": [
        4973,
        5038
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0x40"
    },
    "1966": {
      "fn": "ERC777.transfer",
      "offset": [
        4973,
        5038
      ],
      "op": "MSTORE",
      "path": "135"
    },
    "1967": {
      "fn": "ERC777.transfer",
      "offset": [
        4973,
        5038
      ],
      "op": "DUP1",
      "path": "135"
    },
    "1968": {
      "fn": "ERC777.transfer",
      "offset": [
        4973,
        5038
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0x0"
    },
    "1970": {
      "fn": "ERC777.transfer",
      "offset": [
        4973,
        5038
      ],
      "op": "DUP2",
      "path": "135"
    },
    "1971": {
      "fn": "ERC777.transfer",
      "offset": [
        4973,
        5038
      ],
      "op": "MSTORE",
      "path": "135"
    },
    "1972": {
      "fn": "ERC777.transfer",
      "offset": [
        4973,
        5038
      ],
      "op": "POP",
      "path": "135"
    },
    "1973": {
      "fn": "ERC777.transfer",
      "offset": [
        5032,
        5037
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0x0"
    },
    "1975": {
      "fn": "ERC777.transfer",
      "offset": [
        4973,
        4992
      ],
      "op": "PUSH2",
      "path": "135",
      "value": "0xD85"
    },
    "1978": {
      "fn": "ERC777.transfer",
      "jump": "i",
      "offset": [
        4973,
        5038
      ],
      "op": "JUMP",
      "path": "135"
    },
    "1979": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5387,
        5698
      ],
      "op": "JUMPDEST",
      "path": "135"
    },
    "1980": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5487,
        5491
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0x0"
    },
    "1982": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5534,
        5545
      ],
      "op": "DUP2",
      "path": "135",
      "statement": 30
    },
    "1983": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1985": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1987": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1989": {
      "op": "SHL"
    },
    "1990": {
      "op": "SUB"
    },
    "1991": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5522,
        5545
      ],
      "op": "AND",
      "path": "135"
    },
    "1992": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5522,
        5530
      ],
      "op": "DUP4",
      "path": "135"
    },
    "1993": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1995": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1997": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1999": {
      "op": "SHL"
    },
    "2000": {
      "op": "SUB"
    },
    "2001": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5522,
        5545
      ],
      "op": "AND",
      "path": "135"
    },
    "2002": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5522,
        5545
      ],
      "op": "EQ",
      "path": "135"
    },
    "2003": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5522,
        5642
      ],
      "op": "DUP1",
      "path": "135"
    },
    "2004": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5522,
        5642
      ],
      "op": "PUSH2",
      "path": "135",
      "value": "0x826"
    },
    "2007": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5522,
        5642
      ],
      "op": "JUMPI",
      "path": "135"
    },
    "2008": {
      "op": "POP"
    },
    "2009": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2011": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2013": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2015": {
      "op": "SHL"
    },
    "2016": {
      "op": "SUB"
    },
    "2017": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5562,
        5589
      ],
      "op": "DUP4",
      "path": "135"
    },
    "2018": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5562,
        5589
      ],
      "op": "AND",
      "path": "135"
    },
    "2019": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5562,
        5589
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0x0"
    },
    "2021": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5562,
        5589
      ],
      "op": "SWAP1",
      "path": "135"
    },
    "2022": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5562,
        5589
      ],
      "op": "DUP2",
      "path": "135"
    },
    "2023": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5562,
        5589
      ],
      "op": "MSTORE",
      "path": "135"
    },
    "2024": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5562,
        5579
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0x5"
    },
    "2026": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5562,
        5589
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0x20"
    },
    "2028": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5562,
        5589
      ],
      "op": "MSTORE",
      "path": "135"
    },
    "2029": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5562,
        5589
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0x40"
    },
    "2031": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5562,
        5589
      ],
      "op": "SWAP1",
      "path": "135"
    },
    "2032": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5562,
        5589
      ],
      "op": "KECCAK256",
      "path": "135"
    },
    "2033": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5562,
        5589
      ],
      "op": "SLOAD",
      "path": "135"
    },
    "2034": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5562,
        5589
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0xFF"
    },
    "2036": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5562,
        5589
      ],
      "op": "AND",
      "path": "135"
    },
    "2037": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5562,
        5641
      ],
      "op": "DUP1",
      "path": "135"
    },
    "2038": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5562,
        5641
      ],
      "op": "ISZERO",
      "path": "135"
    },
    "2039": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5562,
        5641
      ],
      "op": "PUSH2",
      "path": "135",
      "value": "0x826"
    },
    "2042": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5562,
        5641
      ],
      "op": "JUMPI",
      "path": "135"
    },
    "2043": {
      "op": "POP"
    },
    "2044": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2046": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2048": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2050": {
      "op": "SHL"
    },
    "2051": {
      "op": "SUB"
    },
    "2052": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5594,
        5631
      ],
      "op": "DUP1",
      "path": "135"
    },
    "2053": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5594,
        5631
      ],
      "op": "DUP4",
      "path": "135"
    },
    "2054": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5594,
        5631
      ],
      "op": "AND",
      "path": "135"
    },
    "2055": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5594,
        5631
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0x0"
    },
    "2057": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5594,
        5631
      ],
      "op": "SWAP1",
      "path": "135"
    },
    "2058": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5594,
        5631
      ],
      "op": "DUP2",
      "path": "135"
    },
    "2059": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5594,
        5631
      ],
      "op": "MSTORE",
      "path": "135"
    },
    "2060": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5594,
        5618
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0x7"
    },
    "2062": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5594,
        5631
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0x20"
    },
    "2064": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5594,
        5631
      ],
      "op": "SWAP1",
      "path": "135"
    },
    "2065": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5594,
        5631
      ],
      "op": "DUP2",
      "path": "135"
    },
    "2066": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5594,
        5631
      ],
      "op": "MSTORE",
      "path": "135"
    },
    "2067": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5594,
        5631
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0x40"
    },
    "2069": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5594,
        5631
      ],
      "op": "DUP1",
      "path": "135"
    },
    "2070": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5594,
        5631
      ],
      "op": "DUP4",
      "path": "135"
    },
    "2071": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5594,
        5631
      ],
      "op": "KECCAK256",
      "path": "135"
    },
    "2072": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5594,
        5641
      ],
      "op": "SWAP4",
      "path": "135"
    },
    "2073": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5594,
        5641
      ],
      "op": "DUP8",
      "path": "135"
    },
    "2074": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5594,
        5641
      ],
      "op": "AND",
      "path": "135"
    },
    "2075": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5594,
        5641
      ],
      "op": "DUP4",
      "path": "135"
    },
    "2076": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5594,
        5641
      ],
      "op": "MSTORE",
      "path": "135"
    },
    "2077": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5594,
        5641
      ],
      "op": "SWAP3",
      "path": "135"
    },
    "2078": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5594,
        5641
      ],
      "op": "SWAP1",
      "path": "135"
    },
    "2079": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5594,
        5641
      ],
      "op": "MSTORE",
      "path": "135"
    },
    "2080": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5594,
        5641
      ],
      "op": "KECCAK256",
      "path": "135"
    },
    "2081": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5594,
        5641
      ],
      "op": "SLOAD",
      "path": "135"
    },
    "2082": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5594,
        5641
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0xFF"
    },
    "2084": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5594,
        5641
      ],
      "op": "AND",
      "path": "135"
    },
    "2085": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5593,
        5641
      ],
      "op": "ISZERO",
      "path": "135"
    },
    "2086": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5562,
        5641
      ],
      "op": "JUMPDEST",
      "path": "135"
    },
    "2087": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5522,
        5691
      ],
      "op": "DUP1",
      "path": "135"
    },
    "2088": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5522,
        5691
      ],
      "op": "PUSH2",
      "path": "135",
      "value": "0x856"
    },
    "2091": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5522,
        5691
      ],
      "op": "JUMPI",
      "path": "135"
    },
    "2092": {
      "op": "POP"
    },
    "2093": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2095": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2097": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2099": {
      "op": "SHL"
    },
    "2100": {
      "op": "SUB"
    },
    "2101": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5658,
        5681
      ],
      "op": "DUP1",
      "path": "135"
    },
    "2102": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5658,
        5681
      ],
      "op": "DUP4",
      "path": "135"
    },
    "2103": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5658,
        5681
      ],
      "op": "AND",
      "path": "135"
    },
    "2104": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5658,
        5681
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0x0"
    },
    "2106": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5658,
        5681
      ],
      "op": "SWAP1",
      "path": "135"
    },
    "2107": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5658,
        5681
      ],
      "op": "DUP2",
      "path": "135"
    },
    "2108": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5658,
        5681
      ],
      "op": "MSTORE",
      "path": "135"
    },
    "2109": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5658,
        5668
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0x6"
    },
    "2111": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5658,
        5681
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0x20"
    },
    "2113": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5658,
        5681
      ],
      "op": "SWAP1",
      "path": "135"
    },
    "2114": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5658,
        5681
      ],
      "op": "DUP2",
      "path": "135"
    },
    "2115": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5658,
        5681
      ],
      "op": "MSTORE",
      "path": "135"
    },
    "2116": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5658,
        5681
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0x40"
    },
    "2118": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5658,
        5681
      ],
      "op": "DUP1",
      "path": "135"
    },
    "2119": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5658,
        5681
      ],
      "op": "DUP4",
      "path": "135"
    },
    "2120": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5658,
        5681
      ],
      "op": "KECCAK256",
      "path": "135"
    },
    "2121": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5658,
        5691
      ],
      "op": "SWAP4",
      "path": "135"
    },
    "2122": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5658,
        5691
      ],
      "op": "DUP8",
      "path": "135"
    },
    "2123": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5658,
        5691
      ],
      "op": "AND",
      "path": "135"
    },
    "2124": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5658,
        5691
      ],
      "op": "DUP4",
      "path": "135"
    },
    "2125": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5658,
        5691
      ],
      "op": "MSTORE",
      "path": "135"
    },
    "2126": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5658,
        5691
      ],
      "op": "SWAP3",
      "path": "135"
    },
    "2127": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5658,
        5691
      ],
      "op": "SWAP1",
      "path": "135"
    },
    "2128": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5658,
        5691
      ],
      "op": "MSTORE",
      "path": "135"
    },
    "2129": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5658,
        5691
      ],
      "op": "KECCAK256",
      "path": "135"
    },
    "2130": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5658,
        5691
      ],
      "op": "SLOAD",
      "path": "135"
    },
    "2131": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5658,
        5691
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0xFF"
    },
    "2133": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5658,
        5691
      ],
      "op": "AND",
      "path": "135"
    },
    "2134": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5522,
        5691
      ],
      "op": "JUMPDEST",
      "path": "135"
    },
    "2135": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5503,
        5691
      ],
      "op": "SWAP4",
      "path": "135"
    },
    "2136": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5387,
        5698
      ],
      "op": "SWAP3",
      "path": "135"
    },
    "2137": {
      "op": "POP"
    },
    "2138": {
      "op": "POP"
    },
    "2139": {
      "op": "POP"
    },
    "2140": {
      "fn": "ERC777.isOperatorFor",
      "jump": "o",
      "offset": [
        5387,
        5698
      ],
      "op": "JUMP",
      "path": "135"
    },
    "2141": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6241,
        6644
      ],
      "op": "JUMPDEST",
      "path": "135"
    },
    "2142": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2144": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2146": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2148": {
      "op": "SHL"
    },
    "2149": {
      "op": "SUB"
    },
    "2150": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6325,
        6349
      ],
      "op": "DUP2",
      "path": "135",
      "statement": 31
    },
    "2151": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6325,
        6349
      ],
      "op": "AND",
      "path": "135"
    },
    "2152": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "142"
    },
    "2153": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6325,
        6349
      ],
      "op": "EQ",
      "path": "135"
    },
    "2154": {
      "branch": 70,
      "fn": "ERC777.revokeOperator",
      "offset": [
        6325,
        6349
      ],
      "op": "ISZERO",
      "path": "135"
    },
    "2155": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6317,
        6387
      ],
      "op": "PUSH2",
      "path": "135",
      "value": "0x8C0"
    },
    "2158": {
      "branch": 70,
      "fn": "ERC777.revokeOperator",
      "offset": [
        6317,
        6387
      ],
      "op": "JUMPI",
      "path": "135"
    },
    "2159": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6317,
        6387
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0x40"
    },
    "2161": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6317,
        6387
      ],
      "op": "MLOAD",
      "path": "135"
    },
    "2162": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2166": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2168": {
      "op": "SHL"
    },
    "2169": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6317,
        6387
      ],
      "op": "DUP2",
      "path": "135"
    },
    "2170": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6317,
        6387
      ],
      "op": "MSTORE",
      "path": "135"
    },
    "2171": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2173": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6317,
        6387
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0x4"
    },
    "2175": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6317,
        6387
      ],
      "op": "DUP3",
      "path": "135"
    },
    "2176": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6317,
        6387
      ],
      "op": "ADD",
      "path": "135"
    },
    "2177": {
      "op": "MSTORE"
    },
    "2178": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "2180": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2182": {
      "op": "DUP3"
    },
    "2183": {
      "op": "ADD"
    },
    "2184": {
      "op": "MSTORE"
    },
    "2185": {
      "op": "PUSH32",
      "value": "0x4552433737373A207265766F6B696E672073656C66206173206F70657261746F"
    },
    "2218": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2220": {
      "op": "DUP3"
    },
    "2221": {
      "op": "ADD"
    },
    "2222": {
      "op": "MSTORE"
    },
    "2223": {
      "op": "PUSH1",
      "value": "0x39"
    },
    "2225": {
      "op": "PUSH1",
      "value": "0xF9"
    },
    "2227": {
      "op": "SHL"
    },
    "2228": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2230": {
      "op": "DUP3"
    },
    "2231": {
      "op": "ADD"
    },
    "2232": {
      "op": "MSTORE"
    },
    "2233": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2235": {
      "op": "ADD"
    },
    "2236": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6317,
        6387
      ],
      "op": "PUSH2",
      "path": "135",
      "value": "0x3DB"
    },
    "2239": {
      "op": "JUMP"
    },
    "2240": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6317,
        6387
      ],
      "op": "JUMPDEST",
      "path": "135"
    },
    "2241": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2243": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2245": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2247": {
      "op": "SHL"
    },
    "2248": {
      "op": "SUB"
    },
    "2249": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6402,
        6429
      ],
      "op": "DUP2",
      "path": "135"
    },
    "2250": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6402,
        6429
      ],
      "op": "AND",
      "path": "135"
    },
    "2251": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6402,
        6429
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0x0"
    },
    "2253": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6402,
        6429
      ],
      "op": "SWAP1",
      "path": "135"
    },
    "2254": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6402,
        6429
      ],
      "op": "DUP2",
      "path": "135"
    },
    "2255": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6402,
        6429
      ],
      "op": "MSTORE",
      "path": "135"
    },
    "2256": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6402,
        6419
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0x5"
    },
    "2258": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6402,
        6429
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0x20"
    },
    "2260": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6402,
        6429
      ],
      "op": "MSTORE",
      "path": "135"
    },
    "2261": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6402,
        6429
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0x40"
    },
    "2263": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6402,
        6429
      ],
      "op": "SWAP1",
      "path": "135"
    },
    "2264": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6402,
        6429
      ],
      "op": "KECCAK256",
      "path": "135"
    },
    "2265": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6402,
        6429
      ],
      "op": "SLOAD",
      "path": "135"
    },
    "2266": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6402,
        6429
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0xFF"
    },
    "2268": {
      "branch": 71,
      "fn": "ERC777.revokeOperator",
      "offset": [
        6402,
        6429
      ],
      "op": "AND",
      "path": "135"
    },
    "2269": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6398,
        6583
      ],
      "op": "ISZERO",
      "path": "135"
    },
    "2270": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6398,
        6583
      ],
      "op": "PUSH2",
      "path": "135",
      "value": "0x914"
    },
    "2273": {
      "branch": 71,
      "fn": "ERC777.revokeOperator",
      "offset": [
        6398,
        6583
      ],
      "op": "JUMPI",
      "path": "135"
    },
    "2274": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "142"
    },
    "2275": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6445,
        6483
      ],
      "op": "PUSH1",
      "path": "135",
      "statement": 32,
      "value": "0x0"
    },
    "2277": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6445,
        6483
      ],
      "op": "SWAP1",
      "path": "135"
    },
    "2278": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6445,
        6483
      ],
      "op": "DUP2",
      "path": "135"
    },
    "2279": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6445,
        6483
      ],
      "op": "MSTORE",
      "path": "135"
    },
    "2280": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6445,
        6469
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0x7"
    },
    "2282": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6445,
        6483
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0x20"
    },
    "2284": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6445,
        6483
      ],
      "op": "SWAP1",
      "path": "135"
    },
    "2285": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6445,
        6483
      ],
      "op": "DUP2",
      "path": "135"
    },
    "2286": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6445,
        6483
      ],
      "op": "MSTORE",
      "path": "135"
    },
    "2287": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6445,
        6483
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0x40"
    },
    "2289": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6445,
        6483
      ],
      "op": "DUP1",
      "path": "135"
    },
    "2290": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6445,
        6483
      ],
      "op": "DUP4",
      "path": "135"
    },
    "2291": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6445,
        6483
      ],
      "op": "KECCAK256",
      "path": "135"
    },
    "2292": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2294": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2296": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2298": {
      "op": "SHL"
    },
    "2299": {
      "op": "SUB"
    },
    "2300": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6445,
        6493
      ],
      "op": "DUP6",
      "path": "135"
    },
    "2301": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6445,
        6493
      ],
      "op": "AND",
      "path": "135"
    },
    "2302": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6445,
        6493
      ],
      "op": "DUP5",
      "path": "135"
    },
    "2303": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6445,
        6493
      ],
      "op": "MSTORE",
      "path": "135"
    },
    "2304": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6445,
        6493
      ],
      "op": "SWAP1",
      "path": "135"
    },
    "2305": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6445,
        6493
      ],
      "op": "SWAP2",
      "path": "135"
    },
    "2306": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6445,
        6493
      ],
      "op": "MSTORE",
      "path": "135"
    },
    "2307": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6445,
        6493
      ],
      "op": "SWAP1",
      "path": "135"
    },
    "2308": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6445,
        6493
      ],
      "op": "KECCAK256",
      "path": "135"
    },
    "2309": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6445,
        6500
      ],
      "op": "DUP1",
      "path": "135"
    },
    "2310": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6445,
        6500
      ],
      "op": "SLOAD",
      "path": "135"
    },
    "2311": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "2313": {
      "op": "NOT"
    },
    "2314": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6445,
        6500
      ],
      "op": "AND",
      "path": "135"
    },
    "2315": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6496,
        6500
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0x1"
    },
    "2317": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6445,
        6500
      ],
      "op": "OR",
      "path": "135"
    },
    "2318": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6445,
        6500
      ],
      "op": "SWAP1",
      "path": "135"
    },
    "2319": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6445,
        6500
      ],
      "op": "SSTORE",
      "path": "135"
    },
    "2320": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6398,
        6583
      ],
      "op": "PUSH2",
      "path": "135",
      "value": "0x940"
    },
    "2323": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6398,
        6583
      ],
      "op": "JUMP",
      "path": "135"
    },
    "2324": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6398,
        6583
      ],
      "op": "JUMPDEST",
      "path": "135"
    },
    "2325": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "142"
    },
    "2326": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6538,
        6562
      ],
      "op": "PUSH1",
      "path": "135",
      "statement": 33,
      "value": "0x0"
    },
    "2328": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6538,
        6562
      ],
      "op": "SWAP1",
      "path": "135"
    },
    "2329": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6538,
        6562
      ],
      "op": "DUP2",
      "path": "135"
    },
    "2330": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6538,
        6562
      ],
      "op": "MSTORE",
      "path": "135"
    },
    "2331": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6538,
        6548
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0x6"
    },
    "2333": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6538,
        6562
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0x20"
    },
    "2335": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6538,
        6562
      ],
      "op": "SWAP1",
      "path": "135"
    },
    "2336": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6538,
        6562
      ],
      "op": "DUP2",
      "path": "135"
    },
    "2337": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6538,
        6562
      ],
      "op": "MSTORE",
      "path": "135"
    },
    "2338": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6538,
        6562
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0x40"
    },
    "2340": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6538,
        6562
      ],
      "op": "DUP1",
      "path": "135"
    },
    "2341": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6538,
        6562
      ],
      "op": "DUP4",
      "path": "135"
    },
    "2342": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6538,
        6562
      ],
      "op": "KECCAK256",
      "path": "135"
    },
    "2343": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2345": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2347": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2349": {
      "op": "SHL"
    },
    "2350": {
      "op": "SUB"
    },
    "2351": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6538,
        6572
      ],
      "op": "DUP6",
      "path": "135"
    },
    "2352": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6538,
        6572
      ],
      "op": "AND",
      "path": "135"
    },
    "2353": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6538,
        6572
      ],
      "op": "DUP5",
      "path": "135"
    },
    "2354": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6538,
        6572
      ],
      "op": "MSTORE",
      "path": "135"
    },
    "2355": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6538,
        6572
      ],
      "op": "SWAP1",
      "path": "135"
    },
    "2356": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6538,
        6572
      ],
      "op": "SWAP2",
      "path": "135"
    },
    "2357": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6538,
        6572
      ],
      "op": "MSTORE",
      "path": "135"
    },
    "2358": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6538,
        6572
      ],
      "op": "SWAP1",
      "path": "135"
    },
    "2359": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6538,
        6572
      ],
      "op": "KECCAK256",
      "path": "135"
    },
    "2360": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6531,
        6572
      ],
      "op": "DUP1",
      "path": "135"
    },
    "2361": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6531,
        6572
      ],
      "op": "SLOAD",
      "path": "135"
    },
    "2362": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "2364": {
      "op": "NOT"
    },
    "2365": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6531,
        6572
      ],
      "op": "AND",
      "path": "135"
    },
    "2366": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6531,
        6572
      ],
      "op": "SWAP1",
      "path": "135"
    },
    "2367": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6531,
        6572
      ],
      "op": "SSTORE",
      "path": "135"
    },
    "2368": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6398,
        6583
      ],
      "op": "JUMPDEST",
      "path": "135"
    },
    "2369": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6598,
        6637
      ],
      "op": "PUSH1",
      "path": "135",
      "statement": 34,
      "value": "0x40"
    },
    "2371": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6598,
        6637
      ],
      "op": "MLOAD",
      "path": "135"
    },
    "2372": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "142"
    },
    "2373": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "SWAP1",
      "path": "142"
    },
    "2374": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2376": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2378": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2380": {
      "op": "SHL"
    },
    "2381": {
      "op": "SUB"
    },
    "2382": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6598,
        6637
      ],
      "op": "DUP4",
      "path": "135"
    },
    "2383": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6598,
        6637
      ],
      "op": "AND",
      "path": "135"
    },
    "2384": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6598,
        6637
      ],
      "op": "SWAP1",
      "path": "135"
    },
    "2385": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6598,
        6637
      ],
      "op": "PUSH32",
      "path": "135",
      "value": "0x50546E66E5F44D728365DC3908C63BC5CFEEAB470722C1677E3073A6AC294AA1"
    },
    "2418": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6598,
        6637
      ],
      "op": "SWAP1",
      "path": "135"
    },
    "2419": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6598,
        6637
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0x0"
    },
    "2421": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6598,
        6637
      ],
      "op": "SWAP1",
      "path": "135"
    },
    "2422": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6598,
        6637
      ],
      "op": "LOG3",
      "path": "135"
    },
    "2423": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6241,
        6644
      ],
      "op": "POP",
      "path": "135"
    },
    "2424": {
      "fn": "ERC777.revokeOperator",
      "jump": "o",
      "offset": [
        6241,
        6644
      ],
      "op": "JUMP",
      "path": "135"
    },
    "2425": {
      "fn": "ERC777.operatorBurn",
      "offset": [
        7446,
        7771
      ],
      "op": "JUMPDEST",
      "path": "135"
    },
    "2426": {
      "fn": "ERC777.operatorBurn",
      "offset": [
        7627,
        7663
      ],
      "op": "PUSH2",
      "path": "135",
      "statement": 35,
      "value": "0x983"
    },
    "2429": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "142"
    },
    "2430": {
      "fn": "ERC777.operatorBurn",
      "offset": [
        7655,
        7662
      ],
      "op": "DUP6",
      "path": "135"
    },
    "2431": {
      "fn": "ERC777.operatorBurn",
      "offset": [
        7627,
        7640
      ],
      "op": "PUSH2",
      "path": "135",
      "value": "0x7BB"
    },
    "2434": {
      "fn": "ERC777.operatorBurn",
      "jump": "i",
      "offset": [
        7627,
        7663
      ],
      "op": "JUMP",
      "path": "135"
    },
    "2435": {
      "branch": 72,
      "fn": "ERC777.operatorBurn",
      "offset": [
        7627,
        7663
      ],
      "op": "JUMPDEST",
      "path": "135"
    },
    "2436": {
      "fn": "ERC777.operatorBurn",
      "offset": [
        7619,
        7712
      ],
      "op": "PUSH2",
      "path": "135",
      "value": "0x99F"
    },
    "2439": {
      "branch": 72,
      "fn": "ERC777.operatorBurn",
      "offset": [
        7619,
        7712
      ],
      "op": "JUMPI",
      "path": "135"
    },
    "2440": {
      "fn": "ERC777.operatorBurn",
      "offset": [
        7619,
        7712
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0x40"
    },
    "2442": {
      "fn": "ERC777.operatorBurn",
      "offset": [
        7619,
        7712
      ],
      "op": "MLOAD",
      "path": "135"
    },
    "2443": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2447": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2449": {
      "op": "SHL"
    },
    "2450": {
      "fn": "ERC777.operatorBurn",
      "offset": [
        7619,
        7712
      ],
      "op": "DUP2",
      "path": "135"
    },
    "2451": {
      "fn": "ERC777.operatorBurn",
      "offset": [
        7619,
        7712
      ],
      "op": "MSTORE",
      "path": "135"
    },
    "2452": {
      "fn": "ERC777.operatorBurn",
      "offset": [
        7619,
        7712
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0x4"
    },
    "2454": {
      "fn": "ERC777.operatorBurn",
      "offset": [
        7619,
        7712
      ],
      "op": "ADD",
      "path": "135"
    },
    "2455": {
      "fn": "ERC777.operatorBurn",
      "offset": [
        7619,
        7712
      ],
      "op": "PUSH2",
      "path": "135",
      "value": "0x3DB"
    },
    "2458": {
      "fn": "ERC777.operatorBurn",
      "offset": [
        7619,
        7712
      ],
      "op": "SWAP1",
      "path": "135"
    },
    "2459": {
      "fn": "ERC777.operatorBurn",
      "offset": [
        7619,
        7712
      ],
      "op": "PUSH2",
      "path": "135",
      "value": "0x166B"
    },
    "2462": {
      "fn": "ERC777.operatorBurn",
      "jump": "i",
      "offset": [
        7619,
        7712
      ],
      "op": "JUMP",
      "path": "135"
    },
    "2463": {
      "fn": "ERC777.operatorBurn",
      "offset": [
        7619,
        7712
      ],
      "op": "JUMPDEST",
      "path": "135"
    },
    "2464": {
      "fn": "ERC777.operatorBurn",
      "offset": [
        7722,
        7764
      ],
      "op": "PUSH2",
      "path": "135",
      "statement": 36,
      "value": "0x9AB"
    },
    "2467": {
      "fn": "ERC777.operatorBurn",
      "offset": [
        7728,
        7735
      ],
      "op": "DUP5",
      "path": "135"
    },
    "2468": {
      "fn": "ERC777.operatorBurn",
      "offset": [
        7737,
        7743
      ],
      "op": "DUP5",
      "path": "135"
    },
    "2469": {
      "fn": "ERC777.operatorBurn",
      "offset": [
        7745,
        7749
      ],
      "op": "DUP5",
      "path": "135"
    },
    "2470": {
      "fn": "ERC777.operatorBurn",
      "offset": [
        7751,
        7763
      ],
      "op": "DUP5",
      "path": "135"
    },
    "2471": {
      "fn": "ERC777.operatorBurn",
      "offset": [
        7722,
        7727
      ],
      "op": "PUSH2",
      "path": "135",
      "value": "0x102D"
    },
    "2474": {
      "fn": "ERC777.operatorBurn",
      "jump": "i",
      "offset": [
        7722,
        7764
      ],
      "op": "JUMP",
      "path": "135"
    },
    "2475": {
      "fn": "ERC777.operatorBurn",
      "offset": [
        7722,
        7764
      ],
      "op": "JUMPDEST",
      "path": "135"
    },
    "2476": {
      "fn": "ERC777.operatorBurn",
      "offset": [
        7446,
        7771
      ],
      "op": "POP",
      "path": "135"
    },
    "2477": {
      "fn": "ERC777.operatorBurn",
      "offset": [
        7446,
        7771
      ],
      "op": "POP",
      "path": "135"
    },
    "2478": {
      "fn": "ERC777.operatorBurn",
      "offset": [
        7446,
        7771
      ],
      "op": "POP",
      "path": "135"
    },
    "2479": {
      "fn": "ERC777.operatorBurn",
      "offset": [
        7446,
        7771
      ],
      "op": "POP",
      "path": "135"
    },
    "2480": {
      "fn": "ERC777.operatorBurn",
      "jump": "o",
      "offset": [
        7446,
        7771
      ],
      "op": "JUMP",
      "path": "135"
    },
    "2481": {
      "fn": "ERC777.burn",
      "offset": [
        5197,
        5324
      ],
      "op": "JUMPDEST",
      "path": "135"
    },
    "2482": {
      "fn": "ERC777.burn",
      "offset": [
        5280,
        5317
      ],
      "op": "PUSH2",
      "path": "135",
      "statement": 37,
      "value": "0x9CC"
    },
    "2485": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "142"
    },
    "2486": {
      "fn": "ERC777.burn",
      "offset": [
        5300,
        5306
      ],
      "op": "DUP4",
      "path": "135"
    },
    "2487": {
      "fn": "ERC777.burn",
      "offset": [
        5308,
        5312
      ],
      "op": "DUP4",
      "path": "135"
    },
    "2488": {
      "fn": "ERC777.burn",
      "offset": [
        5280,
        5317
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0x40"
    },
    "2490": {
      "fn": "ERC777.burn",
      "offset": [
        5280,
        5317
      ],
      "op": "MLOAD",
      "path": "135"
    },
    "2491": {
      "fn": "ERC777.burn",
      "offset": [
        5280,
        5317
      ],
      "op": "DUP1",
      "path": "135"
    },
    "2492": {
      "fn": "ERC777.burn",
      "offset": [
        5280,
        5317
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0x20"
    },
    "2494": {
      "fn": "ERC777.burn",
      "offset": [
        5280,
        5317
      ],
      "op": "ADD",
      "path": "135"
    },
    "2495": {
      "fn": "ERC777.burn",
      "offset": [
        5280,
        5317
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0x40"
    },
    "2497": {
      "fn": "ERC777.burn",
      "offset": [
        5280,
        5317
      ],
      "op": "MSTORE",
      "path": "135"
    },
    "2498": {
      "fn": "ERC777.burn",
      "offset": [
        5280,
        5317
      ],
      "op": "DUP1",
      "path": "135"
    },
    "2499": {
      "fn": "ERC777.burn",
      "offset": [
        5280,
        5317
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0x0"
    },
    "2501": {
      "fn": "ERC777.burn",
      "offset": [
        5280,
        5317
      ],
      "op": "DUP2",
      "path": "135"
    },
    "2502": {
      "fn": "ERC777.burn",
      "offset": [
        5280,
        5317
      ],
      "op": "MSTORE",
      "path": "135"
    },
    "2503": {
      "fn": "ERC777.burn",
      "offset": [
        5280,
        5317
      ],
      "op": "POP",
      "path": "135"
    },
    "2504": {
      "fn": "ERC777.burn",
      "offset": [
        5280,
        5285
      ],
      "op": "PUSH2",
      "path": "135",
      "value": "0x102D"
    },
    "2507": {
      "fn": "ERC777.burn",
      "jump": "i",
      "offset": [
        5280,
        5317
      ],
      "op": "JUMP",
      "path": "135"
    },
    "2508": {
      "fn": "ERC777.burn",
      "offset": [
        5280,
        5317
      ],
      "op": "JUMPDEST",
      "path": "135"
    },
    "2509": {
      "fn": "ERC777.burn",
      "offset": [
        5197,
        5324
      ],
      "op": "POP",
      "path": "135"
    },
    "2510": {
      "fn": "ERC777.burn",
      "offset": [
        5197,
        5324
      ],
      "op": "POP",
      "path": "135"
    },
    "2511": {
      "fn": "ERC777.burn",
      "jump": "o",
      "offset": [
        5197,
        5324
      ],
      "op": "JUMP",
      "path": "135"
    },
    "2512": {
      "fn": "ERC777._approve",
      "offset": [
        14813,
        15178
      ],
      "op": "JUMPDEST",
      "path": "135"
    },
    "2513": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2515": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2517": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2519": {
      "op": "SHL"
    },
    "2520": {
      "op": "SUB"
    },
    "2521": {
      "fn": "ERC777._approve",
      "offset": [
        14936,
        14956
      ],
      "op": "DUP4",
      "path": "135",
      "statement": 38
    },
    "2522": {
      "branch": 73,
      "fn": "ERC777._approve",
      "offset": [
        14936,
        14956
      ],
      "op": "AND",
      "path": "135"
    },
    "2523": {
      "fn": "ERC777._approve",
      "offset": [
        14928,
        14998
      ],
      "op": "PUSH2",
      "path": "135",
      "value": "0xA34"
    },
    "2526": {
      "branch": 73,
      "fn": "ERC777._approve",
      "offset": [
        14928,
        14998
      ],
      "op": "JUMPI",
      "path": "135"
    },
    "2527": {
      "fn": "ERC777._approve",
      "offset": [
        14928,
        14998
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0x40"
    },
    "2529": {
      "fn": "ERC777._approve",
      "offset": [
        14928,
        14998
      ],
      "op": "MLOAD",
      "path": "135"
    },
    "2530": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2534": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2536": {
      "op": "SHL"
    },
    "2537": {
      "fn": "ERC777._approve",
      "offset": [
        14928,
        14998
      ],
      "op": "DUP2",
      "path": "135"
    },
    "2538": {
      "fn": "ERC777._approve",
      "offset": [
        14928,
        14998
      ],
      "op": "MSTORE",
      "path": "135"
    },
    "2539": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2541": {
      "fn": "ERC777._approve",
      "offset": [
        14928,
        14998
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0x4"
    },
    "2543": {
      "fn": "ERC777._approve",
      "offset": [
        14928,
        14998
      ],
      "op": "DUP3",
      "path": "135"
    },
    "2544": {
      "fn": "ERC777._approve",
      "offset": [
        14928,
        14998
      ],
      "op": "ADD",
      "path": "135"
    },
    "2545": {
      "op": "MSTORE"
    },
    "2546": {
      "op": "PUSH1",
      "value": "0x25"
    },
    "2548": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2550": {
      "op": "DUP3"
    },
    "2551": {
      "op": "ADD"
    },
    "2552": {
      "op": "MSTORE"
    },
    "2553": {
      "op": "PUSH32",
      "value": "0x4552433737373A20617070726F76652066726F6D20746865207A65726F206164"
    },
    "2586": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2588": {
      "op": "DUP3"
    },
    "2589": {
      "op": "ADD"
    },
    "2590": {
      "op": "MSTORE"
    },
    "2591": {
      "op": "PUSH5",
      "value": "0x6472657373"
    },
    "2597": {
      "op": "PUSH1",
      "value": "0xD8"
    },
    "2599": {
      "op": "SHL"
    },
    "2600": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2602": {
      "op": "DUP3"
    },
    "2603": {
      "op": "ADD"
    },
    "2604": {
      "op": "MSTORE"
    },
    "2605": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2607": {
      "op": "ADD"
    },
    "2608": {
      "fn": "ERC777._approve",
      "offset": [
        14928,
        14998
      ],
      "op": "PUSH2",
      "path": "135",
      "value": "0x3DB"
    },
    "2611": {
      "op": "JUMP"
    },
    "2612": {
      "fn": "ERC777._approve",
      "offset": [
        14928,
        14998
      ],
      "op": "JUMPDEST",
      "path": "135"
    },
    "2613": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2615": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2617": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2619": {
      "op": "SHL"
    },
    "2620": {
      "op": "SUB"
    },
    "2621": {
      "fn": "ERC777._approve",
      "offset": [
        15016,
        15037
      ],
      "op": "DUP3",
      "path": "135",
      "statement": 39
    },
    "2622": {
      "branch": 74,
      "fn": "ERC777._approve",
      "offset": [
        15016,
        15037
      ],
      "op": "AND",
      "path": "135"
    },
    "2623": {
      "fn": "ERC777._approve",
      "offset": [
        15008,
        15077
      ],
      "op": "PUSH2",
      "path": "135",
      "value": "0xA96"
    },
    "2626": {
      "branch": 74,
      "fn": "ERC777._approve",
      "offset": [
        15008,
        15077
      ],
      "op": "JUMPI",
      "path": "135"
    },
    "2627": {
      "fn": "ERC777._approve",
      "offset": [
        15008,
        15077
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0x40"
    },
    "2629": {
      "fn": "ERC777._approve",
      "offset": [
        15008,
        15077
      ],
      "op": "MLOAD",
      "path": "135"
    },
    "2630": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2634": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2636": {
      "op": "SHL"
    },
    "2637": {
      "fn": "ERC777._approve",
      "offset": [
        15008,
        15077
      ],
      "op": "DUP2",
      "path": "135"
    },
    "2638": {
      "fn": "ERC777._approve",
      "offset": [
        15008,
        15077
      ],
      "op": "MSTORE",
      "path": "135"
    },
    "2639": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2641": {
      "fn": "ERC777._approve",
      "offset": [
        15008,
        15077
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0x4"
    },
    "2643": {
      "fn": "ERC777._approve",
      "offset": [
        15008,
        15077
      ],
      "op": "DUP3",
      "path": "135"
    },
    "2644": {
      "fn": "ERC777._approve",
      "offset": [
        15008,
        15077
      ],
      "op": "ADD",
      "path": "135"
    },
    "2645": {
      "op": "MSTORE"
    },
    "2646": {
      "op": "PUSH1",
      "value": "0x23"
    },
    "2648": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2650": {
      "op": "DUP3"
    },
    "2651": {
      "op": "ADD"
    },
    "2652": {
      "op": "MSTORE"
    },
    "2653": {
      "op": "PUSH32",
      "value": "0x4552433737373A20617070726F766520746F20746865207A65726F2061646472"
    },
    "2686": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2688": {
      "op": "DUP3"
    },
    "2689": {
      "op": "ADD"
    },
    "2690": {
      "op": "MSTORE"
    },
    "2691": {
      "op": "PUSH3",
      "value": "0x657373"
    },
    "2695": {
      "op": "PUSH1",
      "value": "0xE8"
    },
    "2697": {
      "op": "SHL"
    },
    "2698": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2700": {
      "op": "DUP3"
    },
    "2701": {
      "op": "ADD"
    },
    "2702": {
      "op": "MSTORE"
    },
    "2703": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2705": {
      "op": "ADD"
    },
    "2706": {
      "fn": "ERC777._approve",
      "offset": [
        15008,
        15077
      ],
      "op": "PUSH2",
      "path": "135",
      "value": "0x3DB"
    },
    "2709": {
      "op": "JUMP"
    },
    "2710": {
      "fn": "ERC777._approve",
      "offset": [
        15008,
        15077
      ],
      "op": "JUMPDEST",
      "path": "135"
    },
    "2711": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2713": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2715": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2717": {
      "op": "SHL"
    },
    "2718": {
      "op": "SUB"
    },
    "2719": {
      "fn": "ERC777._approve",
      "offset": [
        15088,
        15107
      ],
      "op": "DUP4",
      "path": "135",
      "statement": 40
    },
    "2720": {
      "fn": "ERC777._approve",
      "offset": [
        15088,
        15107
      ],
      "op": "DUP2",
      "path": "135"
    },
    "2721": {
      "fn": "ERC777._approve",
      "offset": [
        15088,
        15107
      ],
      "op": "AND",
      "path": "135"
    },
    "2722": {
      "fn": "ERC777._approve",
      "offset": [
        15088,
        15107
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0x0"
    },
    "2724": {
      "fn": "ERC777._approve",
      "offset": [
        15088,
        15107
      ],
      "op": "DUP2",
      "path": "135"
    },
    "2725": {
      "fn": "ERC777._approve",
      "offset": [
        15088,
        15107
      ],
      "op": "DUP2",
      "path": "135"
    },
    "2726": {
      "fn": "ERC777._approve",
      "offset": [
        15088,
        15107
      ],
      "op": "MSTORE",
      "path": "135"
    },
    "2727": {
      "fn": "ERC777._approve",
      "offset": [
        15088,
        15099
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0x8"
    },
    "2729": {
      "fn": "ERC777._approve",
      "offset": [
        15088,
        15107
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0x20"
    },
    "2731": {
      "fn": "ERC777._approve",
      "offset": [
        15088,
        15107
      ],
      "op": "SWAP1",
      "path": "135"
    },
    "2732": {
      "fn": "ERC777._approve",
      "offset": [
        15088,
        15107
      ],
      "op": "DUP2",
      "path": "135"
    },
    "2733": {
      "fn": "ERC777._approve",
      "offset": [
        15088,
        15107
      ],
      "op": "MSTORE",
      "path": "135"
    },
    "2734": {
      "fn": "ERC777._approve",
      "offset": [
        15088,
        15107
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0x40"
    },
    "2736": {
      "fn": "ERC777._approve",
      "offset": [
        15088,
        15107
      ],
      "op": "DUP1",
      "path": "135"
    },
    "2737": {
      "fn": "ERC777._approve",
      "offset": [
        15088,
        15107
      ],
      "op": "DUP4",
      "path": "135"
    },
    "2738": {
      "fn": "ERC777._approve",
      "offset": [
        15088,
        15107
      ],
      "op": "KECCAK256",
      "path": "135"
    },
    "2739": {
      "fn": "ERC777._approve",
      "offset": [
        15088,
        15116
      ],
      "op": "SWAP5",
      "path": "135"
    },
    "2740": {
      "fn": "ERC777._approve",
      "offset": [
        15088,
        15116
      ],
      "op": "DUP8",
      "path": "135"
    },
    "2741": {
      "fn": "ERC777._approve",
      "offset": [
        15088,
        15116
      ],
      "op": "AND",
      "path": "135"
    },
    "2742": {
      "fn": "ERC777._approve",
      "offset": [
        15088,
        15116
      ],
      "op": "DUP1",
      "path": "135"
    },
    "2743": {
      "fn": "ERC777._approve",
      "offset": [
        15088,
        15116
      ],
      "op": "DUP5",
      "path": "135"
    },
    "2744": {
      "fn": "ERC777._approve",
      "offset": [
        15088,
        15116
      ],
      "op": "MSTORE",
      "path": "135"
    },
    "2745": {
      "fn": "ERC777._approve",
      "offset": [
        15088,
        15116
      ],
      "op": "SWAP5",
      "path": "135"
    },
    "2746": {
      "fn": "ERC777._approve",
      "offset": [
        15088,
        15116
      ],
      "op": "DUP3",
      "path": "135"
    },
    "2747": {
      "fn": "ERC777._approve",
      "offset": [
        15088,
        15116
      ],
      "op": "MSTORE",
      "path": "135"
    },
    "2748": {
      "fn": "ERC777._approve",
      "offset": [
        15088,
        15116
      ],
      "op": "SWAP2",
      "path": "135"
    },
    "2749": {
      "fn": "ERC777._approve",
      "offset": [
        15088,
        15116
      ],
      "op": "DUP3",
      "path": "135"
    },
    "2750": {
      "fn": "ERC777._approve",
      "offset": [
        15088,
        15116
      ],
      "op": "SWAP1",
      "path": "135"
    },
    "2751": {
      "fn": "ERC777._approve",
      "offset": [
        15088,
        15116
      ],
      "op": "KECCAK256",
      "path": "135"
    },
    "2752": {
      "fn": "ERC777._approve",
      "offset": [
        15088,
        15124
      ],
      "op": "DUP6",
      "path": "135"
    },
    "2753": {
      "fn": "ERC777._approve",
      "offset": [
        15088,
        15124
      ],
      "op": "SWAP1",
      "path": "135"
    },
    "2754": {
      "fn": "ERC777._approve",
      "offset": [
        15088,
        15124
      ],
      "op": "SSTORE",
      "path": "135"
    },
    "2755": {
      "fn": "ERC777._approve",
      "offset": [
        15139,
        15171
      ],
      "op": "SWAP1",
      "path": "135",
      "statement": 41
    },
    "2756": {
      "fn": "ERC777._approve",
      "offset": [
        15139,
        15171
      ],
      "op": "MLOAD",
      "path": "135"
    },
    "2757": {
      "op": "DUP5"
    },
    "2758": {
      "op": "DUP2"
    },
    "2759": {
      "op": "MSTORE"
    },
    "2760": {
      "fn": "ERC777._approve",
      "offset": [
        15139,
        15171
      ],
      "op": "PUSH32",
      "path": "135",
      "value": "0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
    },
    "2793": {
      "fn": "ERC777._approve",
      "offset": [
        15139,
        15171
      ],
      "op": "SWAP2",
      "path": "135"
    },
    "2794": {
      "op": "ADD"
    },
    "2795": {
      "fn": "ERC777._approve",
      "offset": [
        15139,
        15171
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0x40"
    },
    "2797": {
      "fn": "ERC777._approve",
      "offset": [
        15139,
        15171
      ],
      "op": "MLOAD",
      "path": "135"
    },
    "2798": {
      "fn": "ERC777._approve",
      "offset": [
        15139,
        15171
      ],
      "op": "DUP1",
      "path": "135"
    },
    "2799": {
      "fn": "ERC777._approve",
      "offset": [
        15139,
        15171
      ],
      "op": "SWAP2",
      "path": "135"
    },
    "2800": {
      "fn": "ERC777._approve",
      "offset": [
        15139,
        15171
      ],
      "op": "SUB",
      "path": "135"
    },
    "2801": {
      "fn": "ERC777._approve",
      "offset": [
        15139,
        15171
      ],
      "op": "SWAP1",
      "path": "135"
    },
    "2802": {
      "fn": "ERC777._approve",
      "offset": [
        15139,
        15171
      ],
      "op": "LOG3",
      "path": "135"
    },
    "2803": {
      "fn": "ERC777._approve",
      "offset": [
        14813,
        15178
      ],
      "op": "POP",
      "path": "135"
    },
    "2804": {
      "fn": "ERC777._approve",
      "offset": [
        14813,
        15178
      ],
      "op": "POP",
      "path": "135"
    },
    "2805": {
      "fn": "ERC777._approve",
      "offset": [
        14813,
        15178
      ],
      "op": "POP",
      "path": "135"
    },
    "2806": {
      "fn": "ERC777._approve",
      "jump": "o",
      "offset": [
        14813,
        15178
      ],
      "op": "JUMP",
      "path": "135"
    },
    "2807": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15651,
        16123
      ],
      "op": "JUMPDEST",
      "path": "135"
    },
    "2808": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15882,
        15960
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0x40"
    },
    "2810": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15882,
        15960
      ],
      "op": "MLOAD",
      "path": "135"
    },
    "2811": {
      "op": "PUSH4",
      "value": "0x555DDC65"
    },
    "2816": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "2818": {
      "op": "SHL"
    },
    "2819": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15882,
        15960
      ],
      "op": "DUP2",
      "path": "135"
    },
    "2820": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15882,
        15960
      ],
      "op": "MSTORE",
      "path": "135"
    },
    "2821": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2823": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2825": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2827": {
      "op": "SHL"
    },
    "2828": {
      "op": "SUB"
    },
    "2829": {
      "op": "DUP7"
    },
    "2830": {
      "op": "AND"
    },
    "2831": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15882,
        15960
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0x4"
    },
    "2833": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15882,
        15960
      ],
      "op": "DUP3",
      "path": "135"
    },
    "2834": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15882,
        15960
      ],
      "op": "ADD",
      "path": "135"
    },
    "2835": {
      "op": "MSTORE"
    },
    "2836": {
      "offset": [
        1417,
        1448
      ],
      "op": "PUSH32",
      "path": "135",
      "value": "0x29DDB589B1FB5FC7CF394961C1ADF5F8C6454761ADF795E67FE149F658ABE895"
    },
    "2869": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2871": {
      "op": "DUP3"
    },
    "2872": {
      "op": "ADD"
    },
    "2873": {
      "op": "MSTORE"
    },
    "2874": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15860,
        15879
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0x0"
    },
    "2876": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15860,
        15879
      ],
      "op": "SWAP1",
      "path": "135"
    },
    "2877": {
      "offset": [
        1168,
        1210
      ],
      "op": "PUSH20",
      "path": "135",
      "value": "0x1820A4B7618BDE71DCE8CDC73AAB6C95905FAD24"
    },
    "2898": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        1168,
        1210
      ],
      "op": "SWAP1",
      "path": "135"
    },
    "2899": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15882,
        15923
      ],
      "op": "PUSH4",
      "path": "135",
      "value": "0xAABBB8CA"
    },
    "2904": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15882,
        15923
      ],
      "op": "SWAP1",
      "path": "135"
    },
    "2905": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2907": {
      "op": "ADD"
    },
    "2908": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15882,
        15960
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0x20"
    },
    "2910": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15882,
        15960
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0x40"
    },
    "2912": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15882,
        15960
      ],
      "op": "MLOAD",
      "path": "135"
    },
    "2913": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15882,
        15960
      ],
      "op": "DUP1",
      "path": "135"
    },
    "2914": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15882,
        15960
      ],
      "op": "DUP4",
      "path": "135"
    },
    "2915": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15882,
        15960
      ],
      "op": "SUB",
      "path": "135"
    },
    "2916": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15882,
        15960
      ],
      "op": "DUP2",
      "path": "135"
    },
    "2917": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15882,
        15960
      ],
      "op": "DUP7",
      "path": "135"
    },
    "2918": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15882,
        15960
      ],
      "op": "GAS",
      "path": "135"
    },
    "2919": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15882,
        15960
      ],
      "op": "STATICCALL",
      "path": "135"
    },
    "2920": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15882,
        15960
      ],
      "op": "ISZERO",
      "path": "135"
    },
    "2921": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15882,
        15960
      ],
      "op": "DUP1",
      "path": "135"
    },
    "2922": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15882,
        15960
      ],
      "op": "ISZERO",
      "path": "135"
    },
    "2923": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15882,
        15960
      ],
      "op": "PUSH2",
      "path": "135",
      "value": "0xB78"
    },
    "2926": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15882,
        15960
      ],
      "op": "JUMPI",
      "path": "135"
    },
    "2927": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15882,
        15960
      ],
      "op": "RETURNDATASIZE",
      "path": "135"
    },
    "2928": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15882,
        15960
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0x0"
    },
    "2930": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15882,
        15960
      ],
      "op": "DUP1",
      "path": "135"
    },
    "2931": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15882,
        15960
      ],
      "op": "RETURNDATACOPY",
      "path": "135"
    },
    "2932": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15882,
        15960
      ],
      "op": "RETURNDATASIZE",
      "path": "135"
    },
    "2933": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15882,
        15960
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0x0"
    },
    "2935": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15882,
        15960
      ],
      "op": "REVERT",
      "path": "135"
    },
    "2936": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15882,
        15960
      ],
      "op": "JUMPDEST",
      "path": "135"
    },
    "2937": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15882,
        15960
      ],
      "op": "POP",
      "path": "135"
    },
    "2938": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15882,
        15960
      ],
      "op": "POP",
      "path": "135"
    },
    "2939": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15882,
        15960
      ],
      "op": "POP",
      "path": "135"
    },
    "2940": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15882,
        15960
      ],
      "op": "POP",
      "path": "135"
    },
    "2941": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15882,
        15960
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0x40"
    },
    "2943": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15882,
        15960
      ],
      "op": "MLOAD",
      "path": "135"
    },
    "2944": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15882,
        15960
      ],
      "op": "RETURNDATASIZE",
      "path": "135"
    },
    "2945": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15882,
        15960
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0x1F"
    },
    "2947": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15882,
        15960
      ],
      "op": "NOT",
      "path": "135"
    },
    "2948": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15882,
        15960
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0x1F"
    },
    "2950": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15882,
        15960
      ],
      "op": "DUP3",
      "path": "135"
    },
    "2951": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15882,
        15960
      ],
      "op": "ADD",
      "path": "135"
    },
    "2952": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15882,
        15960
      ],
      "op": "AND",
      "path": "135"
    },
    "2953": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15882,
        15960
      ],
      "op": "DUP3",
      "path": "135"
    },
    "2954": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15882,
        15960
      ],
      "op": "ADD",
      "path": "135"
    },
    "2955": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15882,
        15960
      ],
      "op": "DUP1",
      "path": "135"
    },
    "2956": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15882,
        15960
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0x40"
    },
    "2958": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15882,
        15960
      ],
      "op": "MSTORE",
      "path": "135"
    },
    "2959": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15882,
        15960
      ],
      "op": "POP",
      "path": "135"
    },
    "2960": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15882,
        15960
      ],
      "op": "DUP2",
      "path": "135"
    },
    "2961": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15882,
        15960
      ],
      "op": "ADD",
      "path": "135"
    },
    "2962": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15882,
        15960
      ],
      "op": "SWAP1",
      "path": "135"
    },
    "2963": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15882,
        15960
      ],
      "op": "PUSH2",
      "path": "135",
      "value": "0xB9C"
    },
    "2966": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15882,
        15960
      ],
      "op": "SWAP2",
      "path": "135"
    },
    "2967": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15882,
        15960
      ],
      "op": "SWAP1",
      "path": "135"
    },
    "2968": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15882,
        15960
      ],
      "op": "PUSH2",
      "path": "135",
      "value": "0x16B7"
    },
    "2971": {
      "fn": "ERC777._callTokensToSend",
      "jump": "i",
      "offset": [
        15882,
        15960
      ],
      "op": "JUMP",
      "path": "135"
    },
    "2972": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15882,
        15960
      ],
      "op": "JUMPDEST",
      "path": "135"
    },
    "2973": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15860,
        15960
      ],
      "op": "SWAP1",
      "path": "135"
    },
    "2974": {
      "op": "POP"
    },
    "2975": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2977": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2979": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2981": {
      "op": "SHL"
    },
    "2982": {
      "op": "SUB"
    },
    "2983": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15974,
        15999
      ],
      "op": "DUP2",
      "path": "135"
    },
    "2984": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15974,
        15999
      ],
      "op": "AND",
      "path": "135"
    },
    "2985": {
      "branch": 75,
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15974,
        15999
      ],
      "op": "ISZERO",
      "path": "135"
    },
    "2986": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15970,
        16117
      ],
      "op": "PUSH2",
      "path": "135",
      "value": "0xC16"
    },
    "2989": {
      "branch": 75,
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15970,
        16117
      ],
      "op": "JUMPI",
      "path": "135"
    },
    "2990": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16015,
        16106
      ],
      "op": "PUSH1",
      "path": "135",
      "statement": 42,
      "value": "0x40"
    },
    "2992": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16015,
        16106
      ],
      "op": "MLOAD",
      "path": "135"
    },
    "2993": {
      "op": "PUSH4",
      "value": "0x3AD5CBC1"
    },
    "2998": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "3000": {
      "op": "SHL"
    },
    "3001": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16015,
        16106
      ],
      "op": "DUP2",
      "path": "135"
    },
    "3002": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16015,
        16106
      ],
      "op": "MSTORE",
      "path": "135"
    },
    "3003": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3005": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3007": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3009": {
      "op": "SHL"
    },
    "3010": {
      "op": "SUB"
    },
    "3011": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16015,
        16054
      ],
      "op": "DUP3",
      "path": "135"
    },
    "3012": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16015,
        16054
      ],
      "op": "AND",
      "path": "135"
    },
    "3013": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16015,
        16054
      ],
      "op": "SWAP1",
      "path": "135"
    },
    "3014": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16015,
        16054
      ],
      "op": "PUSH4",
      "path": "135",
      "value": "0x75AB9782"
    },
    "3019": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16015,
        16054
      ],
      "op": "SWAP1",
      "path": "135"
    },
    "3020": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16015,
        16106
      ],
      "op": "PUSH2",
      "path": "135",
      "value": "0xBE3"
    },
    "3023": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16015,
        16106
      ],
      "op": "SWAP1",
      "path": "135"
    },
    "3024": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16055,
        16063
      ],
      "op": "DUP11",
      "path": "135"
    },
    "3025": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16055,
        16063
      ],
      "op": "SWAP1",
      "path": "135"
    },
    "3026": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16065,
        16069
      ],
      "op": "DUP11",
      "path": "135"
    },
    "3027": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16065,
        16069
      ],
      "op": "SWAP1",
      "path": "135"
    },
    "3028": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16071,
        16073
      ],
      "op": "DUP11",
      "path": "135"
    },
    "3029": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16071,
        16073
      ],
      "op": "SWAP1",
      "path": "135"
    },
    "3030": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16075,
        16081
      ],
      "op": "DUP11",
      "path": "135"
    },
    "3031": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16075,
        16081
      ],
      "op": "SWAP1",
      "path": "135"
    },
    "3032": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16083,
        16091
      ],
      "op": "DUP11",
      "path": "135"
    },
    "3033": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16083,
        16091
      ],
      "op": "SWAP1",
      "path": "135"
    },
    "3034": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16093,
        16105
      ],
      "op": "DUP11",
      "path": "135"
    },
    "3035": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16093,
        16105
      ],
      "op": "SWAP1",
      "path": "135"
    },
    "3036": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16015,
        16106
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0x4"
    },
    "3038": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16015,
        16106
      ],
      "op": "ADD",
      "path": "135"
    },
    "3039": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16015,
        16106
      ],
      "op": "PUSH2",
      "path": "135",
      "value": "0x16D4"
    },
    "3042": {
      "fn": "ERC777._callTokensToSend",
      "jump": "i",
      "offset": [
        16015,
        16106
      ],
      "op": "JUMP",
      "path": "135"
    },
    "3043": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16015,
        16106
      ],
      "op": "JUMPDEST",
      "path": "135"
    },
    "3044": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16015,
        16106
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0x0"
    },
    "3046": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16015,
        16106
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0x40"
    },
    "3048": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16015,
        16106
      ],
      "op": "MLOAD",
      "path": "135"
    },
    "3049": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16015,
        16106
      ],
      "op": "DUP1",
      "path": "135"
    },
    "3050": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16015,
        16106
      ],
      "op": "DUP4",
      "path": "135"
    },
    "3051": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16015,
        16106
      ],
      "op": "SUB",
      "path": "135"
    },
    "3052": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16015,
        16106
      ],
      "op": "DUP2",
      "path": "135"
    },
    "3053": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16015,
        16106
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0x0"
    },
    "3055": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16015,
        16106
      ],
      "op": "DUP8",
      "path": "135"
    },
    "3056": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16015,
        16106
      ],
      "op": "DUP1",
      "path": "135"
    },
    "3057": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16015,
        16106
      ],
      "op": "EXTCODESIZE",
      "path": "135"
    },
    "3058": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16015,
        16106
      ],
      "op": "ISZERO",
      "path": "135"
    },
    "3059": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16015,
        16106
      ],
      "op": "DUP1",
      "path": "135"
    },
    "3060": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16015,
        16106
      ],
      "op": "ISZERO",
      "path": "135"
    },
    "3061": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16015,
        16106
      ],
      "op": "PUSH2",
      "path": "135",
      "value": "0xBFD"
    },
    "3064": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16015,
        16106
      ],
      "op": "JUMPI",
      "path": "135"
    },
    "3065": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16015,
        16106
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0x0"
    },
    "3067": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16015,
        16106
      ],
      "op": "DUP1",
      "path": "135"
    },
    "3068": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16015,
        16106
      ],
      "op": "REVERT",
      "path": "135"
    },
    "3069": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16015,
        16106
      ],
      "op": "JUMPDEST",
      "path": "135"
    },
    "3070": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16015,
        16106
      ],
      "op": "POP",
      "path": "135"
    },
    "3071": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16015,
        16106
      ],
      "op": "GAS",
      "path": "135"
    },
    "3072": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16015,
        16106
      ],
      "op": "CALL",
      "path": "135"
    },
    "3073": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16015,
        16106
      ],
      "op": "ISZERO",
      "path": "135"
    },
    "3074": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16015,
        16106
      ],
      "op": "DUP1",
      "path": "135"
    },
    "3075": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16015,
        16106
      ],
      "op": "ISZERO",
      "path": "135"
    },
    "3076": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16015,
        16106
      ],
      "op": "PUSH2",
      "path": "135",
      "value": "0xC11"
    },
    "3079": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16015,
        16106
      ],
      "op": "JUMPI",
      "path": "135"
    },
    "3080": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16015,
        16106
      ],
      "op": "RETURNDATASIZE",
      "path": "135"
    },
    "3081": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16015,
        16106
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0x0"
    },
    "3083": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16015,
        16106
      ],
      "op": "DUP1",
      "path": "135"
    },
    "3084": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16015,
        16106
      ],
      "op": "RETURNDATACOPY",
      "path": "135"
    },
    "3085": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16015,
        16106
      ],
      "op": "RETURNDATASIZE",
      "path": "135"
    },
    "3086": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16015,
        16106
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0x0"
    },
    "3088": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16015,
        16106
      ],
      "op": "REVERT",
      "path": "135"
    },
    "3089": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16015,
        16106
      ],
      "op": "JUMPDEST",
      "path": "135"
    },
    "3090": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16015,
        16106
      ],
      "op": "POP",
      "path": "135"
    },
    "3091": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16015,
        16106
      ],
      "op": "POP",
      "path": "135"
    },
    "3092": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16015,
        16106
      ],
      "op": "POP",
      "path": "135"
    },
    "3093": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16015,
        16106
      ],
      "op": "POP",
      "path": "135"
    },
    "3094": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15970,
        16117
      ],
      "op": "JUMPDEST",
      "path": "135"
    },
    "3095": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15850,
        16123
      ],
      "op": "POP",
      "path": "135"
    },
    "3096": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15651,
        16123
      ],
      "op": "POP",
      "path": "135"
    },
    "3097": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15651,
        16123
      ],
      "op": "POP",
      "path": "135"
    },
    "3098": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15651,
        16123
      ],
      "op": "POP",
      "path": "135"
    },
    "3099": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15651,
        16123
      ],
      "op": "POP",
      "path": "135"
    },
    "3100": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15651,
        16123
      ],
      "op": "POP",
      "path": "135"
    },
    "3101": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15651,
        16123
      ],
      "op": "POP",
      "path": "135"
    },
    "3102": {
      "fn": "ERC777._callTokensToSend",
      "jump": "o",
      "offset": [
        15651,
        16123
      ],
      "op": "JUMP",
      "path": "135"
    },
    "3103": {
      "fn": "ERC777._move",
      "offset": [
        14064,
        14675
      ],
      "op": "JUMPDEST",
      "path": "135"
    },
    "3104": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3106": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3108": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3110": {
      "op": "SHL"
    },
    "3111": {
      "op": "SUB"
    },
    "3112": {
      "fn": "ERC777._move",
      "offset": [
        14342,
        14357
      ],
      "op": "DUP6",
      "path": "135"
    },
    "3113": {
      "fn": "ERC777._move",
      "offset": [
        14342,
        14357
      ],
      "op": "AND",
      "path": "135"
    },
    "3114": {
      "fn": "ERC777._move",
      "offset": [
        14320,
        14339
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0x0"
    },
    "3116": {
      "fn": "ERC777._move",
      "offset": [
        14342,
        14357
      ],
      "op": "SWAP1",
      "path": "135"
    },
    "3117": {
      "fn": "ERC777._move",
      "offset": [
        14342,
        14357
      ],
      "op": "DUP2",
      "path": "135"
    },
    "3118": {
      "fn": "ERC777._move",
      "offset": [
        14342,
        14357
      ],
      "op": "MSTORE",
      "path": "135"
    },
    "3119": {
      "fn": "ERC777._move",
      "offset": [
        14342,
        14357
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0x20"
    },
    "3121": {
      "fn": "ERC777._move",
      "offset": [
        14342,
        14357
      ],
      "op": "DUP2",
      "path": "135"
    },
    "3122": {
      "fn": "ERC777._move",
      "offset": [
        14342,
        14357
      ],
      "op": "SWAP1",
      "path": "135"
    },
    "3123": {
      "fn": "ERC777._move",
      "offset": [
        14342,
        14357
      ],
      "op": "MSTORE",
      "path": "135"
    },
    "3124": {
      "fn": "ERC777._move",
      "offset": [
        14342,
        14357
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0x40"
    },
    "3126": {
      "fn": "ERC777._move",
      "offset": [
        14342,
        14357
      ],
      "op": "SWAP1",
      "path": "135"
    },
    "3127": {
      "fn": "ERC777._move",
      "offset": [
        14342,
        14357
      ],
      "op": "KECCAK256",
      "path": "135"
    },
    "3128": {
      "fn": "ERC777._move",
      "offset": [
        14342,
        14357
      ],
      "op": "SLOAD",
      "path": "135"
    },
    "3129": {
      "fn": "ERC777._move",
      "offset": [
        14375,
        14396
      ],
      "op": "DUP4",
      "path": "135",
      "statement": 43
    },
    "3130": {
      "fn": "ERC777._move",
      "offset": [
        14375,
        14396
      ],
      "op": "DUP2",
      "path": "135"
    },
    "3131": {
      "fn": "ERC777._move",
      "offset": [
        14375,
        14396
      ],
      "op": "LT",
      "path": "135"
    },
    "3132": {
      "branch": 76,
      "fn": "ERC777._move",
      "offset": [
        14375,
        14396
      ],
      "op": "ISZERO",
      "path": "135"
    },
    "3133": {
      "fn": "ERC777._move",
      "offset": [
        14367,
        14440
      ],
      "op": "PUSH2",
      "path": "135",
      "value": "0xC98"
    },
    "3136": {
      "branch": 76,
      "fn": "ERC777._move",
      "offset": [
        14367,
        14440
      ],
      "op": "JUMPI",
      "path": "135"
    },
    "3137": {
      "fn": "ERC777._move",
      "offset": [
        14367,
        14440
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0x40"
    },
    "3139": {
      "fn": "ERC777._move",
      "offset": [
        14367,
        14440
      ],
      "op": "MLOAD",
      "path": "135"
    },
    "3140": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3144": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3146": {
      "op": "SHL"
    },
    "3147": {
      "fn": "ERC777._move",
      "offset": [
        14367,
        14440
      ],
      "op": "DUP2",
      "path": "135"
    },
    "3148": {
      "fn": "ERC777._move",
      "offset": [
        14367,
        14440
      ],
      "op": "MSTORE",
      "path": "135"
    },
    "3149": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3151": {
      "fn": "ERC777._move",
      "offset": [
        14367,
        14440
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0x4"
    },
    "3153": {
      "fn": "ERC777._move",
      "offset": [
        14367,
        14440
      ],
      "op": "DUP3",
      "path": "135"
    },
    "3154": {
      "fn": "ERC777._move",
      "offset": [
        14367,
        14440
      ],
      "op": "ADD",
      "path": "135"
    },
    "3155": {
      "op": "MSTORE"
    },
    "3156": {
      "op": "PUSH1",
      "value": "0x27"
    },
    "3158": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3160": {
      "op": "DUP3"
    },
    "3161": {
      "op": "ADD"
    },
    "3162": {
      "op": "MSTORE"
    },
    "3163": {
      "op": "PUSH32",
      "value": "0x4552433737373A207472616E7366657220616D6F756E74206578636565647320"
    },
    "3196": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3198": {
      "op": "DUP3"
    },
    "3199": {
      "op": "ADD"
    },
    "3200": {
      "op": "MSTORE"
    },
    "3201": {
      "op": "PUSH7",
      "value": "0x62616C616E6365"
    },
    "3209": {
      "op": "PUSH1",
      "value": "0xC8"
    },
    "3211": {
      "op": "SHL"
    },
    "3212": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3214": {
      "op": "DUP3"
    },
    "3215": {
      "op": "ADD"
    },
    "3216": {
      "op": "MSTORE"
    },
    "3217": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3219": {
      "op": "ADD"
    },
    "3220": {
      "fn": "ERC777._move",
      "offset": [
        14367,
        14440
      ],
      "op": "PUSH2",
      "path": "135",
      "value": "0x3DB"
    },
    "3223": {
      "op": "JUMP"
    },
    "3224": {
      "fn": "ERC777._move",
      "offset": [
        14367,
        14440
      ],
      "op": "JUMPDEST",
      "path": "135"
    },
    "3225": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3227": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3229": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3231": {
      "op": "SHL"
    },
    "3232": {
      "op": "SUB"
    },
    "3233": {
      "fn": "ERC777._move",
      "offset": [
        14474,
        14489
      ],
      "op": "DUP1",
      "path": "135",
      "statement": 44
    },
    "3234": {
      "fn": "ERC777._move",
      "offset": [
        14474,
        14489
      ],
      "op": "DUP8",
      "path": "135"
    },
    "3235": {
      "fn": "ERC777._move",
      "offset": [
        14474,
        14489
      ],
      "op": "AND",
      "path": "135"
    },
    "3236": {
      "fn": "ERC777._move",
      "offset": [
        14474,
        14483
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0x0"
    },
    "3238": {
      "fn": "ERC777._move",
      "offset": [
        14474,
        14489
      ],
      "op": "SWAP1",
      "path": "135"
    },
    "3239": {
      "fn": "ERC777._move",
      "offset": [
        14474,
        14489
      ],
      "op": "DUP2",
      "path": "135"
    },
    "3240": {
      "fn": "ERC777._move",
      "offset": [
        14474,
        14489
      ],
      "op": "MSTORE",
      "path": "135"
    },
    "3241": {
      "fn": "ERC777._move",
      "offset": [
        14474,
        14489
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0x20"
    },
    "3243": {
      "fn": "ERC777._move",
      "offset": [
        14474,
        14489
      ],
      "op": "DUP2",
      "path": "135"
    },
    "3244": {
      "fn": "ERC777._move",
      "offset": [
        14474,
        14489
      ],
      "op": "SWAP1",
      "path": "135"
    },
    "3245": {
      "fn": "ERC777._move",
      "offset": [
        14474,
        14489
      ],
      "op": "MSTORE",
      "path": "135"
    },
    "3246": {
      "fn": "ERC777._move",
      "offset": [
        14474,
        14489
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0x40"
    },
    "3248": {
      "fn": "ERC777._move",
      "offset": [
        14474,
        14489
      ],
      "op": "DUP1",
      "path": "135"
    },
    "3249": {
      "fn": "ERC777._move",
      "offset": [
        14474,
        14489
      ],
      "op": "DUP3",
      "path": "135"
    },
    "3250": {
      "fn": "ERC777._move",
      "offset": [
        14474,
        14489
      ],
      "op": "KECCAK256",
      "path": "135"
    },
    "3251": {
      "fn": "ERC777._move",
      "offset": [
        14492,
        14512
      ],
      "op": "DUP8",
      "path": "135"
    },
    "3252": {
      "fn": "ERC777._move",
      "offset": [
        14492,
        14512
      ],
      "op": "DUP6",
      "path": "135"
    },
    "3253": {
      "fn": "ERC777._move",
      "offset": [
        14492,
        14512
      ],
      "op": "SUB",
      "path": "135"
    },
    "3254": {
      "fn": "ERC777._move",
      "offset": [
        14474,
        14512
      ],
      "op": "SWAP1",
      "path": "135"
    },
    "3255": {
      "fn": "ERC777._move",
      "offset": [
        14474,
        14512
      ],
      "op": "SSTORE",
      "path": "135"
    },
    "3256": {
      "fn": "ERC777._move",
      "offset": [
        14532,
        14545
      ],
      "op": "SWAP2",
      "path": "135",
      "statement": 45
    },
    "3257": {
      "fn": "ERC777._move",
      "offset": [
        14532,
        14545
      ],
      "op": "DUP8",
      "path": "135"
    },
    "3258": {
      "fn": "ERC777._move",
      "offset": [
        14532,
        14545
      ],
      "op": "AND",
      "path": "135"
    },
    "3259": {
      "fn": "ERC777._move",
      "offset": [
        14532,
        14545
      ],
      "op": "DUP2",
      "path": "135"
    },
    "3260": {
      "fn": "ERC777._move",
      "offset": [
        14532,
        14545
      ],
      "op": "MSTORE",
      "path": "135"
    },
    "3261": {
      "fn": "ERC777._move",
      "offset": [
        14532,
        14545
      ],
      "op": "SWAP1",
      "path": "135"
    },
    "3262": {
      "fn": "ERC777._move",
      "offset": [
        14532,
        14545
      ],
      "op": "DUP2",
      "path": "135"
    },
    "3263": {
      "fn": "ERC777._move",
      "offset": [
        14532,
        14545
      ],
      "op": "KECCAK256",
      "path": "135"
    },
    "3264": {
      "fn": "ERC777._move",
      "offset": [
        14532,
        14555
      ],
      "op": "DUP1",
      "path": "135"
    },
    "3265": {
      "fn": "ERC777._move",
      "offset": [
        14532,
        14555
      ],
      "op": "SLOAD",
      "path": "135"
    },
    "3266": {
      "fn": "ERC777._move",
      "offset": [
        14506,
        14512
      ],
      "op": "DUP7",
      "path": "135"
    },
    "3267": {
      "fn": "ERC777._move",
      "offset": [
        14506,
        14512
      ],
      "op": "SWAP3",
      "path": "135"
    },
    "3268": {
      "fn": "ERC777._move",
      "offset": [
        14474,
        14483
      ],
      "op": "SWAP1",
      "path": "135"
    },
    "3269": {
      "fn": "ERC777._move",
      "offset": [
        14532,
        14555
      ],
      "op": "PUSH2",
      "path": "135",
      "value": "0xCCF"
    },
    "3272": {
      "fn": "ERC777._move",
      "offset": [
        14532,
        14555
      ],
      "op": "SWAP1",
      "path": "135"
    },
    "3273": {
      "fn": "ERC777._move",
      "offset": [
        14506,
        14512
      ],
      "op": "DUP5",
      "path": "135"
    },
    "3274": {
      "fn": "ERC777._move",
      "offset": [
        14506,
        14512
      ],
      "op": "SWAP1",
      "path": "135"
    },
    "3275": {
      "fn": "ERC777._move",
      "offset": [
        14532,
        14555
      ],
      "op": "PUSH2",
      "path": "135",
      "value": "0x172E"
    },
    "3278": {
      "fn": "ERC777._move",
      "jump": "i",
      "offset": [
        14532,
        14555
      ],
      "op": "JUMP",
      "path": "135"
    },
    "3279": {
      "fn": "ERC777._move",
      "offset": [
        14532,
        14555
      ],
      "op": "JUMPDEST",
      "path": "135"
    },
    "3280": {
      "fn": "ERC777._move",
      "offset": [
        14532,
        14555
      ],
      "op": "SWAP3",
      "path": "135"
    },
    "3281": {
      "fn": "ERC777._move",
      "offset": [
        14532,
        14555
      ],
      "op": "POP",
      "path": "135"
    },
    "3282": {
      "fn": "ERC777._move",
      "offset": [
        14532,
        14555
      ],
      "op": "POP",
      "path": "135"
    },
    "3283": {
      "fn": "ERC777._move",
      "offset": [
        14532,
        14555
      ],
      "op": "DUP2",
      "path": "135"
    },
    "3284": {
      "fn": "ERC777._move",
      "offset": [
        14532,
        14555
      ],
      "op": "SWAP1",
      "path": "135"
    },
    "3285": {
      "fn": "ERC777._move",
      "offset": [
        14532,
        14555
      ],
      "op": "SSTORE",
      "path": "135"
    },
    "3286": {
      "fn": "ERC777._move",
      "offset": [
        14532,
        14555
      ],
      "op": "POP",
      "path": "135"
    },
    "3287": {
      "fn": "ERC777._move",
      "offset": [
        14592,
        14594
      ],
      "op": "DUP5",
      "path": "135",
      "statement": 46
    },
    "3288": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3290": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3292": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3294": {
      "op": "SHL"
    },
    "3295": {
      "op": "SUB"
    },
    "3296": {
      "fn": "ERC777._move",
      "offset": [
        14571,
        14627
      ],
      "op": "AND",
      "path": "135"
    },
    "3297": {
      "fn": "ERC777._move",
      "offset": [
        14586,
        14590
      ],
      "op": "DUP7",
      "path": "135"
    },
    "3298": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3300": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3302": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3304": {
      "op": "SHL"
    },
    "3305": {
      "op": "SUB"
    },
    "3306": {
      "fn": "ERC777._move",
      "offset": [
        14571,
        14627
      ],
      "op": "AND",
      "path": "135"
    },
    "3307": {
      "fn": "ERC777._move",
      "offset": [
        14576,
        14584
      ],
      "op": "DUP9",
      "path": "135"
    },
    "3308": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3310": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3312": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3314": {
      "op": "SHL"
    },
    "3315": {
      "op": "SUB"
    },
    "3316": {
      "fn": "ERC777._move",
      "offset": [
        14571,
        14627
      ],
      "op": "AND",
      "path": "135"
    },
    "3317": {
      "fn": "ERC777._move",
      "offset": [
        14571,
        14627
      ],
      "op": "PUSH32",
      "path": "135",
      "value": "0x6B541DDAA720DB2B10A4D0CDAC39B8D360425FC073085FAC19BC82614677987"
    },
    "3350": {
      "fn": "ERC777._move",
      "offset": [
        14596,
        14602
      ],
      "op": "DUP8",
      "path": "135"
    },
    "3351": {
      "fn": "ERC777._move",
      "offset": [
        14604,
        14612
      ],
      "op": "DUP8",
      "path": "135"
    },
    "3352": {
      "fn": "ERC777._move",
      "offset": [
        14614,
        14626
      ],
      "op": "DUP8",
      "path": "135"
    },
    "3353": {
      "fn": "ERC777._move",
      "offset": [
        14571,
        14627
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0x40"
    },
    "3355": {
      "fn": "ERC777._move",
      "offset": [
        14571,
        14627
      ],
      "op": "MLOAD",
      "path": "135"
    },
    "3356": {
      "fn": "ERC777._move",
      "offset": [
        14571,
        14627
      ],
      "op": "PUSH2",
      "path": "135",
      "value": "0xD27"
    },
    "3359": {
      "fn": "ERC777._move",
      "offset": [
        14571,
        14627
      ],
      "op": "SWAP4",
      "path": "135"
    },
    "3360": {
      "fn": "ERC777._move",
      "offset": [
        14571,
        14627
      ],
      "op": "SWAP3",
      "path": "135"
    },
    "3361": {
      "fn": "ERC777._move",
      "offset": [
        14571,
        14627
      ],
      "op": "SWAP2",
      "path": "135"
    },
    "3362": {
      "fn": "ERC777._move",
      "offset": [
        14571,
        14627
      ],
      "op": "SWAP1",
      "path": "135"
    },
    "3363": {
      "fn": "ERC777._move",
      "offset": [
        14571,
        14627
      ],
      "op": "PUSH2",
      "path": "135",
      "value": "0x1746"
    },
    "3366": {
      "fn": "ERC777._move",
      "jump": "i",
      "offset": [
        14571,
        14627
      ],
      "op": "JUMP",
      "path": "135"
    },
    "3367": {
      "fn": "ERC777._move",
      "offset": [
        14571,
        14627
      ],
      "op": "JUMPDEST",
      "path": "135"
    },
    "3368": {
      "fn": "ERC777._move",
      "offset": [
        14571,
        14627
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0x40"
    },
    "3370": {
      "fn": "ERC777._move",
      "offset": [
        14571,
        14627
      ],
      "op": "MLOAD",
      "path": "135"
    },
    "3371": {
      "fn": "ERC777._move",
      "offset": [
        14571,
        14627
      ],
      "op": "DUP1",
      "path": "135"
    },
    "3372": {
      "fn": "ERC777._move",
      "offset": [
        14571,
        14627
      ],
      "op": "SWAP2",
      "path": "135"
    },
    "3373": {
      "fn": "ERC777._move",
      "offset": [
        14571,
        14627
      ],
      "op": "SUB",
      "path": "135"
    },
    "3374": {
      "fn": "ERC777._move",
      "offset": [
        14571,
        14627
      ],
      "op": "SWAP1",
      "path": "135"
    },
    "3375": {
      "fn": "ERC777._move",
      "offset": [
        14571,
        14627
      ],
      "op": "LOG4",
      "path": "135"
    },
    "3376": {
      "fn": "ERC777._move",
      "offset": [
        14657,
        14659
      ],
      "op": "DUP5",
      "path": "135",
      "statement": 47
    },
    "3377": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3379": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3381": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3383": {
      "op": "SHL"
    },
    "3384": {
      "op": "SUB"
    },
    "3385": {
      "fn": "ERC777._move",
      "offset": [
        14642,
        14668
      ],
      "op": "AND",
      "path": "135"
    },
    "3386": {
      "fn": "ERC777._move",
      "offset": [
        14651,
        14655
      ],
      "op": "DUP7",
      "path": "135"
    },
    "3387": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3389": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3391": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3393": {
      "op": "SHL"
    },
    "3394": {
      "op": "SUB"
    },
    "3395": {
      "fn": "ERC777._move",
      "offset": [
        14642,
        14668
      ],
      "op": "AND",
      "path": "135"
    },
    "3396": {
      "fn": "ERC777._move",
      "offset": [
        14642,
        14668
      ],
      "op": "PUSH32",
      "path": "135",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "3429": {
      "fn": "ERC777._move",
      "offset": [
        14661,
        14667
      ],
      "op": "DUP7",
      "path": "135"
    },
    "3430": {
      "fn": "ERC777._move",
      "offset": [
        14642,
        14668
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0x40"
    },
    "3432": {
      "fn": "ERC777._move",
      "offset": [
        14642,
        14668
      ],
      "op": "MLOAD",
      "path": "135"
    },
    "3433": {
      "fn": "ERC777._move",
      "offset": [
        14642,
        14668
      ],
      "op": "PUSH2",
      "path": "135",
      "value": "0xD74"
    },
    "3436": {
      "fn": "ERC777._move",
      "offset": [
        14642,
        14668
      ],
      "op": "SWAP2",
      "path": "135"
    },
    "3437": {
      "op": "DUP2"
    },
    "3438": {
      "op": "MSTORE"
    },
    "3439": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3441": {
      "op": "ADD"
    },
    "3442": {
      "op": "SWAP1"
    },
    "3443": {
      "op": "JUMP"
    },
    "3444": {
      "fn": "ERC777._move",
      "offset": [
        14642,
        14668
      ],
      "op": "JUMPDEST",
      "path": "135"
    },
    "3445": {
      "fn": "ERC777._move",
      "offset": [
        14642,
        14668
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0x40"
    },
    "3447": {
      "fn": "ERC777._move",
      "offset": [
        14642,
        14668
      ],
      "op": "MLOAD",
      "path": "135"
    },
    "3448": {
      "fn": "ERC777._move",
      "offset": [
        14642,
        14668
      ],
      "op": "DUP1",
      "path": "135"
    },
    "3449": {
      "fn": "ERC777._move",
      "offset": [
        14642,
        14668
      ],
      "op": "SWAP2",
      "path": "135"
    },
    "3450": {
      "fn": "ERC777._move",
      "offset": [
        14642,
        14668
      ],
      "op": "SUB",
      "path": "135"
    },
    "3451": {
      "fn": "ERC777._move",
      "offset": [
        14642,
        14668
      ],
      "op": "SWAP1",
      "path": "135"
    },
    "3452": {
      "fn": "ERC777._move",
      "offset": [
        14642,
        14668
      ],
      "op": "LOG3",
      "path": "135"
    },
    "3453": {
      "fn": "ERC777._move",
      "offset": [
        14251,
        14675
      ],
      "op": "POP",
      "path": "135"
    },
    "3454": {
      "fn": "ERC777._move",
      "offset": [
        14064,
        14675
      ],
      "op": "POP",
      "path": "135"
    },
    "3455": {
      "fn": "ERC777._move",
      "offset": [
        14064,
        14675
      ],
      "op": "POP",
      "path": "135"
    },
    "3456": {
      "fn": "ERC777._move",
      "offset": [
        14064,
        14675
      ],
      "op": "POP",
      "path": "135"
    },
    "3457": {
      "fn": "ERC777._move",
      "offset": [
        14064,
        14675
      ],
      "op": "POP",
      "path": "135"
    },
    "3458": {
      "fn": "ERC777._move",
      "offset": [
        14064,
        14675
      ],
      "op": "POP",
      "path": "135"
    },
    "3459": {
      "fn": "ERC777._move",
      "offset": [
        14064,
        14675
      ],
      "op": "POP",
      "path": "135"
    },
    "3460": {
      "fn": "ERC777._move",
      "jump": "o",
      "offset": [
        14064,
        14675
      ],
      "op": "JUMP",
      "path": "135"
    },
    "3461": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        16812,
        17488
      ],
      "op": "JUMPDEST",
      "path": "135"
    },
    "3462": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17079,
        17158
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0x40"
    },
    "3464": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17079,
        17158
      ],
      "op": "MLOAD",
      "path": "135"
    },
    "3465": {
      "op": "PUSH4",
      "value": "0x555DDC65"
    },
    "3470": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "3472": {
      "op": "SHL"
    },
    "3473": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17079,
        17158
      ],
      "op": "DUP2",
      "path": "135"
    },
    "3474": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17079,
        17158
      ],
      "op": "MSTORE",
      "path": "135"
    },
    "3475": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3477": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3479": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3481": {
      "op": "SHL"
    },
    "3482": {
      "op": "SUB"
    },
    "3483": {
      "op": "DUP7"
    },
    "3484": {
      "op": "AND"
    },
    "3485": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17079,
        17158
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0x4"
    },
    "3487": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17079,
        17158
      ],
      "op": "DUP3",
      "path": "135"
    },
    "3488": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17079,
        17158
      ],
      "op": "ADD",
      "path": "135"
    },
    "3489": {
      "op": "MSTORE"
    },
    "3490": {
      "offset": [
        1514,
        1548
      ],
      "op": "PUSH32",
      "path": "135",
      "value": "0xB281FC8C12954D22544DB45DE3159A39272895B169A852B314F9CC762E44C53B"
    },
    "3523": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3525": {
      "op": "DUP3"
    },
    "3526": {
      "op": "ADD"
    },
    "3527": {
      "op": "MSTORE"
    },
    "3528": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17057,
        17076
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0x0"
    },
    "3530": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17057,
        17076
      ],
      "op": "SWAP1",
      "path": "135"
    },
    "3531": {
      "offset": [
        1168,
        1210
      ],
      "op": "PUSH20",
      "path": "135",
      "value": "0x1820A4B7618BDE71DCE8CDC73AAB6C95905FAD24"
    },
    "3552": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        1168,
        1210
      ],
      "op": "SWAP1",
      "path": "135"
    },
    "3553": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17079,
        17120
      ],
      "op": "PUSH4",
      "path": "135",
      "value": "0xAABBB8CA"
    },
    "3558": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17079,
        17120
      ],
      "op": "SWAP1",
      "path": "135"
    },
    "3559": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3561": {
      "op": "ADD"
    },
    "3562": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17079,
        17158
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0x20"
    },
    "3564": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17079,
        17158
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0x40"
    },
    "3566": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17079,
        17158
      ],
      "op": "MLOAD",
      "path": "135"
    },
    "3567": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17079,
        17158
      ],
      "op": "DUP1",
      "path": "135"
    },
    "3568": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17079,
        17158
      ],
      "op": "DUP4",
      "path": "135"
    },
    "3569": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17079,
        17158
      ],
      "op": "SUB",
      "path": "135"
    },
    "3570": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17079,
        17158
      ],
      "op": "DUP2",
      "path": "135"
    },
    "3571": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17079,
        17158
      ],
      "op": "DUP7",
      "path": "135"
    },
    "3572": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17079,
        17158
      ],
      "op": "GAS",
      "path": "135"
    },
    "3573": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17079,
        17158
      ],
      "op": "STATICCALL",
      "path": "135"
    },
    "3574": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17079,
        17158
      ],
      "op": "ISZERO",
      "path": "135"
    },
    "3575": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17079,
        17158
      ],
      "op": "DUP1",
      "path": "135"
    },
    "3576": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17079,
        17158
      ],
      "op": "ISZERO",
      "path": "135"
    },
    "3577": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17079,
        17158
      ],
      "op": "PUSH2",
      "path": "135",
      "value": "0xE06"
    },
    "3580": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17079,
        17158
      ],
      "op": "JUMPI",
      "path": "135"
    },
    "3581": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17079,
        17158
      ],
      "op": "RETURNDATASIZE",
      "path": "135"
    },
    "3582": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17079,
        17158
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0x0"
    },
    "3584": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17079,
        17158
      ],
      "op": "DUP1",
      "path": "135"
    },
    "3585": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17079,
        17158
      ],
      "op": "RETURNDATACOPY",
      "path": "135"
    },
    "3586": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17079,
        17158
      ],
      "op": "RETURNDATASIZE",
      "path": "135"
    },
    "3587": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17079,
        17158
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0x0"
    },
    "3589": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17079,
        17158
      ],
      "op": "REVERT",
      "path": "135"
    },
    "3590": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17079,
        17158
      ],
      "op": "JUMPDEST",
      "path": "135"
    },
    "3591": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17079,
        17158
      ],
      "op": "POP",
      "path": "135"
    },
    "3592": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17079,
        17158
      ],
      "op": "POP",
      "path": "135"
    },
    "3593": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17079,
        17158
      ],
      "op": "POP",
      "path": "135"
    },
    "3594": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17079,
        17158
      ],
      "op": "POP",
      "path": "135"
    },
    "3595": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17079,
        17158
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0x40"
    },
    "3597": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17079,
        17158
      ],
      "op": "MLOAD",
      "path": "135"
    },
    "3598": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17079,
        17158
      ],
      "op": "RETURNDATASIZE",
      "path": "135"
    },
    "3599": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17079,
        17158
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0x1F"
    },
    "3601": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17079,
        17158
      ],
      "op": "NOT",
      "path": "135"
    },
    "3602": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17079,
        17158
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0x1F"
    },
    "3604": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17079,
        17158
      ],
      "op": "DUP3",
      "path": "135"
    },
    "3605": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17079,
        17158
      ],
      "op": "ADD",
      "path": "135"
    },
    "3606": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17079,
        17158
      ],
      "op": "AND",
      "path": "135"
    },
    "3607": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17079,
        17158
      ],
      "op": "DUP3",
      "path": "135"
    },
    "3608": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17079,
        17158
      ],
      "op": "ADD",
      "path": "135"
    },
    "3609": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17079,
        17158
      ],
      "op": "DUP1",
      "path": "135"
    },
    "3610": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17079,
        17158
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0x40"
    },
    "3612": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17079,
        17158
      ],
      "op": "MSTORE",
      "path": "135"
    },
    "3613": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17079,
        17158
      ],
      "op": "POP",
      "path": "135"
    },
    "3614": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17079,
        17158
      ],
      "op": "DUP2",
      "path": "135"
    },
    "3615": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17079,
        17158
      ],
      "op": "ADD",
      "path": "135"
    },
    "3616": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17079,
        17158
      ],
      "op": "SWAP1",
      "path": "135"
    },
    "3617": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17079,
        17158
      ],
      "op": "PUSH2",
      "path": "135",
      "value": "0xE2A"
    },
    "3620": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17079,
        17158
      ],
      "op": "SWAP2",
      "path": "135"
    },
    "3621": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17079,
        17158
      ],
      "op": "SWAP1",
      "path": "135"
    },
    "3622": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17079,
        17158
      ],
      "op": "PUSH2",
      "path": "135",
      "value": "0x16B7"
    },
    "3625": {
      "fn": "ERC777._callTokensReceived",
      "jump": "i",
      "offset": [
        17079,
        17158
      ],
      "op": "JUMP",
      "path": "135"
    },
    "3626": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17079,
        17158
      ],
      "op": "JUMPDEST",
      "path": "135"
    },
    "3627": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17057,
        17158
      ],
      "op": "SWAP1",
      "path": "135"
    },
    "3628": {
      "op": "POP"
    },
    "3629": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3631": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3633": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3635": {
      "op": "SHL"
    },
    "3636": {
      "op": "SUB"
    },
    "3637": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17172,
        17197
      ],
      "op": "DUP2",
      "path": "135"
    },
    "3638": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17172,
        17197
      ],
      "op": "AND",
      "path": "135"
    },
    "3639": {
      "branch": 77,
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17172,
        17197
      ],
      "op": "ISZERO",
      "path": "135"
    },
    "3640": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17168,
        17482
      ],
      "op": "PUSH2",
      "path": "135",
      "value": "0xEA6"
    },
    "3643": {
      "branch": 77,
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17168,
        17482
      ],
      "op": "JUMPI",
      "path": "135"
    },
    "3644": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17213,
        17309
      ],
      "op": "PUSH1",
      "path": "135",
      "statement": 48,
      "value": "0x40"
    },
    "3646": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17213,
        17309
      ],
      "op": "MLOAD",
      "path": "135"
    },
    "3647": {
      "op": "PUSH3",
      "value": "0x23DE29"
    },
    "3651": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3653": {
      "op": "SHL"
    },
    "3654": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17213,
        17309
      ],
      "op": "DUP2",
      "path": "135"
    },
    "3655": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17213,
        17309
      ],
      "op": "MSTORE",
      "path": "135"
    },
    "3656": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3658": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3660": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3662": {
      "op": "SHL"
    },
    "3663": {
      "op": "SUB"
    },
    "3664": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17213,
        17257
      ],
      "op": "DUP3",
      "path": "135"
    },
    "3665": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17213,
        17257
      ],
      "op": "AND",
      "path": "135"
    },
    "3666": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17213,
        17257
      ],
      "op": "SWAP1",
      "path": "135"
    },
    "3667": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17213,
        17257
      ],
      "op": "PUSH3",
      "path": "135",
      "value": "0x23DE29"
    },
    "3671": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17213,
        17257
      ],
      "op": "SWAP1",
      "path": "135"
    },
    "3672": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17213,
        17309
      ],
      "op": "PUSH2",
      "path": "135",
      "value": "0xE6F"
    },
    "3675": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17213,
        17309
      ],
      "op": "SWAP1",
      "path": "135"
    },
    "3676": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17258,
        17266
      ],
      "op": "DUP12",
      "path": "135"
    },
    "3677": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17258,
        17266
      ],
      "op": "SWAP1",
      "path": "135"
    },
    "3678": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17268,
        17272
      ],
      "op": "DUP12",
      "path": "135"
    },
    "3679": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17268,
        17272
      ],
      "op": "SWAP1",
      "path": "135"
    },
    "3680": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17274,
        17276
      ],
      "op": "DUP12",
      "path": "135"
    },
    "3681": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17274,
        17276
      ],
      "op": "SWAP1",
      "path": "135"
    },
    "3682": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17278,
        17284
      ],
      "op": "DUP12",
      "path": "135"
    },
    "3683": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17278,
        17284
      ],
      "op": "SWAP1",
      "path": "135"
    },
    "3684": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17286,
        17294
      ],
      "op": "DUP12",
      "path": "135"
    },
    "3685": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17286,
        17294
      ],
      "op": "SWAP1",
      "path": "135"
    },
    "3686": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17296,
        17308
      ],
      "op": "DUP12",
      "path": "135"
    },
    "3687": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17296,
        17308
      ],
      "op": "SWAP1",
      "path": "135"
    },
    "3688": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17213,
        17309
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0x4"
    },
    "3690": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17213,
        17309
      ],
      "op": "ADD",
      "path": "135"
    },
    "3691": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17213,
        17309
      ],
      "op": "PUSH2",
      "path": "135",
      "value": "0x16D4"
    },
    "3694": {
      "fn": "ERC777._callTokensReceived",
      "jump": "i",
      "offset": [
        17213,
        17309
      ],
      "op": "JUMP",
      "path": "135"
    },
    "3695": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17213,
        17309
      ],
      "op": "JUMPDEST",
      "path": "135"
    },
    "3696": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17213,
        17309
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0x0"
    },
    "3698": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17213,
        17309
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0x40"
    },
    "3700": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17213,
        17309
      ],
      "op": "MLOAD",
      "path": "135"
    },
    "3701": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17213,
        17309
      ],
      "op": "DUP1",
      "path": "135"
    },
    "3702": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17213,
        17309
      ],
      "op": "DUP4",
      "path": "135"
    },
    "3703": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17213,
        17309
      ],
      "op": "SUB",
      "path": "135"
    },
    "3704": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17213,
        17309
      ],
      "op": "DUP2",
      "path": "135"
    },
    "3705": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17213,
        17309
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0x0"
    },
    "3707": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17213,
        17309
      ],
      "op": "DUP8",
      "path": "135"
    },
    "3708": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17213,
        17309
      ],
      "op": "DUP1",
      "path": "135"
    },
    "3709": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17213,
        17309
      ],
      "op": "EXTCODESIZE",
      "path": "135"
    },
    "3710": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17213,
        17309
      ],
      "op": "ISZERO",
      "path": "135"
    },
    "3711": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17213,
        17309
      ],
      "op": "DUP1",
      "path": "135"
    },
    "3712": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17213,
        17309
      ],
      "op": "ISZERO",
      "path": "135"
    },
    "3713": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17213,
        17309
      ],
      "op": "PUSH2",
      "path": "135",
      "value": "0xE89"
    },
    "3716": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17213,
        17309
      ],
      "op": "JUMPI",
      "path": "135"
    },
    "3717": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17213,
        17309
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0x0"
    },
    "3719": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17213,
        17309
      ],
      "op": "DUP1",
      "path": "135"
    },
    "3720": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17213,
        17309
      ],
      "op": "REVERT",
      "path": "135"
    },
    "3721": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17213,
        17309
      ],
      "op": "JUMPDEST",
      "path": "135"
    },
    "3722": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17213,
        17309
      ],
      "op": "POP",
      "path": "135"
    },
    "3723": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17213,
        17309
      ],
      "op": "GAS",
      "path": "135"
    },
    "3724": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17213,
        17309
      ],
      "op": "CALL",
      "path": "135"
    },
    "3725": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17213,
        17309
      ],
      "op": "ISZERO",
      "path": "135"
    },
    "3726": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17213,
        17309
      ],
      "op": "DUP1",
      "path": "135"
    },
    "3727": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17213,
        17309
      ],
      "op": "ISZERO",
      "path": "135"
    },
    "3728": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17213,
        17309
      ],
      "op": "PUSH2",
      "path": "135",
      "value": "0xE9D"
    },
    "3731": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17213,
        17309
      ],
      "op": "JUMPI",
      "path": "135"
    },
    "3732": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17213,
        17309
      ],
      "op": "RETURNDATASIZE",
      "path": "135"
    },
    "3733": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17213,
        17309
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0x0"
    },
    "3735": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17213,
        17309
      ],
      "op": "DUP1",
      "path": "135"
    },
    "3736": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17213,
        17309
      ],
      "op": "RETURNDATACOPY",
      "path": "135"
    },
    "3737": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17213,
        17309
      ],
      "op": "RETURNDATASIZE",
      "path": "135"
    },
    "3738": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17213,
        17309
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0x0"
    },
    "3740": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17213,
        17309
      ],
      "op": "REVERT",
      "path": "135"
    },
    "3741": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17213,
        17309
      ],
      "op": "JUMPDEST",
      "path": "135"
    },
    "3742": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17213,
        17309
      ],
      "op": "POP",
      "path": "135"
    },
    "3743": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17213,
        17309
      ],
      "op": "POP",
      "path": "135"
    },
    "3744": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17213,
        17309
      ],
      "op": "POP",
      "path": "135"
    },
    "3745": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17213,
        17309
      ],
      "op": "POP",
      "path": "135"
    },
    "3746": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17168,
        17482
      ],
      "op": "PUSH2",
      "path": "135",
      "value": "0xF40"
    },
    "3749": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17168,
        17482
      ],
      "op": "JUMP",
      "path": "135"
    },
    "3750": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17168,
        17482
      ],
      "op": "JUMPDEST",
      "path": "135"
    },
    "3751": {
      "branch": 78,
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17330,
        17349
      ],
      "op": "DUP2",
      "path": "135"
    },
    "3752": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17326,
        17482
      ],
      "op": "ISZERO",
      "path": "135"
    },
    "3753": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17326,
        17482
      ],
      "op": "PUSH2",
      "path": "135",
      "value": "0xF40"
    },
    "3756": {
      "branch": 78,
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17326,
        17482
      ],
      "op": "JUMPI",
      "path": "135"
    },
    "3757": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3759": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3761": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3763": {
      "op": "SHL"
    },
    "3764": {
      "op": "SUB"
    },
    "3765": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17374,
        17387
      ],
      "op": "DUP7",
      "path": "135",
      "statement": 49
    },
    "3766": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17374,
        17387
      ],
      "op": "AND",
      "path": "135"
    },
    "3767": {
      "fn": "Address.isContract",
      "offset": [
        1034,
        1054
      ],
      "op": "EXTCODESIZE",
      "path": "140"
    },
    "3768": {
      "fn": "Address.isContract",
      "offset": [
        1080,
        1088
      ],
      "op": "ISZERO",
      "path": "140",
      "statement": 50
    },
    "3769": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17365,
        17471
      ],
      "op": "PUSH2",
      "path": "135",
      "value": "0xF40"
    },
    "3772": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17365,
        17471
      ],
      "op": "JUMPI",
      "path": "135"
    },
    "3773": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17365,
        17471
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0x40"
    },
    "3775": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17365,
        17471
      ],
      "op": "MLOAD",
      "path": "135"
    },
    "3776": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3780": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3782": {
      "op": "SHL"
    },
    "3783": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17365,
        17471
      ],
      "op": "DUP2",
      "path": "135"
    },
    "3784": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17365,
        17471
      ],
      "op": "MSTORE",
      "path": "135"
    },
    "3785": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3787": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17365,
        17471
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0x4"
    },
    "3789": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17365,
        17471
      ],
      "op": "DUP3",
      "path": "135"
    },
    "3790": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17365,
        17471
      ],
      "op": "ADD",
      "path": "135"
    },
    "3791": {
      "op": "MSTORE"
    },
    "3792": {
      "op": "PUSH1",
      "value": "0x4D"
    },
    "3794": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3796": {
      "op": "DUP3"
    },
    "3797": {
      "op": "ADD"
    },
    "3798": {
      "op": "MSTORE"
    },
    "3799": {
      "op": "PUSH32",
      "value": "0x4552433737373A20746F6B656E20726563697069656E7420636F6E7472616374"
    },
    "3832": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3834": {
      "op": "DUP3"
    },
    "3835": {
      "op": "ADD"
    },
    "3836": {
      "op": "MSTORE"
    },
    "3837": {
      "op": "PUSH32",
      "value": "0x20686173206E6F20696D706C656D656E74657220666F7220455243373737546F"
    },
    "3870": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3872": {
      "op": "DUP3"
    },
    "3873": {
      "op": "ADD"
    },
    "3874": {
      "op": "MSTORE"
    },
    "3875": {
      "op": "PUSH13",
      "value": "0x1AD95B9CD49958DA5C1A595B9D"
    },
    "3889": {
      "op": "PUSH1",
      "value": "0x9A"
    },
    "3891": {
      "op": "SHL"
    },
    "3892": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3894": {
      "op": "DUP3"
    },
    "3895": {
      "op": "ADD"
    },
    "3896": {
      "op": "MSTORE"
    },
    "3897": {
      "op": "PUSH1",
      "value": "0xA4"
    },
    "3899": {
      "op": "ADD"
    },
    "3900": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17365,
        17471
      ],
      "op": "PUSH2",
      "path": "135",
      "value": "0x3DB"
    },
    "3903": {
      "op": "JUMP"
    },
    "3904": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17365,
        17471
      ],
      "op": "JUMPDEST",
      "path": "135"
    },
    "3905": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17047,
        17488
      ],
      "op": "POP",
      "path": "135"
    },
    "3906": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        16812,
        17488
      ],
      "op": "POP",
      "path": "135"
    },
    "3907": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        16812,
        17488
      ],
      "op": "POP",
      "path": "135"
    },
    "3908": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        16812,
        17488
      ],
      "op": "POP",
      "path": "135"
    },
    "3909": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        16812,
        17488
      ],
      "op": "POP",
      "path": "135"
    },
    "3910": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        16812,
        17488
      ],
      "op": "POP",
      "path": "135"
    },
    "3911": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        16812,
        17488
      ],
      "op": "POP",
      "path": "135"
    },
    "3912": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        16812,
        17488
      ],
      "op": "POP",
      "path": "135"
    },
    "3913": {
      "fn": "ERC777._callTokensReceived",
      "jump": "o",
      "offset": [
        16812,
        17488
      ],
      "op": "JUMP",
      "path": "135"
    },
    "3914": {
      "fn": "ERC777._send",
      "offset": [
        12292,
        12942
      ],
      "op": "JUMPDEST",
      "path": "135"
    },
    "3915": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3917": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3919": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3921": {
      "op": "SHL"
    },
    "3922": {
      "op": "SUB"
    },
    "3923": {
      "fn": "ERC777._send",
      "offset": [
        12514,
        12532
      ],
      "op": "DUP7",
      "path": "135",
      "statement": 51
    },
    "3924": {
      "branch": 79,
      "fn": "ERC777._send",
      "offset": [
        12514,
        12532
      ],
      "op": "AND",
      "path": "135"
    },
    "3925": {
      "fn": "ERC777._send",
      "offset": [
        12506,
        12571
      ],
      "op": "PUSH2",
      "path": "135",
      "value": "0xFAB"
    },
    "3928": {
      "branch": 79,
      "fn": "ERC777._send",
      "offset": [
        12506,
        12571
      ],
      "op": "JUMPI",
      "path": "135"
    },
    "3929": {
      "fn": "ERC777._send",
      "offset": [
        12506,
        12571
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0x40"
    },
    "3931": {
      "fn": "ERC777._send",
      "offset": [
        12506,
        12571
      ],
      "op": "MLOAD",
      "path": "135"
    },
    "3932": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3936": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3938": {
      "op": "SHL"
    },
    "3939": {
      "fn": "ERC777._send",
      "offset": [
        12506,
        12571
      ],
      "op": "DUP2",
      "path": "135"
    },
    "3940": {
      "fn": "ERC777._send",
      "offset": [
        12506,
        12571
      ],
      "op": "MSTORE",
      "path": "135"
    },
    "3941": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3943": {
      "fn": "ERC777._send",
      "offset": [
        12506,
        12571
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0x4"
    },
    "3945": {
      "fn": "ERC777._send",
      "offset": [
        12506,
        12571
      ],
      "op": "DUP3",
      "path": "135"
    },
    "3946": {
      "fn": "ERC777._send",
      "offset": [
        12506,
        12571
      ],
      "op": "ADD",
      "path": "135"
    },
    "3947": {
      "op": "MSTORE"
    },
    "3948": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "3950": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3952": {
      "op": "DUP3"
    },
    "3953": {
      "op": "ADD"
    },
    "3954": {
      "op": "MSTORE"
    },
    "3955": {
      "op": "PUSH32",
      "value": "0x4552433737373A2073656E642066726F6D20746865207A65726F206164647265"
    },
    "3988": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3990": {
      "op": "DUP3"
    },
    "3991": {
      "op": "ADD"
    },
    "3992": {
      "op": "MSTORE"
    },
    "3993": {
      "op": "PUSH2",
      "value": "0x7373"
    },
    "3996": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "3998": {
      "op": "SHL"
    },
    "3999": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4001": {
      "op": "DUP3"
    },
    "4002": {
      "op": "ADD"
    },
    "4003": {
      "op": "MSTORE"
    },
    "4004": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "4006": {
      "op": "ADD"
    },
    "4007": {
      "fn": "ERC777._send",
      "offset": [
        12506,
        12571
      ],
      "op": "PUSH2",
      "path": "135",
      "value": "0x3DB"
    },
    "4010": {
      "op": "JUMP"
    },
    "4011": {
      "fn": "ERC777._send",
      "offset": [
        12506,
        12571
      ],
      "op": "JUMPDEST",
      "path": "135"
    },
    "4012": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4014": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4016": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4018": {
      "op": "SHL"
    },
    "4019": {
      "op": "SUB"
    },
    "4020": {
      "fn": "ERC777._send",
      "offset": [
        12589,
        12605
      ],
      "op": "DUP6",
      "path": "135",
      "statement": 52
    },
    "4021": {
      "branch": 80,
      "fn": "ERC777._send",
      "offset": [
        12589,
        12605
      ],
      "op": "AND",
      "path": "135"
    },
    "4022": {
      "fn": "ERC777._send",
      "offset": [
        12581,
        12642
      ],
      "op": "PUSH2",
      "path": "135",
      "value": "0x1001"
    },
    "4025": {
      "branch": 80,
      "fn": "ERC777._send",
      "offset": [
        12581,
        12642
      ],
      "op": "JUMPI",
      "path": "135"
    },
    "4026": {
      "fn": "ERC777._send",
      "offset": [
        12581,
        12642
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0x40"
    },
    "4028": {
      "fn": "ERC777._send",
      "offset": [
        12581,
        12642
      ],
      "op": "MLOAD",
      "path": "135"
    },
    "4029": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4033": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4035": {
      "op": "SHL"
    },
    "4036": {
      "fn": "ERC777._send",
      "offset": [
        12581,
        12642
      ],
      "op": "DUP2",
      "path": "135"
    },
    "4037": {
      "fn": "ERC777._send",
      "offset": [
        12581,
        12642
      ],
      "op": "MSTORE",
      "path": "135"
    },
    "4038": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4040": {
      "fn": "ERC777._send",
      "offset": [
        12581,
        12642
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0x4"
    },
    "4042": {
      "fn": "ERC777._send",
      "offset": [
        12581,
        12642
      ],
      "op": "DUP3",
      "path": "135"
    },
    "4043": {
      "fn": "ERC777._send",
      "offset": [
        12581,
        12642
      ],
      "op": "ADD",
      "path": "135"
    },
    "4044": {
      "op": "DUP2"
    },
    "4045": {
      "op": "SWAP1"
    },
    "4046": {
      "op": "MSTORE"
    },
    "4047": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4049": {
      "op": "DUP3"
    },
    "4050": {
      "op": "ADD"
    },
    "4051": {
      "op": "MSTORE"
    },
    "4052": {
      "op": "PUSH32",
      "value": "0x4552433737373A2073656E6420746F20746865207A65726F2061646472657373"
    },
    "4085": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4087": {
      "op": "DUP3"
    },
    "4088": {
      "op": "ADD"
    },
    "4089": {
      "op": "MSTORE"
    },
    "4090": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4092": {
      "op": "ADD"
    },
    "4093": {
      "fn": "ERC777._send",
      "offset": [
        12581,
        12642
      ],
      "op": "PUSH2",
      "path": "135",
      "value": "0x3DB"
    },
    "4096": {
      "op": "JUMP"
    },
    "4097": {
      "fn": "ERC777._send",
      "offset": [
        12581,
        12642
      ],
      "op": "JUMPDEST",
      "path": "135"
    },
    "4098": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "142"
    },
    "4099": {
      "fn": "ERC777._send",
      "offset": [
        12695,
        12764
      ],
      "op": "PUSH2",
      "path": "135",
      "statement": 53,
      "value": "0x1010"
    },
    "4102": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "DUP2",
      "path": "142"
    },
    "4103": {
      "fn": "ERC777._send",
      "offset": [
        12723,
        12727
      ],
      "op": "DUP9",
      "path": "135"
    },
    "4104": {
      "fn": "ERC777._send",
      "offset": [
        12729,
        12731
      ],
      "op": "DUP9",
      "path": "135"
    },
    "4105": {
      "fn": "ERC777._send",
      "offset": [
        12733,
        12739
      ],
      "op": "DUP9",
      "path": "135"
    },
    "4106": {
      "fn": "ERC777._send",
      "offset": [
        12741,
        12749
      ],
      "op": "DUP9",
      "path": "135"
    },
    "4107": {
      "fn": "ERC777._send",
      "offset": [
        12751,
        12763
      ],
      "op": "DUP9",
      "path": "135"
    },
    "4108": {
      "fn": "ERC777._send",
      "offset": [
        12695,
        12712
      ],
      "op": "PUSH2",
      "path": "135",
      "value": "0xAF7"
    },
    "4111": {
      "fn": "ERC777._send",
      "jump": "i",
      "offset": [
        12695,
        12764
      ],
      "op": "JUMP",
      "path": "135"
    },
    "4112": {
      "fn": "ERC777._send",
      "offset": [
        12695,
        12764
      ],
      "op": "JUMPDEST",
      "path": "135"
    },
    "4113": {
      "fn": "ERC777._send",
      "offset": [
        12775,
        12832
      ],
      "op": "PUSH2",
      "path": "135",
      "statement": 54,
      "value": "0x101E"
    },
    "4116": {
      "fn": "ERC777._send",
      "offset": [
        12781,
        12789
      ],
      "op": "DUP2",
      "path": "135"
    },
    "4117": {
      "fn": "ERC777._send",
      "offset": [
        12791,
        12795
      ],
      "op": "DUP9",
      "path": "135"
    },
    "4118": {
      "fn": "ERC777._send",
      "offset": [
        12797,
        12799
      ],
      "op": "DUP9",
      "path": "135"
    },
    "4119": {
      "fn": "ERC777._send",
      "offset": [
        12801,
        12807
      ],
      "op": "DUP9",
      "path": "135"
    },
    "4120": {
      "fn": "ERC777._send",
      "offset": [
        12809,
        12817
      ],
      "op": "DUP9",
      "path": "135"
    },
    "4121": {
      "fn": "ERC777._send",
      "offset": [
        12819,
        12831
      ],
      "op": "DUP9",
      "path": "135"
    },
    "4122": {
      "fn": "ERC777._send",
      "offset": [
        12775,
        12780
      ],
      "op": "PUSH2",
      "path": "135",
      "value": "0xC1F"
    },
    "4125": {
      "fn": "ERC777._send",
      "jump": "i",
      "offset": [
        12775,
        12832
      ],
      "op": "JUMP",
      "path": "135"
    },
    "4126": {
      "fn": "ERC777._send",
      "offset": [
        12775,
        12832
      ],
      "op": "JUMPDEST",
      "path": "135"
    },
    "4127": {
      "fn": "ERC777._send",
      "offset": [
        12843,
        12935
      ],
      "op": "PUSH2",
      "path": "135",
      "statement": 55,
      "value": "0xC16"
    },
    "4130": {
      "fn": "ERC777._send",
      "offset": [
        12863,
        12871
      ],
      "op": "DUP2",
      "path": "135"
    },
    "4131": {
      "fn": "ERC777._send",
      "offset": [
        12873,
        12877
      ],
      "op": "DUP9",
      "path": "135"
    },
    "4132": {
      "fn": "ERC777._send",
      "offset": [
        12879,
        12881
      ],
      "op": "DUP9",
      "path": "135"
    },
    "4133": {
      "fn": "ERC777._send",
      "offset": [
        12883,
        12889
      ],
      "op": "DUP9",
      "path": "135"
    },
    "4134": {
      "fn": "ERC777._send",
      "offset": [
        12891,
        12899
      ],
      "op": "DUP9",
      "path": "135"
    },
    "4135": {
      "fn": "ERC777._send",
      "offset": [
        12901,
        12913
      ],
      "op": "DUP9",
      "path": "135"
    },
    "4136": {
      "fn": "ERC777._send",
      "offset": [
        12915,
        12934
      ],
      "op": "DUP9",
      "path": "135"
    },
    "4137": {
      "fn": "ERC777._send",
      "offset": [
        12843,
        12862
      ],
      "op": "PUSH2",
      "path": "135",
      "value": "0xD85"
    },
    "4140": {
      "fn": "ERC777._send",
      "jump": "i",
      "offset": [
        12843,
        12935
      ],
      "op": "JUMP",
      "path": "135"
    },
    "4141": {
      "fn": "ERC777._burn",
      "offset": [
        13247,
        14058
      ],
      "op": "JUMPDEST",
      "path": "135"
    },
    "4142": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4144": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4146": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4148": {
      "op": "SHL"
    },
    "4149": {
      "op": "SUB"
    },
    "4150": {
      "fn": "ERC777._burn",
      "offset": [
        13411,
        13429
      ],
      "op": "DUP5",
      "path": "135",
      "statement": 56
    },
    "4151": {
      "branch": 81,
      "fn": "ERC777._burn",
      "offset": [
        13411,
        13429
      ],
      "op": "AND",
      "path": "135"
    },
    "4152": {
      "fn": "ERC777._burn",
      "offset": [
        13403,
        13468
      ],
      "op": "PUSH2",
      "path": "135",
      "value": "0x108E"
    },
    "4155": {
      "branch": 81,
      "fn": "ERC777._burn",
      "offset": [
        13403,
        13468
      ],
      "op": "JUMPI",
      "path": "135"
    },
    "4156": {
      "fn": "ERC777._burn",
      "offset": [
        13403,
        13468
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0x40"
    },
    "4158": {
      "fn": "ERC777._burn",
      "offset": [
        13403,
        13468
      ],
      "op": "MLOAD",
      "path": "135"
    },
    "4159": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4163": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4165": {
      "op": "SHL"
    },
    "4166": {
      "fn": "ERC777._burn",
      "offset": [
        13403,
        13468
      ],
      "op": "DUP2",
      "path": "135"
    },
    "4167": {
      "fn": "ERC777._burn",
      "offset": [
        13403,
        13468
      ],
      "op": "MSTORE",
      "path": "135"
    },
    "4168": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4170": {
      "fn": "ERC777._burn",
      "offset": [
        13403,
        13468
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0x4"
    },
    "4172": {
      "fn": "ERC777._burn",
      "offset": [
        13403,
        13468
      ],
      "op": "DUP3",
      "path": "135"
    },
    "4173": {
      "fn": "ERC777._burn",
      "offset": [
        13403,
        13468
      ],
      "op": "ADD",
      "path": "135"
    },
    "4174": {
      "op": "MSTORE"
    },
    "4175": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "4177": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4179": {
      "op": "DUP3"
    },
    "4180": {
      "op": "ADD"
    },
    "4181": {
      "op": "MSTORE"
    },
    "4182": {
      "op": "PUSH32",
      "value": "0x4552433737373A206275726E2066726F6D20746865207A65726F206164647265"
    },
    "4215": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4217": {
      "op": "DUP3"
    },
    "4218": {
      "op": "ADD"
    },
    "4219": {
      "op": "MSTORE"
    },
    "4220": {
      "op": "PUSH2",
      "value": "0x7373"
    },
    "4223": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "4225": {
      "op": "SHL"
    },
    "4226": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4228": {
      "op": "DUP3"
    },
    "4229": {
      "op": "ADD"
    },
    "4230": {
      "op": "MSTORE"
    },
    "4231": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "4233": {
      "op": "ADD"
    },
    "4234": {
      "fn": "ERC777._burn",
      "offset": [
        13403,
        13468
      ],
      "op": "PUSH2",
      "path": "135",
      "value": "0x3DB"
    },
    "4237": {
      "op": "JUMP"
    },
    "4238": {
      "fn": "ERC777._burn",
      "offset": [
        13403,
        13468
      ],
      "op": "JUMPDEST",
      "path": "135"
    },
    "4239": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "142"
    },
    "4240": {
      "fn": "ERC777._burn",
      "offset": [
        13521,
        13594
      ],
      "op": "PUSH2",
      "path": "135",
      "statement": 57,
      "value": "0x109E"
    },
    "4243": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "DUP2",
      "path": "142"
    },
    "4244": {
      "fn": "ERC777._burn",
      "offset": [
        13549,
        13553
      ],
      "op": "DUP7",
      "path": "135"
    },
    "4245": {
      "fn": "ERC777._burn",
      "offset": [
        13479,
        13495
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0x0"
    },
    "4247": {
      "fn": "ERC777._burn",
      "offset": [
        13567,
        13573
      ],
      "op": "DUP8",
      "path": "135"
    },
    "4248": {
      "fn": "ERC777._burn",
      "offset": [
        13575,
        13579
      ],
      "op": "DUP8",
      "path": "135"
    },
    "4249": {
      "fn": "ERC777._burn",
      "offset": [
        13581,
        13593
      ],
      "op": "DUP8",
      "path": "135"
    },
    "4250": {
      "fn": "ERC777._burn",
      "offset": [
        13521,
        13538
      ],
      "op": "PUSH2",
      "path": "135",
      "value": "0xAF7"
    },
    "4253": {
      "fn": "ERC777._burn",
      "jump": "i",
      "offset": [
        13521,
        13594
      ],
      "op": "JUMP",
      "path": "135"
    },
    "4254": {
      "fn": "ERC777._burn",
      "offset": [
        13521,
        13594
      ],
      "op": "JUMPDEST",
      "path": "135"
    },
    "4255": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4257": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4259": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4261": {
      "op": "SHL"
    },
    "4262": {
      "op": "SUB"
    },
    "4263": {
      "fn": "ERC777._burn",
      "offset": [
        13728,
        13743
      ],
      "op": "DUP6",
      "path": "135"
    },
    "4264": {
      "fn": "ERC777._burn",
      "offset": [
        13728,
        13743
      ],
      "op": "AND",
      "path": "135"
    },
    "4265": {
      "fn": "ERC777._burn",
      "offset": [
        13706,
        13725
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0x0"
    },
    "4267": {
      "fn": "ERC777._burn",
      "offset": [
        13728,
        13743
      ],
      "op": "SWAP1",
      "path": "135"
    },
    "4268": {
      "fn": "ERC777._burn",
      "offset": [
        13728,
        13743
      ],
      "op": "DUP2",
      "path": "135"
    },
    "4269": {
      "fn": "ERC777._burn",
      "offset": [
        13728,
        13743
      ],
      "op": "MSTORE",
      "path": "135"
    },
    "4270": {
      "fn": "ERC777._burn",
      "offset": [
        13728,
        13743
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0x20"
    },
    "4272": {
      "fn": "ERC777._burn",
      "offset": [
        13728,
        13743
      ],
      "op": "DUP2",
      "path": "135"
    },
    "4273": {
      "fn": "ERC777._burn",
      "offset": [
        13728,
        13743
      ],
      "op": "SWAP1",
      "path": "135"
    },
    "4274": {
      "fn": "ERC777._burn",
      "offset": [
        13728,
        13743
      ],
      "op": "MSTORE",
      "path": "135"
    },
    "4275": {
      "fn": "ERC777._burn",
      "offset": [
        13728,
        13743
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0x40"
    },
    "4277": {
      "fn": "ERC777._burn",
      "offset": [
        13728,
        13743
      ],
      "op": "SWAP1",
      "path": "135"
    },
    "4278": {
      "fn": "ERC777._burn",
      "offset": [
        13728,
        13743
      ],
      "op": "KECCAK256",
      "path": "135"
    },
    "4279": {
      "fn": "ERC777._burn",
      "offset": [
        13728,
        13743
      ],
      "op": "SLOAD",
      "path": "135"
    },
    "4280": {
      "fn": "ERC777._burn",
      "offset": [
        13761,
        13782
      ],
      "op": "DUP5",
      "path": "135",
      "statement": 58
    },
    "4281": {
      "fn": "ERC777._burn",
      "offset": [
        13761,
        13782
      ],
      "op": "DUP2",
      "path": "135"
    },
    "4282": {
      "fn": "ERC777._burn",
      "offset": [
        13761,
        13782
      ],
      "op": "LT",
      "path": "135"
    },
    "4283": {
      "branch": 82,
      "fn": "ERC777._burn",
      "offset": [
        13761,
        13782
      ],
      "op": "ISZERO",
      "path": "135"
    },
    "4284": {
      "fn": "ERC777._burn",
      "offset": [
        13753,
        13822
      ],
      "op": "PUSH2",
      "path": "135",
      "value": "0x1113"
    },
    "4287": {
      "branch": 82,
      "fn": "ERC777._burn",
      "offset": [
        13753,
        13822
      ],
      "op": "JUMPI",
      "path": "135"
    },
    "4288": {
      "fn": "ERC777._burn",
      "offset": [
        13753,
        13822
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0x40"
    },
    "4290": {
      "fn": "ERC777._burn",
      "offset": [
        13753,
        13822
      ],
      "op": "MLOAD",
      "path": "135"
    },
    "4291": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4295": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4297": {
      "op": "SHL"
    },
    "4298": {
      "fn": "ERC777._burn",
      "offset": [
        13753,
        13822
      ],
      "op": "DUP2",
      "path": "135"
    },
    "4299": {
      "fn": "ERC777._burn",
      "offset": [
        13753,
        13822
      ],
      "op": "MSTORE",
      "path": "135"
    },
    "4300": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4302": {
      "fn": "ERC777._burn",
      "offset": [
        13753,
        13822
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0x4"
    },
    "4304": {
      "fn": "ERC777._burn",
      "offset": [
        13753,
        13822
      ],
      "op": "DUP3",
      "path": "135"
    },
    "4305": {
      "fn": "ERC777._burn",
      "offset": [
        13753,
        13822
      ],
      "op": "ADD",
      "path": "135"
    },
    "4306": {
      "op": "MSTORE"
    },
    "4307": {
      "op": "PUSH1",
      "value": "0x23"
    },
    "4309": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4311": {
      "op": "DUP3"
    },
    "4312": {
      "op": "ADD"
    },
    "4313": {
      "op": "MSTORE"
    },
    "4314": {
      "op": "PUSH32",
      "value": "0x4552433737373A206275726E20616D6F756E7420657863656564732062616C61"
    },
    "4347": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4349": {
      "op": "DUP3"
    },
    "4350": {
      "op": "ADD"
    },
    "4351": {
      "op": "MSTORE"
    },
    "4352": {
      "op": "PUSH3",
      "value": "0x6E6365"
    },
    "4356": {
      "op": "PUSH1",
      "value": "0xE8"
    },
    "4358": {
      "op": "SHL"
    },
    "4359": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4361": {
      "op": "DUP3"
    },
    "4362": {
      "op": "ADD"
    },
    "4363": {
      "op": "MSTORE"
    },
    "4364": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "4366": {
      "op": "ADD"
    },
    "4367": {
      "fn": "ERC777._burn",
      "offset": [
        13753,
        13822
      ],
      "op": "PUSH2",
      "path": "135",
      "value": "0x3DB"
    },
    "4370": {
      "op": "JUMP"
    },
    "4371": {
      "fn": "ERC777._burn",
      "offset": [
        13753,
        13822
      ],
      "op": "JUMPDEST",
      "path": "135"
    },
    "4372": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4374": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4376": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4378": {
      "op": "SHL"
    },
    "4379": {
      "op": "SUB"
    },
    "4380": {
      "fn": "ERC777._burn",
      "offset": [
        13856,
        13871
      ],
      "op": "DUP7",
      "path": "135",
      "statement": 59
    },
    "4381": {
      "fn": "ERC777._burn",
      "offset": [
        13856,
        13871
      ],
      "op": "AND",
      "path": "135"
    },
    "4382": {
      "fn": "ERC777._burn",
      "offset": [
        13856,
        13865
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0x0"
    },
    "4384": {
      "fn": "ERC777._burn",
      "offset": [
        13856,
        13871
      ],
      "op": "SWAP1",
      "path": "135"
    },
    "4385": {
      "fn": "ERC777._burn",
      "offset": [
        13856,
        13871
      ],
      "op": "DUP2",
      "path": "135"
    },
    "4386": {
      "fn": "ERC777._burn",
      "offset": [
        13856,
        13871
      ],
      "op": "MSTORE",
      "path": "135"
    },
    "4387": {
      "fn": "ERC777._burn",
      "offset": [
        13856,
        13871
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0x20"
    },
    "4389": {
      "fn": "ERC777._burn",
      "offset": [
        13856,
        13871
      ],
      "op": "DUP2",
      "path": "135"
    },
    "4390": {
      "fn": "ERC777._burn",
      "offset": [
        13856,
        13871
      ],
      "op": "SWAP1",
      "path": "135"
    },
    "4391": {
      "fn": "ERC777._burn",
      "offset": [
        13856,
        13871
      ],
      "op": "MSTORE",
      "path": "135"
    },
    "4392": {
      "fn": "ERC777._burn",
      "offset": [
        13856,
        13871
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0x40"
    },
    "4394": {
      "fn": "ERC777._burn",
      "offset": [
        13856,
        13871
      ],
      "op": "DUP2",
      "path": "135"
    },
    "4395": {
      "fn": "ERC777._burn",
      "offset": [
        13856,
        13871
      ],
      "op": "KECCAK256",
      "path": "135"
    },
    "4396": {
      "fn": "ERC777._burn",
      "offset": [
        13874,
        13894
      ],
      "op": "DUP7",
      "path": "135"
    },
    "4397": {
      "fn": "ERC777._burn",
      "offset": [
        13874,
        13894
      ],
      "op": "DUP4",
      "path": "135"
    },
    "4398": {
      "fn": "ERC777._burn",
      "offset": [
        13874,
        13894
      ],
      "op": "SUB",
      "path": "135"
    },
    "4399": {
      "fn": "ERC777._burn",
      "offset": [
        13856,
        13894
      ],
      "op": "SWAP1",
      "path": "135"
    },
    "4400": {
      "fn": "ERC777._burn",
      "offset": [
        13856,
        13894
      ],
      "op": "SSTORE",
      "path": "135"
    },
    "4401": {
      "fn": "ERC777._burn",
      "offset": [
        13914,
        13926
      ],
      "op": "PUSH1",
      "path": "135",
      "statement": 60,
      "value": "0x1"
    },
    "4403": {
      "fn": "ERC777._burn",
      "offset": [
        13914,
        13936
      ],
      "op": "DUP1",
      "path": "135"
    },
    "4404": {
      "fn": "ERC777._burn",
      "offset": [
        13914,
        13936
      ],
      "op": "SLOAD",
      "path": "135"
    },
    "4405": {
      "fn": "ERC777._burn",
      "offset": [
        13888,
        13894
      ],
      "op": "DUP8",
      "path": "135"
    },
    "4406": {
      "fn": "ERC777._burn",
      "offset": [
        13888,
        13894
      ],
      "op": "SWAP3",
      "path": "135"
    },
    "4407": {
      "fn": "ERC777._burn",
      "offset": [
        13856,
        13865
      ],
      "op": "SWAP1",
      "path": "135"
    },
    "4408": {
      "fn": "ERC777._burn",
      "offset": [
        13914,
        13936
      ],
      "op": "PUSH2",
      "path": "135",
      "value": "0x1142"
    },
    "4411": {
      "fn": "ERC777._burn",
      "offset": [
        13914,
        13936
      ],
      "op": "SWAP1",
      "path": "135"
    },
    "4412": {
      "fn": "ERC777._burn",
      "offset": [
        13888,
        13894
      ],
      "op": "DUP5",
      "path": "135"
    },
    "4413": {
      "fn": "ERC777._burn",
      "offset": [
        13888,
        13894
      ],
      "op": "SWAP1",
      "path": "135"
    },
    "4414": {
      "fn": "ERC777._burn",
      "offset": [
        13914,
        13936
      ],
      "op": "PUSH2",
      "path": "135",
      "value": "0x1654"
    },
    "4417": {
      "fn": "ERC777._burn",
      "jump": "i",
      "offset": [
        13914,
        13936
      ],
      "op": "JUMP",
      "path": "135"
    },
    "4418": {
      "fn": "ERC777._burn",
      "offset": [
        13914,
        13936
      ],
      "op": "JUMPDEST",
      "path": "135"
    },
    "4419": {
      "fn": "ERC777._burn",
      "offset": [
        13914,
        13936
      ],
      "op": "SWAP3",
      "path": "135"
    },
    "4420": {
      "fn": "ERC777._burn",
      "offset": [
        13914,
        13936
      ],
      "op": "POP",
      "path": "135"
    },
    "4421": {
      "fn": "ERC777._burn",
      "offset": [
        13914,
        13936
      ],
      "op": "POP",
      "path": "135"
    },
    "4422": {
      "fn": "ERC777._burn",
      "offset": [
        13914,
        13936
      ],
      "op": "DUP2",
      "path": "135"
    },
    "4423": {
      "fn": "ERC777._burn",
      "offset": [
        13914,
        13936
      ],
      "op": "SWAP1",
      "path": "135"
    },
    "4424": {
      "fn": "ERC777._burn",
      "offset": [
        13914,
        13936
      ],
      "op": "SSTORE",
      "path": "135"
    },
    "4425": {
      "fn": "ERC777._burn",
      "offset": [
        13914,
        13936
      ],
      "op": "POP",
      "path": "135"
    },
    "4426": {
      "fn": "ERC777._burn",
      "offset": [
        13969,
        13973
      ],
      "op": "DUP6",
      "path": "135",
      "statement": 61
    },
    "4427": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4429": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4431": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4433": {
      "op": "SHL"
    },
    "4434": {
      "op": "SUB"
    },
    "4435": {
      "fn": "ERC777._burn",
      "offset": [
        13952,
        14002
      ],
      "op": "AND",
      "path": "135"
    },
    "4436": {
      "fn": "ERC777._burn",
      "offset": [
        13959,
        13967
      ],
      "op": "DUP3",
      "path": "135"
    },
    "4437": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4439": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4441": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4443": {
      "op": "SHL"
    },
    "4444": {
      "op": "SUB"
    },
    "4445": {
      "fn": "ERC777._burn",
      "offset": [
        13952,
        14002
      ],
      "op": "AND",
      "path": "135"
    },
    "4446": {
      "fn": "ERC777._burn",
      "offset": [
        13952,
        14002
      ],
      "op": "PUSH32",
      "path": "135",
      "value": "0xA78A9BE3A7B862D26933AD85FB11D80EF66B8F972D7CBBA06621D583943A4098"
    },
    "4479": {
      "fn": "ERC777._burn",
      "offset": [
        13975,
        13981
      ],
      "op": "DUP8",
      "path": "135"
    },
    "4480": {
      "fn": "ERC777._burn",
      "offset": [
        13983,
        13987
      ],
      "op": "DUP8",
      "path": "135"
    },
    "4481": {
      "fn": "ERC777._burn",
      "offset": [
        13989,
        14001
      ],
      "op": "DUP8",
      "path": "135"
    },
    "4482": {
      "fn": "ERC777._burn",
      "offset": [
        13952,
        14002
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0x40"
    },
    "4484": {
      "fn": "ERC777._burn",
      "offset": [
        13952,
        14002
      ],
      "op": "MLOAD",
      "path": "135"
    },
    "4485": {
      "fn": "ERC777._burn",
      "offset": [
        13952,
        14002
      ],
      "op": "PUSH2",
      "path": "135",
      "value": "0x1190"
    },
    "4488": {
      "fn": "ERC777._burn",
      "offset": [
        13952,
        14002
      ],
      "op": "SWAP4",
      "path": "135"
    },
    "4489": {
      "fn": "ERC777._burn",
      "offset": [
        13952,
        14002
      ],
      "op": "SWAP3",
      "path": "135"
    },
    "4490": {
      "fn": "ERC777._burn",
      "offset": [
        13952,
        14002
      ],
      "op": "SWAP2",
      "path": "135"
    },
    "4491": {
      "fn": "ERC777._burn",
      "offset": [
        13952,
        14002
      ],
      "op": "SWAP1",
      "path": "135"
    },
    "4492": {
      "fn": "ERC777._burn",
      "offset": [
        13952,
        14002
      ],
      "op": "PUSH2",
      "path": "135",
      "value": "0x1746"
    },
    "4495": {
      "fn": "ERC777._burn",
      "jump": "i",
      "offset": [
        13952,
        14002
      ],
      "op": "JUMP",
      "path": "135"
    },
    "4496": {
      "fn": "ERC777._burn",
      "offset": [
        13952,
        14002
      ],
      "op": "JUMPDEST",
      "path": "135"
    },
    "4497": {
      "fn": "ERC777._burn",
      "offset": [
        13952,
        14002
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0x40"
    },
    "4499": {
      "fn": "ERC777._burn",
      "offset": [
        13952,
        14002
      ],
      "op": "MLOAD",
      "path": "135"
    },
    "4500": {
      "fn": "ERC777._burn",
      "offset": [
        13952,
        14002
      ],
      "op": "DUP1",
      "path": "135"
    },
    "4501": {
      "fn": "ERC777._burn",
      "offset": [
        13952,
        14002
      ],
      "op": "SWAP2",
      "path": "135"
    },
    "4502": {
      "fn": "ERC777._burn",
      "offset": [
        13952,
        14002
      ],
      "op": "SUB",
      "path": "135"
    },
    "4503": {
      "fn": "ERC777._burn",
      "offset": [
        13952,
        14002
      ],
      "op": "SWAP1",
      "path": "135"
    },
    "4504": {
      "fn": "ERC777._burn",
      "offset": [
        13952,
        14002
      ],
      "op": "LOG3",
      "path": "135"
    },
    "4505": {
      "fn": "ERC777._burn",
      "offset": [
        14017,
        14051
      ],
      "op": "PUSH1",
      "path": "135",
      "statement": 62,
      "value": "0x40"
    },
    "4507": {
      "fn": "ERC777._burn",
      "offset": [
        14017,
        14051
      ],
      "op": "MLOAD",
      "path": "135"
    },
    "4508": {
      "op": "DUP6"
    },
    "4509": {
      "op": "DUP2"
    },
    "4510": {
      "op": "MSTORE"
    },
    "4511": {
      "fn": "ERC777._burn",
      "offset": [
        14040,
        14041
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0x0"
    },
    "4513": {
      "fn": "ERC777._burn",
      "offset": [
        14040,
        14041
      ],
      "op": "SWAP1",
      "path": "135"
    },
    "4514": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4516": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4518": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4520": {
      "op": "SHL"
    },
    "4521": {
      "op": "SUB"
    },
    "4522": {
      "fn": "ERC777._burn",
      "offset": [
        14017,
        14051
      ],
      "op": "DUP9",
      "path": "135"
    },
    "4523": {
      "fn": "ERC777._burn",
      "offset": [
        14017,
        14051
      ],
      "op": "AND",
      "path": "135"
    },
    "4524": {
      "fn": "ERC777._burn",
      "offset": [
        14017,
        14051
      ],
      "op": "SWAP1",
      "path": "135"
    },
    "4525": {
      "fn": "ERC777._burn",
      "offset": [
        14017,
        14051
      ],
      "op": "PUSH32",
      "path": "135",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "4558": {
      "fn": "ERC777._burn",
      "offset": [
        14017,
        14051
      ],
      "op": "SWAP1",
      "path": "135"
    },
    "4559": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4561": {
      "op": "ADD"
    },
    "4562": {
      "fn": "ERC777._burn",
      "offset": [
        14017,
        14051
      ],
      "op": "PUSH1",
      "path": "135",
      "value": "0x40"
    },
    "4564": {
      "fn": "ERC777._burn",
      "offset": [
        14017,
        14051
      ],
      "op": "MLOAD",
      "path": "135"
    },
    "4565": {
      "fn": "ERC777._burn",
      "offset": [
        14017,
        14051
      ],
      "op": "DUP1",
      "path": "135"
    },
    "4566": {
      "fn": "ERC777._burn",
      "offset": [
        14017,
        14051
      ],
      "op": "SWAP2",
      "path": "135"
    },
    "4567": {
      "fn": "ERC777._burn",
      "offset": [
        14017,
        14051
      ],
      "op": "SUB",
      "path": "135"
    },
    "4568": {
      "fn": "ERC777._burn",
      "offset": [
        14017,
        14051
      ],
      "op": "SWAP1",
      "path": "135"
    },
    "4569": {
      "fn": "ERC777._burn",
      "offset": [
        14017,
        14051
      ],
      "op": "LOG3",
      "path": "135"
    },
    "4570": {
      "fn": "ERC777._burn",
      "offset": [
        13393,
        14058
      ],
      "op": "POP",
      "path": "135"
    },
    "4571": {
      "fn": "ERC777._burn",
      "offset": [
        13393,
        14058
      ],
      "op": "POP",
      "path": "135"
    },
    "4572": {
      "fn": "ERC777._burn",
      "offset": [
        13247,
        14058
      ],
      "op": "POP",
      "path": "135"
    },
    "4573": {
      "fn": "ERC777._burn",
      "offset": [
        13247,
        14058
      ],
      "op": "POP",
      "path": "135"
    },
    "4574": {
      "fn": "ERC777._burn",
      "offset": [
        13247,
        14058
      ],
      "op": "POP",
      "path": "135"
    },
    "4575": {
      "fn": "ERC777._burn",
      "offset": [
        13247,
        14058
      ],
      "op": "POP",
      "path": "135"
    },
    "4576": {
      "fn": "ERC777._burn",
      "jump": "o",
      "offset": [
        13247,
        14058
      ],
      "op": "JUMP",
      "path": "135"
    },
    "4577": {
      "op": "JUMPDEST"
    },
    "4578": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4580": {
      "op": "DUP1"
    },
    "4581": {
      "op": "DUP3"
    },
    "4582": {
      "op": "MSTORE"
    },
    "4583": {
      "op": "DUP3"
    },
    "4584": {
      "op": "MLOAD"
    },
    "4585": {
      "op": "DUP3"
    },
    "4586": {
      "op": "DUP3"
    },
    "4587": {
      "op": "ADD"
    },
    "4588": {
      "op": "DUP2"
    },
    "4589": {
      "op": "SWAP1"
    },
    "4590": {
      "op": "MSTORE"
    },
    "4591": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4593": {
      "op": "SWAP2"
    },
    "4594": {
      "op": "SWAP1"
    },
    "4595": {
      "op": "DUP5"
    },
    "4596": {
      "op": "DUP3"
    },
    "4597": {
      "op": "ADD"
    },
    "4598": {
      "op": "SWAP1"
    },
    "4599": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4601": {
      "op": "DUP6"
    },
    "4602": {
      "op": "ADD"
    },
    "4603": {
      "op": "SWAP1"
    },
    "4604": {
      "op": "DUP5"
    },
    "4605": {
      "op": "JUMPDEST"
    },
    "4606": {
      "op": "DUP2"
    },
    "4607": {
      "op": "DUP2"
    },
    "4608": {
      "op": "LT"
    },
    "4609": {
      "op": "ISZERO"
    },
    "4610": {
      "op": "PUSH2",
      "value": "0x1222"
    },
    "4613": {
      "op": "JUMPI"
    },
    "4614": {
      "op": "DUP4"
    },
    "4615": {
      "op": "MLOAD"
    },
    "4616": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4618": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4620": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4622": {
      "op": "SHL"
    },
    "4623": {
      "op": "SUB"
    },
    "4624": {
      "op": "AND"
    },
    "4625": {
      "op": "DUP4"
    },
    "4626": {
      "op": "MSTORE"
    },
    "4627": {
      "op": "SWAP3"
    },
    "4628": {
      "op": "DUP5"
    },
    "4629": {
      "op": "ADD"
    },
    "4630": {
      "op": "SWAP3"
    },
    "4631": {
      "op": "SWAP2"
    },
    "4632": {
      "op": "DUP5"
    },
    "4633": {
      "op": "ADD"
    },
    "4634": {
      "op": "SWAP2"
    },
    "4635": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4637": {
      "op": "ADD"
    },
    "4638": {
      "op": "PUSH2",
      "value": "0x11FD"
    },
    "4641": {
      "op": "JUMP"
    },
    "4642": {
      "op": "JUMPDEST"
    },
    "4643": {
      "op": "POP"
    },
    "4644": {
      "op": "SWAP1"
    },
    "4645": {
      "op": "SWAP7"
    },
    "4646": {
      "op": "SWAP6"
    },
    "4647": {
      "op": "POP"
    },
    "4648": {
      "op": "POP"
    },
    "4649": {
      "op": "POP"
    },
    "4650": {
      "op": "POP"
    },
    "4651": {
      "op": "POP"
    },
    "4652": {
      "op": "POP"
    },
    "4653": {
      "jump": "o",
      "op": "JUMP"
    },
    "4654": {
      "op": "JUMPDEST"
    },
    "4655": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4657": {
      "op": "DUP2"
    },
    "4658": {
      "op": "MLOAD"
    },
    "4659": {
      "op": "DUP1"
    },
    "4660": {
      "op": "DUP5"
    },
    "4661": {
      "op": "MSTORE"
    },
    "4662": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4664": {
      "op": "JUMPDEST"
    },
    "4665": {
      "op": "DUP2"
    },
    "4666": {
      "op": "DUP2"
    },
    "4667": {
      "op": "LT"
    },
    "4668": {
      "op": "ISZERO"
    },
    "4669": {
      "op": "PUSH2",
      "value": "0x1254"
    },
    "4672": {
      "op": "JUMPI"
    },
    "4673": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4675": {
      "op": "DUP2"
    },
    "4676": {
      "op": "DUP6"
    },
    "4677": {
      "op": "ADD"
    },
    "4678": {
      "op": "DUP2"
    },
    "4679": {
      "op": "ADD"
    },
    "4680": {
      "op": "MLOAD"
    },
    "4681": {
      "op": "DUP7"
    },
    "4682": {
      "op": "DUP4"
    },
    "4683": {
      "op": "ADD"
    },
    "4684": {
      "op": "DUP3"
    },
    "4685": {
      "op": "ADD"
    },
    "4686": {
      "op": "MSTORE"
    },
    "4687": {
      "op": "ADD"
    },
    "4688": {
      "op": "PUSH2",
      "value": "0x1238"
    },
    "4691": {
      "op": "JUMP"
    },
    "4692": {
      "op": "JUMPDEST"
    },
    "4693": {
      "op": "DUP2"
    },
    "4694": {
      "op": "DUP2"
    },
    "4695": {
      "op": "GT"
    },
    "4696": {
      "op": "ISZERO"
    },
    "4697": {
      "op": "PUSH2",
      "value": "0x1266"
    },
    "4700": {
      "op": "JUMPI"
    },
    "4701": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4703": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4705": {
      "op": "DUP4"
    },
    "4706": {
      "op": "DUP8"
    },
    "4707": {
      "op": "ADD"
    },
    "4708": {
      "op": "ADD"
    },
    "4709": {
      "op": "MSTORE"
    },
    "4710": {
      "op": "JUMPDEST"
    },
    "4711": {
      "op": "POP"
    },
    "4712": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4714": {
      "op": "ADD"
    },
    "4715": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4717": {
      "op": "NOT"
    },
    "4718": {
      "op": "AND"
    },
    "4719": {
      "op": "SWAP3"
    },
    "4720": {
      "op": "SWAP1"
    },
    "4721": {
      "op": "SWAP3"
    },
    "4722": {
      "op": "ADD"
    },
    "4723": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4725": {
      "op": "ADD"
    },
    "4726": {
      "op": "SWAP3"
    },
    "4727": {
      "op": "SWAP2"
    },
    "4728": {
      "op": "POP"
    },
    "4729": {
      "op": "POP"
    },
    "4730": {
      "jump": "o",
      "op": "JUMP"
    },
    "4731": {
      "op": "JUMPDEST"
    },
    "4732": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4734": {
      "op": "DUP2"
    },
    "4735": {
      "op": "MSTORE"
    },
    "4736": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4738": {
      "op": "PUSH2",
      "value": "0x856"
    },
    "4741": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4743": {
      "op": "DUP4"
    },
    "4744": {
      "op": "ADD"
    },
    "4745": {
      "op": "DUP5"
    },
    "4746": {
      "op": "PUSH2",
      "value": "0x122E"
    },
    "4749": {
      "jump": "i",
      "op": "JUMP"
    },
    "4750": {
      "op": "JUMPDEST"
    },
    "4751": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4753": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4755": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4757": {
      "op": "SHL"
    },
    "4758": {
      "op": "SUB"
    },
    "4759": {
      "op": "DUP2"
    },
    "4760": {
      "op": "AND"
    },
    "4761": {
      "op": "DUP2"
    },
    "4762": {
      "op": "EQ"
    },
    "4763": {
      "op": "PUSH2",
      "value": "0x12A3"
    },
    "4766": {
      "op": "JUMPI"
    },
    "4767": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4769": {
      "op": "DUP1"
    },
    "4770": {
      "op": "REVERT"
    },
    "4771": {
      "op": "JUMPDEST"
    },
    "4772": {
      "op": "POP"
    },
    "4773": {
      "jump": "o",
      "op": "JUMP"
    },
    "4774": {
      "op": "JUMPDEST"
    },
    "4775": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4777": {
      "op": "DUP1"
    },
    "4778": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4780": {
      "op": "DUP4"
    },
    "4781": {
      "op": "DUP6"
    },
    "4782": {
      "op": "SUB"
    },
    "4783": {
      "op": "SLT"
    },
    "4784": {
      "op": "ISZERO"
    },
    "4785": {
      "op": "PUSH2",
      "value": "0x12B9"
    },
    "4788": {
      "op": "JUMPI"
    },
    "4789": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4791": {
      "op": "DUP1"
    },
    "4792": {
      "op": "REVERT"
    },
    "4793": {
      "op": "JUMPDEST"
    },
    "4794": {
      "op": "DUP3"
    },
    "4795": {
      "op": "CALLDATALOAD"
    },
    "4796": {
      "op": "PUSH2",
      "value": "0x12C4"
    },
    "4799": {
      "op": "DUP2"
    },
    "4800": {
      "op": "PUSH2",
      "value": "0x128E"
    },
    "4803": {
      "jump": "i",
      "op": "JUMP"
    },
    "4804": {
      "op": "JUMPDEST"
    },
    "4805": {
      "op": "SWAP5"
    },
    "4806": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4808": {
      "op": "SWAP4"
    },
    "4809": {
      "op": "SWAP1"
    },
    "4810": {
      "op": "SWAP4"
    },
    "4811": {
      "op": "ADD"
    },
    "4812": {
      "op": "CALLDATALOAD"
    },
    "4813": {
      "op": "SWAP4"
    },
    "4814": {
      "op": "POP"
    },
    "4815": {
      "op": "POP"
    },
    "4816": {
      "op": "POP"
    },
    "4817": {
      "jump": "o",
      "op": "JUMP"
    },
    "4818": {
      "op": "JUMPDEST"
    },
    "4819": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4821": {
      "op": "DUP1"
    },
    "4822": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4824": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4826": {
      "op": "DUP5"
    },
    "4827": {
      "op": "DUP7"
    },
    "4828": {
      "op": "SUB"
    },
    "4829": {
      "op": "SLT"
    },
    "4830": {
      "op": "ISZERO"
    },
    "4831": {
      "op": "PUSH2",
      "value": "0x12E7"
    },
    "4834": {
      "op": "JUMPI"
    },
    "4835": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4837": {
      "op": "DUP1"
    },
    "4838": {
      "op": "REVERT"
    },
    "4839": {
      "op": "JUMPDEST"
    },
    "4840": {
      "op": "DUP4"
    },
    "4841": {
      "op": "CALLDATALOAD"
    },
    "4842": {
      "op": "PUSH2",
      "value": "0x12F2"
    },
    "4845": {
      "op": "DUP2"
    },
    "4846": {
      "op": "PUSH2",
      "value": "0x128E"
    },
    "4849": {
      "jump": "i",
      "op": "JUMP"
    },
    "4850": {
      "op": "JUMPDEST"
    },
    "4851": {
      "op": "SWAP3"
    },
    "4852": {
      "op": "POP"
    },
    "4853": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4855": {
      "op": "DUP5"
    },
    "4856": {
      "op": "ADD"
    },
    "4857": {
      "op": "CALLDATALOAD"
    },
    "4858": {
      "op": "PUSH2",
      "value": "0x1302"
    },
    "4861": {
      "op": "DUP2"
    },
    "4862": {
      "op": "PUSH2",
      "value": "0x128E"
    },
    "4865": {
      "jump": "i",
      "op": "JUMP"
    },
    "4866": {
      "op": "JUMPDEST"
    },
    "4867": {
      "op": "SWAP3"
    },
    "4868": {
      "op": "SWAP6"
    },
    "4869": {
      "op": "SWAP3"
    },
    "4870": {
      "op": "SWAP5"
    },
    "4871": {
      "op": "POP"
    },
    "4872": {
      "op": "POP"
    },
    "4873": {
      "op": "POP"
    },
    "4874": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4876": {
      "op": "SWAP2"
    },
    "4877": {
      "op": "SWAP1"
    },
    "4878": {
      "op": "SWAP2"
    },
    "4879": {
      "op": "ADD"
    },
    "4880": {
      "op": "CALLDATALOAD"
    },
    "4881": {
      "op": "SWAP1"
    },
    "4882": {
      "jump": "o",
      "op": "JUMP"
    },
    "4883": {
      "op": "JUMPDEST"
    },
    "4884": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4889": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4891": {
      "op": "SHL"
    },
    "4892": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4894": {
      "op": "MSTORE"
    },
    "4895": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "4897": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4899": {
      "op": "MSTORE"
    },
    "4900": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4902": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4904": {
      "op": "REVERT"
    },
    "4905": {
      "op": "JUMPDEST"
    },
    "4906": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4908": {
      "op": "DUP3"
    },
    "4909": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4911": {
      "op": "DUP4"
    },
    "4912": {
      "op": "ADD"
    },
    "4913": {
      "op": "SLT"
    },
    "4914": {
      "op": "PUSH2",
      "value": "0x133A"
    },
    "4917": {
      "op": "JUMPI"
    },
    "4918": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4920": {
      "op": "DUP1"
    },
    "4921": {
      "op": "REVERT"
    },
    "4922": {
      "op": "JUMPDEST"
    },
    "4923": {
      "op": "DUP2"
    },
    "4924": {
      "op": "CALLDATALOAD"
    },
    "4925": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "4934": {
      "op": "DUP1"
    },
    "4935": {
      "op": "DUP3"
    },
    "4936": {
      "op": "GT"
    },
    "4937": {
      "op": "ISZERO"
    },
    "4938": {
      "op": "PUSH2",
      "value": "0x1355"
    },
    "4941": {
      "op": "JUMPI"
    },
    "4942": {
      "op": "PUSH2",
      "value": "0x1355"
    },
    "4945": {
      "op": "PUSH2",
      "value": "0x1313"
    },
    "4948": {
      "jump": "i",
      "op": "JUMP"
    },
    "4949": {
      "op": "JUMPDEST"
    },
    "4950": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4952": {
      "op": "MLOAD"
    },
    "4953": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4955": {
      "op": "DUP4"
    },
    "4956": {
      "op": "ADD"
    },
    "4957": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4959": {
      "op": "NOT"
    },
    "4960": {
      "op": "SWAP1"
    },
    "4961": {
      "op": "DUP2"
    },
    "4962": {
      "op": "AND"
    },
    "4963": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "4965": {
      "op": "ADD"
    },
    "4966": {
      "op": "AND"
    },
    "4967": {
      "op": "DUP2"
    },
    "4968": {
      "op": "ADD"
    },
    "4969": {
      "op": "SWAP1"
    },
    "4970": {
      "op": "DUP3"
    },
    "4971": {
      "op": "DUP3"
    },
    "4972": {
      "op": "GT"
    },
    "4973": {
      "op": "DUP2"
    },
    "4974": {
      "op": "DUP4"
    },
    "4975": {
      "op": "LT"
    },
    "4976": {
      "op": "OR"
    },
    "4977": {
      "op": "ISZERO"
    },
    "4978": {
      "op": "PUSH2",
      "value": "0x137D"
    },
    "4981": {
      "op": "JUMPI"
    },
    "4982": {
      "op": "PUSH2",
      "value": "0x137D"
    },
    "4985": {
      "op": "PUSH2",
      "value": "0x1313"
    },
    "4988": {
      "jump": "i",
      "op": "JUMP"
    },
    "4989": {
      "op": "JUMPDEST"
    },
    "4990": {
      "op": "DUP2"
    },
    "4991": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4993": {
      "op": "MSTORE"
    },
    "4994": {
      "op": "DUP4"
    },
    "4995": {
      "op": "DUP2"
    },
    "4996": {
      "op": "MSTORE"
    },
    "4997": {
      "op": "DUP7"
    },
    "4998": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5000": {
      "op": "DUP6"
    },
    "5001": {
      "op": "DUP9"
    },
    "5002": {
      "op": "ADD"
    },
    "5003": {
      "op": "ADD"
    },
    "5004": {
      "op": "GT"
    },
    "5005": {
      "op": "ISZERO"
    },
    "5006": {
      "op": "PUSH2",
      "value": "0x1396"
    },
    "5009": {
      "op": "JUMPI"
    },
    "5010": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5012": {
      "op": "DUP1"
    },
    "5013": {
      "op": "REVERT"
    },
    "5014": {
      "op": "JUMPDEST"
    },
    "5015": {
      "op": "DUP4"
    },
    "5016": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5018": {
      "op": "DUP8"
    },
    "5019": {
      "op": "ADD"
    },
    "5020": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5022": {
      "op": "DUP4"
    },
    "5023": {
      "op": "ADD"
    },
    "5024": {
      "op": "CALLDATACOPY"
    },
    "5025": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5027": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5029": {
      "op": "DUP6"
    },
    "5030": {
      "op": "DUP4"
    },
    "5031": {
      "op": "ADD"
    },
    "5032": {
      "op": "ADD"
    },
    "5033": {
      "op": "MSTORE"
    },
    "5034": {
      "op": "DUP1"
    },
    "5035": {
      "op": "SWAP5"
    },
    "5036": {
      "op": "POP"
    },
    "5037": {
      "op": "POP"
    },
    "5038": {
      "op": "POP"
    },
    "5039": {
      "op": "POP"
    },
    "5040": {
      "op": "POP"
    },
    "5041": {
      "op": "SWAP3"
    },
    "5042": {
      "op": "SWAP2"
    },
    "5043": {
      "op": "POP"
    },
    "5044": {
      "op": "POP"
    },
    "5045": {
      "jump": "o",
      "op": "JUMP"
    },
    "5046": {
      "op": "JUMPDEST"
    },
    "5047": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5049": {
      "op": "DUP1"
    },
    "5050": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5052": {
      "op": "DUP1"
    },
    "5053": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5055": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5057": {
      "op": "DUP7"
    },
    "5058": {
      "op": "DUP9"
    },
    "5059": {
      "op": "SUB"
    },
    "5060": {
      "op": "SLT"
    },
    "5061": {
      "op": "ISZERO"
    },
    "5062": {
      "op": "PUSH2",
      "value": "0x13CE"
    },
    "5065": {
      "op": "JUMPI"
    },
    "5066": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5068": {
      "op": "DUP1"
    },
    "5069": {
      "op": "REVERT"
    },
    "5070": {
      "op": "JUMPDEST"
    },
    "5071": {
      "op": "DUP6"
    },
    "5072": {
      "op": "CALLDATALOAD"
    },
    "5073": {
      "op": "PUSH2",
      "value": "0x13D9"
    },
    "5076": {
      "op": "DUP2"
    },
    "5077": {
      "op": "PUSH2",
      "value": "0x128E"
    },
    "5080": {
      "jump": "i",
      "op": "JUMP"
    },
    "5081": {
      "op": "JUMPDEST"
    },
    "5082": {
      "op": "SWAP5"
    },
    "5083": {
      "op": "POP"
    },
    "5084": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5086": {
      "op": "DUP7"
    },
    "5087": {
      "op": "ADD"
    },
    "5088": {
      "op": "CALLDATALOAD"
    },
    "5089": {
      "op": "PUSH2",
      "value": "0x13E9"
    },
    "5092": {
      "op": "DUP2"
    },
    "5093": {
      "op": "PUSH2",
      "value": "0x128E"
    },
    "5096": {
      "jump": "i",
      "op": "JUMP"
    },
    "5097": {
      "op": "JUMPDEST"
    },
    "5098": {
      "op": "SWAP4"
    },
    "5099": {
      "op": "POP"
    },
    "5100": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5102": {
      "op": "DUP7"
    },
    "5103": {
      "op": "ADD"
    },
    "5104": {
      "op": "CALLDATALOAD"
    },
    "5105": {
      "op": "SWAP3"
    },
    "5106": {
      "op": "POP"
    },
    "5107": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5109": {
      "op": "DUP7"
    },
    "5110": {
      "op": "ADD"
    },
    "5111": {
      "op": "CALLDATALOAD"
    },
    "5112": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "5121": {
      "op": "DUP1"
    },
    "5122": {
      "op": "DUP3"
    },
    "5123": {
      "op": "GT"
    },
    "5124": {
      "op": "ISZERO"
    },
    "5125": {
      "op": "PUSH2",
      "value": "0x140D"
    },
    "5128": {
      "op": "JUMPI"
    },
    "5129": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5131": {
      "op": "DUP1"
    },
    "5132": {
      "op": "REVERT"
    },
    "5133": {
      "op": "JUMPDEST"
    },
    "5134": {
      "op": "PUSH2",
      "value": "0x1419"
    },
    "5137": {
      "op": "DUP10"
    },
    "5138": {
      "op": "DUP4"
    },
    "5139": {
      "op": "DUP11"
    },
    "5140": {
      "op": "ADD"
    },
    "5141": {
      "op": "PUSH2",
      "value": "0x1329"
    },
    "5144": {
      "jump": "i",
      "op": "JUMP"
    },
    "5145": {
      "op": "JUMPDEST"
    },
    "5146": {
      "op": "SWAP4"
    },
    "5147": {
      "op": "POP"
    },
    "5148": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5150": {
      "op": "DUP9"
    },
    "5151": {
      "op": "ADD"
    },
    "5152": {
      "op": "CALLDATALOAD"
    },
    "5153": {
      "op": "SWAP2"
    },
    "5154": {
      "op": "POP"
    },
    "5155": {
      "op": "DUP1"
    },
    "5156": {
      "op": "DUP3"
    },
    "5157": {
      "op": "GT"
    },
    "5158": {
      "op": "ISZERO"
    },
    "5159": {
      "op": "PUSH2",
      "value": "0x142F"
    },
    "5162": {
      "op": "JUMPI"
    },
    "5163": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5165": {
      "op": "DUP1"
    },
    "5166": {
      "op": "REVERT"
    },
    "5167": {
      "op": "JUMPDEST"
    },
    "5168": {
      "op": "POP"
    },
    "5169": {
      "op": "PUSH2",
      "value": "0x143C"
    },
    "5172": {
      "op": "DUP9"
    },
    "5173": {
      "op": "DUP3"
    },
    "5174": {
      "op": "DUP10"
    },
    "5175": {
      "op": "ADD"
    },
    "5176": {
      "op": "PUSH2",
      "value": "0x1329"
    },
    "5179": {
      "jump": "i",
      "op": "JUMP"
    },
    "5180": {
      "op": "JUMPDEST"
    },
    "5181": {
      "op": "SWAP2"
    },
    "5182": {
      "op": "POP"
    },
    "5183": {
      "op": "POP"
    },
    "5184": {
      "op": "SWAP3"
    },
    "5185": {
      "op": "SWAP6"
    },
    "5186": {
      "op": "POP"
    },
    "5187": {
      "op": "SWAP3"
    },
    "5188": {
      "op": "SWAP6"
    },
    "5189": {
      "op": "SWAP1"
    },
    "5190": {
      "op": "SWAP4"
    },
    "5191": {
      "op": "POP"
    },
    "5192": {
      "jump": "o",
      "op": "JUMP"
    },
    "5193": {
      "op": "JUMPDEST"
    },
    "5194": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5196": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5198": {
      "op": "DUP3"
    },
    "5199": {
      "op": "DUP5"
    },
    "5200": {
      "op": "SUB"
    },
    "5201": {
      "op": "SLT"
    },
    "5202": {
      "op": "ISZERO"
    },
    "5203": {
      "op": "PUSH2",
      "value": "0x145B"
    },
    "5206": {
      "op": "JUMPI"
    },
    "5207": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5209": {
      "op": "DUP1"
    },
    "5210": {
      "op": "REVERT"
    },
    "5211": {
      "op": "JUMPDEST"
    },
    "5212": {
      "op": "DUP2"
    },
    "5213": {
      "op": "CALLDATALOAD"
    },
    "5214": {
      "op": "PUSH2",
      "value": "0x856"
    },
    "5217": {
      "op": "DUP2"
    },
    "5218": {
      "op": "PUSH2",
      "value": "0x128E"
    },
    "5221": {
      "jump": "i",
      "op": "JUMP"
    },
    "5222": {
      "op": "JUMPDEST"
    },
    "5223": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5225": {
      "op": "DUP1"
    },
    "5226": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5228": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5230": {
      "op": "DUP5"
    },
    "5231": {
      "op": "DUP7"
    },
    "5232": {
      "op": "SUB"
    },
    "5233": {
      "op": "SLT"
    },
    "5234": {
      "op": "ISZERO"
    },
    "5235": {
      "op": "PUSH2",
      "value": "0x147B"
    },
    "5238": {
      "op": "JUMPI"
    },
    "5239": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5241": {
      "op": "DUP1"
    },
    "5242": {
      "op": "REVERT"
    },
    "5243": {
      "op": "JUMPDEST"
    },
    "5244": {
      "op": "DUP4"
    },
    "5245": {
      "op": "CALLDATALOAD"
    },
    "5246": {
      "op": "PUSH2",
      "value": "0x1486"
    },
    "5249": {
      "op": "DUP2"
    },
    "5250": {
      "op": "PUSH2",
      "value": "0x128E"
    },
    "5253": {
      "jump": "i",
      "op": "JUMP"
    },
    "5254": {
      "op": "JUMPDEST"
    },
    "5255": {
      "op": "SWAP3"
    },
    "5256": {
      "op": "POP"
    },
    "5257": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5259": {
      "op": "DUP5"
    },
    "5260": {
      "op": "ADD"
    },
    "5261": {
      "op": "CALLDATALOAD"
    },
    "5262": {
      "op": "SWAP2"
    },
    "5263": {
      "op": "POP"
    },
    "5264": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5266": {
      "op": "DUP5"
    },
    "5267": {
      "op": "ADD"
    },
    "5268": {
      "op": "CALLDATALOAD"
    },
    "5269": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "5278": {
      "op": "DUP2"
    },
    "5279": {
      "op": "GT"
    },
    "5280": {
      "op": "ISZERO"
    },
    "5281": {
      "op": "PUSH2",
      "value": "0x14A9"
    },
    "5284": {
      "op": "JUMPI"
    },
    "5285": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5287": {
      "op": "DUP1"
    },
    "5288": {
      "op": "REVERT"
    },
    "5289": {
      "op": "JUMPDEST"
    },
    "5290": {
      "op": "PUSH2",
      "value": "0x14B5"
    },
    "5293": {
      "op": "DUP7"
    },
    "5294": {
      "op": "DUP3"
    },
    "5295": {
      "op": "DUP8"
    },
    "5296": {
      "op": "ADD"
    },
    "5297": {
      "op": "PUSH2",
      "value": "0x1329"
    },
    "5300": {
      "jump": "i",
      "op": "JUMP"
    },
    "5301": {
      "op": "JUMPDEST"
    },
    "5302": {
      "op": "SWAP2"
    },
    "5303": {
      "op": "POP"
    },
    "5304": {
      "op": "POP"
    },
    "5305": {
      "op": "SWAP3"
    },
    "5306": {
      "op": "POP"
    },
    "5307": {
      "op": "SWAP3"
    },
    "5308": {
      "op": "POP"
    },
    "5309": {
      "op": "SWAP3"
    },
    "5310": {
      "jump": "o",
      "op": "JUMP"
    },
    "5311": {
      "op": "JUMPDEST"
    },
    "5312": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5314": {
      "op": "DUP1"
    },
    "5315": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5317": {
      "op": "DUP4"
    },
    "5318": {
      "op": "DUP6"
    },
    "5319": {
      "op": "SUB"
    },
    "5320": {
      "op": "SLT"
    },
    "5321": {
      "op": "ISZERO"
    },
    "5322": {
      "op": "PUSH2",
      "value": "0x14D2"
    },
    "5325": {
      "op": "JUMPI"
    },
    "5326": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5328": {
      "op": "DUP1"
    },
    "5329": {
      "op": "REVERT"
    },
    "5330": {
      "op": "JUMPDEST"
    },
    "5331": {
      "op": "DUP3"
    },
    "5332": {
      "op": "CALLDATALOAD"
    },
    "5333": {
      "op": "PUSH2",
      "value": "0x14DD"
    },
    "5336": {
      "op": "DUP2"
    },
    "5337": {
      "op": "PUSH2",
      "value": "0x128E"
    },
    "5340": {
      "jump": "i",
      "op": "JUMP"
    },
    "5341": {
      "op": "JUMPDEST"
    },
    "5342": {
      "op": "SWAP2"
    },
    "5343": {
      "op": "POP"
    },
    "5344": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5346": {
      "op": "DUP4"
    },
    "5347": {
      "op": "ADD"
    },
    "5348": {
      "op": "CALLDATALOAD"
    },
    "5349": {
      "op": "PUSH2",
      "value": "0x14ED"
    },
    "5352": {
      "op": "DUP2"
    },
    "5353": {
      "op": "PUSH2",
      "value": "0x128E"
    },
    "5356": {
      "jump": "i",
      "op": "JUMP"
    },
    "5357": {
      "op": "JUMPDEST"
    },
    "5358": {
      "op": "DUP1"
    },
    "5359": {
      "op": "SWAP2"
    },
    "5360": {
      "op": "POP"
    },
    "5361": {
      "op": "POP"
    },
    "5362": {
      "op": "SWAP3"
    },
    "5363": {
      "op": "POP"
    },
    "5364": {
      "op": "SWAP3"
    },
    "5365": {
      "op": "SWAP1"
    },
    "5366": {
      "op": "POP"
    },
    "5367": {
      "jump": "o",
      "op": "JUMP"
    },
    "5368": {
      "op": "JUMPDEST"
    },
    "5369": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5371": {
      "op": "DUP1"
    },
    "5372": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5374": {
      "op": "DUP1"
    },
    "5375": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5377": {
      "op": "DUP6"
    },
    "5378": {
      "op": "DUP8"
    },
    "5379": {
      "op": "SUB"
    },
    "5380": {
      "op": "SLT"
    },
    "5381": {
      "op": "ISZERO"
    },
    "5382": {
      "op": "PUSH2",
      "value": "0x150E"
    },
    "5385": {
      "op": "JUMPI"
    },
    "5386": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5388": {
      "op": "DUP1"
    },
    "5389": {
      "op": "REVERT"
    },
    "5390": {
      "op": "JUMPDEST"
    },
    "5391": {
      "op": "DUP5"
    },
    "5392": {
      "op": "CALLDATALOAD"
    },
    "5393": {
      "op": "PUSH2",
      "value": "0x1519"
    },
    "5396": {
      "op": "DUP2"
    },
    "5397": {
      "op": "PUSH2",
      "value": "0x128E"
    },
    "5400": {
      "jump": "i",
      "op": "JUMP"
    },
    "5401": {
      "op": "JUMPDEST"
    },
    "5402": {
      "op": "SWAP4"
    },
    "5403": {
      "op": "POP"
    },
    "5404": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5406": {
      "op": "DUP6"
    },
    "5407": {
      "op": "ADD"
    },
    "5408": {
      "op": "CALLDATALOAD"
    },
    "5409": {
      "op": "SWAP3"
    },
    "5410": {
      "op": "POP"
    },
    "5411": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5413": {
      "op": "DUP6"
    },
    "5414": {
      "op": "ADD"
    },
    "5415": {
      "op": "CALLDATALOAD"
    },
    "5416": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "5425": {
      "op": "DUP1"
    },
    "5426": {
      "op": "DUP3"
    },
    "5427": {
      "op": "GT"
    },
    "5428": {
      "op": "ISZERO"
    },
    "5429": {
      "op": "PUSH2",
      "value": "0x153D"
    },
    "5432": {
      "op": "JUMPI"
    },
    "5433": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5435": {
      "op": "DUP1"
    },
    "5436": {
      "op": "REVERT"
    },
    "5437": {
      "op": "JUMPDEST"
    },
    "5438": {
      "op": "PUSH2",
      "value": "0x1549"
    },
    "5441": {
      "op": "DUP9"
    },
    "5442": {
      "op": "DUP4"
    },
    "5443": {
      "op": "DUP10"
    },
    "5444": {
      "op": "ADD"
    },
    "5445": {
      "op": "PUSH2",
      "value": "0x1329"
    },
    "5448": {
      "jump": "i",
      "op": "JUMP"
    },
    "5449": {
      "op": "JUMPDEST"
    },
    "5450": {
      "op": "SWAP4"
    },
    "5451": {
      "op": "POP"
    },
    "5452": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5454": {
      "op": "DUP8"
    },
    "5455": {
      "op": "ADD"
    },
    "5456": {
      "op": "CALLDATALOAD"
    },
    "5457": {
      "op": "SWAP2"
    },
    "5458": {
      "op": "POP"
    },
    "5459": {
      "op": "DUP1"
    },
    "5460": {
      "op": "DUP3"
    },
    "5461": {
      "op": "GT"
    },
    "5462": {
      "op": "ISZERO"
    },
    "5463": {
      "op": "PUSH2",
      "value": "0x155F"
    },
    "5466": {
      "op": "JUMPI"
    },
    "5467": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5469": {
      "op": "DUP1"
    },
    "5470": {
      "op": "REVERT"
    },
    "5471": {
      "op": "JUMPDEST"
    },
    "5472": {
      "op": "POP"
    },
    "5473": {
      "op": "PUSH2",
      "value": "0x156C"
    },
    "5476": {
      "op": "DUP8"
    },
    "5477": {
      "op": "DUP3"
    },
    "5478": {
      "op": "DUP9"
    },
    "5479": {
      "op": "ADD"
    },
    "5480": {
      "op": "PUSH2",
      "value": "0x1329"
    },
    "5483": {
      "jump": "i",
      "op": "JUMP"
    },
    "5484": {
      "op": "JUMPDEST"
    },
    "5485": {
      "op": "SWAP2"
    },
    "5486": {
      "op": "POP"
    },
    "5487": {
      "op": "POP"
    },
    "5488": {
      "op": "SWAP3"
    },
    "5489": {
      "op": "SWAP6"
    },
    "5490": {
      "op": "SWAP2"
    },
    "5491": {
      "op": "SWAP5"
    },
    "5492": {
      "op": "POP"
    },
    "5493": {
      "op": "SWAP3"
    },
    "5494": {
      "op": "POP"
    },
    "5495": {
      "jump": "o",
      "op": "JUMP"
    },
    "5496": {
      "op": "JUMPDEST"
    },
    "5497": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5499": {
      "op": "DUP1"
    },
    "5500": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5502": {
      "op": "DUP4"
    },
    "5503": {
      "op": "DUP6"
    },
    "5504": {
      "op": "SUB"
    },
    "5505": {
      "op": "SLT"
    },
    "5506": {
      "op": "ISZERO"
    },
    "5507": {
      "op": "PUSH2",
      "value": "0x158B"
    },
    "5510": {
      "op": "JUMPI"
    },
    "5511": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5513": {
      "op": "DUP1"
    },
    "5514": {
      "op": "REVERT"
    },
    "5515": {
      "op": "JUMPDEST"
    },
    "5516": {
      "op": "DUP3"
    },
    "5517": {
      "op": "CALLDATALOAD"
    },
    "5518": {
      "op": "SWAP2"
    },
    "5519": {
      "op": "POP"
    },
    "5520": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5522": {
      "op": "DUP4"
    },
    "5523": {
      "op": "ADD"
    },
    "5524": {
      "op": "CALLDATALOAD"
    },
    "5525": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "5534": {
      "op": "DUP2"
    },
    "5535": {
      "op": "GT"
    },
    "5536": {
      "op": "ISZERO"
    },
    "5537": {
      "op": "PUSH2",
      "value": "0x15A9"
    },
    "5540": {
      "op": "JUMPI"
    },
    "5541": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5543": {
      "op": "DUP1"
    },
    "5544": {
      "op": "REVERT"
    },
    "5545": {
      "op": "JUMPDEST"
    },
    "5546": {
      "op": "PUSH2",
      "value": "0x15B5"
    },
    "5549": {
      "op": "DUP6"
    },
    "5550": {
      "op": "DUP3"
    },
    "5551": {
      "op": "DUP7"
    },
    "5552": {
      "op": "ADD"
    },
    "5553": {
      "op": "PUSH2",
      "value": "0x1329"
    },
    "5556": {
      "jump": "i",
      "op": "JUMP"
    },
    "5557": {
      "op": "JUMPDEST"
    },
    "5558": {
      "op": "SWAP2"
    },
    "5559": {
      "op": "POP"
    },
    "5560": {
      "op": "POP"
    },
    "5561": {
      "op": "SWAP3"
    },
    "5562": {
      "op": "POP"
    },
    "5563": {
      "op": "SWAP3"
    },
    "5564": {
      "op": "SWAP1"
    },
    "5565": {
      "op": "POP"
    },
    "5566": {
      "jump": "o",
      "op": "JUMP"
    },
    "5567": {
      "op": "JUMPDEST"
    },
    "5568": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5570": {
      "op": "DUP2"
    },
    "5571": {
      "op": "DUP2"
    },
    "5572": {
      "op": "SHR"
    },
    "5573": {
      "op": "SWAP1"
    },
    "5574": {
      "op": "DUP3"
    },
    "5575": {
      "op": "AND"
    },
    "5576": {
      "op": "DUP1"
    },
    "5577": {
      "op": "PUSH2",
      "value": "0x15D3"
    },
    "5580": {
      "op": "JUMPI"
    },
    "5581": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "5583": {
      "op": "DUP3"
    },
    "5584": {
      "op": "AND"
    },
    "5585": {
      "op": "SWAP2"
    },
    "5586": {
      "op": "POP"
    },
    "5587": {
      "op": "JUMPDEST"
    },
    "5588": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5590": {
      "op": "DUP3"
    },
    "5591": {
      "op": "LT"
    },
    "5592": {
      "op": "DUP2"
    },
    "5593": {
      "op": "EQ"
    },
    "5594": {
      "op": "ISZERO"
    },
    "5595": {
      "op": "PUSH2",
      "value": "0x15F4"
    },
    "5598": {
      "op": "JUMPI"
    },
    "5599": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "5604": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5606": {
      "op": "SHL"
    },
    "5607": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5609": {
      "op": "MSTORE"
    },
    "5610": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "5612": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "5614": {
      "op": "MSTORE"
    },
    "5615": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5617": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5619": {
      "op": "REVERT"
    },
    "5620": {
      "op": "JUMPDEST"
    },
    "5621": {
      "op": "POP"
    },
    "5622": {
      "op": "SWAP2"
    },
    "5623": {
      "op": "SWAP1"
    },
    "5624": {
      "op": "POP"
    },
    "5625": {
      "jump": "o",
      "op": "JUMP"
    },
    "5626": {
      "op": "JUMPDEST"
    },
    "5627": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5629": {
      "op": "DUP1"
    },
    "5630": {
      "op": "DUP3"
    },
    "5631": {
      "op": "MSTORE"
    },
    "5632": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5634": {
      "op": "SWAP1"
    },
    "5635": {
      "op": "DUP3"
    },
    "5636": {
      "op": "ADD"
    },
    "5637": {
      "op": "MSTORE"
    },
    "5638": {
      "op": "PUSH32",
      "value": "0x4552433737373A207472616E7366657220746F20746865207A65726F20616464"
    },
    "5671": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5673": {
      "op": "DUP3"
    },
    "5674": {
      "op": "ADD"
    },
    "5675": {
      "op": "MSTORE"
    },
    "5676": {
      "op": "PUSH4",
      "value": "0x72657373"
    },
    "5681": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5683": {
      "op": "SHL"
    },
    "5684": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5686": {
      "op": "DUP3"
    },
    "5687": {
      "op": "ADD"
    },
    "5688": {
      "op": "MSTORE"
    },
    "5689": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5691": {
      "op": "ADD"
    },
    "5692": {
      "op": "SWAP1"
    },
    "5693": {
      "jump": "o",
      "op": "JUMP"
    },
    "5694": {
      "op": "JUMPDEST"
    },
    "5695": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "5700": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5702": {
      "op": "SHL"
    },
    "5703": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5705": {
      "op": "MSTORE"
    },
    "5706": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "5708": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "5710": {
      "op": "MSTORE"
    },
    "5711": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5713": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5715": {
      "op": "REVERT"
    },
    "5716": {
      "op": "JUMPDEST"
    },
    "5717": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5719": {
      "op": "DUP3"
    },
    "5720": {
      "op": "DUP3"
    },
    "5721": {
      "op": "LT"
    },
    "5722": {
      "op": "ISZERO"
    },
    "5723": {
      "op": "PUSH2",
      "value": "0x1666"
    },
    "5726": {
      "op": "JUMPI"
    },
    "5727": {
      "op": "PUSH2",
      "value": "0x1666"
    },
    "5730": {
      "op": "PUSH2",
      "value": "0x163E"
    },
    "5733": {
      "jump": "i",
      "op": "JUMP"
    },
    "5734": {
      "op": "JUMPDEST"
    },
    "5735": {
      "op": "POP"
    },
    "5736": {
      "op": "SUB"
    },
    "5737": {
      "op": "SWAP1"
    },
    "5738": {
      "jump": "o",
      "op": "JUMP"
    },
    "5739": {
      "op": "JUMPDEST"
    },
    "5740": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5742": {
      "op": "DUP1"
    },
    "5743": {
      "op": "DUP3"
    },
    "5744": {
      "op": "MSTORE"
    },
    "5745": {
      "op": "PUSH1",
      "value": "0x2C"
    },
    "5747": {
      "op": "SWAP1"
    },
    "5748": {
      "op": "DUP3"
    },
    "5749": {
      "op": "ADD"
    },
    "5750": {
      "op": "MSTORE"
    },
    "5751": {
      "op": "PUSH32",
      "value": "0x4552433737373A2063616C6C6572206973206E6F7420616E206F70657261746F"
    },
    "5784": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5786": {
      "op": "DUP3"
    },
    "5787": {
      "op": "ADD"
    },
    "5788": {
      "op": "MSTORE"
    },
    "5789": {
      "op": "PUSH12",
      "value": "0x39103337B9103437B63232B9"
    },
    "5802": {
      "op": "PUSH1",
      "value": "0xA1"
    },
    "5804": {
      "op": "SHL"
    },
    "5805": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5807": {
      "op": "DUP3"
    },
    "5808": {
      "op": "ADD"
    },
    "5809": {
      "op": "MSTORE"
    },
    "5810": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5812": {
      "op": "ADD"
    },
    "5813": {
      "op": "SWAP1"
    },
    "5814": {
      "jump": "o",
      "op": "JUMP"
    },
    "5815": {
      "op": "JUMPDEST"
    },
    "5816": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5818": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5820": {
      "op": "DUP3"
    },
    "5821": {
      "op": "DUP5"
    },
    "5822": {
      "op": "SUB"
    },
    "5823": {
      "op": "SLT"
    },
    "5824": {
      "op": "ISZERO"
    },
    "5825": {
      "op": "PUSH2",
      "value": "0x16C9"
    },
    "5828": {
      "op": "JUMPI"
    },
    "5829": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5831": {
      "op": "DUP1"
    },
    "5832": {
      "op": "REVERT"
    },
    "5833": {
      "op": "JUMPDEST"
    },
    "5834": {
      "op": "DUP2"
    },
    "5835": {
      "op": "MLOAD"
    },
    "5836": {
      "op": "PUSH2",
      "value": "0x856"
    },
    "5839": {
      "op": "DUP2"
    },
    "5840": {
      "op": "PUSH2",
      "value": "0x128E"
    },
    "5843": {
      "jump": "i",
      "op": "JUMP"
    },
    "5844": {
      "op": "JUMPDEST"
    },
    "5845": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5847": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5849": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5851": {
      "op": "SHL"
    },
    "5852": {
      "op": "SUB"
    },
    "5853": {
      "op": "DUP8"
    },
    "5854": {
      "op": "DUP2"
    },
    "5855": {
      "op": "AND"
    },
    "5856": {
      "op": "DUP3"
    },
    "5857": {
      "op": "MSTORE"
    },
    "5858": {
      "op": "DUP7"
    },
    "5859": {
      "op": "DUP2"
    },
    "5860": {
      "op": "AND"
    },
    "5861": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5863": {
      "op": "DUP4"
    },
    "5864": {
      "op": "ADD"
    },
    "5865": {
      "op": "MSTORE"
    },
    "5866": {
      "op": "DUP6"
    },
    "5867": {
      "op": "AND"
    },
    "5868": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5870": {
      "op": "DUP3"
    },
    "5871": {
      "op": "ADD"
    },
    "5872": {
      "op": "MSTORE"
    },
    "5873": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5875": {
      "op": "DUP2"
    },
    "5876": {
      "op": "ADD"
    },
    "5877": {
      "op": "DUP5"
    },
    "5878": {
      "op": "SWAP1"
    },
    "5879": {
      "op": "MSTORE"
    },
    "5880": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "5882": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5884": {
      "op": "DUP3"
    },
    "5885": {
      "op": "ADD"
    },
    "5886": {
      "op": "DUP2"
    },
    "5887": {
      "op": "SWAP1"
    },
    "5888": {
      "op": "MSTORE"
    },
    "5889": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5891": {
      "op": "SWAP1"
    },
    "5892": {
      "op": "PUSH2",
      "value": "0x170F"
    },
    "5895": {
      "op": "SWAP1"
    },
    "5896": {
      "op": "DUP4"
    },
    "5897": {
      "op": "ADD"
    },
    "5898": {
      "op": "DUP6"
    },
    "5899": {
      "op": "PUSH2",
      "value": "0x122E"
    },
    "5902": {
      "jump": "i",
      "op": "JUMP"
    },
    "5903": {
      "op": "JUMPDEST"
    },
    "5904": {
      "op": "DUP3"
    },
    "5905": {
      "op": "DUP2"
    },
    "5906": {
      "op": "SUB"
    },
    "5907": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5909": {
      "op": "DUP5"
    },
    "5910": {
      "op": "ADD"
    },
    "5911": {
      "op": "MSTORE"
    },
    "5912": {
      "op": "PUSH2",
      "value": "0x1721"
    },
    "5915": {
      "op": "DUP2"
    },
    "5916": {
      "op": "DUP6"
    },
    "5917": {
      "op": "PUSH2",
      "value": "0x122E"
    },
    "5920": {
      "jump": "i",
      "op": "JUMP"
    },
    "5921": {
      "op": "JUMPDEST"
    },
    "5922": {
      "op": "SWAP10"
    },
    "5923": {
      "op": "SWAP9"
    },
    "5924": {
      "op": "POP"
    },
    "5925": {
      "op": "POP"
    },
    "5926": {
      "op": "POP"
    },
    "5927": {
      "op": "POP"
    },
    "5928": {
      "op": "POP"
    },
    "5929": {
      "op": "POP"
    },
    "5930": {
      "op": "POP"
    },
    "5931": {
      "op": "POP"
    },
    "5932": {
      "op": "POP"
    },
    "5933": {
      "jump": "o",
      "op": "JUMP"
    },
    "5934": {
      "op": "JUMPDEST"
    },
    "5935": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5937": {
      "op": "DUP3"
    },
    "5938": {
      "op": "NOT"
    },
    "5939": {
      "op": "DUP3"
    },
    "5940": {
      "op": "GT"
    },
    "5941": {
      "op": "ISZERO"
    },
    "5942": {
      "op": "PUSH2",
      "value": "0x1741"
    },
    "5945": {
      "op": "JUMPI"
    },
    "5946": {
      "op": "PUSH2",
      "value": "0x1741"
    },
    "5949": {
      "op": "PUSH2",
      "value": "0x163E"
    },
    "5952": {
      "jump": "i",
      "op": "JUMP"
    },
    "5953": {
      "op": "JUMPDEST"
    },
    "5954": {
      "op": "POP"
    },
    "5955": {
      "op": "ADD"
    },
    "5956": {
      "op": "SWAP1"
    },
    "5957": {
      "jump": "o",
      "op": "JUMP"
    },
    "5958": {
      "op": "JUMPDEST"
    },
    "5959": {
      "op": "DUP4"
    },
    "5960": {
      "op": "DUP2"
    },
    "5961": {
      "op": "MSTORE"
    },
    "5962": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5964": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5966": {
      "op": "DUP3"
    },
    "5967": {
      "op": "ADD"
    },
    "5968": {
      "op": "MSTORE"
    },
    "5969": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5971": {
      "op": "PUSH2",
      "value": "0x175F"
    },
    "5974": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5976": {
      "op": "DUP4"
    },
    "5977": {
      "op": "ADD"
    },
    "5978": {
      "op": "DUP6"
    },
    "5979": {
      "op": "PUSH2",
      "value": "0x122E"
    },
    "5982": {
      "jump": "i",
      "op": "JUMP"
    },
    "5983": {
      "op": "JUMPDEST"
    },
    "5984": {
      "op": "DUP3"
    },
    "5985": {
      "op": "DUP2"
    },
    "5986": {
      "op": "SUB"
    },
    "5987": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5989": {
      "op": "DUP5"
    },
    "5990": {
      "op": "ADD"
    },
    "5991": {
      "op": "MSTORE"
    },
    "5992": {
      "op": "PUSH2",
      "value": "0x1771"
    },
    "5995": {
      "op": "DUP2"
    },
    "5996": {
      "op": "DUP6"
    },
    "5997": {
      "op": "PUSH2",
      "value": "0x122E"
    },
    "6000": {
      "jump": "i",
      "op": "JUMP"
    },
    "6001": {
      "op": "JUMPDEST"
    },
    "6002": {
      "op": "SWAP7"
    },
    "6003": {
      "op": "SWAP6"
    },
    "6004": {
      "op": "POP"
    },
    "6005": {
      "op": "POP"
    },
    "6006": {
      "op": "POP"
    },
    "6007": {
      "op": "POP"
    },
    "6008": {
      "op": "POP"
    },
    "6009": {
      "op": "POP"
    },
    "6010": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "d49f640a9f0fac7b31bfb1c835551a72e71806bf",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"./IERC777.sol\";\nimport \"./IERC777Recipient.sol\";\nimport \"./IERC777Sender.sol\";\nimport \"../ERC20/IERC20.sol\";\nimport \"../../utils/Address.sol\";\nimport \"../../utils/Context.sol\";\nimport \"../../utils/introspection/IERC1820Registry.sol\";\n\n/**\n * @dev Implementation of the {IERC777} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * Support for ERC20 is included in this contract, as specified by the EIP: both\n * the ERC777 and ERC20 interfaces can be safely used when interacting with it.\n * Both {IERC777-Sent} and {IERC20-Transfer} events are emitted on token\n * movements.\n *\n * Additionally, the {IERC777-granularity} value is hard-coded to `1`, meaning that there\n * are no special restrictions in the amount of tokens that created, moved, or\n * destroyed. This makes integration with ERC20 applications seamless.\n */\ncontract ERC777 is Context, IERC777, IERC20 {\n    using Address for address;\n\n    IERC1820Registry internal constant _ERC1820_REGISTRY = IERC1820Registry(0x1820a4B7618BdE71Dce8cdc73aAB6C95905faD24);\n\n    mapping(address => uint256) private _balances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    bytes32 private constant _TOKENS_SENDER_INTERFACE_HASH = keccak256(\"ERC777TokensSender\");\n    bytes32 private constant _TOKENS_RECIPIENT_INTERFACE_HASH = keccak256(\"ERC777TokensRecipient\");\n\n    // This isn't ever read from - it's only used to respond to the defaultOperators query.\n    address[] private _defaultOperatorsArray;\n\n    // Immutable, but accounts may revoke them (tracked in __revokedDefaultOperators).\n    mapping(address => bool) private _defaultOperators;\n\n    // For each account, a mapping of its operators and revoked default operators.\n    mapping(address => mapping(address => bool)) private _operators;\n    mapping(address => mapping(address => bool)) private _revokedDefaultOperators;\n\n    // ERC20-allowances\n    mapping(address => mapping(address => uint256)) private _allowances;\n\n    /**\n     * @dev `defaultOperators` may be an empty array.\n     */\n    constructor(\n        string memory name_,\n        string memory symbol_,\n        address[] memory defaultOperators_\n    ) {\n        _name = name_;\n        _symbol = symbol_;\n\n        _defaultOperatorsArray = defaultOperators_;\n        for (uint256 i = 0; i < defaultOperators_.length; i++) {\n            _defaultOperators[defaultOperators_[i]] = true;\n        }\n\n        // register interfaces\n        _ERC1820_REGISTRY.setInterfaceImplementer(address(this), keccak256(\"ERC777Token\"), address(this));\n        _ERC1820_REGISTRY.setInterfaceImplementer(address(this), keccak256(\"ERC20Token\"), address(this));\n    }\n\n    /**\n     * @dev See {IERC777-name}.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev See {IERC777-symbol}.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev See {ERC20-decimals}.\n     *\n     * Always returns 18, as per the\n     * [ERC777 EIP](https://eips.ethereum.org/EIPS/eip-777#backward-compatibility).\n     */\n    function decimals() public pure virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC777-granularity}.\n     *\n     * This implementation always returns `1`.\n     */\n    function granularity() public view virtual override returns (uint256) {\n        return 1;\n    }\n\n    /**\n     * @dev See {IERC777-totalSupply}.\n     */\n    function totalSupply() public view virtual override(IERC20, IERC777) returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev Returns the amount of tokens owned by an account (`tokenHolder`).\n     */\n    function balanceOf(address tokenHolder) public view virtual override(IERC20, IERC777) returns (uint256) {\n        return _balances[tokenHolder];\n    }\n\n    /**\n     * @dev See {IERC777-send}.\n     *\n     * Also emits a {IERC20-Transfer} event for ERC20 compatibility.\n     */\n    function send(\n        address recipient,\n        uint256 amount,\n        bytes memory data\n    ) public virtual override {\n        _send(_msgSender(), recipient, amount, data, \"\", true);\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Unlike `send`, `recipient` is _not_ required to implement the {IERC777Recipient}\n     * interface if it is a contract.\n     *\n     * Also emits a {Sent} event.\n     */\n    function transfer(address recipient, uint256 amount) public virtual override returns (bool) {\n        require(recipient != address(0), \"ERC777: transfer to the zero address\");\n\n        address from = _msgSender();\n\n        _callTokensToSend(from, from, recipient, amount, \"\", \"\");\n\n        _move(from, from, recipient, amount, \"\", \"\");\n\n        _callTokensReceived(from, from, recipient, amount, \"\", \"\", false);\n\n        return true;\n    }\n\n    /**\n     * @dev See {IERC777-burn}.\n     *\n     * Also emits a {IERC20-Transfer} event for ERC20 compatibility.\n     */\n    function burn(uint256 amount, bytes memory data) public virtual override {\n        _burn(_msgSender(), amount, data, \"\");\n    }\n\n    /**\n     * @dev See {IERC777-isOperatorFor}.\n     */\n    function isOperatorFor(address operator, address tokenHolder) public view virtual override returns (bool) {\n        return\n            operator == tokenHolder ||\n            (_defaultOperators[operator] && !_revokedDefaultOperators[tokenHolder][operator]) ||\n            _operators[tokenHolder][operator];\n    }\n\n    /**\n     * @dev See {IERC777-authorizeOperator}.\n     */\n    function authorizeOperator(address operator) public virtual override {\n        require(_msgSender() != operator, \"ERC777: authorizing self as operator\");\n\n        if (_defaultOperators[operator]) {\n            delete _revokedDefaultOperators[_msgSender()][operator];\n        } else {\n            _operators[_msgSender()][operator] = true;\n        }\n\n        emit AuthorizedOperator(operator, _msgSender());\n    }\n\n    /**\n     * @dev See {IERC777-revokeOperator}.\n     */\n    function revokeOperator(address operator) public virtual override {\n        require(operator != _msgSender(), \"ERC777: revoking self as operator\");\n\n        if (_defaultOperators[operator]) {\n            _revokedDefaultOperators[_msgSender()][operator] = true;\n        } else {\n            delete _operators[_msgSender()][operator];\n        }\n\n        emit RevokedOperator(operator, _msgSender());\n    }\n\n    /**\n     * @dev See {IERC777-defaultOperators}.\n     */\n    function defaultOperators() public view virtual override returns (address[] memory) {\n        return _defaultOperatorsArray;\n    }\n\n    /**\n     * @dev See {IERC777-operatorSend}.\n     *\n     * Emits {Sent} and {IERC20-Transfer} events.\n     */\n    function operatorSend(\n        address sender,\n        address recipient,\n        uint256 amount,\n        bytes memory data,\n        bytes memory operatorData\n    ) public virtual override {\n        require(isOperatorFor(_msgSender(), sender), \"ERC777: caller is not an operator for holder\");\n        _send(sender, recipient, amount, data, operatorData, true);\n    }\n\n    /**\n     * @dev See {IERC777-operatorBurn}.\n     *\n     * Emits {Burned} and {IERC20-Transfer} events.\n     */\n    function operatorBurn(\n        address account,\n        uint256 amount,\n        bytes memory data,\n        bytes memory operatorData\n    ) public virtual override {\n        require(isOperatorFor(_msgSender(), account), \"ERC777: caller is not an operator for holder\");\n        _burn(account, amount, data, operatorData);\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     *\n     * Note that operator and allowance concepts are orthogonal: operators may\n     * not have allowance, and accounts with allowance may not be operators\n     * themselves.\n     */\n    function allowance(address holder, address spender) public view virtual override returns (uint256) {\n        return _allowances[holder][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * Note that accounts cannot have allowance issued by their operators.\n     */\n    function approve(address spender, uint256 value) public virtual override returns (bool) {\n        address holder = _msgSender();\n        _approve(holder, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Note that operator and allowance concepts are orthogonal: operators cannot\n     * call `transferFrom` (unless they have allowance), and accounts with\n     * allowance cannot call `operatorSend` (unless they are operators).\n     *\n     * Emits {Sent}, {IERC20-Transfer} and {IERC20-Approval} events.\n     */\n    function transferFrom(\n        address holder,\n        address recipient,\n        uint256 amount\n    ) public virtual override returns (bool) {\n        require(recipient != address(0), \"ERC777: transfer to the zero address\");\n        require(holder != address(0), \"ERC777: transfer from the zero address\");\n\n        address spender = _msgSender();\n\n        _callTokensToSend(spender, holder, recipient, amount, \"\", \"\");\n\n        _move(spender, holder, recipient, amount, \"\", \"\");\n\n        uint256 currentAllowance = _allowances[holder][spender];\n        require(currentAllowance >= amount, \"ERC777: transfer amount exceeds allowance\");\n        _approve(holder, spender, currentAllowance - amount);\n\n        _callTokensReceived(spender, holder, recipient, amount, \"\", \"\", false);\n\n        return true;\n    }\n\n    /**\n     * @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * If a send hook is registered for `account`, the corresponding function\n     * will be called with `operator`, `data` and `operatorData`.\n     *\n     * See {IERC777Sender} and {IERC777Recipient}.\n     *\n     * Emits {Minted} and {IERC20-Transfer} events.\n     *\n     * Requirements\n     *\n     * - `account` cannot be the zero address.\n     * - if `account` is a contract, it must implement the {IERC777Recipient}\n     * interface.\n     */\n    function _mint(\n        address account,\n        uint256 amount,\n        bytes memory userData,\n        bytes memory operatorData\n    ) internal virtual {\n        _mint(account, amount, userData, operatorData, true);\n    }\n\n    /**\n     * @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * If `requireReceptionAck` is set to true, and if a send hook is\n     * registered for `account`, the corresponding function will be called with\n     * `operator`, `data` and `operatorData`.\n     *\n     * See {IERC777Sender} and {IERC777Recipient}.\n     *\n     * Emits {Minted} and {IERC20-Transfer} events.\n     *\n     * Requirements\n     *\n     * - `account` cannot be the zero address.\n     * - if `account` is a contract, it must implement the {IERC777Recipient}\n     * interface.\n     */\n    function _mint(\n        address account,\n        uint256 amount,\n        bytes memory userData,\n        bytes memory operatorData,\n        bool requireReceptionAck\n    ) internal virtual {\n        require(account != address(0), \"ERC777: mint to the zero address\");\n\n        address operator = _msgSender();\n\n        _beforeTokenTransfer(operator, address(0), account, amount);\n\n        // Update state variables\n        _totalSupply += amount;\n        _balances[account] += amount;\n\n        _callTokensReceived(operator, address(0), account, amount, userData, operatorData, requireReceptionAck);\n\n        emit Minted(operator, account, amount, userData, operatorData);\n        emit Transfer(address(0), account, amount);\n    }\n\n    /**\n     * @dev Send tokens\n     * @param from address token holder address\n     * @param to address recipient address\n     * @param amount uint256 amount of tokens to transfer\n     * @param userData bytes extra information provided by the token holder (if any)\n     * @param operatorData bytes extra information provided by the operator (if any)\n     * @param requireReceptionAck if true, contract recipients are required to implement ERC777TokensRecipient\n     */\n    function _send(\n        address from,\n        address to,\n        uint256 amount,\n        bytes memory userData,\n        bytes memory operatorData,\n        bool requireReceptionAck\n    ) internal virtual {\n        require(from != address(0), \"ERC777: send from the zero address\");\n        require(to != address(0), \"ERC777: send to the zero address\");\n\n        address operator = _msgSender();\n\n        _callTokensToSend(operator, from, to, amount, userData, operatorData);\n\n        _move(operator, from, to, amount, userData, operatorData);\n\n        _callTokensReceived(operator, from, to, amount, userData, operatorData, requireReceptionAck);\n    }\n\n    /**\n     * @dev Burn tokens\n     * @param from address token holder address\n     * @param amount uint256 amount of tokens to burn\n     * @param data bytes extra information provided by the token holder\n     * @param operatorData bytes extra information provided by the operator (if any)\n     */\n    function _burn(\n        address from,\n        uint256 amount,\n        bytes memory data,\n        bytes memory operatorData\n    ) internal virtual {\n        require(from != address(0), \"ERC777: burn from the zero address\");\n\n        address operator = _msgSender();\n\n        _callTokensToSend(operator, from, address(0), amount, data, operatorData);\n\n        _beforeTokenTransfer(operator, from, address(0), amount);\n\n        // Update state variables\n        uint256 fromBalance = _balances[from];\n        require(fromBalance >= amount, \"ERC777: burn amount exceeds balance\");\n        unchecked {\n            _balances[from] = fromBalance - amount;\n        }\n        _totalSupply -= amount;\n\n        emit Burned(operator, from, amount, data, operatorData);\n        emit Transfer(from, address(0), amount);\n    }\n\n    function _move(\n        address operator,\n        address from,\n        address to,\n        uint256 amount,\n        bytes memory userData,\n        bytes memory operatorData\n    ) private {\n        _beforeTokenTransfer(operator, from, to, amount);\n\n        uint256 fromBalance = _balances[from];\n        require(fromBalance >= amount, \"ERC777: transfer amount exceeds balance\");\n        unchecked {\n            _balances[from] = fromBalance - amount;\n        }\n        _balances[to] += amount;\n\n        emit Sent(operator, from, to, amount, userData, operatorData);\n        emit Transfer(from, to, amount);\n    }\n\n    /**\n     * @dev See {ERC20-_approve}.\n     *\n     * Note that accounts cannot have allowance issued by their operators.\n     */\n    function _approve(\n        address holder,\n        address spender,\n        uint256 value\n    ) internal {\n        require(holder != address(0), \"ERC777: approve from the zero address\");\n        require(spender != address(0), \"ERC777: approve to the zero address\");\n\n        _allowances[holder][spender] = value;\n        emit Approval(holder, spender, value);\n    }\n\n    /**\n     * @dev Call from.tokensToSend() if the interface is registered\n     * @param operator address operator requesting the transfer\n     * @param from address token holder address\n     * @param to address recipient address\n     * @param amount uint256 amount of tokens to transfer\n     * @param userData bytes extra information provided by the token holder (if any)\n     * @param operatorData bytes extra information provided by the operator (if any)\n     */\n    function _callTokensToSend(\n        address operator,\n        address from,\n        address to,\n        uint256 amount,\n        bytes memory userData,\n        bytes memory operatorData\n    ) private {\n        address implementer = _ERC1820_REGISTRY.getInterfaceImplementer(from, _TOKENS_SENDER_INTERFACE_HASH);\n        if (implementer != address(0)) {\n            IERC777Sender(implementer).tokensToSend(operator, from, to, amount, userData, operatorData);\n        }\n    }\n\n    /**\n     * @dev Call to.tokensReceived() if the interface is registered. Reverts if the recipient is a contract but\n     * tokensReceived() was not registered for the recipient\n     * @param operator address operator requesting the transfer\n     * @param from address token holder address\n     * @param to address recipient address\n     * @param amount uint256 amount of tokens to transfer\n     * @param userData bytes extra information provided by the token holder (if any)\n     * @param operatorData bytes extra information provided by the operator (if any)\n     * @param requireReceptionAck if true, contract recipients are required to implement ERC777TokensRecipient\n     */\n    function _callTokensReceived(\n        address operator,\n        address from,\n        address to,\n        uint256 amount,\n        bytes memory userData,\n        bytes memory operatorData,\n        bool requireReceptionAck\n    ) private {\n        address implementer = _ERC1820_REGISTRY.getInterfaceImplementer(to, _TOKENS_RECIPIENT_INTERFACE_HASH);\n        if (implementer != address(0)) {\n            IERC777Recipient(implementer).tokensReceived(operator, from, to, amount, userData, operatorData);\n        } else if (requireReceptionAck) {\n            require(!to.isContract(), \"ERC777: token recipient contract has no implementer for ERC777TokensRecipient\");\n        }\n    }\n\n    /**\n     * @dev Hook that is called before any token transfer. This includes\n     * calls to {send}, {transfer}, {operatorSend}, minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * will be to transferred to `to`.\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(\n        address operator,\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {}\n}\n",
  "sourceMap": "1014:17251:135:-:0;;;2242:612;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2374:13;;;;:5;;:13;;;;;:::i;:::-;-1:-1:-1;2397:17:135;;;;:7;;:17;;;;;:::i;:::-;-1:-1:-1;2425:42:135;;;;:22;;:42;;;;;:::i;:::-;;2482:9;2477:126;2501:17;:24;2497:1;:28;2477:126;;;2588:4;2546:17;:39;2564:17;2582:1;2564:20;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;2546:39:135;;;;;;;;;;;-1:-1:-1;2546:39:135;:46;;-1:-1:-1;;2546:46:135;;;;;;;;;;2527:3;;;;:::i;:::-;;;;2477:126;;;-1:-1:-1;2644:97:135;;-1:-1:-1;;;2644:97:135;;2694:4;2644:97;;;3268:34:169;;;2701:24:135;3318:18:169;;;3311:34;3361:18;;;3354:43;1168:42:135;;2644:41;;3203:18:169;;2644:97:135;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2751:96:135;;-1:-1:-1;;;2751:96:135;;2801:4;2751:96;;;3268:34:169;;;2808:23:135;3318:18:169;;;3311:34;3361:18;;;3354:43;1168:42:135;;-1:-1:-1;2751:41:135;;-1:-1:-1;3203:18:169;;2751:96:135;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2242:612;;;1014:17251;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1014:17251:135;;;-1:-1:-1;1014:17251:135;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;1014:17251:135;-1:-1:-1;;;;;1014:17251:135;;;;;;;;;;;-1:-1:-1;1014:17251:135;;;;;;;;;;;;;;;;;;;;;14:127:169;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:275;217:2;211:9;282:2;263:13;;-1:-1:-1;;259:27:169;247:40;;-1:-1:-1;;;;;302:34:169;;338:22;;;299:62;296:88;;;364:18;;:::i;:::-;400:2;393:22;146:275;;-1:-1:-1;146:275:169:o;426:695::-;480:5;533:3;526:4;518:6;514:17;510:27;500:55;;551:1;548;541:12;500:55;574:13;;-1:-1:-1;;;;;599:26:169;;596:52;;;628:18;;:::i;:::-;667:4;695:53;738:2;719:13;;-1:-1:-1;;715:27:169;711:36;;695:53;:::i;:::-;773:2;764:7;757:19;817:3;812:2;807;799:6;795:15;791:24;788:33;785:53;;;834:1;831;824:12;785:53;856:1;866:134;880:2;877:1;874:9;866:134;;;969:14;;;965:23;;959:30;937:15;;;933:24;;926:64;891:10;;866:134;;;1018:2;1015:1;1012:9;1009:81;;;1078:1;1073:2;1068;1059:7;1055:16;1051:25;1044:36;1009:81;-1:-1:-1;1108:7:169;426:695;-1:-1:-1;;;;;426:695:169:o;1126:1528::-;1259:6;1267;1275;1328:2;1316:9;1307:7;1303:23;1299:32;1296:52;;;1344:1;1341;1334:12;1296:52;1371:16;;-1:-1:-1;;;;;1436:14:169;;;1433:34;;;1463:1;1460;1453:12;1433:34;1486:61;1539:7;1530:6;1519:9;1515:22;1486:61;:::i;:::-;1476:71;;1566:2;1556:12;;1614:2;1603:9;1599:18;1593:25;1643:2;1633:8;1630:16;1627:36;;;1659:1;1656;1649:12;1627:36;1682:63;1737:7;1726:8;1715:9;1711:24;1682:63;:::i;:::-;1672:73;;;1791:2;1780:9;1776:18;1770:25;1820:2;1810:8;1807:16;1804:36;;;1836:1;1833;1826:12;1804:36;1859:24;;1914:4;1906:13;;1902:27;-1:-1:-1;1892:55:169;;1943:1;1940;1933:12;1892:55;1972:2;1966:9;1994:2;1990;1987:10;1984:36;;;2000:18;;:::i;:::-;2046:2;2043:1;2039:10;2029:20;;2069:28;2093:2;2089;2085:11;2069:28;:::i;:::-;2131:15;;;2201:11;;;2197:20;;;2162:12;;;;2229:19;;;2226:39;;;2261:1;2258;2251:12;2226:39;2285:11;;;;2305:319;2321:6;2316:3;2313:15;2305:319;;;2388:10;;;-1:-1:-1;;;;;;2431:31:169;;2421:42;;2411:140;;2505:1;2534:2;2530;2523:14;2411:140;2564:18;;;2338:12;;;;2602;;;;2305:319;;;2643:5;2633:15;;;;;;;;1126:1528;;;;;:::o;2659:127::-;2720:10;2715:3;2711:20;2708:1;2701:31;2751:4;2748:1;2741:15;2775:4;2772:1;2765:15;2791:232;2830:3;-1:-1:-1;;2851:17:169;;2848:140;;;2910:10;2905:3;2901:20;2898:1;2891:31;2945:4;2942:1;2935:15;2973:4;2970:1;2963:15;2848:140;-1:-1:-1;3015:1:169;3004:13;;2791:232::o;3408:380::-;3487:1;3483:12;;;;3530;;;3551:61;;3605:4;3597:6;3593:17;3583:27;;3551:61;3658:2;3650:6;3647:14;3627:18;3624:38;3621:161;;;3704:10;3699:3;3695:20;3692:1;3685:31;3739:4;3736:1;3729:15;3767:4;3764:1;3757:15;3621:161;;3408:380;;;:::o;:::-;1014:17251:135;;;;;;",
  "sourcePath": "contracts/openzeppelin/contracts/token/ERC777/ERC777.sol",
  "type": "contract"
}