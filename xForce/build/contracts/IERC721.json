{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "balance",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "125": "contracts/openzeppelin/contracts/token/ERC721/IERC721.sol",
    "159": "contracts/openzeppelin/contracts/utils/introspection/IERC165.sol"
  },
  "ast": {
    "absolutePath": "contracts/openzeppelin/contracts/token/ERC721/IERC721.sol",
    "exportedSymbols": {
      "IERC165": [
        19182
      ],
      "IERC721": [
        14971
      ]
    },
    "id": 14972,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 14857,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:125"
      },
      {
        "absolutePath": "contracts/openzeppelin/contracts/utils/introspection/IERC165.sol",
        "file": "../../utils/introspection/IERC165.sol",
        "id": 14858,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 14972,
        "sourceUnit": 19183,
        "src": "58:47:125",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 14860,
              "name": "IERC165",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 19182,
              "src": "196:7:125"
            },
            "id": 14861,
            "nodeType": "InheritanceSpecifier",
            "src": "196:7:125"
          }
        ],
        "canonicalName": "IERC721",
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": {
          "id": 14859,
          "nodeType": "StructuredDocumentation",
          "src": "107:67:125",
          "text": " @dev Required interface of an ERC721 compliant contract."
        },
        "fullyImplemented": false,
        "id": 14971,
        "linearizedBaseContracts": [
          14971,
          19182
        ],
        "name": "IERC721",
        "nameLocation": "185:7:125",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "documentation": {
              "id": 14862,
              "nodeType": "StructuredDocumentation",
              "src": "210:88:125",
              "text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
            },
            "id": 14870,
            "name": "Transfer",
            "nameLocation": "309:8:125",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 14869,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14864,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "334:4:125",
                  "nodeType": "VariableDeclaration",
                  "scope": 14870,
                  "src": "318:20:125",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 14863,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "318:7:125",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14866,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "356:2:125",
                  "nodeType": "VariableDeclaration",
                  "scope": 14870,
                  "src": "340:18:125",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 14865,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "340:7:125",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14868,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "376:7:125",
                  "nodeType": "VariableDeclaration",
                  "scope": 14870,
                  "src": "360:23:125",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 14867,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "360:7:125",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "317:67:125"
            },
            "src": "303:82:125"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 14871,
              "nodeType": "StructuredDocumentation",
              "src": "391:94:125",
              "text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
            },
            "id": 14879,
            "name": "Approval",
            "nameLocation": "496:8:125",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 14878,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14873,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "521:5:125",
                  "nodeType": "VariableDeclaration",
                  "scope": 14879,
                  "src": "505:21:125",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 14872,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "505:7:125",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14875,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "approved",
                  "nameLocation": "544:8:125",
                  "nodeType": "VariableDeclaration",
                  "scope": 14879,
                  "src": "528:24:125",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 14874,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "528:7:125",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14877,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "570:7:125",
                  "nodeType": "VariableDeclaration",
                  "scope": 14879,
                  "src": "554:23:125",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 14876,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "554:7:125",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "504:74:125"
            },
            "src": "490:89:125"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 14880,
              "nodeType": "StructuredDocumentation",
              "src": "585:117:125",
              "text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
            },
            "id": 14888,
            "name": "ApprovalForAll",
            "nameLocation": "713:14:125",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 14887,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14882,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "744:5:125",
                  "nodeType": "VariableDeclaration",
                  "scope": 14888,
                  "src": "728:21:125",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 14881,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "728:7:125",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14884,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "767:8:125",
                  "nodeType": "VariableDeclaration",
                  "scope": 14888,
                  "src": "751:24:125",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 14883,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "751:7:125",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14886,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "approved",
                  "nameLocation": "782:8:125",
                  "nodeType": "VariableDeclaration",
                  "scope": 14888,
                  "src": "777:13:125",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 14885,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "777:4:125",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "727:64:125"
            },
            "src": "707:85:125"
          },
          {
            "documentation": {
              "id": 14889,
              "nodeType": "StructuredDocumentation",
              "src": "798:76:125",
              "text": " @dev Returns the number of tokens in ``owner``'s account."
            },
            "functionSelector": "70a08231",
            "id": 14896,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOf",
            "nameLocation": "888:9:125",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 14892,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14891,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "906:5:125",
                  "nodeType": "VariableDeclaration",
                  "scope": 14896,
                  "src": "898:13:125",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 14890,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "898:7:125",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "897:15:125"
            },
            "returnParameters": {
              "id": 14895,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14894,
                  "mutability": "mutable",
                  "name": "balance",
                  "nameLocation": "944:7:125",
                  "nodeType": "VariableDeclaration",
                  "scope": 14896,
                  "src": "936:15:125",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 14893,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "936:7:125",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "935:17:125"
            },
            "scope": 14971,
            "src": "879:74:125",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 14897,
              "nodeType": "StructuredDocumentation",
              "src": "959:131:125",
              "text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
            },
            "functionSelector": "6352211e",
            "id": 14904,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "ownerOf",
            "nameLocation": "1104:7:125",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 14900,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14899,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "1120:7:125",
                  "nodeType": "VariableDeclaration",
                  "scope": 14904,
                  "src": "1112:15:125",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 14898,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1112:7:125",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1111:17:125"
            },
            "returnParameters": {
              "id": 14903,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14902,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "1160:5:125",
                  "nodeType": "VariableDeclaration",
                  "scope": 14904,
                  "src": "1152:13:125",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 14901,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1152:7:125",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1151:15:125"
            },
            "scope": 14971,
            "src": "1095:72:125",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 14905,
              "nodeType": "StructuredDocumentation",
              "src": "1173:690:125",
              "text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
            },
            "functionSelector": "42842e0e",
            "id": 14914,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "safeTransferFrom",
            "nameLocation": "1877:16:125",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 14912,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14907,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "1911:4:125",
                  "nodeType": "VariableDeclaration",
                  "scope": 14914,
                  "src": "1903:12:125",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 14906,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1903:7:125",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14909,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "1933:2:125",
                  "nodeType": "VariableDeclaration",
                  "scope": 14914,
                  "src": "1925:10:125",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 14908,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1925:7:125",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14911,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "1953:7:125",
                  "nodeType": "VariableDeclaration",
                  "scope": 14914,
                  "src": "1945:15:125",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 14910,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1945:7:125",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1893:73:125"
            },
            "returnParameters": {
              "id": 14913,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1975:0:125"
            },
            "scope": 14971,
            "src": "1868:108:125",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 14915,
              "nodeType": "StructuredDocumentation",
              "src": "1982:504:125",
              "text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
            },
            "functionSelector": "23b872dd",
            "id": 14924,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "transferFrom",
            "nameLocation": "2500:12:125",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 14922,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14917,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "2530:4:125",
                  "nodeType": "VariableDeclaration",
                  "scope": 14924,
                  "src": "2522:12:125",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 14916,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2522:7:125",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14919,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "2552:2:125",
                  "nodeType": "VariableDeclaration",
                  "scope": 14924,
                  "src": "2544:10:125",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 14918,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2544:7:125",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14921,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "2572:7:125",
                  "nodeType": "VariableDeclaration",
                  "scope": 14924,
                  "src": "2564:15:125",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 14920,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2564:7:125",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2512:73:125"
            },
            "returnParameters": {
              "id": 14923,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2594:0:125"
            },
            "scope": 14971,
            "src": "2491:104:125",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 14925,
              "nodeType": "StructuredDocumentation",
              "src": "2601:452:125",
              "text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
            },
            "functionSelector": "095ea7b3",
            "id": 14932,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "approve",
            "nameLocation": "3067:7:125",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 14930,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14927,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "3083:2:125",
                  "nodeType": "VariableDeclaration",
                  "scope": 14932,
                  "src": "3075:10:125",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 14926,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3075:7:125",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14929,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "3095:7:125",
                  "nodeType": "VariableDeclaration",
                  "scope": 14932,
                  "src": "3087:15:125",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 14928,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3087:7:125",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3074:29:125"
            },
            "returnParameters": {
              "id": 14931,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3112:0:125"
            },
            "scope": 14971,
            "src": "3058:55:125",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 14933,
              "nodeType": "StructuredDocumentation",
              "src": "3119:139:125",
              "text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
            },
            "functionSelector": "081812fc",
            "id": 14940,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getApproved",
            "nameLocation": "3272:11:125",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 14936,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14935,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "3292:7:125",
                  "nodeType": "VariableDeclaration",
                  "scope": 14940,
                  "src": "3284:15:125",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 14934,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3284:7:125",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3283:17:125"
            },
            "returnParameters": {
              "id": 14939,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14938,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "3332:8:125",
                  "nodeType": "VariableDeclaration",
                  "scope": 14940,
                  "src": "3324:16:125",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 14937,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3324:7:125",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3323:18:125"
            },
            "scope": 14971,
            "src": "3263:79:125",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 14941,
              "nodeType": "StructuredDocumentation",
              "src": "3348:309:125",
              "text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the caller.\n Emits an {ApprovalForAll} event."
            },
            "functionSelector": "a22cb465",
            "id": 14948,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "setApprovalForAll",
            "nameLocation": "3671:17:125",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 14946,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14943,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "3697:8:125",
                  "nodeType": "VariableDeclaration",
                  "scope": 14948,
                  "src": "3689:16:125",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 14942,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3689:7:125",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14945,
                  "mutability": "mutable",
                  "name": "_approved",
                  "nameLocation": "3712:9:125",
                  "nodeType": "VariableDeclaration",
                  "scope": 14948,
                  "src": "3707:14:125",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 14944,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3707:4:125",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3688:34:125"
            },
            "returnParameters": {
              "id": 14947,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3731:0:125"
            },
            "scope": 14971,
            "src": "3662:70:125",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 14949,
              "nodeType": "StructuredDocumentation",
              "src": "3738:138:125",
              "text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
            },
            "functionSelector": "e985e9c5",
            "id": 14958,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "isApprovedForAll",
            "nameLocation": "3890:16:125",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 14954,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14951,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "3915:5:125",
                  "nodeType": "VariableDeclaration",
                  "scope": 14958,
                  "src": "3907:13:125",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 14950,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3907:7:125",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14953,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "3930:8:125",
                  "nodeType": "VariableDeclaration",
                  "scope": 14958,
                  "src": "3922:16:125",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 14952,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3922:7:125",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3906:33:125"
            },
            "returnParameters": {
              "id": 14957,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14956,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 14958,
                  "src": "3963:4:125",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 14955,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3963:4:125",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3962:6:125"
            },
            "scope": 14971,
            "src": "3881:88:125",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 14959,
              "nodeType": "StructuredDocumentation",
              "src": "3975:556:125",
              "text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
            },
            "functionSelector": "b88d4fde",
            "id": 14970,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "safeTransferFrom",
            "nameLocation": "4545:16:125",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 14968,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14961,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "4579:4:125",
                  "nodeType": "VariableDeclaration",
                  "scope": 14970,
                  "src": "4571:12:125",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 14960,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4571:7:125",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14963,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "4601:2:125",
                  "nodeType": "VariableDeclaration",
                  "scope": 14970,
                  "src": "4593:10:125",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 14962,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4593:7:125",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14965,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "4621:7:125",
                  "nodeType": "VariableDeclaration",
                  "scope": 14970,
                  "src": "4613:15:125",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 14964,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4613:7:125",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14967,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "4653:4:125",
                  "nodeType": "VariableDeclaration",
                  "scope": 14970,
                  "src": "4638:19:125",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 14966,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "4638:5:125",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4561:102:125"
            },
            "returnParameters": {
              "id": 14969,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4672:0:125"
            },
            "scope": 14971,
            "src": "4536:137:125",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 14972,
        "src": "175:4500:125",
        "usedErrors": []
      }
    ],
    "src": "33:4643:125"
  },
  "bytecode": "",
  "bytecodeSha1": "da39a3ee5e6b4b0d3255bfef95601890afd80709",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.12+commit.f00d7308"
  },
  "contractName": "IERC721",
  "coverageMap": {
    "branches": {},
    "statements": {}
  },
  "dependencies": [
    "IERC165"
  ],
  "deployedBytecode": "",
  "deployedSourceMap": "",
  "language": "Solidity",
  "natspec": {
    "details": "Required interface of an ERC721 compliant contract.",
    "events": {
      "Approval(address,address,uint256)": {
        "details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
      },
      "ApprovalForAll(address,address,bool)": {
        "details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
      },
      "Transfer(address,address,uint256)": {
        "details": "Emitted when `tokenId` token is transferred from `from` to `to`."
      }
    },
    "kind": "dev",
    "methods": {
      "approve(address,uint256)": {
        "details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
      },
      "balanceOf(address)": {
        "details": "Returns the number of tokens in ``owner``'s account."
      },
      "getApproved(uint256)": {
        "details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
      },
      "isApprovedForAll(address,address)": {
        "details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
      },
      "ownerOf(uint256)": {
        "details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
      },
      "setApprovalForAll(address,bool)": {
        "details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
      },
      "supportsInterface(bytes4)": {
        "details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
      },
      "transferFrom(address,address,uint256)": {
        "details": "Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
      }
    },
    "version": 1
  },
  "offset": [
    175,
    4675
  ],
  "opcodes": "",
  "pcMap": {},
  "sha1": "29dbd9cff66c3b13235c8ab30b85fbaf74647c5f",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the caller.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool _approved) external;\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes calldata data\n    ) external;\n}\n",
  "sourceMap": "",
  "sourcePath": "contracts/openzeppelin/contracts/token/ERC721/IERC721.sol",
  "type": "interface"
}